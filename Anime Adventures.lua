-- This file was generated using Luraph Obfuscator v13.6.7

return(function(ji,di,mi,Hi,Oi,oi,li,ei,Mi,Ei,bi,ci,Ui,Qi,Li,ri,Pi,Wi,Gi,si,Zi,ni,ti,_i,ai,gi,Di,FK,wi,Ai,pi,Vi,Ci,Ni,Yi,Si,zi,F,i,k)local T=nil;local u,f,kK=nil,false,0X23726C31;local iK=({});local X='\077?\084';while 0.9013817269199523 do if not(kK<=0X00023726c31)then if not(kK>=0X5e73318B)then T=si;do if not(not iK[499590176])then do kK=iK[0X0001Dc72420];end;else do kK=1584607627;end;iK[499590176]=kK;end;end;continue;else u=ei;f=error;do break;end;end;else do X=select;end;if not iK[0X607fdc85]then kK=824375260;do(iK)[1618992261]=kK;end;else do kK=iK[0x607fDc85];end;end;end;end;local I,R=0.3916745800813176,(nil);local L,yK=true,1800890631;local v=tonumber;repeat if not(yK>676004561)then L=bi;break;else do if yK<=0x0456712bA then R=Wi.rep;if not(not iK[1203929682])then yK=iK[0X47c28252];else yK=676004561;iK[0X47C28252]=yK;end;continue;else if not iK[0x1F1088FF]then yK=1164382906;do iK[521177343]=yK;end;else yK=iK[521177343];end;I=ci;end;end;end;until false;local q=(0X019C4e079);local D=nil;local XK=0X644E31ba;local fi,x=nil,(true);while 0.3371295140318604 do if XK<0x00002f7dD4fc then D=Pi;break;else if XK>0X576195d1 then fi=function()f("\Y\111u\114\032e\110v\i\114\on\me\110t\032\100o\es\032\110\ot\032\s\117\pp\111rt\ \Lua\J\073\T's\ \F\F\073\ \l\105\098\114\097\114\y,\032\116he\114\ef\o\114\e \121\ou c\097n\110\o\116\ u\115\e\ \076\L\/U\LL\/\i\032\s\117\102\102ixes\.");end;if not iK[457063817]then do XK=1466013137;end;(iK)[457063817]=XK;else XK=iK[0X1B3e3D89];end;elseif XK<1466013137 and XK>357248043 then if not(not iK[1719403683])then do XK=iK[0X667c04A3];end;else XK=357248043;(iK)[0x667C04A3]=XK;end;do q=oi;end;else if XK<1682846138 and XK>0X02f7dd4FC then do x=Wi.match;end;if not(not iK[1836951892])then XK=iK[0x006D7dA954];else XK=0X2F7Dd4FC;iK[0X6D7da954]=XK;end;continue;end;end;end;end;local B,W=Yi,Si;local U,s=nil,(setmetatable);local vK=0X2B3cAE2e;local g,h=nil,(nil);repeat if vK<725397038 then do h=_i;end;break;else if not(vK>0x001e681Fb5)then else do if not iK[1316954534]then vK=0x00001e681Fb5;(iK)[0X4e7F21A6]=vK;else vK=iK[0X4E7f21A6];end;end;g=mi.bxor;continue;end;end;until false;local H='t;\`\g\>';local z=(nil);local P,o=unpack,false;local TK=0X0686bd7B9;local Y,m,Q=-1928726289,true,(nil);repeat if TK>1199574611 then if TK~=1751898041 then H=2147483648;z=Q();break;else o=coroutine.yield;if not iK[696372429]then TK=0X12Ed9DC4;iK[0X00002981ccCd]=TK;else TK=iK[696372429];end;end;else if not(TK<=317562308)then Y=function(xK,KK,sK)local eK=(nil);for cK=0X16C7,0X00389d,8662 do if cK>5831 then do eK=sK-KK+1;end;else if not(cK<14493)then else if not(KK>sK)then else return;end;continue;end;end;end;if eK>=8 then do return xK[KK],xK[KK+1],xK[KK+2],xK[KK+0X3],xK[KK+0X0004],xK[KK+0X5],xK[KK+6],xK[KK+7],Y(xK,KK+8,sK);end;elseif eK>=0X7 then return xK[KK],xK[KK+1],xK[KK+0X2],xK[KK+0x3],xK[KK+Qi],xK[KK+5],xK[KK+0X6],Y(xK,KK+ni,sK);else if eK>=0X6 then return xK[KK],xK[KK+1],xK[KK+2],xK[KK+0X3],xK[KK+0x4],xK[KK+zi],Y(xK,KK+0X6,sK);else if eK>=zi then return xK[KK],xK[KK+0X1],xK[KK+0x002],xK[KK+Ci],xK[KK+4],Y(xK,KK+5,sK);else if eK>=0X04 then do return xK[KK],xK[KK+0x01],xK[KK+2],xK[KK+0X003],Y(xK,KK+0x4,sK);end;elseif eK>=3 then return xK[KK],xK[KK+0X1],xK[KK+0x2],Y(xK,KK+0X3,sK);else if eK>=0x2 then return xK[KK],xK[KK+0X1],Y(xK,KK+2,sK);else do return xK[KK],Y(xK,KK+1,sK);end;end;end;end;end;end;end;do if not(not iK[0X00B720887])then TK=iK[192022663];else TK=0X49BfbF96;do(iK)[192022663]=TK;end;end;end;m=string.unpack;Q=pi;else Y=true;do if not(not iK[262473672])then do TK=iK[0XFA507c8];end;else TK=0X047800E53;do iK[262473672]=TK;end;end;end;end;end;until false;local N=-0x918cE49;local K,p="j\J\086y\k\096\L",(0X6522f338);local E,V,M,y=nil,nil,0.6894468702923328,(nil);local a,uK=nil,0X3E392EF8;while"\l"do if uK<=0x3E392eF8 then if uK~=832765249 then if not iK[365833274]then uK=1145382391;(iK)[365833274]=uK;else uK=iK[365833274];end;K=Ui;else do y=assert;end;if not(not iK[0X00005310F8ab])then uK=iK[1393621163];else do uK=1844884908;end;do(iK)[0x5310f8ab]=uK;end;end;end;else if uK>1145382391 then do if uK>1844884908 then N=qfunction(xK,KK)if KK~='\H'then local sK=h(v(xK..KK,16));do if U then local eK=R(sK,U);U=nil;return eK;else return sK;end;end;else U=v(xK);return"";end;end);E=4294967296;do V=9007199254740992;end;do M=E-1;end;if not iK[654324604]then uK=0X31a2fD41;do iK[0X0002700337C]=uK;end;else uK=iK[0X2700337C];end;else a={[0]=1,0X2,4,8,Ni,0X020,64,128,0X100,512,0x000400,2048,4096,8192,Hi,Ei,0X00010000,131072,262144,524288,1048576,2097152,0X0400000,0X00800000,0X1000000,33554432,67108864,0X8000000,268435456,536870912,1073741824,H,E,[di]=34359738368,[0X2A]=4398046511104,[0X031]=562949953421312};break;end;end;else if not(not iK[1328565841])then uK=iK[0x4F304E51];else uK=0X000076314AeA;do iK[0X4F304e51]=uK;end;end;p=0X1;end;end;end;local w,l=0x42dF33d9,-195954741;local J='';local JK=(0X4f2171b0);local _=(nil);local C,Z=nil,nil;local r=-0X2349F55b;while 0X0000DF145f7 do if JK==0X00004F2171b0 then if not iK[1226254]then do JK=782096719;end;iK[1226254]=JK;else JK=iK[0X12b60e];end;do r=Vi;end;else if JK==782096719 then _=Mi;do J=ai;end;w=bit32.band;if not(not iK[0x07949c615])then JK=iK[0X7949C615];else JK=935294562;(iK)[2034877973]=JK;end;do continue;end;else if JK==935294562 then if not(not iK[573005936])then JK=iK[0X22276070];else JK=0X69E50259;(iK)[573005936]=JK;end;l=bit32.bnot;continue;else if JK~=0X0069e50259 then else C=function(...)do return(...)[...];end;end;Z={0X05,0X00002,0X003};break;end;end;end;end;end;local fK=0X482aD055;local Ti='MDG{%\g\047\/';local S,c=876349945,"\O\116\081\{";local G=true;local t=(nil);local A,j=nil,(0.8051015096330533);repeat if not(fK<=246332388)then do if fK<=0X22630659 then if not(not iK[982281651])then fK=iK[0X00003A8C6dB3];else do fK=246332388;end;iK[0X3a8c6DB3]=fK;end;A=function()local xK,KK=m('\060\I4',N,p);p=KK;return xK;end;continue;elseif fK~=0X482Ad055 then if not iK[0X022771322]then fK=67779919;(iK)[0x0022771322]=fK;else fK=iK[0X22771322];end;S=function(xK,KK,sK)do if not KK then KK=1;end;end;do if not(not sK)then else sK=#xK;end;end;local eK=sK-KK+1;if eK>7997 then return Y(xK,KK,sK);else do return P(xK,KK,sK);end;end;end;else if not iK[332101903]then fK=1307207088;iK[332101903]=fK;else fK=iK[332101903];end;t=function()local xK=nil;do for KK=0X170a,0X000FF6A,4826 do if KK<=5898 then xK=I(N,p,p);p=p+1;do continue;end;else do return xK;end;end;end;end;end;continue;end;end;else do if not(fK>35162722)then do G={[5]=wi,[0X02]=7,[0x08]=true,[ri]=-1782902072,[0x0004]=0X8,[0X5]=6,[0X1]=3,[0X0]='\054v\085',[0X00008]=0X01,[0X3]=0x00004,[6]=0,[0]=li};end;if not iK[0X0103C02a4]then fK=576915033;do(iK)[0X103C02A4]=fK;end;else fK=iK[0x103C02A4];end;continue;else do if fK<=0X040a3d4f then if not iK[0x4c6c7819]then fK=35162722;(iK)[1282177049]=fK;else fK=iK[0x4C6C7819];end;c=gi;else j=function()local xK,KK=m("\<\i8",N,p);p=KK;return xK;end;do Ti={};end;break;end;end;end;end;end;until false;local O,d,Fi='\H\114D\q\051\w',"5Y\095",nil;local BK=(1132234384);while-727376642 do if BK<1802447023 then if not(not iK[0x5fc0D776])then BK=iK[0X5fC0d776];else BK=0X006b6f28af;(iK)[0X5FC0d776]=BK;end;do O=function(xK,KK,sK)local eK=(true);for cK=6136,14251,8115 do if cK>6136 then eK=eK-eK%0X001;else if not(cK<0X37AB)then else eK=(xK/a[KK])%a[sK];continue;end;end;end;return eK;end;end;continue;else if not(BK<1952497218 and BK>1132234384)then if not(BK>1802447023)then else Fi=function()local xK,KK=m('\<\d',N,p);local sK=0X17DA0197;while 493765273 do if sK~=0X000017da0197 then if sK~=1994535434 then else return xK;end;else p=KK;do sK=0x76e2320A;end;end;end;end;break;end;else do d=4503599627370496;end;do if not iK[2040064093]then BK=0X7460BE42;(iK)[0X7998e85D]=BK;else BK=iK[0X7998e85d];end;end;do continue;end;end;end;end;local IK=0x0794cbbc6;local ii,yi=nil,("-\$k\ \_!\l");do repeat do if IK<2035071942 then yi=t();do break;end;else if IK>0x4E7B606d then ii=function()local xK,KK=0X0,(0);while true do local sK=(I(N,p,p));p=p+1;xK=xK+((sK>0X7F and sK-128 or sK)*a[KK]);do if not(sK<128)then else return xK;end;end;do KK=KK+7;end;end;end;do if not iK[0X6dCce18]then IK=0X004E7B606D;(iK)[0X6DCce18]=IK;else IK=iK[115133976];end;end;continue;end;end;end;until false;end;local Xi=(function(xK)local KK=A();local sK="";for eK=ri,KK,0X00001F3D do local cK,bK=0X277001B9,0x37CEECb;repeat if bK==0X00037CEecb then bK=0X02BEF5ae;cK=eK+7997-0X1;continue;else do if bK==46069166 then if cK>KK then do cK=KK;end;end;break;end;end;end;until false;local WK={I(N,p+eK-0X01,p+cK-0x1)};local oK=(543544148);repeat if oK==0X2065D354 then oK=386016931;for PK=1,#WK do local YK=(52427627);repeat if YK==0X031FFb6b then YK=0X000030AE59CE;WK[PK]=g(WK[PK],yi);else if YK==0X30aE59ce then do yi=(xK*yi+Li)%0X100;end;break;end;end;until false;end;continue;else if oK==0x170226a3 then do sK=sK..h(S(WK));end;do break;end;end;end;until false;end;do p=p+KK;end;return sK;end);local ui=true;local vi=nil;local b,Bi,Ii,hK=nil,true,nil,0X000065B5c343;local ki=(0.7945425156747911);while 0.4534224466778992 do do if hK>1677823942 then ki=function()local KK=1669592814;local xK=nil;while-0x000297946c5 do if KK<2076397941 and KK>1278981200 then KK=2076397941;do xK=ii();end;continue;else if KK<0X0006383F6ee then return xK;else if KK>1669592814 then if not(xK>=d)then else do return xK-V;end;end;KK=0X4c3Bb450;end;end;end;end;end;do if not iK[807074455]then hK=0x64018fC6;iK[0x301Afa97]=hK;else hK=iK[0X301aFa97];end;end;do vi=function(...)return X("\#",...),{...};end;end;ui=0X1;do b=Di.wrap;end;Bi=fi;continue;else if hK<1706410819 then do Ii=fi;end;break;end;end;end;end;local RK=(772075522);local e=(nil);local xi,qi=2141837166,nil;local Ji,hi,Ri=nil,nil,(nil);while-0X2db81Ce9 do do if not(RK<860426838 and RK>0X00001D435284)then if not(RK<0X1d435284)then do if RK<0X2E04f002 and RK>446610451 then do if not(not iK[223983308])then RK=iK[0x000d59b6CC];else RK=446610451;do iK[223983308]=RK;end;end;end;else if RK>0X002E04F002 and RK<2055335801 then e=Zi;xi=function(...)do return(...)();end;end;qi=0.7248948578462753;qi=function()local KK,xK=true,(nil);for zK=7034,0X134f3,288 do do if zK~=7034 then if zK==7322 then xK={nil,nil,Gi,{},{},nil,{},Gi,nil};break;end;else KK={};end;end;end;local cK=({});local eK=0X1;xK[9]=cK;local sK=({});do for zK=1,ii()do cK[zK]={t(),ii()};end;end;local WK=(A()-84998);local bK=t();local oK=(t()~=0x0);local PK,YK,QK=nil,-864857740,(0X23999847);do repeat if not(QK>483850490)then if QK<597268551 then YK=xK[0X00005];break;end;else for zK=0X0001,WK do local CK=0.7959272873445166;local pK=(false);for HK=0X0001772,0X49f0,0X193f do if not(HK>0x30b1)then if HK<12465 then CK=nil;continue;elseif HK<0x49F0 and HK>6002 then pK=t();end;elseif pK==232 then CK=B(Xi(bK),t());elseif pK==Oi then CK=B(Xi(bK),Fi()+A());elseif pK==56 then CK=j();elseif pK==88 then CK=B(Xi(bK),2);elseif pK==163 then CK=B(Xi(bK),A());else if pK==74 then do CK=j();end;elseif pK==12 then do CK=A()+Ii(A())*E;end;elseif pK==0X6F then do CK=B(Xi(bK),A());end;elseif pK==0x9d then CK=t()==1;elseif pK==ti then CK=hi(0,Fi());elseif pK==215 then do CK=Fi();end;elseif pK==33 then CK=A()+Bi(A())*E;elseif pK==38 then CK=B(Xi(bK),0x0a);end;end;end;KK[zK-0X0001]=eK;local UK,NK=false,1764068716;do repeat if NK<0X69258d6C then(sK)[eK]=UK;break;else if not(NK>1497115099)then else UK={CK,{}};NK=0X593C29dB;end;end;until false;end;eK=eK+ri;if oK then(Ti)[ui]=UK;do ui=ui+ri;end;end;end;QK=0x0001CD6f8fA;PK=A()-Ai;end;until false;end;local SK=(nil);local _K='\051t\099*\103\116';for zK=8342,25278,0X000108a do if zK==0x02096 then for zK=1,PK do local HK,EK=nil,0.27827787874097387;local dK,VK=nil,(811151651);local NK=(0x00003D11fc28);local CK,pK,UK=0X3fb77Ae9,"\*",-30418181;do while true do do if VK==0X30593123 then CK,pK,UK,NK=ki(),ki(),ki(),ki();VK=116745254;else HK,EK,dK=CK%8,UK%8,pK%8;break;end;end;end;end;do(YK)[zK]={[1]=0X0048583eE7,[0X2]=-0x007963469b,[4]=0.9970750825648402,[6]=EK,[4]=HK,[0X0002]=dK==3 and qi()or(pK-dK)/8,[3]=(CK-HK)/8,[5]=(UK-EK)/8,[ri]=NK,[0X07]=dK};end;end;xK[17]=t();do continue;end;elseif zK==12576 then(xK)[1]=ii();do SK=t();end;continue;else if zK==21044 then xK[0X00006]=O(SK,2,0X0001)~=FK;(xK)[0X03]=ii();continue;elseif zK~=0X41aa then if zK==25278 then _K=xK[4];end;else(xK)[ji]=O(SK,0X1,0X1)~=0;end;end;end;local mK,nK=nil,(0x595f18a6);while 0.1745286207876141 do if nK==0X595F18a6 then mK=A()-0X0002022;for zK=0,mK-ri do _K[zK]=qi();end;nK=306927565;else if nK==0X000124b57cD then for zK=0X001,PK do local CK=nil;for pK=0X0000C63,75597,0x0001B19 do if pK==3171 then CK=xK[0X00005][zK];else if pK==10108 then do for pK,UK in W,Z do local NK=G[UK];local HK=CK[NK];if HK==2 then local dK=nil;local EK=(nil);do for VK=2488,0x378a,5865 do if not(VK<=2488)then if VK==0x000378a then if dK then CK[NK]=dK[ri];local VK=nil;do for MK=0x2176,0X0046b7,9537 do do if MK==0x46B7 then do VK[#VK+0X01]={CK,NK};end;else if MK~=8566 then else VK=dK[2];end;end;end;end;end;end;else dK=sK[EK];continue;end;else do EK=KK[CK[UK]];end;end;end;end;elseif HK==1 then do CK[UK]=zK+CK[UK]+0X1;end;else if HK==4 then(CK)[UK]=_K[CK[UK]];end;end;end;end;break;end;end;end;end;do break;end;end;end;end;(xK)[0X0c]=A();for zK=7881,0x00457C,0X26B3 do if zK>7881 then do(xK)[8]=ii();end;else if zK<17788 then do(xK)[15]=t();end;continue;end;end;end;return xK;end;break;else do if RK>0X33491256 then if not(not iK[490068705])then RK=iK[490068705];else RK=0x1D435284;iK[490068705]=RK;end;hi=fi;continue;end;end;end;end;end;else if not iK[0X2bE83bB]then do RK=860426838;end;(iK)[0X2bE83Bb]=RK;else RK=iK[46039995];end;Ri=function(sK,KK,xK)local PK,YK=xK[2],xK[0X00006];local cK=xK[4];local SK=xK[0X03];local WK,bK,oK=xK[8],xK[1],xK[7];local eK=xK[0X00005];local mK=s({},{__mode='\118'});local _K=nil;do if SK>=0X00005e then if SK>=0X8d then do if not(SK>=164)then if not(SK<0X0098)then if SK>=0X9e then if SK<161 then if not(SK<159)then if SK==160 then _K=function(...)local nK,zK=0X01,{};local pK=(Q());local QK=0X0000;local NK,HK=vi(...);local UK,CK=(pK==z and KK or pK),({[1]=xK,[2]=zK});do NK=NK-0x1;end;do for EK=0X000,NK do do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+0X1];end;end;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK<0x5)then if not(dK>=0X8)then if not(dK<0X6)then if dK~=7 then zK[0]=UK[EK[0x7]];EK=eK[nK];do nK=nK+0X0001;end;local VK=sK[0];(zK)[1]=EK[7];EK=eK[nK];do nK=nK+0X1;end;(zK)[0X2]=UK[EK[0x7]];nK=nK+1;zK[3]=VK[0X1][VK[0X2]];nK=nK+0X01;nK=nK+1;nK=nK+0X00001;local MK=0X0;do zK[2]=zK[0x002][zK[3]];end;nK=nK+0X1;zK[MK](zK[MK+1],zK[MK+2]);QK=MK-1;nK=nK+0X1;repeat local aK,gK=mK,(zK);local wK={};do for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[0x1]==gK and DK[2]>=0X0)then else local ZK=(DK[2]);do if not wK[ZK]then do wK[ZK]={gK[ZK]};end;end;end;(DK)[0X1]=wK[ZK];do DK[2]=0X1;end;end;end;end;end;until true;do return;end;else do(zK)[EK[0x3]]=EK[0X007];end;end;else(zK)[EK[3]]=not zK[EK[0x002]];end;else if dK<9 then do(zK)[EK[3]]=UK[EK[0x7]];end;else if dK==0x0000A then zK[EK[3]]=zK[EK[0X02]]~=zK[EK[0X5]];else(zK)[EK[3]]={S({},0X1,EK[2])};end;end;end;else if dK>=2 then if not(dK>=3)then zK[EK[0X3]]=zK[EK[2]]/zK[EK[0X5]];else if dK~=0X4 then do nK=EK[0x002];end;else end;end;else if dK~=0X001 then do if not(zK[EK[0X2]]<zK[EK[5]])then else nK=EK[3];end;end;else local VK=(EK[0x2]);local MK=nil;local aK=VK[9];local gK=(#aK);if gK>0X00000 then MK={};do for wK=1,gK do local rK=(aK[wK]);if rK[0X01]==0x0 then(MK)[wK-1]={zK,rK[0X2]};else do MK[wK-0x1]=sK[rK[2]];end;end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;else _K=function(...)local nK=0X1;local zK={};local pK=(Q());local UK=(pK==z and KK or pK);local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-0x1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X00001];else break;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x001 or 0X0,S(HK,WK+1,NK+0X01)};end;if UK==pK then else(_)(_K,UK);end;local QK=(0);while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+1;if dK<0x1a then if not(dK>=0XD)then do if not(dK<0x06)then if dK>=9 then if not(dK>=11)then do if dK==10 then do(zK)[EK[0X3]]=zK[EK[0X2]];end;else local VK=(EK[2]);local aK=VK[9];local gK=#aK;local MK=(nil);do if gK>0x000 then do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[0X1]~=0x00000 then MK[wK-0X1]=sK[rK[0X00002]];else MK[wK-1]={zK,rK[2]};end;end;K(mK,MK);end;end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;end;else if dK~=0XC then(zK)[0X00000]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;do zK[0X0]=zK[0X0][EK[0X6]];end;do nK=nK+1;end;do nK=nK+0X1;end;nK=nK+0X1;do QK=0;end;(zK)[QK]=zK[QK]();nK=nK+0x1;nK=nK+0X001;EK=eK[nK];nK=nK+0X1;if not zK[0X000]then nK=EK[2];end;else(zK)[0x007]=UK[EK[7]];local VK=(sK[2]);do nK=nK+0X1;end;do nK=nK+1;end;nK=nK+1;do zK[0x8]=VK[1][VK[2]];end;nK=nK+1;local MK=(7);nK=nK+0x00001;EK=eK[nK];do nK=nK+1;end;do zK[0x8]=zK[8][EK[6]];end;EK=eK[nK];nK=nK+0X1;(zK)[8]=zK[0X00008][EK[0x6]];EK=eK[nK];do nK=nK+0X1;end;(zK)[8]=zK[8][EK[0x6]];nK=nK+0X1;zK[0x00008]=zK[8][zK[0X01]];EK=eK[nK];do nK=nK+1;end;(zK)[8]=zK[8][EK[6]];nK=nK+1;zK[MK]=zK[MK](zK[MK+1]);QK=MK;do EK=eK[nK];end;nK=nK+1;if not(zK[7])then else nK=EK[0x2];end;end;end;else if not(dK>=0X007)then(zK)[0X00009]=UK[EK[0X00007]];EK=eK[nK];do nK=nK+1;end;zK[0X00009]=zK[9][EK[6]];do nK=nK+0X1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;do if zK[0X9]==EK[0X6]then else do nK=EK[3];end;end;end;else if dK==8 then zK[EK[3]]=zK[EK[0x002]]-zK[EK[5]];else zK[7]=UK[EK[7]];do nK=nK+1;end;QK=7;zK[QK]=zK[QK]();nK=nK+0X01;zK[2]=zK[0X7];do EK=eK[nK];end;nK=nK+0x1;nK=EK[2];end;end;end;else if not(dK<3)then do if dK<0X4 then zK[6]=EK[0x0007];EK=eK[nK];nK=nK+1;UK[EK[7]]=zK[0X6];EK=eK[nK];do nK=nK+1;end;do(zK)[6]=EK[7];end;EK=eK[nK];nK=nK+0X1;do(UK)[EK[0X00007]]=zK[6];end;EK=eK[nK];nK=nK+0X1;do(zK)[0X0006]=UK[EK[7]];end;do nK=nK+0x00001;end;nK=nK+0x1;do nK=nK+1;end;local VK=(sK[2]);(zK)[0x07]=VK[1][VK[0x2]];nK=nK+0x1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x1;zK[7]=zK[0x7][EK[0X6]];nK=nK+0x1;nK=nK+0X001;do EK=eK[nK];end;nK=nK+1;(zK)[0X7]=zK[0X7][EK[6]];local MK=(6);nK=nK+1;do nK=nK+0x00001;end;EK=eK[nK];nK=nK+1;(zK)[7]=zK[7][EK[6]];do nK=nK+1;end;(zK)[0X0007]=zK[7][zK[0X1]];nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+1;zK[7]=zK[0x7][EK[0X6]];nK=nK+0x0001;do nK=nK+0X0001;end;nK=nK+1;do zK[MK]=zK[MK](zK[MK+1]);end;QK=MK;nK=nK+0X01;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;if not(zK[6])then else nK=EK[2];end;else if dK~=0X5 then local VK=(EK[3]);local MK,aK=zK[VK]();if MK then nK=EK[0X2];(zK)[VK+0X3]=aK;end;else local VK=sK[0X0001];zK[0X7]=VK[1][VK[0x0002]];local MK=(7);nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do zK[8]=UK[EK[7]];end;nK=nK+0X00001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0x1;(zK)[9]=EK[0X7];nK=nK+0X1;do zK[MK]=zK[MK](zK[MK+0X01],zK[MK+2]);end;QK=MK;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;do if not zK[0X7]then nK=EK[0X0002];end;end;end;end;end;else do if dK<1 then(zK)[7]=zK[1];EK=eK[nK];nK=nK+0X0001;zK[0X8]=EK[7];EK=eK[nK];nK=nK+0X00001;zK[9]=UK[EK[7]];nK=nK+0X0001;nK=nK+0X1;EK=eK[nK];local VK=0X0009;do nK=nK+1;end;(zK)[10]=EK[0X00007];nK=nK+1;(zK)[11]=zK[0X7];nK=nK+0X1;zK[12]=zK[0X8];nK=nK+0x1;do QK=VK+0X4-0X01;end;(zK[VK])(S(zK,VK+0X1,QK));QK=VK-1;do EK=eK[nK];end;nK=nK+1;(zK)[9]=UK[EK[0X007]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0Xa]=EK[7];nK=nK+0X00001;VK=0x009;zK[VK](zK[VK+0X1]);QK=VK-0X00001;do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;zK[9]=EK[7];local MK=(0X9);EK=eK[nK];nK=nK+1;do(zK)[0XA]=EK[0X7];end;EK=eK[nK];nK=nK+0x1;zK[0XB]=EK[2];EK=eK[nK];nK=nK+1;VK=zK[MK];local aK,gK=zK[MK+1],(zK[MK+2]);(zK)[MK]=b(function()for wK=VK,aK,gK do(o)(true,wK);end;end);nK=EK[0x0002];else if dK==0X2 then if zK[EK[2]]==EK[6]then nK=EK[3];end;else(zK)[0X008]=UK[EK[7]];local VK=(8);EK=eK[nK];nK=nK+1;(zK)[0x09]=EK[7];nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+0X1]);QK=VK;EK=eK[nK];nK=nK+0X1;if not(EK[0X00007]<=zK[8])then nK=EK[0X03];end;end;end;end;end;end;end;else if dK>=19 then if dK>=22 then do if dK>=0X18 then if dK~=25 then do zK[EK[3]]=zK[EK[0X2]]^zK[EK[0x005]];end;else(zK)[EK[3]]={S({},0X1,EK[0X002])};end;else do if dK~=0X0017 then else(zK)[0Xd]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0X1;QK=13;zK[QK]();do QK=QK-0X1;end;EK=eK[nK];nK=nK+0x1;nK=EK[0X2];end;end;end;end;else if dK<0X000014 then(zK)[7]=UK[EK[0X00007]];nK=nK+0X0001;QK=0X7;zK[QK]();QK=QK-0X1;do nK=nK+0X00001;end;nK=nK+1;EK=eK[nK];local VK=sK[0x2];do nK=nK+0X1;end;zK[0x07]=UK[EK[0X07]];nK=nK+1;nK=nK+1;nK=nK+0x1;(zK)[0X008]=VK[0X1][VK[2]];do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];nK=nK+1;(zK)[8]=zK[0x8][EK[0X006]];local gK=(0X2);do EK=eK[nK];end;nK=nK+0X00001;do(zK)[0X08]=zK[8][EK[6]];end;nK=nK+1;do nK=nK+0X00001;end;do EK=eK[nK];end;local MK=(8);nK=nK+0X01;local aK=(zK[8]);(zK)[MK+0X1]=aK;do(zK)[MK]=aK[EK[6]];end;nK=nK+0X01;MK=0X8;local wK=(0);if gK~=0X0 then do QK=MK+gK-0X00001;end;end;local rK,lK=nil,(nil);if gK~=0x1 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else do rK,lK=vi(zK[MK]());end;end;if wK==0x1 then QK=MK-0X1;else if wK~=0 then do rK=MK+wK-2;end;do QK=rK+1;end;else rK=rK+MK-1;QK=rK;end;local LK=(0);for DK=MK,rK do LK=LK+1;(zK)[DK]=lK[LK];end;end;nK=nK+1;MK=7;zK[MK]=zK[MK](S(zK,MK+0X0001,QK));QK=MK;nK=nK+0X1;zK[3]=zK[0X7];EK=eK[nK];nK=nK+0X001;do zK[0X0007]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+1;(zK)[7]=zK[7][EK[6]];do EK=eK[nK];end;nK=nK+1;do if zK[7]==EK[6]then else do nK=EK[3];end;end;end;else if dK==0X015 then local VK,aK=sK[0X1],(0X3);(zK)[0]=VK[1][VK[0X2]];EK=eK[nK];nK=nK+0X1;(zK)[0X1]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X001;(zK)[0x2]=EK[7];do nK=nK+0X1;end;local MK,gK=0X0,3;do if aK==0 then else QK=MK+aK-0X1;end;end;local wK,rK=nil,(nil);do if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));else do wK,rK=vi(zK[MK]());end;end;end;if gK==1 then QK=MK-1;else if gK==0 then do wK=wK+MK-0x1;end;QK=wK;else wK=MK+gK-2;QK=wK+0X1;end;local lK=(0);for LK=MK,wK do lK=lK+1;do zK[LK]=rK[lK];end;end;end;do nK=nK+1;end;do nK=nK+0x001;end;EK=eK[nK];nK=nK+1;if not zK[0]then nK=EK[0x2];end;else do zK[7]=UK[EK[0X7]];end;local VK=(7);EK=eK[nK];nK=nK+1;(zK)[8]=EK[7];nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0x8]=zK[0X0005]*EK[0x6];EK=eK[nK];nK=nK+0X1;if not(zK[8]<=zK[7])then nK=EK[0X3];end;end;end;end;else do if not(dK<0x10)then if dK>=0X0011 then if dK==0x012 then do for VK=EK[3],EK[0X02]do(zK)[VK]=nil;end;end;else zK[0X7]=UK[EK[0X7]];local VK=(0X7);EK=eK[nK];do nK=nK+1;end;(zK)[8]=EK[7];do nK=nK+1;end;zK[VK]=zK[VK](zK[VK+0x1]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;if not(not(EK[0x007]<=zK[7]))then else nK=EK[0X3];end;end;else zK[0X0008]=UK[EK[7]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];local aK=0x00;nK=nK+1;(zK)[0X9]=EK[0X7];EK=eK[nK];do nK=nK+0X001;end;(zK)[0X0A]=EK[7];local VK=11;EK=eK[nK];nK=nK+0X1;do(zK)[0X0000B]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+0X01;do(zK)[12]=UK[EK[7]];end;do nK=nK+0x00001;end;nK=nK+1;EK=eK[nK];nK=nK+1;zK[13]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0x00001;zK[13]=zK[13][EK[6]];nK=nK+1;(zK)[0xC]=zK[0XC][zK[13]];nK=nK+1;nK=nK+1;do nK=nK+1;end;local MK=(2);if MK~=0 then QK=VK+MK-1;end;local gK,wK=nil,nil;if MK~=0X1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else do gK,wK=vi(zK[VK]());end;end;if aK==1 then do QK=VK-0X0001;end;else if aK==0X00000 then do gK=gK+VK-1;end;QK=gK;else do gK=VK+aK-0X2;end;QK=gK+0X001;end;local rK=(0x000);for lK=VK,gK do do rK=rK+1;end;zK[lK]=wK[rK];end;end;nK=nK+1;nK=nK+1;do nK=nK+1;end;VK=8;(zK[VK])(S(zK,VK+1,QK));do QK=VK-0X01;end;EK=eK[nK];nK=nK+1;nK=EK[2];end;else do if not(dK>=14)then repeat local aK=({});local VK,MK=mK,(zK);for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0X00001]==MK and lK[2]>=0 then local LK=(lK[0x2]);if not(not aK[LK])then else do(aK)[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[2]=0x00001;end;end;end;end;until true;return;else if dK==0Xf then local VK=EK[0X3];local MK,aK=zK[VK]();if MK then do for gK=0x0001,EK[0X00005]do do zK[VK+gK]=aK[gK];end;end;end;nK=EK[2];end;else(zK)[EK[0X00003]]=zK[EK[2]]>zK[EK[5]];end;end;end;end;end;end;end;else if dK<0X27 then if not(dK<32)then if dK>=0X000023 then if not(dK>=37)then do if dK==0X24 then(zK)[EK[3]]=UK[EK[7]];else do zK[8]=UK[EK[7]];end;do nK=nK+0x1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[0X009]=EK[0X7];local VK=(0X00008);do nK=nK+0X001;end;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;do nK=nK+0X01;end;nK=nK+1;EK=eK[nK];do nK=nK+0X01;end;if zK[8]<zK[0X5]then nK=EK[3];end;end;end;else if dK==38 then(zK)[2]=UK[EK[0x7]];do nK=nK+0X1;end;nK=nK+1;nK=nK+1;do QK=0x2;end;(zK)[QK]=zK[QK]();local MK=4;do EK=eK[nK];end;do nK=nK+1;end;zK[3]=UK[EK[0X7]];do nK=nK+0X1;end;do nK=nK+0x01;end;nK=nK+1;local VK=sK[2];zK[4]=VK[0X01][VK[0X02]];do EK=eK[nK];end;nK=nK+0x1;do zK[4]=zK[4][EK[6]];end;do nK=nK+0x01;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+0x1;end;zK[0X04]=zK[0X00004][EK[6]];EK=eK[nK];nK=nK+0X1;local aK=(zK[4]);local gK=(0X02);(zK)[MK+1]=aK;do(zK)[MK]=aK[EK[0X6]];end;nK=nK+1;MK=0X4;local wK=0X00000;if gK~=0 then QK=MK+gK-1;end;local rK,lK=nil,(nil);if gK==0x00001 then rK,lK=vi(zK[MK]());else rK,lK=vi(zK[MK](S(zK,MK+1,QK)));end;if wK==0X1 then QK=MK-0X001;else if wK~=0 then do rK=MK+wK-0X2;end;QK=rK+0X1;else rK=rK+MK-1;do QK=rK;end;end;local LK=(0);do for DK=MK,rK do LK=LK+0x1;do(zK)[DK]=lK[LK];end;end;end;end;do nK=nK+1;end;nK=nK+1;nK=nK+1;MK=0X03;(zK)[MK]=zK[MK](S(zK,MK+0x001,QK));QK=MK;EK=eK[nK];nK=nK+0X00001;do zK[0x4]=UK[EK[7]];end;nK=nK+1;do VK=sK[0X2];end;do(zK)[5]=VK[1][VK[0x002]];end;EK=eK[nK];nK=nK+0x001;(zK)[0X005]=zK[0X5][EK[0x6]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;zK[5]=zK[0X5][EK[0X006]];EK=eK[nK];nK=nK+1;do zK[5]=zK[0x5][EK[0X6]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do zK[0X05]=zK[0x5][EK[6]];end;do nK=nK+0X0001;end;nK=nK+0x001;nK=nK+1;do MK=0x4;end;(zK)[MK]=zK[MK](zK[MK+1]);do QK=MK;end;do EK=eK[nK];end;nK=nK+1;do(zK)[5]=UK[EK[0X00007]];end;nK=nK+1;QK=0x0005;do zK[QK]=zK[QK]();end;do nK=nK+0X001;end;do nK=nK+0X00001;end;EK=eK[nK];nK=nK+1;if not zK[5]then nK=EK[0X2];end;else zK[EK[3]]=g(zK[EK[0X00002]],zK[EK[5]]);end;end;else if dK<0X00021 then nK=EK[2];else if dK~=0X22 then local VK=EK[3];local aK,gK=zK[VK+1],(zK[VK+0X02]);local MK=zK[VK];(zK)[VK]=b(function()do for wK=MK,aK,gK do(o)(true,wK);end;end;end);nK=EK[0x2];else zK[7]=UK[EK[0X7]];local VK=7;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0x1;end;do(zK)[8]=EK[0X7];end;nK=nK+1;zK[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+0X001;if not(zK[5]<=zK[7])then nK=EK[0X3];end;end;end;end;else if not(dK>=29)then if not(dK>=27)then local VK=(sK[0]);zK[0X0]=VK[1][VK[0x2]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0x1;if not(not zK[0])then else nK=EK[2];end;else if dK==0X1c then zK[7]=zK[1];EK=eK[nK];nK=nK+0X1;do(zK)[0X0008]=EK[0X7];end;EK=eK[nK];nK=nK+0x01;(zK)[9]=UK[EK[0X00007]];nK=nK+0X0001;local MK=9;nK=nK+0x1;local VK=9;do EK=eK[nK];end;nK=nK+1;zK[0xa]=EK[0X00007];do nK=nK+1;end;(zK)[11]=zK[7];nK=nK+0X0001;zK[0xC]=zK[8];nK=nK+0X01;do QK=VK+0x4-1;end;(zK[VK])(S(zK,VK+0X01,QK));do QK=VK-0X1;end;EK=eK[nK];nK=nK+1;do(zK)[9]=UK[EK[7]];end;do EK=eK[nK];end;do nK=nK+1;end;do(zK)[0XA]=EK[7];end;nK=nK+1;VK=9;zK[VK](zK[VK+0X01]);do QK=VK-0X1;end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;zK[0x009]=EK[0X00007];EK=eK[nK];nK=nK+0x1;do(zK)[10]=EK[7];end;EK=eK[nK];nK=nK+1;zK[11]=EK[0X0002];do EK=eK[nK];end;nK=nK+1;VK=zK[MK];local aK=zK[MK+1];local gK=(zK[MK+0X2]);zK[MK]=b(function()do for wK=VK,aK,gK do o(true,wK);end;end;end);nK=EK[2];else zK[0X8]=UK[EK[0x7]];nK=nK+0X01;do nK=nK+1;end;do EK=eK[nK];end;local VK=(EK[2]);do nK=nK+1;end;local aK,MK=VK[0X9],(nil);local gK,wK=#aK,8;if not(gK>0X0)then else MK={};for rK=0x0001,gK do local lK=aK[rK];if lK[0X1]~=0 then(MK)[rK-0X01]=sK[lK[0X2]];else do MK[rK-0X001]={zK,lK[0X02]};end;end;end;K(mK,MK);end;zK[0x9]=Ri(MK,UK,VK);do nK=nK+1;end;zK[wK](zK[wK+1]);QK=wK-1;EK=eK[nK];nK=nK+0X001;nK=EK[2];end;end;else do if dK<0X1E then(zK)[0X7]=UK[EK[0X07]];EK=eK[nK];nK=nK+1;(zK)[8]=EK[7];do EK=eK[nK];end;local VK=(0X7);nK=nK+1;zK[9]=EK[7];do nK=nK+1;end;(zK[VK])(zK[VK+0X1],zK[VK+2]);QK=VK-0X01;EK=eK[nK];nK=nK+1;do nK=EK[2];end;else do if dK==31 then(zK)[0XD]=UK[EK[0X00007]];nK=nK+1;do QK=13;end;(zK[QK])();QK=QK-1;EK=eK[nK];nK=nK+0x00001;nK=EK[0X2];else local VK=sK[3];do zK[8]=VK[0x001][VK[2]];end;EK=eK[nK];nK=nK+1;local MK=(8);(zK)[0x8]=zK[0X8][EK[0X0006]];nK=nK+0X0001;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;do zK[0X8]=zK[8][EK[0X06]];end;EK=eK[nK];nK=nK+0X0001;local aK=(zK[0X008]);do zK[MK+1]=aK;end;zK[MK]=aK[EK[6]];EK=eK[nK];nK=nK+1;zK[10]=EK[7];nK=nK+0X1;MK=0X8;do(zK)[MK]=zK[MK](zK[MK+0X001],zK[MK+2]);end;QK=MK;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0x1;do if not(zK[8])then else nK=EK[2];end;end;end;end;end;end;end;end;else if dK<0X02d then if not(dK>=0x002A)then if dK>=0x28 then if dK==0X29 then(zK)[EK[3]]=true;else(zK)[8]=zK[7]-zK[6];do EK=eK[nK];end;local VK=(0X8);nK=nK+0X1;zK[0X09]=UK[EK[0X007]];nK=nK+0X001;nK=nK+0X01;nK=nK+1;(zK)[8]=zK[8]-zK[0X9];nK=nK+1;do(zK)[0x8]=zK[0X008]*zK[0X5];end;EK=eK[nK];nK=nK+1;UK[EK[7]]=zK[0X8];EK=eK[nK];nK=nK+1;(zK)[8]=UK[EK[0x7]];nK=nK+0X1;nK=nK+0x001;EK=eK[nK];do nK=nK+1;end;(zK)[8]=zK[8][EK[6]];nK=nK+0X00001;do zK[9]=zK[0x2];end;EK=eK[nK];nK=nK+1;do(zK)[0x0A]=UK[EK[7]];end;nK=nK+0x01;nK=nK+0x1;do EK=eK[nK];end;nK=nK+1;(zK)[11]=UK[EK[0X7]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;do zK[0XB]=zK[11][EK[0X00006]];end;do nK=nK+1;end;do(zK)[0X00a]=zK[10][zK[11]];end;do nK=nK+1;end;(zK)[VK]=zK[VK](zK[VK+0X01],zK[VK+2]);QK=VK;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0x1;do if not(not zK[8])then else nK=EK[2];end;end;end;else(zK)[EK[0X00003]]=zK[EK[0X2]][zK[EK[0X5]]];end;else if not(dK>=43)then zK[EK[0x0003]]=EK[7];else do if dK~=44 then if not(EK[7]<=zK[EK[0x00005]])then nK=EK[3];end;else(zK)[8]=UK[EK[0X7]];nK=nK+0X0001;nK=nK+1;EK=eK[nK];nK=nK+0x1;zK[9]=EK[7];EK=eK[nK];local VK=(0X8);do nK=nK+0x01;end;zK[10]=EK[7];nK=nK+1;(zK[VK])(zK[VK+0X1],zK[VK+0x002]);QK=VK-0x001;nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[0X00002];end;end;end;end;else if not(dK<48)then if dK>=50 then if dK==0X0033 then zK[0]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+0x00001;do(zK)[0x0]=zK[0][EK[0X6]];end;nK=nK+0x1;nK=nK+0x001;do EK=eK[nK];end;nK=nK+1;do if not(not zK[0X00])then else nK=EK[2];end;end;else do if not(zK[EK[0X00003]])then else nK=EK[0x2];end;end;end;else do if dK==0X00031 then zK[0X0007]=UK[EK[0X7]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+1;(zK)[0X7]=zK[0X7][EK[0x6]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;if not zK[7]then do nK=EK[0X2];end;end;else do zK[0xD]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+0X001;do nK=nK+1;end;QK=13;zK[QK]();QK=QK-0x00001;EK=eK[nK];do nK=nK+0x1;end;nK=EK[2];end;end;end;else do if not(dK>=46)then zK[7]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];local VK=7;nK=nK+0X1;zK[0X7]=zK[7][EK[6]];nK=nK+0X1;nK=nK+1;nK=nK+0X0001;do(zK)[8]=zK[0x2];end;EK=eK[nK];nK=nK+0X1;zK[0x9]=UK[EK[0X0007]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do zK[10]=UK[EK[0x07]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0xa]=zK[0Xa][EK[0X06]];nK=nK+0x1;(zK)[0X9]=zK[9][zK[10]];nK=nK+0X0001;do nK=nK+0x1;end;do nK=nK+1;end;do(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);end;QK=VK;EK=eK[nK];nK=nK+0X01;if zK[7]then nK=EK[2];end;else if dK==0X2f then(zK)[7]=zK[1];do EK=eK[nK];end;nK=nK+0X1;zK[8]=EK[7];EK=eK[nK];nK=nK+0X1;zK[9]=UK[EK[0X7]];do nK=nK+0x1;end;do nK=nK+1;end;EK=eK[nK];local VK=9;nK=nK+1;zK[10]=EK[0X7];nK=nK+0X1;zK[0X000B]=zK[0X007];nK=nK+0X001;zK[0xc]=zK[0X8];nK=nK+1;QK=VK+0X00004-1;(zK[VK])(S(zK,VK+0X1,QK));QK=VK-0X1;EK=eK[nK];nK=nK+1;zK[9]=UK[EK[7]];do nK=nK+0X00001;end;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;zK[0x00009]=zK[0X009]+EK[6];EK=eK[nK];do nK=nK+1;end;local MK=9;UK[EK[0X0007]]=zK[9];EK=eK[nK];do nK=nK+0X001;end;do(zK)[0x00009]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0XA]=EK[0X7];nK=nK+0X1;VK=9;zK[VK](zK[VK+1]);do QK=VK-1;end;do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;(zK)[9]=EK[7];do EK=eK[nK];end;nK=nK+0X1;(zK)[0XA]=EK[0X00007];EK=eK[nK];nK=nK+0X1;do(zK)[11]=EK[2];end;EK=eK[nK];nK=nK+1;do VK=zK[MK];end;local gK=zK[MK+2];local aK=zK[MK+0X1];zK[MK]=b(function()do for wK=VK,aK,gK do o(true,wK);end;end;end);nK=EK[2];else zK[8]=UK[EK[7]];EK=eK[nK];local VK=(EK[0X2]);do nK=nK+0X1;end;local aK,MK=VK[9],nil;local gK=(#aK);do if not(gK>0)then else do MK={};end;for rK=1,gK do local lK=aK[rK];if lK[1]~=0x0 then(MK)[rK-1]=sK[lK[2]];else MK[rK-1]={zK,lK[2]};end;end;K(mK,MK);end;end;zK[0X0009]=Ri(MK,UK,VK);nK=nK+1;local wK=0X08;(zK[wK])(zK[wK+1]);do QK=wK-1;end;nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+1;do nK=EK[2];end;end;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));local CK={[2]=zK,[1]=xK};NK=NK-0x001;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;local QK=0;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0X00000,S(HK,WK+1,NK+0X1)};end;do if UK~=pK then(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X0001;if dK<0X007 then if dK<0x0003 then if dK>=1 then if dK~=0x2 then local VK=(sK[0]);local MK=0X0;(zK)[0X0]=VK[1][VK[0X002]];local gK=0X2;do EK=eK[nK];end;nK=nK+1;local aK=zK[0x0000];do zK[MK+1]=aK;end;(zK)[MK]=aK[EK[0x00006]];do EK=eK[nK];end;do nK=nK+1;end;zK[2]=EK[7];do nK=nK+0x001;end;VK=sK[1];(zK)[3]=VK[1][VK[0X002]];nK=nK+1;(zK)[0x2]=zK[gK]..zK[gK+1];nK=nK+0X1;do zK[3]={};end;do EK=eK[nK];end;do nK=nK+0X1;end;zK[4]=UK[EK[7]];nK=nK+0x1;do nK=nK+0X00001;end;nK=nK+0X1;VK=sK[2];zK[0X5]=VK[0x1][VK[0x2]];nK=nK+1;MK=4;zK[MK]=zK[MK](zK[MK+0X1]);do QK=MK;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X01;do(zK[0x3])[EK[7]]=zK[4];end;EK=eK[nK];nK=nK+1;(zK)[4]=UK[EK[0X00007]];EK=eK[nK];do nK=nK+0X001;end;zK[0x4]=zK[4][EK[0X6]];nK=nK+1;VK=sK[1];(zK)[0X5]=VK[1][VK[2]];nK=nK+0X01;do nK=nK+0X00001;end;nK=nK+0X1;(zK)[4]=zK[0X4][zK[5]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not(zK[0X4])then else nK=EK[2];end;end;else do nK=EK[0X2];end;end;else zK[EK[3]]=zK[EK[0X2]]%zK[EK[0X5]];end;else if not(dK>=5)then do if dK~=0x04 then for VK=EK[0X00003],EK[2]do(zK)[VK]=nil;end;else zK[EK[0X3]]=UK[EK[7]];end;end;else do if dK==0X6 then do(CK)[EK[0x2]]=zK[EK[0X3]];end;else(zK)[EK[3]]=-zK[EK[2]];end;end;end;end;else if not(dK<11)then do if not(dK<13)then if dK==14 then zK[EK[0X03]]=EK[7];else zK[EK[0x3]]={S({},0X1,EK[2])};end;else if dK==12 then local VK,MK=EK[0X002],(nil);local aK=(VK[9]);local gK=(#aK);if not(gK>0)then else MK={};for wK=0X01,gK do local rK=aK[wK];do if rK[0X01]~=0X0 then do(MK)[wK-1]=sK[rK[2]];end;else do(MK)[wK-0X1]={zK,rK[2]};end;end;end;end;K(mK,MK);end;do zK[EK[3]]=i[EK[0X5]](MK);end;else local VK=(EK[0X03]);local MK,aK=zK[VK]();if MK then for gK=0X01,EK[5]do(zK)[VK+gK]=aK[gK];end;nK=EK[2];end;end;end;end;else if dK>=0X00009 then if dK==10 then else(zK[0X00003])[EK[0x007]]=zK[0X0004];EK=eK[nK];nK=nK+1;zK[0X3][EK[0X07]]=EK[0x6];nK=nK+0X001;local VK=(sK[0X3]);(zK)[4]=VK[0X001][VK[0x2]];local MK=0;EK=eK[nK];nK=nK+1;zK[0X0003][EK[7]]=zK[4];nK=nK+1;QK=MK+4-0X001;do zK[MK]=zK[MK](S(zK,MK+1,QK));end;QK=MK;EK=eK[nK];nK=nK+1;MK=0X0;local aK=zK[0x0000];zK[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];do EK=eK[nK];end;local gK=(EK[0X02]);nK=nK+1;local wK=(nil);local rK=(gK[0X009]);local lK=#rK;if lK>0X0 then do wK={};end;for LK=0X1,lK do local DK=(rK[LK]);do if DK[1]==0 then wK[LK-1]={zK,DK[2]};else wK[LK-0x1]=sK[DK[2]];end;end;end;K(mK,wK);end;(zK)[2]=Ri(wK,UK,gK);nK=nK+1;MK=0;zK[MK](zK[MK+0X1],zK[MK+0x0002]);QK=MK-1;do nK=nK+0X1;end;nK=nK+1;nK=nK+0X001;repeat local LK,DK=mK,zK;local ZK={};do for GK,OK in W,LK do for tK,AK in W,OK do if AK[1]==DK and AK[2]>=0 then local jK=AK[2];if not(not ZK[jK])then else ZK[jK]={DK[jK]};end;(AK)[0x01]=ZK[jK];do(AK)[0X2]=0x1;end;end;end;end;end;until true;return;end;else do if dK~=0X00008 then do(zK)[EK[3]]=zK[EK[0X2]]>zK[EK[5]];end;else local VK=EK[2];local aK,MK=VK[0X9],(nil);local gK=(#aK);if not(gK>0x0000)then else do MK={};end;do for wK=1,gK do local rK=(aK[wK]);if rK[1]==0X000 then MK[wK-0X1]={zK,rK[2]};else do MK[wK-1]=sK[rK[2]];end;end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;else if not(SK<0x000a2)then if SK~=163 then _K=function(...)local QK,zK=0,{};local CK=({[2]=zK,[1]=xK});local pK=Q();local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0x001;for EK=0x0000,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X000,S(HK,WK+1,NK+1)};end;local nK=0X1;do if UK==pK then else _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+1;do if not(dK<0X9)then if dK<14 then if dK<11 then if dK~=10 then(zK)[EK[3]]=EK[7];else local VK=sK[0X1];(zK)[0]=VK[1][VK[0X2]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK[0])[EK[0X7]]=EK[6];do EK=eK[nK];end;nK=nK+0x00001;nK=EK[0X2];end;else do if dK>=12 then if dK==13 then zK[EK[3]]={S({},1,EK[2])};else nK=EK[2];end;else local VK=EK[0x2];local MK=(nil);local aK=VK[9];local gK=(#aK);if not(gK>0)then else do MK={};end;do for wK=0x0001,gK do local rK=(aK[wK]);if rK[1]~=0 then(MK)[wK-0X001]=sK[rK[0X2]];else do(MK)[wK-0X00001]={zK,rK[2]};end;end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=0x00010)then if dK~=15 then zK[EK[0x3]]=l(zK[EK[0X02]]);else do(zK)[EK[0X3]]=zK[EK[2]]/zK[EK[5]];end;end;else do if dK>=0X00011 then do if dK==0x000012 then local VK=(sK[1]);zK[0]=VK[1][VK[0X2]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X0001;(zK)[0X0000]=zK[0][EK[6]];EK=eK[nK];nK=nK+0x1;do if zK[0X0000]~=EK[6]then nK=EK[3];end;end;else end;end;else repeat local MK,aK=mK,(zK);local gK=({});for wK,rK in W,MK do do for lK,LK in W,rK do if not(LK[1]==aK and LK[2]>=0X0)then else local DK=LK[0X02];if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;(LK)[0X01]=gK[DK];do LK[2]=1;end;end;end;end;end;until true;local VK=(EK[0x003]);do return S(zK,VK,VK+EK[0X2]-2);end;end;end;end;end;else if dK<0X4 then if not(dK<0X2)then if dK~=3 then do if not(not(zK[EK[0x02]]<zK[EK[5]]))then else nK=EK[0X3];end;end;else local VK=(sK[0]);(zK)[0X0]=VK[1][VK[0X2]];nK=nK+1;nK=nK+0x01;EK=eK[nK];nK=nK+0X1;do if not zK[0]then nK=EK[2];end;end;end;else if dK==1 then local VK=EK[0X2];local MK=zK[VK];do for aK=VK+0X0001,EK[0X0005]do MK=MK..zK[aK];end;end;do zK[EK[0X3]]=MK;end;else do(zK)[0]=UK[EK[0X7]];end;nK=nK+1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+1;zK[0x00]=zK[0x00000][EK[0x6]];do EK=eK[nK];end;nK=nK+0X1;if not zK[0]then nK=EK[0X2];end;end;end;else do if not(dK>=0X00006)then if dK~=0X5 then do CK[EK[0X2]]=zK[EK[0X3]];end;else repeat local VK,MK=mK,(zK);local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=lK[0x2];do if not aK[LK]then aK[LK]={MK[LK]};end;end;(lK)[0X1]=aK[LK];(lK)[2]=0x1;end;end;end;end;until true;do return;end;end;else if not(dK>=7)then(zK)[0x0]=UK[EK[7]];EK=eK[nK];nK=nK+1;do zK[0x0]=zK[0X0][EK[6]];end;nK=nK+0X1;QK=0X0;(zK)[QK]=zK[QK]();EK=eK[nK];do nK=nK+1;end;if not(not zK[0X0])then else nK=EK[0X2];end;else if dK~=8 then local VK=(sK[0X1]);(zK)[0X01]=VK[1][VK[0X0002]];nK=nK+1;nK=nK+0X001;do EK=eK[nK];end;nK=nK+0x1;do(zK)[1]=zK[0x1][EK[0X6]];end;nK=nK+0X01;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+1;end;do if zK[0X1]~=EK[0X0006]then else nK=EK[3];end;end;else zK[EK[3]]=UK[EK[7]];end;end;end;end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK,QK={},(0);local CK={[1]=xK,[2]=zK};local pK=Q();local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X1;for EK=0X00000,NK do if WK>EK then zK[EK]=HK[EK+0x1];else break;end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X001,NK+0X01)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[0X00001];nK=nK+1;if not(dK<10)then if dK<0X000f then if dK<0xc then if dK~=0X000b then local VK=EK[2];local aK,MK=VK[9],nil;local gK=(#aK);if not(gK>0X00)then else do MK={};end;do for wK=0X1,gK do local rK=aK[wK];do if rK[0X1]==0X0 then(MK)[wK-0X1]={zK,rK[0X2]};else(MK)[wK-1]=sK[rK[0x2]];end;end;end;end;K(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else(zK)[EK[0x003]]=zK[EK[0X2]];end;else if dK<13 then nK=EK[0X0002];else if dK==0Xe then do zK[EK[3]]=zK[EK[2]]+zK[EK[0X00005]];end;else end;end;end;else do if dK>=17 then if dK<18 then do if not(not(zK[EK[0x2]]<zK[EK[5]]))then else nK=EK[3];end;end;else if dK==0x13 then local VK=(EK[0x00003]);local gK=zK[VK+2];local MK,aK=zK[VK],zK[VK+1];zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[2];else(zK)[EK[3]]=L(zK[EK[2]],zK[EK[5]]);end;end;else if dK~=16 then(zK)[1]=UK[EK[0X7]];nK=nK+1;(zK)[2]={};do EK=eK[nK];end;nK=nK+1;(zK[0X1])[EK[7]]=zK[2];EK=eK[nK];do nK=nK+1;end;nK=EK[2];else(zK[EK[3]])[zK[EK[2]]]=zK[EK[0X5]];end;end;end;end;else do if dK>=0x5 then if dK>=7 then if not(dK>=8)then(zK)[EK[0X0003]]=zK[EK[0X2]]-zK[EK[5]];else if dK~=9 then zK[1]=UK[EK[7]];nK=nK+0X1;nK=nK+1;do nK=nK+1;end;QK=1;(zK[QK])();QK=QK-0x1;do nK=nK+0x001;end;nK=nK+0X001;nK=nK+0X1;repeat local VK,MK=mK,(zK);local aK=({});do for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=(lK[2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;(lK)[0X001]=aK[LK];do(lK)[0X2]=1;end;end;end;end;end;end;until true;return;else zK[EK[3]]=D(zK[EK[2]],zK[EK[5]]);end;end;else if dK==0x006 then repeat local MK,aK,gK=mK,zK,({});for wK,rK in W,MK do for lK,LK in W,rK do if LK[0X001]==aK and LK[2]>=0 then local DK=LK[2];if not gK[DK]then(gK)[DK]={aK[DK]};end;LK[0X0001]=gK[DK];LK[0x002]=1;end;end;end;until true;local VK=EK[3];return S(zK,VK,VK+EK[2]-2);else zK[0X1]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;nK=nK+1;zK[2]=zK[0];do EK=eK[nK];end;do nK=nK+0X1;end;(zK[1])[EK[0x7]]=zK[0X2];EK=eK[nK];nK=nK+1;nK=EK[2];end;end;else if not(dK<2)then if not(dK>=3)then zK[0X1]=UK[EK[0X0007]];nK=nK+1;local VK=(0x1);do zK[2]=zK[0];end;nK=nK+0x00001;zK[VK]=zK[VK](zK[VK+0x00001]);QK=VK;do EK=eK[nK];end;nK=nK+1;if zK[0X1]~=EK[6]then do nK=EK[0x3];end;end;else if dK==4 then do for VK=EK[0X3],EK[0X002]do(zK)[VK]=nil;end;end;else do(zK)[EK[3]]=UK[EK[0X7]];end;end;end;else if dK==1 then do zK[EK[3]]={S({},1,EK[2])};end;else(zK)[EK[0X3]]=EK[7];end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK,QK=1,{},(0);local CK={[1]=xK,[2]=zK};local pK=(Q());local NK,HK=vi(...);local UK=((pK==z and KK or pK));do NK=NK-0X1;end;do for EK=0X000,NK do if WK>EK then zK[EK]=HK[EK+0x1];else break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0x1 or 0X00,S(HK,WK+0x1,NK+1)};end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+0X1;if dK>=0x9 then do if dK>=13 then if not(dK<0X00F)then if not(dK>=0x000010)then(zK)[EK[3]]=true;else if dK~=0x11 then local VK,MK=EK[3],((EK[0X5]-0x1)*0X0032);local aK=(zK[VK]);for gK=0x1,EK[0X2]do do(aK)[MK+gK]=zK[VK+gK];end;end;else do(zK)[0X0001]=UK[EK[7]];end;nK=nK+0x1;do zK[0X2]=zK[0x0];end;nK=nK+1;local VK=0x1;do(zK)[VK]=zK[VK](zK[VK+1]);end;do QK=VK;end;EK=eK[nK];nK=nK+0X1;if zK[0X1]==EK[6]then else nK=EK[3];end;end;end;else if dK~=14 then(zK)[0X00001]=UK[EK[0x7]];do nK=nK+1;end;do(zK)[2]={};end;EK=eK[nK];nK=nK+1;zK[0X1][EK[0X7]]=zK[0x2];EK=eK[nK];do nK=nK+0X1;end;nK=EK[0X2];else do nK=EK[0X02];end;end;end;else if dK>=11 then if dK==12 then zK[EK[0X3]]=UK[EK[0x007]];else end;else if dK~=0X0000A then local VK=EK[0x3];local MK=EK[2];if MK~=0 then do QK=VK+MK-1;end;end;local aK=EK[5];local gK,wK=nil,nil;if MK==0X1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK==1 then QK=VK-1;else if aK~=0x00 then gK=VK+aK-2;do QK=gK+0X1;end;else gK=gK+VK-1;QK=gK;end;local rK=0X00000;for lK=VK,gK do do rK=rK+0X01;end;zK[lK]=wK[rK];end;end;else(zK)[EK[0X3]]=l(zK[EK[0X002]]);end;end;end;end;else do if dK<4 then if dK>=2 then if dK==3 then local VK=(EK[0X3]);local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+0X001],zK[VK+2]);do QK=VK;end;do(zK)[VK]=MK;end;do nK=EK[0X2];end;else zK[EK[0X003]]=zK[EK[0x2]]~=zK[EK[5]];end;else if dK==1 then if not(not(zK[EK[2]]<=zK[EK[0X5]]))then else nK=EK[3];end;else local VK=(EK[0X2]);local MK=zK[VK];for aK=VK+0X1,EK[0x5]do MK=MK..zK[aK];end;(zK)[EK[3]]=MK;end;end;else do if not(dK>=6)then do if dK~=5 then zK[0X1]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0x1;(zK)[0x2]=zK[0X0];EK=eK[nK];do nK=nK+1;end;(zK[1])[EK[7]]=zK[0X002];do EK=eK[nK];end;nK=nK+0X1;nK=EK[0X00002];else local VK=(EK[2]);local aK,MK=VK[9],(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[1]~=0 then MK[wK-1]=sK[rK[0X2]];else do(MK)[wK-0X1]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;else do if dK>=7 then if dK==8 then do(zK)[1]=UK[EK[7]];end;nK=nK+1;nK=nK+0X0001;nK=nK+0x01;QK=0X1;zK[QK]();QK=QK-0X001;nK=nK+1;do repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0 then local LK=(lK[0X02]);do if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;end;(lK)[0x00001]=aK[LK];lK[2]=0x1;end;end;end;until true;end;return;else(zK)[EK[0X0003]]=EK[0X00007];end;else zK[EK[0X3]]={S({},0x1,EK[0x002])};end;end;end;end;end;end;end;end;end;end;end;else if not(SK<155)then if not(SK<156)then if SK~=157 then do _K=function(...)local nK,zK=0X1,({});local pK=(Q());local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-0X00001;local CK,QK={[1]=xK,[2]=zK},0x0;for EK=0X00000,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X01];end;end;if not PK then HK=nil;else if not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+1)};end;end;end;if UK==pK then else _(_K,UK);end;do while 0.4980083390200255 do local EK=(eK[nK]);local dK=EK[0X0001];nK=nK+0X01;if dK<0x007 then if dK>=0X3 then if dK>=5 then do if dK~=6 then repeat local gK=({});local VK,MK,aK=mK,zK,(EK[0X3]);do for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[0X1]==MK and LK[0X2]>=aK)then else local DK=LK[2];if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;do(LK)[1]=gK[DK];end;LK[2]=0X01;end;end;end;end;until true;else local VK=EK[0x002];local aK=VK[0x09];local gK,MK=#aK,nil;if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0X0 then MK[wK-0x1]=sK[rK[2]];else do MK[wK-0x001]={zK,rK[2]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else if dK~=4 then else local VK=EK[0X3];local MK,aK=zK[VK]();if MK then for gK=0X0001,EK[0x5]do zK[VK+gK]=aK[gK];end;nK=EK[0X2];end;end;end;else if not(dK<1)then if dK~=2 then for VK=EK[0X3],EK[0X2]do zK[VK]=nil;end;else local VK=(EK[2]);local MK=(zK[VK]);do for aK=VK+0X001,EK[0X5]do MK=MK..zK[aK];end;end;zK[EK[3]]=MK;end;else if not(zK[EK[2]]<=zK[EK[0X00005]])then else nK=EK[0x003];end;end;end;else if not(dK<10)then do if not(dK<0Xc)then if dK~=13 then local VK=(EK[3]);local aK=zK[VK];local MK=((EK[5]-1)*0X00032);for gK=1,EK[2]do aK[MK+gK]=zK[VK+gK];end;else(zK)[0X001]=UK[EK[7]];do nK=nK+1;end;nK=nK+0x1;nK=nK+1;zK[2]=zK[0x0];EK=eK[nK];do nK=nK+1;end;do(zK[0X1])[EK[7]]=zK[0X2];end;EK=eK[nK];do nK=nK+1;end;(zK)[1]=UK[EK[7]];nK=nK+1;QK=1;(zK[QK])();do QK=QK-0X1;end;do nK=nK+0x1;end;nK=nK+0X1;nK=nK+0X1;do repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0 then local LK=lK[2];if not aK[LK]then(aK)[LK]={MK[LK]};end;do lK[0x0001]=aK[LK];end;(lK)[0X2]=0x1;end;end;end;until true;end;return;end;else if dK==0X00B then(zK)[EK[3]]={S({},0X0001,EK[2])};else(zK)[EK[3]]=EK[0X7];end;end;end;else if not(dK<0X8)then if dK==0X9 then do zK[EK[0X0003]]=zK[EK[0X0002]]<=zK[EK[5]];end;else zK[EK[0X3]]=UK[EK[7]];end;else do nK=EK[0X0002];end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=Q();local CK=({[2]=zK,[1]=xK});local UK,QK=(pK==z and KK or pK),(0);local NK,HK=vi(...);NK=NK-1;for EK=0,NK do do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+0X01];end;end;end;end;if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+0x1,NK+1)};end;end;do if UK~=pK then _(_K,UK);end;end;while-0X00007C5fd2EB do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X1;if not(dK<0X008)then if dK>=0XC then if dK>=0x00e then if dK<0XF then do(UK)[EK[0X7]]=zK[EK[3]];end;else if dK~=0x10 then local VK=EK[0x02];local MK=(zK[VK]);for aK=VK+0X1,EK[0X005]do MK=MK..zK[aK];end;(zK)[EK[0X3]]=MK;else local VK=EK[0x3];do for MK=VK,VK+(EK[0X2]-1)do do zK[MK]=HK[WK+(MK-VK)+0x1];end;end;end;end;end;else if dK==13 then for VK=EK[3],EK[0X002]do zK[VK]=nil;end;else do if not(zK[EK[3]])then else nK=EK[2];end;end;end;end;else if dK>=0XA then if dK==0XB then(zK)[EK[3]]=UK[EK[7]];else local VK=(sK[0]);zK[0X01]=VK[0x0001][VK[2]];do nK=nK+1;end;zK[2]={};local MK=(3);do EK=eK[nK];end;nK=nK+0x1;do zK[0X02][EK[0X007]]=EK[0X6];end;EK=eK[nK];nK=nK+1;(zK[2])[EK[7]]=EK[0x06];do nK=nK+1;end;zK[3]={};EK=eK[nK];do nK=nK+1;end;(zK[3])[EK[7]]=EK[0X6];do EK=eK[nK];end;do nK=nK+0X1;end;(zK[0X3])[EK[0X7]]=EK[0X06];EK=eK[nK];nK=nK+1;do zK[0X2][EK[7]]=zK[3];end;nK=nK+0X1;VK=sK[1];do(zK)[0x0003]=VK[1][VK[2]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;local aK=zK[0X003];do(zK)[MK+0x001]=aK;end;zK[MK]=aK[EK[0x6]];nK=nK+1;zK[5]={};EK=eK[nK];nK=nK+1;do zK[5][EK[0x7]]=EK[0x6];end;nK=nK+1;(zK)[0X6]={};EK=eK[nK];do nK=nK+0x1;end;do zK[7]=UK[EK[0x7]];end;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+1;end;(zK)[0X08]=EK[0X0007];nK=nK+0X1;MK=0x7;(zK)[MK]=zK[MK](zK[MK+1]);QK=MK;EK=eK[nK];nK=nK+1;zK[0X006][EK[0X7]]=zK[7];EK=eK[nK];nK=nK+0X1;zK[0X005][EK[7]]=zK[6];do nK=nK+0X001;end;VK=sK[1];zK[6]=VK[1][VK[2]];nK=nK+0X0001;do nK=nK+0x1;end;do EK=eK[nK];end;nK=nK+1;do MK=6;end;aK=zK[6];zK[MK+1]=aK;(zK)[MK]=aK[EK[6]];EK=eK[nK];do nK=nK+0X1;end;(zK)[0x8]=EK[7];nK=nK+0X1;MK=6;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);do QK=MK;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;(zK[0X5])[EK[7]]=zK[0X6];nK=nK+1;MK=0X003;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0X001;zK[2][EK[0X007]]=zK[3];nK=nK+1;MK=0X1;zK[MK](zK[MK+1]);do QK=MK-0X1;end;nK=nK+0x00001;repeat local gK,wK=mK,(zK);local rK=({});for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[0X1]==wK and ZK[0X2]>=0x0 then local GK=ZK[2];do if not(not rK[GK])then else rK[GK]={wK[GK]};end;end;(ZK)[0X1]=rK[GK];(ZK)[0X02]=0X1;end;end;end;until true;return;end;else do if dK==0X9 then else local VK=(zK[EK[0X0002]]/zK[EK[5]]);zK[EK[3]]=VK-VK%1;end;end;end;end;else if dK>=4 then if dK>=6 then if dK==7 then zK[EK[0x0003]]=zK[EK[0X2]][zK[EK[0X05]]];else local VK=(EK[0x002]);local aK=(VK[0X9]);local gK,MK=#aK,(nil);if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[0x00001]==0 then do MK[wK-0x1]={zK,rK[0X00002]};end;else(MK)[wK-0X1]=sK[rK[2]];end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;else if dK~=0X5 then do zK[EK[3]]={S({},0X0001,EK[2])};end;else(zK)[EK[3]]=D(zK[EK[0X2]],zK[EK[5]]);end;end;else do if dK<0X0002 then if dK~=0x1 then local VK=EK[3];local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+0X1],zK[VK+0X2]);QK=VK;do zK[VK]=MK;end;do nK=EK[2];end;else nK=EK[0X2];end;else if dK~=0x3 then(zK)[EK[0X0003]]=EK[7];else(zK)[EK[0X3]]=zK[EK[2]];end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=0X1,({});local pK=(Q());local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if WK>EK then do zK[EK]=HK[EK+0X1];end;else break;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x01 or 0,S(HK,WK+1,NK+1)};end;end;do if UK==pK then else _(_K,UK);end;end;local QK=0;repeat local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+0X00001;if not(dK>=8)then if dK>=4 then if not(dK>=6)then if dK~=0x005 then zK[0X1]=UK[EK[0X007]];nK=nK+0X1;zK[0x2]=zK[0];EK=eK[nK];nK=nK+1;do zK[0X1][EK[7]]=zK[2];end;EK=eK[nK];do nK=nK+0X01;end;do(zK)[1]=UK[EK[0X007]];end;nK=nK+1;do QK=1;end;zK[QK]();QK=QK-0X0001;do nK=nK+1;end;repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X02]>=0x0 then local LK=lK[0x2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[1]=aK[LK];(lK)[0X2]=1;end;end;end;until true;return;else local VK=EK[0X0003];local MK,aK=zK[VK]();if not(MK)then else do nK=EK[2];end;(zK)[VK+3]=aK;end;end;elseif dK~=0X7 then do repeat local MK,aK=mK,(zK);local gK=({});do for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[1]==aK and LK[0x2]>=0)then else local DK=LK[2];if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;do(LK)[0X001]=gK[DK];end;do LK[2]=0X00001;end;end;end;end;end;until true;end;local VK=(EK[0X03]);return S(zK,VK,VK+EK[2]-0X0002);else do zK[EK[3]]=L(zK[EK[0x2]],zK[EK[5]]);end;end;else if not(dK<2)then if dK==0X03 then zK[EK[0X003]]={S({},1,EK[2])};else do if not(not(zK[EK[0X2]]<=zK[EK[0X5]]))then else nK=EK[0X03];end;end;end;else do if dK~=0X0001 then zK[EK[3]]=g(zK[EK[0X2]],zK[EK[5]]);else(zK)[EK[3]]=EK[7];end;end;end;end;else do if not(dK<12)then if not(dK<0XE)then if dK==15 then else local VK=(EK[3]);local MK=(b(function(...)o();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));(MK)(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;(zK)[VK]=MK;nK=EK[2];end;else do if dK==0XD then if not(zK[EK[2]]<=zK[EK[0X5]])then else nK=EK[3];end;else local VK=EK[3];do for MK=VK,VK+(EK[2]-0x001)do do(zK)[MK]=HK[WK+(MK-VK)+1];end;end;end;end;end;end;else if dK>=10 then if dK~=11 then do nK=EK[2];end;else local VK=EK[0X2];local aK,MK=VK[0x009],nil;local gK=(#aK);if not(gK>0X000)then else do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[0X001]==0X00000 then(MK)[wK-0X001]={zK,rK[2]};else MK[wK-1]=sK[rK[0x2]];end;end;(K)(mK,MK);end;(zK)[EK[0X00003]]=Ri(MK,UK,VK);end;else if dK==9 then do(zK)[EK[0X3]]=UK[EK[0X7]];end;else zK[EK[3]]=l(zK[EK[2]]);end;end;end;end;end;until false;end;end;end;else if SK>=0X0099 then if SK==0X9A then _K=function(...)local nK=(1);local zK=({});local pK=(Q());local UK,QK,CK=(pK==z and KK or pK),0X0,{[1]=xK,[2]=zK};local NK,HK=vi(...);NK=NK-1;for EK=0X0,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+0X1];end;end;end;do if not PK then HK=nil;else if YK then do(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0,S(HK,WK+0x1,NK+0X1)};end;end;end;end;if UK~=pK then _(_K,UK);end;repeat local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X0001;if dK<0x8 then do if not(dK<0x4)then if dK>=6 then if dK~=0x7 then local VK=EK[2];local MK=(zK[VK]);for aK=VK+1,EK[5]do MK=MK..zK[aK];end;do(zK)[EK[0X3]]=MK;end;else zK[EK[3]]=EK[2];end;else if dK==5 then repeat local VK,MK,aK=mK,zK,(EK[3]);local gK={};do for wK,rK in W,VK do for lK,LK in W,rK do do if LK[0X1]==MK and LK[0X0002]>=aK then local DK=(LK[2]);do if not(not gK[DK])then else gK[DK]={MK[DK]};end;end;LK[1]=gK[DK];LK[2]=0X1;end;end;end;end;end;until 0.6563888586832892;else do(zK)[EK[0X3]]=UK[EK[0X7]];end;end;end;else if dK>=2 then do if dK==3 then do if not(not zK[EK[0X3]])then else nK=EK[2];end;end;else local VK=EK[0X3];local MK,aK=zK[VK]();if not(MK)then else nK=EK[0x2];(zK)[VK+0X3]=aK;end;end;end;else if dK==1 then local VK=EK[2];local aK=(VK[0X9]);local MK=(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0X000 then do(MK)[wK-1]={zK,rK[2]};end;else(MK)[wK-0X00001]=sK[rK[2]];end;end;(K)(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;else(zK)[1]=UK[EK[0X00007]];nK=nK+0X001;zK[2]=zK[0];EK=eK[nK];do nK=nK+0x1;end;(zK[0X1])[EK[0X7]]=zK[0x2];EK=eK[nK];nK=nK+1;do(zK)[1]=UK[EK[7]];end;do nK=nK+0X1;end;nK=nK+1;nK=nK+1;QK=1;zK[QK]();QK=QK-1;EK=eK[nK];do nK=nK+0X1;end;(zK)[0X1]=UK[EK[7]];do nK=nK+0X1;end;nK=nK+0x00001;EK=eK[nK];nK=nK+0X1;do(zK)[1]=zK[0x1][EK[6]];end;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];local VK=(EK[2]);nK=nK+0x001;local aK,MK=VK[0X009],(nil);local gK=#aK;if not(gK>0)then else MK={};for rK=1,gK do local lK=(aK[rK]);if lK[0X1]~=0 then do MK[rK-0X001]=sK[lK[0x0002]];end;else MK[rK-1]={zK,lK[0x002]};end;end;(K)(mK,MK);end;do zK[2]=Ri(MK,UK,VK);end;nK=nK+0X1;local wK=(1);(zK[wK])(zK[wK+0X01]);QK=wK-0X0001;nK=nK+1;nK=nK+0x1;nK=nK+1;repeat local rK,lK=mK,zK;local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0X001]==lK and OK[2]>=0 then local tK=(OK[0X2]);if not(not LK[tK])then else do(LK)[tK]={lK[tK]};end;end;(OK)[0X1]=LK[tK];(OK)[2]=1;end;end;end;until'\N\h\V\V';return;end;end;end;end;else do if not(dK<12)then if dK>=0Xe then if dK>=15 then if dK==16 then(UK)[EK[7]]=zK[EK[0X3]];else nK=EK[2];end;else zK[EK[3]]=zK[EK[2]]%zK[EK[0X05]];end;else if dK~=13 then(zK)[EK[0X00003]]={S({},1,EK[2])};else for VK=EK[3],EK[0X2]do(zK)[VK]=nil;end;end;end;else if not(dK>=0xA)then do if dK==9 then else local VK=EK[3];local MK=(EK[2]);if MK~=0x0000 then do QK=VK+MK-1;end;end;local gK,wK,aK=nil,nil,EK[5];if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;if aK==1 then do QK=VK-0X1;end;else if aK~=0X0 then gK=VK+aK-0X2;QK=gK+1;else do gK=gK+VK-0x01;end;QK=gK;end;local rK=0x0;do for lK=VK,gK do rK=rK+0x01;(zK)[lK]=wK[rK];end;end;end;end;end;else if dK~=11 then do(zK)[EK[0X03]]=zK[EK[0X00002]]>zK[EK[0X05]];end;else zK[EK[3]]=EK[0x7];end;end;end;end;end;until false;end;else _K=function(...)local nK=(0x1);local zK=({});local pK=Q();local CK={[1]=xK,[2]=zK};local UK=((pK==z and KK or pK));local NK,HK=vi(...);do NK=NK-1;end;for EK=0,NK do do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0x0,S(HK,WK+0x1,NK+1)};end;end;local QK=(0);if UK~=pK then _(_K,UK);end;while"t"do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+0X1;if dK<0X7 then if dK>=3 then do if not(dK<5)then if dK~=0X6 then local VK=(EK[0X002]);local MK=(zK[VK]);do for aK=VK+1,EK[0X05]do MK=MK..zK[aK];end;end;(zK)[EK[3]]=MK;else local VK,MK=EK[3],zK[EK[2]];do zK[VK+0X001]=MK;end;do zK[VK]=MK[EK[0X6]];end;end;else if dK~=0x0004 then(zK)[1]=UK[EK[7]];nK=nK+1;nK=nK+0x1;nK=nK+1;zK[2]=zK[0];EK=eK[nK];nK=nK+0X1;do(zK[0X1])[EK[0x7]]=zK[2];end;EK=eK[nK];nK=nK+0X1;zK[1]=UK[EK[7]];nK=nK+0X001;local wK=1;nK=nK+1;do nK=nK+0X0001;end;QK=0X1;zK[QK]();QK=QK-1;nK=nK+1;local MK=nil;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[1]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X00001;do zK[1]=zK[0X1][EK[0X6]];end;do EK=eK[nK];end;do nK=nK+0X1;end;local VK=(EK[2]);local aK=(VK[0X9]);local gK=(#aK);if gK>0X0 then do MK={};end;for rK=0X1,gK do local lK=(aK[rK]);if lK[0X001]==0X00 then(MK)[rK-0X01]={zK,lK[2]};else MK[rK-1]=sK[lK[2]];end;end;(K)(mK,MK);end;(zK)[0x002]=Ri(MK,UK,VK);nK=nK+0x001;(zK[wK])(zK[wK+1]);QK=wK-0X001;nK=nK+0X1;do nK=nK+1;end;nK=nK+1;repeat local rK,lK=mK,zK;local LK={};for DK,ZK in W,rK do do for GK,OK in W,ZK do if OK[1]==lK and OK[0x2]>=0X0 then local tK=OK[2];if not LK[tK]then do LK[tK]={lK[tK]};end;end;(OK)[1]=LK[tK];do OK[2]=1;end;end;end;end;end;until true;return;else end;end;end;else if dK<0x0001 then nK=EK[2];else if dK==0x002 then do(zK)[EK[0X3]]=g(zK[EK[2]],zK[EK[5]]);end;else local VK=EK[2];local aK=VK[9];local MK=nil;local gK=#aK;do if gK>0 then do MK={};end;do for wK=1,gK do local rK=aK[wK];if rK[0X001]~=0 then MK[wK-1]=sK[rK[2]];else MK[wK-1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;end;end;else do if not(dK>=0XB)then if dK>=0X009 then if dK~=10 then do zK[EK[3]]=EK[0x7];end;else zK[EK[3]]=zK[EK[0X2]]<zK[EK[5]];end;else if dK~=0x8 then local VK=EK[3];local MK=(EK[2]);QK=VK+MK-1;do repeat local wK=({});local aK,gK=mK,zK;for rK,lK in W,aK do do for LK,DK in W,lK do if not(DK[0X0001]==gK and DK[2]>=0)then else local ZK=DK[0X2];if not wK[ZK]then(wK)[ZK]={gK[ZK]};end;do(DK)[0X00001]=wK[ZK];end;DK[0X2]=1;end;end;end;end;until true;end;do return zK[VK](S(zK,VK+0X1,QK));end;else local VK,MK=EK[3],(EK[0X00005]-1)*0x32;local aK=(zK[VK]);for gK=1,EK[0X2]do(aK)[MK+gK]=zK[VK+gK];end;end;end;else if not(dK>=0X00D)then do if dK~=12 then if not(zK[EK[3]])then else nK=EK[2];end;else zK[EK[0X3]]={S({},1,EK[2])};end;end;else if dK==0Xe then for VK=EK[3],EK[0x2]do zK[VK]=nil;end;else(zK)[EK[3]]=UK[EK[0X7]];end;end;end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK=({});local CK={[1]=xK,[2]=zK};local pK=Q();local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if not(WK>EK)then do break;end;else zK[EK]=HK[EK+1];end;end;local QK=0x000;local UK=(pK==z and KK or pK);if not PK then do HK=nil;end;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+0x0001 or 0,S(HK,WK+1,NK+1)};end;end;if UK==pK then else _(_K,UK);end;do while'\054W\F\125\^'do local EK=eK[nK];local dK=EK[0X00001];nK=nK+1;do if not(dK>=0x009)then do if not(dK<4)then if not(dK>=6)then if dK==0X005 then zK[EK[0X03]]={S({},1,EK[2])};else do for VK=EK[0X03],EK[2]do zK[VK]=nil;end;end;end;else do if dK>=0x07 then if dK==0X8 then nK=EK[2];else end;else local VK=(EK[2]);local aK,MK=VK[9],(nil);local gK=(#aK);if not(gK>0)then else do MK={};end;for wK=0x1,gK do local rK=(aK[wK]);if rK[1]==0X000 then do(MK)[wK-1]={zK,rK[0X2]};end;else MK[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=0X002)then do if dK==0X0001 then do zK[EK[3]]=EK[0X7];end;else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if not(MK)then else zK[VK+1]=aK;do zK[VK+0x002]=gK;end;nK=EK[0X2];end;end;end;else do if dK~=3 then zK[EK[0X0003]]=not zK[EK[0x2]];else(zK)[0X3]=UK[EK[0x7]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK)[4]=zK[0X2][EK[6]];nK=nK+1;nK=nK+0X001;EK=eK[nK];nK=nK+0x001;zK[0X004]=zK[4][EK[6]];nK=nK+1;local VK=(3);(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];do nK=nK+1;end;do zK[4]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0x1;zK[4]=zK[4][EK[6]];do nK=nK+0X1;end;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+1;(zK)[4]=zK[0X4][EK[0X6]];EK=eK[nK];nK=nK+0X1;zK[0X4]=zK[0X004][EK[6]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x1;do if zK[0X003]~=zK[0X0004]then nK=EK[0X3];end;end;end;end;end;end;end;else if not(dK>=0X000D)then do if dK>=11 then if dK==0x0000C then local VK=EK[0X003];local MK=(EK[5]-1)*0X32;local aK=(zK[VK]);for gK=1,EK[0X2]do aK[MK+gK]=zK[VK+gK];end;else repeat local aK={};local VK,MK=mK,(zK);for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0x2]>=0 then local LK=lK[2];if not aK[LK]then(aK)[LK]={MK[LK]};end;(lK)[1]=aK[LK];do lK[2]=1;end;end;end;end;end;until true;do return;end;end;else if dK==10 then(zK)[0X00003]=zK[2][EK[0X6]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;local VK=(0X003);nK=nK+1;local MK=zK[3];(zK)[VK+0X1]=MK;(zK)[VK]=MK[EK[6]];EK=eK[nK];nK=nK+0X01;(zK)[5]=EK[0x7];nK=nK+1;VK=0X3;zK[VK]=zK[VK](zK[VK+0X01],zK[VK+2]);do QK=VK;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not zK[3]then nK=EK[0X2];end;else repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0x2]>=0X0 then local LK=(lK[2]);do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;lK[0X01]=aK[LK];lK[0X002]=1;end;end;end;until true;return zK[EK[0x3]];end;end;end;else if dK<15 then do if dK==0Xe then local VK=EK[0x03];local MK,aK=zK[VK]();if not(MK)then else for gK=1,EK[0x5]do do zK[VK+gK]=aK[gK];end;end;nK=EK[2];end;else zK[EK[0x00003]]=UK[EK[0X7]];end;end;else if dK<0X010 then local VK,MK=EK[0X3],zK[EK[0X002]];zK[VK+0X0001]=MK;do(zK)[VK]=MK[EK[0x06]];end;else do if dK==0x11 then zK[0]=UK[EK[7]];nK=nK+1;local VK=(sK[0]);nK=nK+1;do nK=nK+0X1;end;zK[0x1]=VK[0X0001][VK[2]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];local MK=0X0001;nK=nK+1;do(zK)[1]=zK[1][EK[6]];end;EK=eK[nK];nK=nK+0X1;zK[0X01]=zK[0X1][EK[0X00006]];EK=eK[nK];nK=nK+1;local aK=(zK[1]);zK[MK+1]=aK;local gK=(2);zK[MK]=aK[EK[6]];nK=nK+0x1;MK=0X001;local wK=0x0;if gK~=0 then do QK=MK+gK-0x0001;end;end;local rK,lK=nil,(nil);do if gK~=0X01 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else do rK,lK=vi(zK[MK]());end;end;end;if wK~=0X1 then do if wK==0X00 then rK=rK+MK-0X1;QK=rK;else rK=MK+wK-0x2;do QK=rK+1;end;end;end;local DK=(0);for ZK=MK,rK do DK=DK+0X1;do(zK)[ZK]=lK[DK];end;end;else QK=MK-0X0001;end;nK=nK+1;MK=0;gK=0x0;wK=4;if gK==0X0 then else do QK=MK+gK-1;end;end;do rK,lK=nil;end;do if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+0x1,QK)));else do rK,lK=vi(zK[MK]());end;end;end;do if wK~=1 then do if wK==0X0 then rK=rK+MK-1;QK=rK;else rK=MK+wK-0X002;QK=rK+0X1;end;end;local DK=(0);for ZK=MK,rK do do DK=DK+1;end;zK[ZK]=lK[DK];end;else QK=MK-1;end;end;nK=nK+0x00001;nK=nK+1;EK=eK[nK];nK=nK+1;do MK=0X000;end;local LK=b(function(...)o();for DK,ZK in...do o(true,DK,ZK);end;end);(LK)(zK[MK],zK[MK+1],zK[MK+0X2]);QK=MK;(zK)[MK]=LK;nK=EK[2];else(zK)[EK[3]]=zK[EK[0x2]][EK[6]];end;end;end;end;end;end;end;end;end;end;end;end;end;else if SK>=0X92 then if SK<0X095 then if SK<147 then _K=function(...)local QK=0X0;local nK=(1);local zK=({});local CK={[2]=zK,[1]=xK};local pK=Q();local NK,HK=vi(...);do NK=NK-1;end;local UK=(pK==z and KK or pK);do for EK=0X00,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;do while true do local EK=eK[nK];local dK=EK[0X1];nK=nK+1;if not(dK>=0X006)then if not(dK<0X03)then do if not(dK<4)then if dK==5 then local VK=(EK[0X2]);local MK=(zK[VK]);for aK=VK+0X1,EK[0X5]do MK=MK..zK[aK];end;do zK[EK[3]]=MK;end;else do(zK)[0X01]=UK[EK[7]];end;local wK=0X01;nK=nK+0x1;do nK=nK+1;end;nK=nK+1;do zK[0x2]=zK[0];end;EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[2];do EK=eK[nK];end;nK=nK+1;zK[0X1]=UK[EK[7]];nK=nK+0x01;QK=1;(zK[QK])();QK=QK-1;nK=nK+0X1;nK=nK+0x1;EK=eK[nK];do nK=nK+0X1;end;do zK[0X1]=UK[EK[0X7]];end;nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do(zK)[0x001]=zK[0X00001][EK[0X6]];end;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];local VK=(EK[0X2]);nK=nK+0X1;local aK=VK[9];local MK=(nil);local gK=(#aK);if gK>0 then MK={};for rK=1,gK do local lK=aK[rK];do if lK[0X1]==0 then(MK)[rK-1]={zK,lK[0x2]};else(MK)[rK-1]=sK[lK[2]];end;end;end;(K)(mK,MK);end;zK[0X00002]=Ri(MK,UK,VK);do nK=nK+0X00001;end;zK[wK](zK[wK+1]);QK=wK-0X1;nK=nK+1;nK=nK+0X1;do nK=nK+1;end;repeat local rK,lK=mK,zK;local LK={};for DK,ZK in W,rK do for GK,OK in W,ZK do do if OK[1]==lK and OK[2]>=0 then local tK=(OK[0X002]);if not LK[tK]then do LK[tK]={lK[tK]};end;end;do OK[0X00001]=LK[tK];end;OK[0X02]=1;end;end;end;end;until true;do return;end;end;else do zK[EK[3]]=zK[EK[0X002]]>=zK[EK[0X5]];end;end;end;else if not(dK<0x001)then if dK~=0X2 then local VK=(EK[2]);local aK,MK=VK[0X9],(nil);local gK=#aK;if gK>0 then MK={};for wK=1,gK do local rK=aK[wK];if rK[0X00001]==0 then(MK)[wK-1]={zK,rK[2]};else(MK)[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;else zK[EK[0X00003]][zK[EK[2]]]=zK[EK[0X00005]];end;else(zK)[EK[0X3]]=EK[0X7];end;end;else do if dK>=0X0009 then if dK>=0X00B then if dK~=12 then zK[EK[3]]=UK[EK[0X0007]];else do(zK)[EK[0X3]]=zK[EK[0X0002]]/zK[EK[0X00005]];end;end;else if dK==0x000A then for VK=EK[0X3],EK[2]do do zK[VK]=nil;end;end;else do zK[EK[0X3]]={S({},1,EK[2])};end;end;end;else do if not(dK<7)then if dK~=8 then nK=EK[2];else end;else local VK=EK[0X3];local aK=zK[VK];local MK=((EK[0x0005]-0X1)*50);for gK=1,EK[2]do aK[MK+gK]=zK[VK+gK];end;end;end;end;end;end;end;end;end;else if SK~=148 then do _K=function(...)local zK={};local nK=0X00001;local QK=(0);local CK={[1]=xK,[2]=zK};local pK=(Q());local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X1];else break;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0X0001];do nK=nK+1;end;if not(dK<7)then if dK>=0XB then if dK>=13 then if dK==0Xe then local VK=EK[2];local MK=(nil);local aK=VK[9];local gK=(#aK);if not(gK>0X0)then else MK={};for wK=0x0001,gK do local rK=aK[wK];if rK[0X1]~=0 then do(MK)[wK-1]=sK[rK[2]];end;else MK[wK-0X001]={zK,rK[2]};end;end;K(mK,MK);end;do(zK)[EK[3]]=i[EK[5]](MK);end;else do(zK)[0]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;do(zK)[1]=EK[7];end;EK=eK[nK];do nK=nK+0X1;end;(zK)[0X2]=UK[EK[0x007]];EK=eK[nK];nK=nK+1;zK[0X0002]=zK[2][EK[0x6]];nK=nK+0X01;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;(zK)[0X3]=UK[EK[0X7]];do EK=eK[nK];end;do nK=nK+1;end;zK[0X3]=zK[3][EK[0X06]];local VK=0X00;do nK=nK+0x001;end;do QK=VK+0X4-1;end;(zK[VK])(S(zK,VK+1,QK));QK=VK-1;EK=eK[nK];nK=nK+0X1;zK[0]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[1]=EK[0X7];EK=eK[nK];nK=nK+1;zK[2]=UK[EK[0X007]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;(zK)[2]=zK[2][EK[6]];EK=eK[nK];do nK=nK+1;end;do(zK)[3]=UK[EK[7]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;zK[0X3]=zK[3][EK[6]];do nK=nK+0X01;end;VK=0;QK=VK+4-0X0001;(zK[VK])(S(zK,VK+1,QK));do QK=VK-1;end;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X001;nK=EK[2];end;else if dK~=0XC then do for VK=EK[0x3],EK[0X2]do(zK)[VK]=nil;end;end;else(zK)[EK[0X0003]]=zK[EK[2]][zK[EK[0X5]]];end;end;else if not(dK>=9)then if dK==8 then local VK=EK[2];local MK=(nil);local aK=VK[0X9];local gK=#aK;if gK>0 then do MK={};end;do for wK=1,gK do local rK=(aK[wK]);if rK[0X1]==0 then(MK)[wK-0X1]={zK,rK[0X2]};else(MK)[wK-1]=sK[rK[0X2]];end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);else(zK)[EK[0x3]]=EK[0x7];end;else if dK~=0X0a then(zK)[EK[3]]={S({},1,EK[0X2])};else repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if lK[0X00001]==MK and lK[2]>=0x00 then local LK=lK[2];if not aK[LK]then do aK[LK]={MK[LK]};end;end;do(lK)[1]=aK[LK];end;(lK)[0x02]=0X1;end;end;end;end;until true;return;end;end;end;else if dK>=0X3 then if dK<5 then if dK==4 then do if not(zK[EK[2]]<zK[EK[0X5]])then nK=EK[0X00003];end;end;else do nK=EK[2];end;end;else if dK~=6 then(CK)[EK[2]]=zK[EK[0X3]];else(zK)[EK[0X00003]]=zK[EK[0X2]]^zK[EK[0X5]];end;end;else if dK>=0x1 then if dK==2 then zK[0]=UK[EK[7]];EK=eK[nK];local VK=(0);nK=nK+1;(zK)[0]=zK[0][EK[6]];do EK=eK[nK];end;nK=nK+0X0001;do zK[0x1]=EK[7];end;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+0x1]);QK=VK;nK=nK+0X0001;nK=nK+1;EK=eK[nK];nK=nK+1;if not zK[0]then nK=EK[2];end;else zK[EK[3]]=UK[EK[7]];end;else end;end;end;end;end;end;else do _K=function(...)local nK,zK=0X1,({});local pK=Q();local UK=((pK==z and KK or pK));local NK,HK=vi(...);local QK=0x0;local CK=({[1]=xK,[2]=zK});NK=NK-1;for EK=0,NK do if WK>EK then do(zK)[EK]=HK[EK+0X0001];end;else break;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+0X001)};end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK>=7 then if dK<11 then if dK<9 then if dK~=0X00008 then do(zK)[1]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;nK=nK+0X00001;do QK=1;end;(zK[QK])();QK=QK-0X1;do nK=nK+0x00001;end;nK=nK+0X1;nK=nK+1;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0x1]==MK and lK[0X002]>=0X0 then local LK=(lK[0X2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;(lK)[0X1]=aK[LK];(lK)[2]=0x01;end;end;end;end;until true;return;else if not(zK[EK[2]]<=zK[EK[0X005]])then else do nK=EK[3];end;end;end;else if dK==0X0A then local VK,MK=EK[3],(EK[2]);QK=VK+MK-1;repeat local aK,gK,wK=mK,zK,({});for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[1]==gK and DK[0X002]>=0X0)then else local ZK=(DK[0X00002]);if not wK[ZK]then do(wK)[ZK]={gK[ZK]};end;end;(DK)[1]=wK[ZK];do(DK)[0X2]=1;end;end;end;end;until true;return zK[VK](S(zK,VK+0x1,QK));else do(zK)[1]=UK[EK[7]];end;local VK=(2);nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[2]=UK[EK[0X07]];nK=nK+1;(zK)[0X3]=zK[0];do nK=nK+1;end;(zK)[VK]=zK[VK](zK[VK+0X1]);QK=VK;EK=eK[nK];nK=nK+1;(zK[0X1])[EK[0X7]]=zK[0X2];EK=eK[nK];nK=nK+1;do zK[0X1]=UK[EK[0x7]];end;nK=nK+1;nK=nK+0x1;do EK=eK[nK];end;do nK=nK+1;end;zK[0X1]=zK[0X001][EK[6]];do EK=eK[nK];end;nK=nK+0X1;if zK[0X0001]==EK[0X00006]then else nK=EK[3];end;end;end;else if dK<13 then if dK~=12 then(zK)[EK[3]]=zK[EK[2]]==zK[EK[0X00005]];else do zK[EK[0X03]]=EK[0X007];end;end;else if dK~=0X0E then(zK)[EK[0X3]]={S({},0x1,EK[0x2])};else local VK=(EK[2]);local aK=VK[9];local MK=(nil);local gK=(#aK);if not(gK>0x00)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[0X1]==0 then MK[wK-1]={zK,rK[0X2]};else(MK)[wK-1]=sK[rK[0X02]];end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;else do if dK>=0X3 then if dK<0X5 then if dK~=4 then else zK[0X1]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X1;do zK[0X1][EK[7]]=EK[6];end;EK=eK[nK];nK=nK+0x0001;(zK)[1]=UK[EK[7]];nK=nK+0X1;local VK=(1);do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X1;end;do(zK)[0X1]=zK[1][EK[6]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;local MK=(zK[0X1]);zK[VK+1]=MK;(zK)[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+1;zK[0X3]=UK[EK[0x7]];EK=eK[nK];nK=nK+1;do zK[0x3]=zK[3][EK[6]];end;nK=nK+0X1;VK=0X1;(zK[VK])(zK[VK+0x1],zK[VK+2]);do QK=VK-0X1;end;EK=eK[nK];nK=nK+1;nK=EK[0x0002];end;else if dK==0X006 then local VK=EK[0X0003];local MK,aK=zK[VK]();do if MK then do for gK=1,EK[5]do do(zK)[VK+gK]=aK[gK];end;end;end;nK=EK[2];end;end;else(zK)[EK[3]]=UK[EK[0X7]];end;end;else if not(dK<0X0001)then if dK==0x2 then(zK)[EK[3]]=l(zK[EK[2]]);else nK=EK[2];end;else for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;end;end;end;end;end;end;end;end;end;elseif not(SK>=0x00096)then do _K=function(...)local zK,QK={},(0X0000);local nK=0X01;local pK=Q();local CK,UK={[2]=zK,[1]=xK},((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0x1;for EK=0x0,NK do if WK>EK then zK[EK]=HK[EK+0x0001];else break;end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0x0,S(HK,WK+1,NK+1)};end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=eK[nK];local dK=(EK[0X0001]);nK=nK+1;if dK>=16 then if dK>=0X018 then if dK>=0X01c then if dK>=30 then if dK~=0X1F then(zK)[0x002]=UK[EK[0X7]];nK=nK+1;nK=nK+1;local MK=(2);local VK=(sK[2]);nK=nK+1;(zK)[0x3]=VK[0X1][VK[0X2]];do EK=eK[nK];end;nK=nK+0X1;(zK)[0X0003]=zK[0X3][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;(zK)[3]=zK[0X3][EK[6]];do EK=eK[nK];end;nK=nK+0X0001;zK[3]=zK[3][EK[0X0006]];do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do(zK)[0X3]=zK[0X03][EK[0x6]];end;do nK=nK+1;end;do zK[MK]=zK[MK](zK[MK+0X1]);end;do QK=MK;end;do nK=nK+0X1;end;do nK=nK+0X01;end;EK=eK[nK];nK=nK+0x01;zK[3]=UK[EK[0x007]];EK=eK[nK];nK=nK+0X1;zK[0X0003]=zK[0X3][EK[6]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+1;if not(zK[3]<=zK[0X00002])then do nK=EK[3];end;end;else(zK)[EK[3]]=UK[EK[0X00007]];end;else if dK==0x1d then(CK)[EK[0X0002]]=zK[EK[0X3]];else if zK[EK[0X2]]<zK[EK[5]]then do nK=EK[3];end;end;end;end;else if not(dK>=26)then if dK==25 then local VK,MK=EK[3],EK[0X2];if MK~=0X0 then QK=VK+MK-0X1;end;local aK=EK[5];local gK,wK=nil,(nil);if MK~=0X1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;if aK==1 then QK=VK-1;else if aK~=0 then do gK=VK+aK-2;end;QK=gK+0X00001;else do gK=gK+VK-0X1;end;QK=gK;end;local rK=0X00;for lK=VK,gK do do rK=rK+0X0001;end;do zK[lK]=wK[rK];end;end;end;else do(zK)[EK[0X3]]=w(zK[EK[2]],zK[EK[0X05]]);end;end;else if dK~=27 then else nK=EK[2];end;end;end;else if not(dK>=0x014)then do if dK<18 then if dK~=0x000011 then zK[0X01]=UK[EK[7]];do nK=nK+0X0001;end;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X0001;end;(zK)[2]=EK[0X07];local VK=0x1;nK=nK+1;zK[VK](zK[VK+1]);QK=VK-1;do EK=eK[nK];end;do nK=nK+0X1;end;do(zK)[0X1]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+1;zK[0X2]=EK[7];nK=nK+0X00001;VK=0x1;(zK[VK])(zK[VK+0X001]);QK=VK-0X1;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[2];else(zK)[EK[0X003]]=EK[0X07];end;else if dK==19 then(zK)[0X03]=EK[7];nK=nK+0X1;do(zK)[0X0]=zK[3];end;EK=eK[nK];do nK=nK+0X00001;end;nK=EK[2];else(zK)[EK[0X0003]]={S({},1,EK[2])};end;end;end;else do if not(dK>=0x00016)then if dK==0x0015 then local VK=(sK[0]);(zK)[0x0]=VK[0x1][VK[0X002]];do nK=nK+1;end;nK=nK+0x00001;EK=eK[nK];do nK=nK+0x001;end;if not zK[0]then nK=EK[0X2];end;else repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[2];do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;lK[0X00001]=aK[LK];do(lK)[0x02]=1;end;end;end;end;end;until true;do return;end;end;else do if dK==23 then local VK=(EK[0X3]);local MK,aK=zK[VK],zK[VK+0X1];local gK=zK[VK+2];zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[0X2];else repeat local VK,MK,aK,gK=mK,zK,EK[0x03],{};for wK,rK in W,VK do for lK,LK in W,rK do do if not(LK[0X0001]==MK and LK[2]>=aK)then else local DK=(LK[0x2]);if not gK[DK]then gK[DK]={MK[DK]};end;LK[1]=gK[DK];(LK)[2]=0X00001;end;end;end;end;until true;end;end;end;end;end;end;else if dK<0X8 then if not(dK<4)then do if dK<0X06 then if dK~=5 then zK[EK[3]]=zK[EK[0X2]]>zK[EK[5]];else if not(zK[EK[0x003]])then else nK=EK[0X00002];end;end;else if dK~=0X7 then local VK=EK[3];local MK,aK=zK[VK]();if MK then nK=EK[2];zK[VK+0X03]=aK;end;else do(zK)[0x2]=EK[0X7];end;nK=nK+1;zK[0]=zK[0x2];do EK=eK[nK];end;do nK=nK+0X1;end;do nK=EK[0X2];end;end;end;end;else if not(dK>=2)then if dK~=0X1 then do zK[3]=UK[EK[0X07]];end;do EK=eK[nK];end;nK=nK+0X001;local VK=0X3;(zK)[4]=EK[7];EK=eK[nK];do nK=nK+0X1;end;zK[0X05]=UK[EK[0X7]];EK=eK[nK];do nK=nK+1;end;do zK[0X5]=zK[5][EK[6]];end;nK=nK+0x01;do(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);end;QK=VK;EK=eK[nK];nK=nK+1;if zK[3]then nK=EK[0X00002];end;else do(zK)[3]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+0x00001;zK[0X03]=zK[0X03][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0x001;if zK[0X3]~=EK[0X6]then nK=EK[3];end;end;else if dK~=3 then local VK=(sK[0X00003]);zK[0X001]=VK[0X1][VK[2]];do EK=eK[nK];end;nK=nK+1;(zK)[2]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;local MK=0x1;zK[0x003]=EK[7];nK=nK+0X1;zK[MK](zK[MK+0x01],zK[MK+0x2]);QK=MK-1;do EK=eK[nK];end;nK=nK+0X1;zK[1]=UK[EK[0X07]];do EK=eK[nK];end;nK=nK+1;zK[2]=EK[0X0007];do nK=nK+1;end;MK=1;(zK[MK])(zK[MK+0x01]);QK=MK-0X1;nK=nK+0X1;nK=nK+0x1;EK=eK[nK];do nK=nK+0X1;end;do nK=EK[0X2];end;else for VK=EK[0X003],EK[0x2]do zK[VK]=nil;end;end;end;end;else if not(dK<0XC)then if not(dK>=14)then if dK~=13 then local VK=(EK[0X2]);local aK,MK=VK[9],(nil);local gK=(#aK);do if not(gK>0)then else MK={};do for wK=0X00001,gK do local rK=(aK[wK]);if rK[1]~=0X00000 then do(MK)[wK-0X1]=sK[rK[0X2]];end;else(MK)[wK-0x01]={zK,rK[2]};end;end;end;(K)(mK,MK);end;end;zK[EK[3]]=Ri(MK,UK,VK);else zK[1]=UK[EK[7]];local VK=(0x1);EK=eK[nK];nK=nK+0X01;do zK[0X2]=EK[0X0007];end;nK=nK+1;(zK[VK])(zK[VK+1]);QK=VK-1;nK=nK+0X00001;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;nK=EK[2];end;else do if dK~=15 then if not zK[EK[0x3]]then do nK=EK[2];end;end;else(zK)[0X00000]=UK[EK[7]];do nK=nK+1;end;nK=nK+0x01;local VK=0X0;do EK=eK[nK];end;do nK=nK+1;end;(zK)[1]=EK[7];do nK=nK+0X00001;end;zK[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not zK[0]then nK=EK[0X0002];end;end;end;end;else do if not(dK>=0Xa)then if dK~=9 then(zK)[0X0]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0x1;zK[0]=zK[0X00][EK[6]];do EK=eK[nK];end;nK=nK+0X1;do if not zK[0]then do nK=EK[0X02];end;end;end;else(zK)[0X1]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;nK=nK+0X1;QK=0X0001;zK[QK]();QK=QK-0X1;nK=nK+0X00001;nK=nK+1;local VK=sK[0X1];nK=nK+1;(zK)[0X1]=VK[0X00001][VK[0x0002]];local MK=(0x1);do nK=nK+0X01;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;local aK=(zK[1]);do zK[MK+0x00001]=aK;end;do(zK)[MK]=aK[EK[6]];end;do EK=eK[nK];end;nK=nK+0X00001;zK[0x3]=EK[0X7];nK=nK+0X001;MK=1;do(zK)[MK]=zK[MK](zK[MK+1],zK[MK+0X0002]);end;do QK=MK;end;EK=eK[nK];do nK=nK+0X1;end;do if not(not zK[0X1])then else nK=EK[0X0002];end;end;end;else if dK==0XB then zK[2]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;(zK)[0X02]=zK[0X02][EK[6]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;(zK)[0X003]=zK[1][EK[6]];EK=eK[nK];nK=nK+1;if not(not(zK[2]<=zK[3]))then else nK=EK[3];end;else(zK)[1]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;(zK)[1]=zK[1][EK[0X6]];nK=nK+0X1;nK=nK+0x1;EK=eK[nK];nK=nK+0x1;if not zK[0x1]then nK=EK[2];end;end;end;end;end;end;end;end;end;end;else do if SK~=0X0097 then do _K=function(...)local zK={};local nK=(1);local CK=({[1]=xK,[2]=zK});local pK=Q();local UK=(pK==z and KK or pK);local QK=(0);local NK,HK=vi(...);do NK=NK-0X00001;end;do for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x0001,NK+1)};end;if UK~=pK then _(_K,UK);end;do while true do local EK=eK[nK];local dK=EK[1];nK=nK+1;if not(dK<8)then if dK>=12 then if dK>=0xe then do if dK~=0X00F then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else local VK=EK[0X2];local aK,MK=VK[9],(nil);local gK=(#aK);if gK>0 then do MK={};end;for wK=0X01,gK do local rK=(aK[wK]);do if rK[0X001]==0X0 then do MK[wK-1]={zK,rK[0X2]};end;else(MK)[wK-0x01]=sK[rK[2]];end;end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;else if dK~=13 then local VK=(EK[0X2]);local MK=(zK[VK]);for aK=VK+0x1,EK[5]do do MK=MK..zK[aK];end;end;(zK)[EK[0X3]]=MK;else local VK=EK[0X2];local aK,MK=VK[9],(nil);local gK=(#aK);if not(gK>0X0)then else do MK={};end;do for wK=1,gK do local rK=(aK[wK]);do if rK[0X1]==0X0 then MK[wK-1]={zK,rK[2]};else do MK[wK-0X1]=sK[rK[0X2]];end;end;end;end;end;(K)(mK,MK);end;do(zK)[EK[3]]=i[EK[0X00005]](MK);end;end;end;else if dK<0Xa then if dK~=0X009 then zK[EK[3]]=UK[EK[0x7]];else end;else do if dK==11 then(zK)[EK[3]]=EK[0X7];else do zK[EK[3]]=l(zK[EK[2]]);end;end;end;end;end;else if not(dK>=0X4)then if dK<0X002 then if dK~=0X1 then(zK)[EK[0X3]]={S({},1,EK[2])};else nK=EK[0X2];end;else if dK==3 then local VK=(EK[0X00003]);local MK,aK=zK[VK]();if not(MK)then else nK=EK[0X002];zK[VK+0X3]=aK;end;else zK[EK[3]]=zK[EK[0X2]]%zK[EK[5]];end;end;else if dK<6 then if dK==0X5 then(zK)[EK[3]]=zK[EK[0X002]][zK[EK[5]]];else(zK)[0x1]=UK[EK[0X7]];do nK=nK+0x1;end;do nK=nK+1;end;nK=nK+0X1;(zK)[2]=zK[0X00];EK=eK[nK];nK=nK+0X1;(zK[0X001])[EK[0X007]]=zK[0x0002];EK=eK[nK];do nK=nK+0X1;end;(zK)[0X00001]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;nK=nK+0X0001;QK=0X01;(zK[QK])();QK=QK-0X1;EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[7]];EK=eK[nK];nK=nK+1;do zK[0x0001]=zK[0X001][EK[0X6]];end;nK=nK+1;do nK=nK+1;end;local MK=(nil);EK=eK[nK];nK=nK+0X1;local VK=EK[0X2];local aK=VK[9];local gK=#aK;if gK>0 then MK={};for rK=0x00001,gK do local lK=(aK[rK]);if lK[1]~=0 then do MK[rK-0X1]=sK[lK[2]];end;else do MK[rK-0X01]={zK,lK[0X2]};end;end;end;(K)(mK,MK);end;local wK=1;do zK[2]=Ri(MK,UK,VK);end;nK=nK+0X1;(zK[wK])(zK[wK+0X0001]);do QK=wK-1;end;do nK=nK+0X00001;end;do nK=nK+0x1;end;nK=nK+0X01;repeat local rK,lK=mK,zK;local LK={};do for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[0X001]==lK and OK[2]>=0)then else local tK=(OK[0X2]);if not LK[tK]then do(LK)[tK]={lK[tK]};end;end;do OK[1]=LK[tK];end;OK[2]=1;end;end;end;end;until true;return;end;else do if dK~=0X7 then do(zK)[EK[0X00003]]=zK[EK[2]]<=zK[EK[5]];end;else local VK,MK=EK[3],(zK[EK[0X2]]);zK[VK+1]=MK;(zK)[VK]=MK[EK[0X6]];end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X01,{};local pK=(Q());local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-0X1;do for EK=0,NK do if not(WK>EK)then do break;end;else do(zK)[EK]=HK[EK+0X1];end;end;end;end;if not PK then do HK=nil;end;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X01 or 0x000,S(HK,WK+0X001,NK+0X1)};end;if UK==pK then else(_)(_K,UK);end;local QK=0X0;while true do local EK=eK[nK];local dK=EK[0X01];nK=nK+1;if not(dK>=14)then if dK>=0x7 then if dK<10 then if dK<8 then local VK=(sK[0X0]);zK[0X0]=VK[0X1][VK[0X2]];EK=eK[nK];local MK=0;nK=nK+1;local aK=(zK[0]);zK[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];EK=eK[nK];do nK=nK+1;end;do zK[0X2]=EK[7];end;do nK=nK+1;end;do MK=0;end;zK[MK]=zK[MK](zK[MK+0X1],zK[MK+0x2]);QK=MK;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0X00001;end;if not zK[0]then do nK=EK[2];end;end;else if dK~=9 then local VK=(sK[0]);do(zK)[0]=VK[1][VK[2]];end;do nK=nK+1;end;nK=nK+0X01;EK=eK[nK];nK=nK+1;zK[0X0]=zK[0][EK[6]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X0]=zK[0][EK[0x006]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;(zK)[0x0]=zK[0X00000][EK[0X6]];EK=eK[nK];nK=nK+0x01;nK=EK[0X0002];else local VK,MK=sK[0],(0X00);do zK[0]=VK[0x00001][VK[0X2]];end;EK=eK[nK];nK=nK+0X001;local aK=(zK[0X0000]);(zK)[MK+0X0001]=aK;(zK)[MK]=aK[EK[6]];EK=eK[nK];do nK=nK+1;end;(zK)[2]=EK[7];nK=nK+1;MK=0;(zK)[MK]=zK[MK](zK[MK+0X0001],zK[MK+2]);QK=MK;nK=nK+0X1;nK=nK+0X001;EK=eK[nK];do nK=nK+0x01;end;if not(not zK[0])then else nK=EK[2];end;end;end;else if dK>=12 then if dK==0x000d then local VK=(sK[0X1]);(zK)[1]=VK[0X1][VK[2]];do EK=eK[nK];end;nK=nK+1;(zK)[0X1]=zK[1][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK)[1]=zK[1][EK[6]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;(zK)[0X1]=zK[0X1][EK[0X06]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[2];else local VK=(sK[0X01]);do(zK)[0X001]=VK[0X001][VK[0X2]];end;local aK=(zK[0X1]);nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+1;local MK=(0X1);(zK)[MK+1]=aK;zK[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+0x1;zK[3]=EK[7];do nK=nK+0X1;end;MK=0X1;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;do EK=eK[nK];end;nK=nK+1;if not(not zK[1])then else nK=EK[0X2];end;end;else if dK~=11 then if zK[EK[3]]then nK=EK[0x2];end;else for VK=EK[0X3],EK[0X2]do zK[VK]=nil;end;end;end;end;else if dK>=0x003 then if dK<0X05 then do if dK~=0X04 then zK[0X2]=zK[0X0]-zK[0X1];EK=eK[nK];local VK=sK[0X0];nK=nK+1;zK[0X0002]=zK[2][EK[0X0006]];nK=nK+1;(zK)[0X00003]=VK[0x1][VK[2]];nK=nK+0X1;local MK=3;nK=nK+0X01;EK=eK[nK];do nK=nK+0X1;end;local aK=(zK[0X3]);zK[MK+1]=aK;zK[MK]=aK[EK[0X0006]];EK=eK[nK];nK=nK+1;(zK)[5]=EK[7];nK=nK+0x1;MK=3;zK[MK]=zK[MK](zK[MK+0X001],zK[MK+0X2]);QK=MK;nK=nK+0x001;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;MK=3;aK=zK[0X3];(zK)[MK+1]=aK;(zK)[MK]=aK[EK[6]];EK=eK[nK];do nK=nK+0x1;end;zK[5]=EK[7];nK=nK+0X00001;MK=3;zK[MK]=zK[MK](zK[MK+1],zK[MK+0X2]);QK=MK;nK=nK+0X01;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;zK[3]=zK[0X3][EK[0X06]];EK=eK[nK];nK=nK+0X1;do zK[0X3]=zK[3]-EK[6];end;do EK=eK[nK];end;nK=nK+1;if not(not(zK[0X2]<zK[0X3]))then else nK=EK[3];end;else if zK[EK[0X2]]~=zK[EK[0X5]]then nK=EK[0X0003];end;end;end;else if dK~=6 then local VK=(sK[0X1]);do zK[0X1]=VK[1][VK[0X002]];end;local MK=1;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;local aK=(zK[1]);(zK)[MK+0X1]=aK;zK[MK]=aK[EK[0x6]];do EK=eK[nK];end;nK=nK+1;(zK)[0X3]=EK[0X7];nK=nK+0X1;MK=1;do(zK)[MK]=zK[MK](zK[MK+0X0001],zK[MK+2]);end;do QK=MK;end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X01;if not(not zK[0X1])then else nK=EK[0X2];end;else repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0x01]==MK and lK[0X2]>=0 then local LK=(lK[0X2]);do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];lK[2]=0X1;end;end;end;until true;return;end;end;else if dK>=0X01 then if dK~=2 then local VK=sK[0X00];zK[0X0]=VK[1][VK[0X2]];EK=eK[nK];do nK=nK+0X1;end;zK[0]=zK[0][EK[0X6]];EK=eK[nK];nK=nK+1;(zK)[0]=zK[0][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X001;(zK)[0x000]=zK[0X0][EK[0X06]];EK=eK[nK];do nK=nK+1;end;nK=EK[0X2];else local VK=(sK[1]);(zK)[0X001]=VK[1][VK[0x0002]];nK=nK+1;nK=nK+0x1;EK=eK[nK];do nK=nK+1;end;do zK[1]=zK[1][EK[6]];end;do EK=eK[nK];end;nK=nK+0X0001;zK[0x0001]=zK[1][EK[0X006]];EK=eK[nK];nK=nK+1;zK[0x0001]=zK[1][EK[6]];do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;nK=EK[0X2];end;else end;end;end;else do if dK<0x15 then do if dK<0X11 then if dK>=0xF then if dK==16 then local VK=EK[3];local MK=(EK[2]);QK=VK+MK-1;repeat local aK,gK,wK=mK,zK,({});for rK,lK in W,aK do for LK,DK in W,lK do if DK[1]==gK and DK[0X00002]>=0X00000 then local ZK=(DK[0x2]);if not wK[ZK]then wK[ZK]={gK[ZK]};end;do(DK)[0X1]=wK[ZK];end;DK[0X0002]=0x0001;end;end;end;until true;do return zK[VK](S(zK,VK+1,QK));end;else local VK=sK[0x0];do(zK)[0]=VK[1][VK[0X002]];end;local MK=(0);nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+0X1;local aK=(zK[0X000]);do zK[MK+1]=aK;end;zK[MK]=aK[EK[0x6]];EK=eK[nK];nK=nK+0X001;do zK[0X2]=EK[7];end;nK=nK+0X1;MK=0X000;(zK)[MK]=zK[MK](zK[MK+1],zK[MK+2]);do QK=MK;end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do if not zK[0X0]then nK=EK[0X2];end;end;end;else zK[0X2]=EK[7];local VK=sK[0X2];nK=nK+0X0001;VK[1][VK[0x0002]]=zK[0X2];EK=eK[nK];nK=nK+0X00001;do nK=EK[2];end;end;else if dK>=19 then if dK~=0x014 then nK=EK[0X2];else(zK)[EK[3]]=zK[EK[2]]%zK[EK[0X5]];end;else do if dK~=18 then local VK=(EK[0X00002]);local aK=(VK[0X09]);local gK,MK=#aK,nil;do if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0X0 then(MK)[wK-1]=sK[rK[2]];else MK[wK-1]={zK,rK[0X2]};end;end;K(mK,MK);end;end;(zK)[EK[0x3]]=Ri(MK,UK,VK);else do zK[EK[0X3]]=EK[7];end;end;end;end;end;end;else do if not(dK>=25)then if not(dK<0X17)then if dK==24 then local VK=(sK[0]);zK[0]=VK[1][VK[0x2]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+0x1;zK[0]=zK[0][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0X0]=zK[0X000][EK[6]];do EK=eK[nK];end;nK=nK+0X1;(zK)[0X0]=zK[0X0][EK[6]];do nK=nK+0x01;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0x0]=zK[0X0][EK[6]];do nK=nK+0X01;end;do nK=nK+0X001;end;EK=eK[nK];nK=nK+1;nK=EK[2];else zK[EK[3]]=UK[EK[7]];end;else if dK==0X0016 then local VK=sK[1];zK[1]=VK[0X0001][VK[2]];nK=nK+0X01;nK=nK+1;EK=eK[nK];nK=nK+1;zK[1]=zK[0x00001][EK[0x06]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[1]=zK[1][EK[0X6]];nK=nK+1;do nK=nK+0x0001;end;EK=eK[nK];nK=nK+1;zK[0X0001]=zK[1][EK[6]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X01;zK[1]=zK[1][EK[0X06]];do EK=eK[nK];end;nK=nK+1;nK=EK[2];else(zK)[EK[3]]=CK[EK[2]];end;end;else if dK<0X1b then if dK~=0X1a then CK[EK[0X2]]=zK[EK[0x3]];else do(zK)[EK[0x3]]=zK[EK[2]]-zK[EK[5]];end;end;else do if dK==0X1c then local VK=(sK[0x001]);(zK)[0X01]=VK[0X1][VK[2]];local MK=0x1;EK=eK[nK];nK=nK+1;local aK=zK[0x1];zK[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];EK=eK[nK];nK=nK+0x001;(zK)[0X3]=EK[7];do nK=nK+0x0001;end;do MK=0X00001;end;zK[MK]=zK[MK](zK[MK+0X1],zK[MK+0X2]);QK=MK;do nK=nK+0X1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not zK[1]then do nK=EK[2];end;end;else do zK[EK[0x3]]={S({},1,EK[2])};end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if SK<0X8F then if SK~=0x0008e then do _K=function(...)local nK,zK=1,{};local pK=(Q());local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);NK=NK-1;for EK=0,NK do do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;local UK,QK=(pK==z and KK or pK),(0);do if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0x1 or 0x0000,S(HK,WK+0X0001,NK+0X1)};end;end;do if UK~=pK then(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[0x01];nK=nK+1;do if not(dK>=10)then do if dK<5 then if not(dK>=2)then if dK~=0X00001 then do for VK=EK[3],EK[0x002]do(zK)[VK]=nil;end;end;else local VK=(sK[4]);zK[0X1]=VK[0x001][VK[0x2]];do EK=eK[nK];end;local MK=1;do nK=nK+1;end;local aK=zK[1];zK[MK+1]=aK;do zK[MK]=aK[EK[0X6]];end;EK=eK[nK];do nK=nK+0x1;end;zK[3]=UK[EK[0X7]];nK=nK+0x00001;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x001;zK[3]=zK[3][EK[0x6]];EK=eK[nK];nK=nK+0x1;zK[4]=EK[0X7];EK=eK[nK];local gK=(3);nK=nK+1;zK[0X05]=UK[EK[0x07]];nK=nK+0X1;nK=nK+0x1;EK=eK[nK];do nK=nK+0X001;end;do zK[5]=zK[5][EK[6]];end;nK=nK+0x1;nK=nK+1;nK=nK+0x0001;do MK=0X003;end;do zK[MK]=zK[MK](zK[MK+0X1],zK[MK+2]);end;QK=MK;EK=eK[nK];nK=nK+1;(zK)[0X4]=EK[0x7];nK=nK+0X00001;do zK[3]=zK[gK]..zK[gK+1];end;nK=nK+0X1;MK=0X1;(zK[MK])(zK[MK+1],zK[MK+2]);QK=MK-1;nK=nK+0X00001;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+0x001;do nK=EK[2];end;end;else do if dK>=0X03 then do if dK~=4 then local VK=EK[3];local MK=b(function(...)o();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end);MK(zK[VK],zK[VK+0X001],zK[VK+0x2]);QK=VK;zK[VK]=MK;nK=EK[2];else local MK=(nil);local VK=(EK[0X2]);local aK=VK[0X9];local gK=#aK;do if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=aK[wK];do if rK[1]==0x0 then MK[wK-0X001]={zK,rK[2]};else(MK)[wK-0x01]=sK[rK[0X2]];end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else local VK=(EK[0X2]);local MK=nil;local aK=(VK[0x9]);local gK=(#aK);if gK>0X0 then do MK={};end;for wK=1,gK do local rK=(aK[wK]);do if rK[0X1]==0 then do(MK)[wK-0X001]={zK,rK[0X2]};end;else do MK[wK-1]=sK[rK[2]];end;end;end;end;(K)(mK,MK);end;zK[EK[3]]=i[EK[5]](MK);end;end;end;else do if not(dK<7)then if dK<0X008 then local VK=(EK[3]);local MK,aK,gK=zK[VK],zK[VK+1],zK[VK+2];(zK)[VK]=b(function()do for wK=MK,aK,gK do o(true,wK);end;end;end);nK=EK[2];else do if dK~=9 then zK[EK[3]]=zK[EK[2]]<zK[EK[5]];else zK[EK[0X0003]]=-zK[EK[0X2]];end;end;end;else if dK~=0X6 then do if zK[EK[0X2]]<zK[EK[5]]then nK=EK[0X3];end;end;else(zK)[EK[3]]=EK[7];end;end;end;end;end;else do if not(dK<0X0F)then if not(dK>=0X11)then if dK==0X10 then local VK=sK[0];do(zK)[0x00001]=VK[0X00001][VK[0x0002]];end;nK=nK+0X01;nK=nK+1;nK=nK+0X01;VK=sK[0x1];zK[0X2]=VK[1][VK[2]];nK=nK+1;nK=nK+0x1;EK=eK[nK];do nK=nK+1;end;zK[0x3]=EK[7];nK=nK+1;VK=sK[2];zK[4]=VK[0X00001][VK[0x2]];nK=nK+0X0001;nK=nK+0X0001;do EK=eK[nK];end;do nK=nK+1;end;(zK)[0x5]=EK[0X7];EK=eK[nK];do nK=nK+0X1;end;local MK=(2);local gK=(1);do zK[6]=UK[EK[0X7]];end;do EK=eK[nK];end;do nK=nK+0x1;end;zK[0X6]=zK[0x6][EK[0X6]];nK=nK+0X01;nK=nK+1;EK=eK[nK];nK=nK+0x001;(zK)[7]=EK[7];nK=nK+1;local aK=(zK[MK]);for wK=MK+0X0001,0X7 do do aK=aK..zK[wK];end;end;zK[0x2]=aK;nK=nK+1;(zK)[gK]=zK[gK](zK[gK+0x01]);QK=gK;do EK=eK[nK];end;do nK=nK+0X1;end;if not(not zK[1])then else nK=EK[2];end;else do zK[EK[3]]=UK[EK[7]];end;end;else if not(dK>=18)then do nK=EK[2];end;else do if dK~=19 then else(zK)[EK[3]]=zK[EK[2]]%zK[EK[0X5]];end;end;end;end;else do if dK<0X000c then if dK~=0XB then local VK=sK[3];zK[0X0001]=VK[1][VK[0x2]];nK=nK+1;VK=sK[0X00001];(zK)[0X02]=VK[1][VK[0X02]];EK=eK[nK];nK=nK+1;do zK[0X00003]=EK[7];end;nK=nK+1;VK=sK[0x2];do(zK)[4]=VK[0X1][VK[0x0002]];end;local gK=0x1;EK=eK[nK];local MK=(0X002);nK=nK+1;zK[0x05]=EK[0X0007];EK=eK[nK];nK=nK+0X00001;(zK)[0X6]=UK[EK[0x7]];EK=eK[nK];do nK=nK+1;end;do(zK)[6]=zK[0X6][EK[6]];end;EK=eK[nK];nK=nK+0X001;do(zK)[0x07]=EK[7];end;nK=nK+1;local aK=(zK[MK]);for ZK=MK+0X1,0x7 do aK=aK..zK[ZK];end;zK[2]=aK;do nK=nK+1;end;zK[gK](zK[gK+0X1]);QK=gK-1;nK=nK+0X1;nK=nK+1;nK=nK+0X00001;VK=sK[4];(zK)[1]=VK[0x1][VK[0X00002]];do EK=eK[nK];end;do nK=nK+1;end;local wK=(zK[1]);gK=1;zK[gK+0X1]=wK;zK[gK]=wK[EK[6]];EK=eK[nK];nK=nK+1;zK[0X003]=UK[EK[0X0007]];nK=nK+0x0001;nK=nK+0X01;do EK=eK[nK];end;nK=nK+0X1;local rK=0X3;zK[3]=zK[0X00003][EK[0X06]];EK=eK[nK];nK=nK+0X1;zK[4]=EK[7];EK=eK[nK];nK=nK+0X1;zK[0X5]=UK[EK[7]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK)[5]=zK[0X05][EK[6]];do nK=nK+0X0001;end;nK=nK+1;do nK=nK+0X1;end;gK=0x3;local lK=(0);do if rK==0 then else do QK=gK+rK-0X1;end;end;end;local LK,DK=nil,nil;if rK~=0X1 then LK,DK=vi(zK[gK](S(zK,gK+1,QK)));else do LK,DK=vi(zK[gK]());end;end;do if lK==1 then QK=gK-1;else if lK==0X0 then LK=LK+gK-1;QK=LK;else LK=gK+lK-2;QK=LK+1;end;local ZK=(0);for GK=gK,LK do ZK=ZK+1;(zK)[GK]=DK[ZK];end;end;end;nK=nK+1;gK=0x1;zK[gK](S(zK,gK+1,QK));QK=gK-1;EK=eK[nK];nK=nK+0X1;do nK=EK[2];end;else(zK)[EK[3]]=zK[EK[2]]-zK[EK[5]];end;else if dK<13 then if not(not(zK[EK[2]]<zK[EK[0X00005]]))then else nK=EK[0x3];end;else if dK==0X0e then zK[1]=UK[EK[0X00007]];do nK=nK+0X1;end;QK=1;zK[QK]();do QK=QK-1;end;EK=eK[nK];do nK=nK+0x00001;end;(zK)[1]=UK[EK[7]];local VK=(0X001);EK=eK[nK];nK=nK+1;(zK)[1]=zK[0x001][EK[6]];nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X0001;local MK=zK[0X001];zK[VK+1]=MK;zK[VK]=MK[EK[0x6]];do EK=eK[nK];end;do nK=nK+0X1;end;zK[3]=EK[0x00007];nK=nK+0X00001;VK=1;(zK[VK])(zK[VK+1],zK[VK+2]);QK=VK-1;nK=nK+1;do repeat local aK,gK=mK,zK;local wK=({});for rK,lK in W,aK do for LK,DK in W,lK do if DK[0X1]==gK and DK[0X2]>=0x0 then local ZK=(DK[2]);if not wK[ZK]then do wK[ZK]={gK[ZK]};end;end;(DK)[0x1]=wK[ZK];(DK)[2]=0X001;end;end;end;until true;end;do return;end;else(zK)[EK[3]]={S({},1,EK[0X2])};end;end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local QK,zK=0X0,({});local CK=({[1]=xK,[2]=zK});local pK=Q();local nK=0x1;local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-1;do for EK=0X0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0x1];end;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0000,S(HK,WK+0X0001,NK+0x01)};end;do if UK==pK then else(_)(_K,UK);end;end;do while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+0X00001;if not(dK>=9)then do if dK>=4 then if not(dK<0x6)then if not(dK>=7)then do(zK)[EK[0x0003]]=l(zK[EK[2]]);end;else if dK==8 then(zK)[EK[0X03]]=EK[0X7];else do zK[0X1]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+1;(zK[0X1])[EK[7]]=EK[0X6];EK=eK[nK];nK=nK+1;nK=EK[0X2];end;end;else if dK~=0X5 then nK=EK[2];else zK[EK[0X3]]=zK[EK[0X2]]<zK[EK[5]];end;end;else if not(dK<2)then do if dK~=0X00003 then local VK,MK=EK[0X3],(zK[EK[0x2]]);(zK)[VK+0X1]=MK;(zK)[VK]=MK[EK[0x6]];else do zK[1]=UK[EK[7]];end;nK=nK+0x1;do(zK)[2]=zK[0X000];end;nK=nK+0X1;local VK=(0X001);(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;if zK[1]~=EK[0X6]then do nK=EK[0x003];end;end;end;end;else if dK~=0x0001 then(zK)[0X1]=UK[EK[7]];local VK=(1);EK=eK[nK];nK=nK+1;(zK)[2]=EK[7];do nK=nK+1;end;zK[VK](zK[VK+1]);QK=VK-1;do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do nK=EK[2];end;else for VK=EK[0X3],EK[2]do zK[VK]=nil;end;end;end;end;end;else if not(dK<0X0000E)then do if dK<0X10 then if dK==15 then zK[EK[3]]={S({},0X00001,EK[0x0002])};else local VK,MK=EK[2],(nil);local aK=(VK[9]);local gK=#aK;do if gK>0X0 then MK={};do for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0 then(MK)[wK-1]={zK,rK[0x2]};else do(MK)[wK-1]=sK[rK[2]];end;end;end;end;(K)(mK,MK);end;end;zK[EK[3]]=Ri(MK,UK,VK);end;else if not(dK<17)then if dK~=0x12 then zK[EK[3]]=UK[EK[0X7]];else zK[EK[0X03]]=zK[EK[2]]%zK[EK[0X0005]];end;else(zK)[0X001]=UK[EK[7]];do nK=nK+1;end;do zK[2]=zK[0];end;do EK=eK[nK];end;nK=nK+1;zK[1][EK[7]]=zK[2];EK=eK[nK];nK=nK+0X1;do nK=EK[2];end;end;end;end;else if not(dK>=0X00B)then if dK~=10 then zK[EK[3]]=g(zK[EK[0x2]],zK[EK[5]]);else(zK)[1]=UK[EK[7]];nK=nK+0X1;QK=1;zK[QK]();QK=QK-0x001;nK=nK+0X01;do repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0X0002]>=0)then else local LK=(lK[0X00002]);if not aK[LK]then do aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];lK[0x002]=0X0001;end;end;end;until true;end;return;end;else if not(dK<0X00c)then if dK~=0XD then else(zK)[EK[0x3]]=zK[EK[2]]*zK[EK[0X5]];end;else if zK[EK[0X02]]==EK[6]then else nK=EK[0X3];end;end;end;end;end;end;end;end;end;end;elseif not(SK>=144)then do _K=function(...)local QK=0;local zK=({});local nK=0x1;local pK=(Q());local NK,HK=vi(...);local CK=({[2]=zK,[1]=xK});NK=NK-0x1;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0x1];end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0X00000,S(HK,WK+0X1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0x1];nK=nK+1;if not(dK<0X6)then if not(dK<9)then if not(dK>=11)then if dK~=10 then zK[0x001]=UK[EK[7]];nK=nK+1;nK=nK+1;do nK=nK+1;end;QK=0X001;(zK[QK])();QK=QK-0X1;nK=nK+0X1;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[0X2]>=0x000 then local LK=(lK[2]);if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;lK[1]=aK[LK];do(lK)[0X2]=0X1;end;end;end;end;end;until true;return;else local VK=EK[0x00002];local MK=nil;local aK=(VK[9]);local gK=(#aK);if not(gK>0x0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0 then MK[wK-0X1]={zK,rK[2]};else(MK)[wK-0X1]=sK[rK[0X2]];end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else do if dK~=12 then do nK=EK[0x2];end;else(zK)[EK[3]]={S({},1,EK[0X2])};end;end;end;else if not(dK>=0X007)then(zK)[EK[3]]=zK[EK[2]]~=zK[EK[5]];else if dK~=8 then if zK[EK[0X2]]==zK[EK[0X0005]]then else nK=EK[3];end;else local VK=EK[3];local MK=zK[EK[2]];(zK)[VK+0X01]=MK;do(zK)[VK]=MK[EK[0X6]];end;end;end;end;else if dK>=3 then if not(dK<4)then if dK~=0X05 then CK[EK[2]]=zK[EK[0X03]];else do zK[EK[0x3]]=UK[EK[0x0007]];end;end;else zK[EK[3]]=EK[7];end;else if dK>=0x1 then if dK~=2 then else do(zK)[EK[0X00003]]=zK[EK[2]];end;end;else(zK)[EK[3]]=g(zK[EK[0X0002]],zK[EK[0X5]]);end;end;end;end;end;end;else if SK==0X91 then _K=function(...)local nK,zK=0X01,{};local CK={[2]=zK,[1]=xK};local pK=Q();local QK=(0x00000);local NK,HK=vi(...);NK=NK-0X001;local UK=(pK==z and KK or pK);for EK=0x0,NK do do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X001];end;end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0X00000,S(HK,WK+0X0001,NK+1)};end;if UK==pK then else _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];do nK=nK+0X1;end;do if dK>=19 then if dK>=29 then if not(dK<0X0022)then do if not(dK<36)then do if not(dK<37)then if dK==38 then if zK[EK[2]]<=zK[EK[0x00005]]then nK=EK[0X3];end;else do(zK)[0x06]=UK[EK[0x007]];end;nK=nK+0X1;nK=nK+0X01;EK=eK[nK];nK=nK+1;local VK=6;do(zK)[0X0006]=zK[6][EK[6]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;local MK=(zK[0X06]);do zK[VK+1]=MK;end;(zK)[VK]=MK[EK[0X00006]];nK=nK+1;zK[0X8]=zK[0X5];nK=nK+1;VK=6;(zK[VK])(zK[VK+1],zK[VK+2]);QK=VK-0X0001;do EK=eK[nK];end;nK=nK+0X01;zK[6]=UK[EK[7]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[0x7]=EK[7];do nK=nK+0X1;end;VK=6;zK[VK](zK[VK+0x1]);QK=VK-0x0001;do nK=nK+1;end;nK=nK+0X01;EK=eK[nK];nK=nK+0X001;do(zK)[6]=zK[2][EK[6]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;(zK)[0X006]=zK[0X6][EK[0X006]];EK=eK[nK];nK=nK+0X1;VK=0X6;MK=zK[0X6];zK[VK+1]=MK;zK[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+0x0001;(zK)[8]=EK[0X7];nK=nK+0X1;VK=6;zK[VK]=zK[VK](zK[VK+0X1],zK[VK+0X002]);QK=VK;EK=eK[nK];nK=nK+0x00001;if not(not zK[6])then else do nK=EK[2];end;end;end;else do zK[0X00]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X01;do zK[0X00000]=zK[0][EK[6]];end;nK=nK+1;nK=nK+1;nK=nK+0X001;QK=0;(zK)[QK]=zK[QK]();nK=nK+1;nK=nK+0x01;EK=eK[nK];do nK=nK+0X1;end;do if not zK[0]then nK=EK[2];end;end;end;end;else if dK~=0X00023 then(zK)[0x6]=UK[EK[7]];nK=nK+1;QK=6;zK[QK]();do QK=QK-1;end;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;do(zK)[0X6]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X1;do zK[0x6]=zK[0x00006][EK[6]];end;EK=eK[nK];do nK=nK+0x001;end;(zK)[0x7]=UK[EK[0X007]];nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;if zK[6]==zK[7]then else nK=EK[3];end;else zK[EK[3]]=zK[EK[2]][EK[6]];end;end;end;else if dK>=31 then do if dK<32 then if not zK[EK[3]]then do nK=EK[0X0002];end;end;else if dK~=0X021 then for VK=EK[0X00003],EK[2]do(zK)[VK]=nil;end;else do nK=EK[2];end;end;end;end;else if dK~=30 then do(zK)[EK[0x0003]]={S({},0X1,EK[0x02])};end;else(zK)[0X9]=UK[EK[0X00007]];do EK=eK[nK];end;nK=nK+1;(zK)[0X009]=zK[0X009][EK[0x0006]];EK=eK[nK];nK=nK+0X1;do if not(zK[9])then else nK=EK[2];end;end;end;end;end;else if dK>=24 then if not(dK<0X01A)then do if not(dK>=27)then do(zK)[0X00]=UK[EK[7]];end;nK=nK+0X1;local VK=(sK[0x1]);nK=nK+1;nK=nK+0X1;(zK)[1]=VK[1][VK[2]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;(zK)[1]=zK[1][EK[0X6]];nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;(zK)[1]=zK[0X001][EK[6]];nK=nK+1;nK=nK+0X0001;local MK=0;EK=eK[nK];do nK=nK+1;end;zK[0X001]=zK[1][EK[0X6]];EK=eK[nK];nK=nK+1;zK[1]=zK[1][EK[0X006]];nK=nK+1;local aK,gK=2,(4);if aK~=0 then do QK=MK+aK-0X0001;end;end;local wK,rK=nil,(nil);if aK~=1 then do wK,rK=vi(zK[MK](S(zK,MK+0x00001,QK)));end;else do wK,rK=vi(zK[MK]());end;end;if gK~=0x00001 then if gK==0 then wK=wK+MK-0X1;QK=wK;else wK=MK+gK-0X02;QK=wK+0X1;end;local LK=(0);for DK=MK,wK do LK=LK+0x1;(zK)[DK]=rK[LK];end;else QK=MK-1;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X00001;MK=0X00;local lK=(b(function(...)(o)();do for LK,DK in...do(o)(true,LK,DK);end;end;end));(lK)(zK[MK],zK[MK+0X1],zK[MK+0X02]);QK=MK;zK[MK]=lK;do nK=EK[2];end;else if dK~=28 then zK[9]=UK[EK[0X00007]];nK=nK+0X0001;local VK=9;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[9]=zK[9][EK[6]];do nK=nK+0X1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;local MK=(zK[0x9]);do zK[VK+1]=MK;end;(zK)[VK]=MK[EK[6]];nK=nK+0x1;(zK)[11]=zK[8];nK=nK+1;VK=9;zK[VK](zK[VK+1],zK[VK+0X2]);QK=VK-1;nK=nK+0x1;nK=nK+1;do nK=nK+0X0001;end;do zK[9]=zK[8];end;EK=eK[nK];do nK=nK+0X01;end;UK[EK[0X7]]=zK[0x00009];EK=eK[nK];nK=nK+0X1;nK=EK[0x02];else zK[0X0]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;do zK[0]=zK[0X00000][EK[0X006]];end;EK=eK[nK];nK=nK+1;if not zK[0x00]then nK=EK[0X2];end;end;end;end;else if dK~=0X19 then zK[0X6]=zK[2][EK[6]];do nK=nK+1;end;nK=nK+0x1;local VK=(0X6);EK=eK[nK];nK=nK+1;zK[6]=zK[6][EK[0X00006]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;local MK=(zK[0X6]);do(zK)[VK+1]=MK;end;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+1;do(zK)[0x8]=EK[0X7];end;do nK=nK+1;end;VK=6;(zK)[VK]=zK[VK](zK[VK+0x1],zK[VK+2]);do QK=VK;end;EK=eK[nK];nK=nK+0x1;do if zK[6]then nK=EK[2];end;end;else zK[0x006]=UK[EK[0X7]];local VK=(6);EK=eK[nK];do nK=nK+1;end;zK[6]=zK[0x6][EK[0X06]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;local MK=(zK[6]);(zK)[VK+0X001]=MK;do(zK)[VK]=MK[EK[0X6]];end;EK=eK[nK];nK=nK+1;(zK)[8]=EK[7];do nK=nK+0X1;end;VK=6;(zK[VK])(zK[VK+0X1],zK[VK+0X2]);QK=VK-0X1;EK=eK[nK];nK=nK+1;do zK[6]=EK[0x7];end;EK=eK[nK];do nK=nK+1;end;(UK)[EK[0x7]]=zK[6];EK=eK[nK];nK=nK+0X1;nK=EK[2];end;end;else if dK>=21 then do if not(dK<0X0016)then do if dK~=23 then(zK)[EK[3]]=zK[EK[2]]==zK[EK[0X5]];else local VK,MK=EK[2],(nil);local aK=(VK[9]);local gK=#aK;if not(gK>0X000)then else MK={};do for wK=0X1,gK do local rK=(aK[wK]);if rK[0X0001]==0x0 then MK[wK-1]={zK,rK[0x2]};else do MK[wK-0X1]=sK[rK[0X2]];end;end;end;end;(K)(mK,MK);end;do(zK)[EK[0x3]]=Ri(MK,UK,VK);end;end;end;else do if zK[EK[2]]==EK[0X6]then else do nK=EK[0X003];end;end;end;end;end;else if dK~=20 then(zK)[0X006]=UK[EK[0X0007]];EK=eK[nK];local VK=6;do nK=nK+0x0001;end;zK[0X6]=zK[6][EK[0x6]];nK=nK+0X00001;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+0X1;end;local MK=zK[6];(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+1;zK[0X8]=EK[0X007];do nK=nK+1;end;do VK=6;end;(zK[VK])(zK[VK+0X1],zK[VK+0x2]);do QK=VK-1;end;EK=eK[nK];nK=nK+0X1;(zK)[6]=EK[0x007];EK=eK[nK];nK=nK+1;UK[EK[7]]=zK[0X00006];EK=eK[nK];nK=nK+0X1;nK=EK[2];else if zK[EK[2]]~=zK[EK[0X5]]then else nK=EK[3];end;end;end;end;end;else if not(dK<9)then if not(dK>=0Xe)then if dK>=11 then do if dK>=0XC then if dK~=13 then(zK)[6]=UK[EK[0X007]];EK=eK[nK];local VK=(6);nK=nK+0X00001;zK[0X0007]=EK[7];do nK=nK+0X1;end;(zK[VK])(zK[VK+0x0001]);QK=VK-0x1;EK=eK[nK];do nK=nK+1;end;nK=EK[2];else(zK)[EK[0X3]]=UK[EK[7]];end;else do(zK)[6]=zK[0X2][EK[6]];end;do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK)[6]=zK[6][EK[6]];do EK=eK[nK];end;local VK=(6);nK=nK+0X1;local MK=zK[0X006];(zK)[VK+0X1]=MK;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+1;zK[8]=EK[0X7];nK=nK+0X1;VK=6;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);QK=VK;nK=nK+1;nK=nK+0X0001;EK=eK[nK];do nK=nK+1;end;if zK[6]then do nK=EK[0X2];end;end;end;end;else if dK~=10 then do repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0X002]>=0x0)then else local LK=(lK[2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[0X001]=aK[LK];lK[2]=1;end;end;end;until true;end;return;else zK[6]=UK[EK[0x7]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];do nK=nK+0X1;end;local VK=0X6;zK[7]=UK[EK[0X0007]];nK=nK+1;local MK=2;if MK~=0X0 then QK=VK+MK-0X1;end;local aK,gK,wK=4,nil,(nil);if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK~=1 then do if aK==0X0 then gK=gK+VK-1;QK=gK;else do gK=VK+aK-2;end;QK=gK+1;end;end;local lK=(0);for LK=VK,gK do lK=lK+1;zK[LK]=wK[lK];end;else QK=VK-1;end;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;do VK=6;end;local rK=b(function(...)(o)();for lK,LK in...do(o)(true,lK,LK);end;end);rK(zK[VK],zK[VK+0X00001],zK[VK+2]);QK=VK;do zK[VK]=rK;end;do nK=EK[2];end;end;end;else if not(dK>=0X10)then if dK~=15 then zK[0x3]=UK[EK[0X7]];EK=eK[nK];local aK=(0x4);nK=nK+1;(zK)[0X4]=UK[EK[0X7]];do EK=eK[nK];end;do nK=nK+1;end;do zK[4]=zK[0X04][EK[0X006]];end;local VK=(3);nK=nK+0X0001;nK=nK+0X001;nK=nK+0X001;local MK=(2);if MK==0 then else QK=VK+MK-0X00001;end;local gK,wK=nil,(nil);if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0x001,QK)));end;if aK==1 then QK=VK-1;else if aK==0 then gK=gK+VK-1;do QK=gK;end;else gK=VK+aK-0X0002;QK=gK+1;end;local lK=(0x0);for LK=VK,gK do lK=lK+1;zK[LK]=wK[lK];end;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;VK=0X3;local rK=(b(function(...)(o)();do for lK,LK in...do(o)(true,lK,LK);end;end;end));(rK)(zK[VK],zK[VK+1],zK[VK+0x2]);do QK=VK;end;(zK)[VK]=rK;do nK=EK[2];end;else zK[EK[0X3]]=EK[7];end;else do if dK>=17 then if dK~=0X12 then do zK[4]=zK[2][EK[0X6]];end;do nK=nK+0X1;end;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+0X1;do(zK)[0x4]=zK[0X004][EK[6]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;if zK[4]~=EK[6]then else nK=EK[3];end;else local VK=(sK[EK[0X00002]]);zK[EK[0X003]]=VK[0x1][VK[0x2]];end;else repeat local MK,aK,gK=mK,zK,{};for wK,rK in W,MK do do for lK,LK in W,rK do if LK[0X0001]==aK and LK[2]>=0X00 then local DK=LK[0x2];if not gK[DK]then gK[DK]={aK[DK]};end;LK[1]=gK[DK];LK[0X0002]=0x01;end;end;end;end;until true;local VK=EK[0x3];do return S(zK,VK,VK+EK[0X2]-0X00002);end;end;end;end;end;else if dK>=0X4 then if not(dK<6)then if not(dK<7)then if dK==8 then do(zK)[6]=UK[EK[7]];end;local VK=0X06;do nK=nK+0x1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do zK[0X006]=zK[0X00006][EK[0X6]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X00001;local MK=zK[6];(zK)[VK+0x1]=MK;(zK)[VK]=MK[EK[6]];nK=nK+0X01;zK[0X8]=zK[5];do nK=nK+0x1;end;VK=0X0006;(zK[VK])(zK[VK+0x01],zK[VK+2]);QK=VK-1;do nK=nK+0X001;end;nK=nK+0x0001;EK=eK[nK];nK=nK+1;zK[0X6]=zK[0x02][EK[6]];nK=nK+0x1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[6]=zK[0x6][EK[6]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;VK=6;MK=zK[6];zK[VK+0X00001]=MK;do(zK)[VK]=MK[EK[0X006]];end;EK=eK[nK];nK=nK+0x1;do(zK)[8]=EK[0x00007];end;nK=nK+1;VK=0x6;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);do QK=VK;end;EK=eK[nK];nK=nK+0X1;if not zK[6]then nK=EK[2];end;else local VK=(EK[0X03]);local MK=b(function(...)o();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end);(MK)(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;(zK)[VK]=MK;nK=EK[0X2];end;else(zK)[6]=UK[EK[0X07]];EK=eK[nK];local VK=6;do nK=nK+1;end;do zK[0x06]=zK[0X6][EK[6]];end;nK=nK+1;nK=nK+0X0001;EK=eK[nK];do nK=nK+0X01;end;local MK=(zK[0X006]);zK[VK+0X001]=MK;zK[VK]=MK[EK[0X006]];EK=eK[nK];nK=nK+0X0001;(zK)[0X008]=EK[7];nK=nK+1;do VK=6;end;zK[VK](zK[VK+0X01],zK[VK+2]);QK=VK-0X1;nK=nK+1;nK=nK+0x00001;do EK=eK[nK];end;nK=nK+0x01;nK=EK[2];end;else if dK==5 then do(zK)[0X06]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;zK[6]=zK[0X06][EK[6]];do EK=eK[nK];end;local VK=6;do nK=nK+0x01;end;local MK=(zK[6]);zK[VK+1]=MK;(zK)[VK]=MK[EK[6]];EK=eK[nK];nK=nK+0X1;do zK[8]=UK[EK[0X7]];end;nK=nK+1;do VK=6;end;zK[VK](zK[VK+1],zK[VK+2]);do QK=VK-1;end;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X01;nK=EK[2];else zK[0X8]=UK[EK[0x7]];EK=eK[nK];nK=nK+0x01;do(zK)[0X8]=zK[0X8][EK[6]];end;do nK=nK+0X1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X00001;if zK[0X8]~=zK[0X00005]then else do nK=EK[0X3];end;end;end;end;else do if dK<0X002 then if dK==0x0001 then else do(zK)[0X6]=zK[2][EK[0x6]];end;EK=eK[nK];nK=nK+1;(zK)[6]=zK[6][EK[0X6]];local VK=6;nK=nK+0X001;nK=nK+0x1;EK=eK[nK];nK=nK+1;local MK=zK[0x06];zK[VK+0X1]=MK;(zK)[VK]=MK[EK[6]];nK=nK+0X1;(zK)[8]=zK[5];do nK=nK+0X1;end;VK=0X6;zK[VK]=zK[VK](zK[VK+0x1],zK[VK+2]);QK=VK;do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];do nK=nK+0x1;end;if not zK[0X06]then nK=EK[2];end;end;else if dK==0X0003 then local VK=EK[0X3];local MK,aK,gK=zK[VK]();if not(MK)then else do(zK)[VK+0X1]=aK;end;(zK)[VK+0x2]=gK;nK=EK[2];end;else zK[0x9]=zK[0X2][EK[0X6]];EK=eK[nK];nK=nK+0X1;local VK=0X09;do zK[0X9]=zK[9][EK[6]];end;EK=eK[nK];do nK=nK+1;end;local MK=zK[0X9];(zK)[VK+1]=MK;do zK[VK]=MK[EK[6]];end;nK=nK+1;(zK)[11]=zK[0x08];nK=nK+1;VK=0X00009;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);do QK=VK;end;EK=eK[nK];nK=nK+0X1;if not(not zK[0X009])then else nK=EK[2];end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=0X0001,{};local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-0X001;end;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;local QK=(0);if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+0x1;if not(dK<0X8)then do if not(dK<12)then if not(dK<14)then if dK~=0Xf then local VK=(EK[3]);local MK,aK=zK[VK]();if MK then nK=EK[0X002];(zK)[VK+0x0003]=aK;end;else end;else do if dK==13 then(zK)[0X1]=UK[EK[0x007]];do EK=eK[nK];end;local MK=0X00002;nK=nK+1;local VK=sK[0X0];(zK)[0X02]=EK[7];nK=nK+0X1;local aK=(0X01);zK[0X003]=VK[0X1][VK[0X0002]];nK=nK+0X1;zK[2]=zK[MK]..zK[MK+0X1];nK=nK+1;zK[aK](zK[aK+1]);QK=aK-0X1;nK=nK+1;do repeat local gK,wK=mK,(zK);local rK=({});for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[1]==wK and ZK[0X2]>=0 then local GK=ZK[0X0002];if not rK[GK]then(rK)[GK]={wK[GK]};end;(ZK)[1]=rK[GK];ZK[0X00002]=1;end;end;end;until true;end;return;else do zK[EK[3]]=EK[7];end;end;end;end;else if not(dK>=0XA)then if dK==9 then local VK=EK[2];local MK=(zK[VK]);for aK=VK+0X001,EK[0X00005]do MK=MK..zK[aK];end;do zK[EK[3]]=MK;end;else local VK=(EK[0x03]);local MK=(zK[VK]);local aK,gK=zK[VK+0x1],(zK[VK+2]);(zK)[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[2];end;else if dK==0X0000b then zK[EK[0X0003]]={S({},1,EK[0X00002])};else(zK)[EK[3]]=UK[EK[0X7]];end;end;end;end;else do if not(dK>=4)then if dK<2 then if dK==1 then do(zK)[EK[3]]=CK[EK[2]];end;else(zK)[EK[3]]=zK[EK[2]]>=zK[EK[5]];end;else if dK==3 then if not(not(zK[EK[2]]<=zK[EK[5]]))then else nK=EK[0X3];end;else(zK)[EK[3]]=zK[EK[2]]*zK[EK[0X5]];end;end;else if not(dK<6)then do if dK~=7 then local VK=(EK[0x2]);local aK,MK=VK[0X9],(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[0x1]~=0 then(MK)[wK-0X1]=sK[rK[2]];else(MK)[wK-0X0001]={zK,rK[2]};end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else local VK,MK=EK[0x3],((EK[0X005]-0X00001)*50);local aK=(zK[VK]);for gK=1,EK[2]do(aK)[MK+gK]=zK[VK+gK];end;end;end;else if dK~=5 then if zK[EK[0X00002]]==zK[EK[0X5]]then nK=EK[3];end;else nK=EK[0X2];end;end;end;end;end;end;end;end;end;end;end;end;else do if SK<0X0000b0 then do if not(SK>=170)then if not(SK<167)then if SK<0x0000A8 then _K=function(...)local nK,zK=0X1,({});local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local UK=((pK==z and KK or pK));local QK=0;do NK=NK-0X001;end;for EK=0,NK do do if not(WK>EK)then break;else zK[EK]=HK[EK+0x00001];end;end;end;do if not PK then do HK=nil;end;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x00001 or 0,S(HK,WK+0X01,NK+0X001)};end;end;end;if UK~=pK then _(_K,UK);end;do repeat local EK=(eK[nK]);local dK=EK[0x1];nK=nK+1;if dK>=10 then if dK<0X00f then do if dK<12 then do if dK~=0XB then zK[EK[0x3]]={S({},1,EK[0X2])};else(zK)[EK[3]]=zK[EK[0X2]]<zK[EK[5]];end;end;else if dK<0xD then do(zK)[EK[3]]=EK[0X7];end;else if dK~=14 then zK[EK[0x3]]=zK[EK[0x2]]-zK[EK[0X5]];else for VK=EK[3],EK[0X2]do(zK)[VK]=nil;end;end;end;end;end;else if dK<18 then if dK>=16 then if dK==0X0011 then local VK=(EK[0x2]);local aK,MK=VK[9],nil;local gK=#aK;if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0X1]~=0X0 then(MK)[wK-0X01]=sK[rK[2]];else MK[wK-1]={zK,rK[2]};end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);else do(zK)[0X001]=UK[EK[0x07]];end;nK=nK+1;local VK=1;nK=nK+1;do nK=nK+0X1;end;do zK[2]=zK[0x0];end;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;nK=nK+1;nK=nK+0x01;EK=eK[nK];nK=nK+0x01;if zK[0X1]==EK[6]then else do nK=EK[0X03];end;end;end;else if not(zK[EK[2]]<zK[EK[5]])then else nK=EK[0X3];end;end;elseif not(dK<19)then if dK==20 then nK=EK[0x2];else(zK)[EK[0X0003]]=UK[EK[0X7]];end;else(zK)[EK[0X0003]]=zK[EK[2]]>zK[EK[0X5]];end;end;else if not(dK>=0X5)then if dK>=0X2 then do if dK<3 then(zK)[0x0001]=UK[EK[0X07]];nK=nK+0X1;do nK=nK+0X001;end;EK=eK[nK];do nK=nK+0x1;end;local VK=1;(zK)[0X2]=EK[0X7];nK=nK+1;(zK[VK])(zK[VK+0X00001]);QK=VK-0x1;do nK=nK+0X1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X0001;nK=EK[0x0002];else do if dK==4 then do zK[1]=UK[EK[0X007]];end;do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[0X1]=zK[1][EK[6]];nK=nK+0x1;local VK=sK[0X0];zK[2]=VK[0X01][VK[0X2]];nK=nK+1;nK=nK+1;nK=nK+0X1;(zK)[0X3]=zK[0X00000];EK=eK[nK];nK=nK+1;if zK[0X3]then nK=EK[2];end;else do(zK)[0X01]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;(zK)[1]=zK[1][EK[6]];local VK=sK[0X0];nK=nK+1;zK[0X00002]=VK[1][VK[2]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+1;do zK[1][zK[0X2]]=EK[6];end;do EK=eK[nK];end;nK=nK+1;nK=EK[2];end;end;end;end;else do if dK==0X01 then(zK)[1]=UK[EK[0X7]];nK=nK+0X1;QK=0X00001;zK[QK]();QK=QK-1;nK=nK+0X1;repeat local VK,MK=mK,zK;local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0X2]>=0X00)then else local LK=lK[0x2];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];do lK[0X2]=0X1;end;end;end;end;end;until"\052\i\+\078\067";return;else do(zK)[0X1]=UK[EK[7]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;do if zK[0X1]~=EK[0x006]then nK=EK[0x3];end;end;end;end;end;else do if dK>=7 then if dK>=0X0008 then do if dK==0x9 then repeat local VK,MK,aK=mK,zK,(EK[3]);local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if LK[1]==MK and LK[2]>=aK then local DK=LK[2];do if not gK[DK]then(gK)[DK]={MK[DK]};end;end;LK[0X00001]=gK[DK];(LK)[0x0002]=1;end;end;end;until true;else zK[EK[0x3]][zK[EK[2]]]=zK[EK[5]];end;end;else if zK[EK[0X2]]<=zK[EK[0X5]]then do nK=EK[3];end;end;end;elseif dK~=6 then zK[EK[0X3]]=zK[EK[2]]==zK[EK[5]];else end;end;end;end;until false;end;end;else if SK~=169 then _K=function(...)local zK=({});local nK=0X1;local pK=Q();local CK={[2]=zK,[1]=xK};local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;if not PK then do HK=nil;end;else if not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X00001,NK+1)};end;end;local QK=0;do if UK==pK then else(_)(_K,UK);end;end;repeat local EK=eK[nK];local dK=(EK[0X1]);nK=nK+0X1;if not(dK<8)then if not(dK<12)then if not(dK>=0XE)then do if dK==13 then(zK)[EK[3]]=zK[EK[2]]-zK[EK[5]];else do nK=EK[2];end;end;end;else if not(dK<0xf)then if dK~=0x10 then if not(zK[EK[2]]<zK[EK[5]])then else nK=EK[0X003];end;else zK[EK[3]]=EK[0X07];end;else do zK[EK[3]]={S({},1,EK[2])};end;end;end;else do if dK>=0XA then do if dK~=11 then zK[EK[0X3]]=zK[EK[0X002]]%zK[EK[5]];else(zK)[0X001]=UK[EK[7]];nK=nK+0X1;zK[0x2]=zK[0x0000];EK=eK[nK];do nK=nK+0x1;end;zK[1][EK[7]]=zK[2];EK=eK[nK];nK=nK+1;nK=EK[0x2];end;end;else if dK~=0X9 then do(zK)[0x1]=UK[EK[7]];end;nK=nK+0x01;do nK=nK+0x1;end;nK=nK+0X1;do QK=1;end;zK[QK]();QK=QK-0X0001;nK=nK+1;repeat local VK,MK=mK,(zK);local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[2]>=0X00)then else local LK=(lK[2]);if not aK[LK]then aK[LK]={MK[LK]};end;do lK[0X1]=aK[LK];end;(lK)[2]=1;end;end;end;end;end;until-1551035646;return;else end;end;end;end;else do if dK<4 then do if dK<2 then do if dK~=1 then local VK=EK[0x00002];local aK=(VK[9]);local gK,MK=#aK,nil;do if gK>0X00000 then MK={};do for wK=1,gK do local rK=aK[wK];if rK[1]~=0 then MK[wK-0X001]=sK[rK[0X002]];else(MK)[wK-0X1]={zK,rK[0x2]};end;end;end;(K)(mK,MK);end;end;do zK[EK[0X003]]=Ri(MK,UK,VK);end;else if zK[EK[3]]then nK=EK[0X2];end;end;end;else if dK~=3 then do zK[0X00001]=UK[EK[7]];end;do nK=nK+1;end;do zK[2]=zK[0X00];end;nK=nK+0x1;local VK=1;zK[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+1;if zK[1]~=EK[6]then nK=EK[0X3];end;else zK[EK[3]]=zK[EK[0X0002]]^zK[EK[0x5]];end;end;end;else if dK<0X6 then do if dK~=0X5 then zK[EK[0x3]]=UK[EK[7]];else zK[EK[3]]=L(zK[EK[2]],zK[EK[0X5]]);end;end;else if dK==0x07 then zK[0X1]=UK[EK[0X0007]];do nK=nK+1;end;nK=nK+0X0001;nK=nK+1;zK[2]={};EK=eK[nK];nK=nK+0X1;do zK[0x01][EK[0x7]]=zK[0X0002];end;EK=eK[nK];nK=nK+0x1;nK=EK[0X2];else local VK=EK[3];local MK=zK[EK[0x2]];do(zK)[VK+0x00001]=MK;end;zK[VK]=MK[EK[0x00006]];end;end;end;end;end;until false;end;else _K=function(...)local nK=1;local zK={};local pK=(Q());local UK=((pK==z and KK or pK));local NK,HK=vi(...);local CK=({[2]=zK,[1]=xK});do NK=NK-0X1;end;do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0X000,S(HK,WK+1,NK+1)};end;end;if UK==pK then else _(_K,UK);end;local QK=0X0;while 0.8172283976839275 do local EK=eK[nK];local dK=EK[0X1];nK=nK+0x1;if not(dK<0X8)then if dK<0Xc then do if dK>=10 then if dK==11 then zK[EK[0x003]]=EK[7];else(zK)[EK[3]]=zK[EK[2]]^zK[EK[0X5]];end;else if dK==0X00009 then(zK)[1]=UK[EK[0x00007]];EK=eK[nK];do nK=nK+0X1;end;(zK)[2]=UK[EK[7]];local VK=4;do EK=eK[nK];end;nK=nK+0x00001;zK[3]=EK[7];EK=eK[nK];nK=nK+0x1;(zK)[4]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;zK[0X5]=EK[0X7];local MK=(0X3);nK=nK+0x0001;zK[VK]=zK[VK](zK[VK+0X001]);QK=VK;nK=nK+0x01;nK=nK+1;do nK=nK+0X1;end;do zK[3]=zK[MK]..zK[MK+1];end;nK=nK+0X1;VK=0X00001;do(zK)[VK]=zK[VK](zK[VK+0X01],zK[VK+2]);end;do QK=VK;end;EK=eK[nK];do nK=nK+1;end;if not(not zK[1])then else do nK=EK[0x0002];end;end;else local VK=sK[0X0];zK[1]=VK[1][VK[2]];nK=nK+0X1;nK=nK+1;EK=eK[nK];local MK=(1);nK=nK+0X00001;local aK=(zK[1]);zK[MK+1]=aK;(zK)[MK]=aK[EK[6]];EK=eK[nK];nK=nK+1;(zK)[3]=EK[7];EK=eK[nK];nK=nK+0x1;(zK)[4]=EK[0X0007];nK=nK+1;MK=1;QK=MK+0x004-0X1;(zK[MK])(S(zK,MK+0x001,QK));QK=MK-0X01;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;end;else if not(dK>=14)then if dK~=0x000D then do(zK)[EK[0X3]]=UK[EK[7]];end;else local VK=(sK[0X0]);(zK)[1]=VK[1][VK[2]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;local MK=0x00001;nK=nK+0X1;local aK=zK[0X1];do(zK)[MK+0X1]=aK;end;(zK)[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+0x0001;zK[3]=EK[0X7];EK=eK[nK];nK=nK+0X1;zK[4]=EK[7];nK=nK+0X1;MK=0X1;QK=MK+4-1;(zK[MK])(S(zK,MK+1,QK));QK=MK-1;EK=eK[nK];nK=nK+0X1;do nK=EK[2];end;end;else if dK~=15 then(zK)[EK[3]]=zK[EK[2]]*zK[EK[0X5]];else do repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0X2]>=0X0)then else local LK=(lK[0X002]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;do lK[1]=aK[LK];end;(lK)[2]=1;end;end;end;until true;end;return;end;end;end;else if not(dK<0X04)then if dK>=0X6 then if dK~=7 then if not(not(zK[EK[0x00002]]<zK[EK[0X5]]))then else nK=EK[0x03];end;else(zK)[EK[3]]=g(zK[EK[0x2]],zK[EK[5]]);end;else if dK==5 then do(zK)[EK[0X3]]={S({},0X00001,EK[0X02])};end;else if zK[EK[2]]~=zK[EK[5]]then else nK=EK[0x3];end;end;end;else if not(dK>=0X2)then if dK~=1 then else do nK=EK[0X0002];end;end;else if dK==3 then do for VK=EK[0X3],EK[0X02]do zK[VK]=nil;end;end;else local VK=EK[2];local MK=(nil);local aK=(VK[0X009]);local gK=#aK;if not(gK>0)then else MK={};for wK=0X0001,gK do local rK=(aK[wK]);if rK[1]==0 then do(MK)[wK-1]={zK,rK[0X00002]};end;else MK[wK-0x1]=sK[rK[2]];end;end;K(mK,MK);end;(zK)[EK[0x3]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;else do if SK<0x0A5 then do _K=function(...)local zK={};local QK=0X00;local nK=(1);local pK=(Q());local NK,HK=vi(...);local CK=({[2]=zK,[1]=xK});NK=NK-1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X00000,S(HK,WK+1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);do nK=nK+1;end;if not(dK<5)then if not(dK>=0X08)then if not(dK<6)then do if dK~=0X7 then if not zK[EK[0X3]]then nK=EK[0X002];end;else zK[1]=UK[EK[7]];nK=nK+1;nK=nK+1;do nK=nK+0x001;end;zK[0x2]=zK[0X00];EK=eK[nK];do nK=nK+0X1;end;do(zK[1])[EK[7]]=zK[2];end;EK=eK[nK];nK=nK+1;zK[0X1]=UK[EK[7]];nK=nK+0X1;QK=0X1;zK[QK]();QK=QK-0X0001;do nK=nK+0X01;end;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do do if lK[1]==MK and lK[0X2]>=0 then local LK=(lK[0x2]);if not aK[LK]then aK[LK]={MK[LK]};end;do lK[0X1]=aK[LK];end;(lK)[0X2]=0X01;end;end;end;end;end;until true;return;end;end;else zK[EK[0x3]]=UK[EK[7]];end;else if not(dK>=9)then(zK)[EK[0X3]]={S({},0X1,EK[2])};else if dK~=10 then local VK,MK=EK[3],zK[EK[2]];zK[VK+0X1]=MK;do(zK)[VK]=MK[EK[0X00006]];end;else nK=EK[2];end;end;end;else do if dK>=0X2 then if dK>=3 then if dK==4 then local VK,MK=EK[0X2],(nil);local aK=VK[0X9];local gK=#aK;if not(gK>0X0)then else MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0 then do MK[wK-0x001]=sK[rK[2]];end;else(MK)[wK-1]={zK,rK[0x2]};end;end;K(mK,MK);end;do zK[EK[0X03]]=Ri(MK,UK,VK);end;else do zK[EK[0x3]]=not zK[EK[2]];end;end;else end;else if dK==0x1 then(zK)[EK[3]]=EK[0x7];else(zK[EK[0x3]])[zK[EK[2]]]=zK[EK[0X5]];end;end;end;end;end;end;end;else if SK~=0X000a6 then _K=function(...)local nK,zK=1,{};local pK=Q();local CK={[2]=zK,[1]=xK};local QK,UK=0,((pK==z and KK or pK));local NK,HK=vi(...);do NK=NK-1;end;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;elseif not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0x00001]);nK=nK+0x00001;do if not(dK<0x08)then if dK<12 then if dK>=0X0a then if dK==0xb then local VK=(EK[0X003]);for MK=VK,VK+(EK[2]-1)do(zK)[MK]=HK[WK+(MK-VK)+1];end;else zK[EK[0X003]]=EK[0x07];end;else do if dK==0x09 then local VK=EK[0X00002];local aK=(VK[9]);local gK,MK=#aK,(nil);if gK>0 then MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X1]~=0X00000 then MK[wK-0X1]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X2]};end;end;end;K(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else local VK=(EK[0X3]);local MK,aK=zK[VK]();do if MK then do for gK=0X1,EK[0X5]do(zK)[VK+gK]=aK[gK];end;end;do nK=EK[2];end;end;end;end;end;end;else if dK>=14 then if dK==15 then(zK)[EK[3]]=zK[EK[2]]>=zK[EK[5]];else local VK=(zK[EK[0X0002]]/zK[EK[5]]);(zK)[EK[3]]=VK-VK%1;end;else do if dK==0X00D then(zK)[EK[3]]=not zK[EK[0X2]];else do(zK)[0X1]=UK[EK[0X07]];end;nK=nK+0x1;(zK)[0x2]=zK[0];EK=eK[nK];nK=nK+0x00001;(zK[0X1])[EK[7]]=zK[2];local wK=(1);EK=eK[nK];nK=nK+1;do zK[1]=UK[EK[0X7]];end;nK=nK+1;QK=0X1;zK[QK]();QK=QK-1;nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+1;local MK=nil;(zK)[1]=UK[EK[7]];nK=nK+1;nK=nK+0X001;EK=eK[nK];do nK=nK+0x01;end;zK[0X1]=zK[1][EK[0x6]];nK=nK+0x00001;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;local VK=EK[2];local aK=VK[9];local gK=(#aK);do if not(gK>0)then else MK={};for rK=1,gK do local lK=aK[rK];if lK[1]~=0x000 then MK[rK-1]=sK[lK[2]];else(MK)[rK-1]={zK,lK[2]};end;end;(K)(mK,MK);end;end;zK[2]=Ri(MK,UK,VK);nK=nK+0X1;(zK[wK])(zK[wK+0x0001]);QK=wK-1;do nK=nK+1;end;do nK=nK+0x1;end;nK=nK+0X1;repeat local rK,lK,LK=mK,zK,({});for DK,ZK in W,rK do do for GK,OK in W,ZK do if OK[0X1]==lK and OK[2]>=0x0 then local tK=OK[2];if not LK[tK]then(LK)[tK]={lK[tK]};end;OK[0X1]=LK[tK];OK[0X2]=0X1;end;end;end;end;until true;do return;end;end;end;end;end;else if not(dK>=4)then if dK<0x2 then if dK==1 then(UK)[EK[7]]=zK[EK[0X003]];else(zK)[EK[3]]=UK[EK[7]];end;else do if dK~=3 then local VK=(EK[0X3]);local MK,aK,gK=zK[VK],zK[VK+1],zK[VK+2];zK[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);nK=EK[0X2];else end;end;end;else do if not(dK<0X0006)then if dK==0x007 then nK=EK[0X002];else for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;end;else if dK~=0X5 then(zK)[EK[0X03]]={S({},0X01,EK[0x2])};else zK[EK[3]]=zK[EK[2]][zK[EK[5]]];end;end;end;end;end;end;end;end;else _K=function(...)local nK=1;local zK=({});local CK,QK={[2]=zK,[1]=xK},0X0;local pK=Q();local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if not(WK>EK)then do break;end;else(zK)[EK]=HK[EK+1];end;end;do if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0x00,S(HK,WK+0X1,NK+1)};end;end;if UK~=pK then(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0X01];do nK=nK+0x1;end;if not(dK>=0X009)then do if not(dK<0x4)then do if dK>=6 then if not(dK<7)then if dK==8 then(zK)[EK[3]]=-zK[EK[0x02]];else(zK)[EK[3]]=zK[EK[2]]^zK[EK[5]];end;else zK[EK[3]]={S({},0X1,EK[2])};end;else if dK==0X0005 then do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;else(zK)[0x1]=UK[EK[0x00007]];nK=nK+1;do nK=nK+1;end;nK=nK+0X001;(zK)[2]=zK[0X00000];do EK=eK[nK];end;nK=nK+1;zK[1][EK[7]]=zK[2];do EK=eK[nK];end;nK=nK+0X0001;do(zK)[0x1]=UK[EK[0X7]];end;do nK=nK+1;end;QK=1;(zK[QK])();do QK=QK-1;end;nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+0X001;end;local MK=nil;zK[0x001]=UK[EK[0X007]];do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X001;do zK[0X001]=zK[1][EK[6]];end;do EK=eK[nK];end;nK=nK+1;local wK,VK=1,EK[2];local aK=(VK[0X0009]);local gK=#aK;if gK>0X0 then MK={};do for rK=0X1,gK do local lK=(aK[rK]);if lK[0X01]==0X0 then(MK)[rK-1]={zK,lK[0x2]};else do(MK)[rK-1]=sK[lK[0X2]];end;end;end;end;K(mK,MK);end;zK[2]=Ri(MK,UK,VK);do nK=nK+0x1;end;zK[wK](zK[wK+1]);QK=wK-1;nK=nK+0X1;repeat local rK,lK=mK,(zK);local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[2]>=0x0 then local tK=(OK[2]);if not(not LK[tK])then else LK[tK]={lK[tK]};end;(OK)[1]=LK[tK];(OK)[0X0002]=0X001;end;end;end;until true;return;end;end;end;else if dK>=0X2 then do if dK~=3 then local VK,MK=EK[3],(EK[5]-0X01)*0X32;local aK=zK[VK];for gK=0X0001,EK[0x02]do(aK)[MK+gK]=zK[VK+gK];end;else do zK[EK[0X03]]=#zK[EK[0X2]];end;end;end;else if dK==1 then(zK)[EK[3]]=EK[7];else zK[EK[3]]=zK[EK[2]]*zK[EK[5]];end;end;end;end;else do if dK<0Xd then do if dK>=0XB then if dK~=0XC then if not(zK[EK[0X2]]<=zK[EK[0X0005]])then else nK=EK[3];end;else local VK=(EK[0X003]);local MK,aK=zK[VK]();if not(MK)then else nK=EK[2];zK[VK+3]=aK;end;end;else do if dK~=10 then else zK[EK[0X00003]]=true;end;end;end;end;else if dK>=15 then do if not(dK>=16)then if zK[EK[0X00002]]~=zK[EK[0X5]]then else nK=EK[3];end;else if dK==0X11 then nK=EK[2];else local VK=EK[0X2];local MK=nil;local aK=(VK[9]);local gK=(#aK);do if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];do if rK[0X1]~=0 then(MK)[wK-0x0001]=sK[rK[0x2]];else MK[wK-1]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;end;do zK[EK[0x3]]=Ri(MK,UK,VK);end;end;end;end;else if dK~=0X0000e then zK[EK[0X3]]=UK[EK[0X0007]];else zK[EK[0X03]]=zK[EK[0X0002]]<zK[EK[0X005]];end;end;end;end;end;end;end;end;end;end;end;else if not(SK>=173)then if not(SK<0xAb)then if SK==0Xac then do _K=function(...)local nK,zK=1,{};local pK=Q();local NK,HK=vi(...);NK=NK-0x00001;local UK=(pK==z and KK or pK);local CK={[2]=zK,[1]=xK};local QK=0X0;do for EK=0X0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;do if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+1,NK+0X01)};end;end;end;if UK~=pK then(_)(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK<5)then if not(dK<0X8)then if not(dK>=9)then zK[EK[3]]=zK[EK[0X2]]-zK[EK[0X00005]];else if dK~=10 then CK[EK[2]]=zK[EK[0X0003]];else if not(zK[EK[0X3]])then else do nK=EK[2];end;end;end;end;else if dK<0X6 then nK=EK[0x2];else if dK==0x7 then else(zK)[1]=UK[EK[7]];nK=nK+0X1;do nK=nK+1;end;nK=nK+0X1;(zK)[2]=zK[0];EK=eK[nK];do nK=nK+0X1;end;zK[1][EK[0X7]]=zK[2];EK=eK[nK];do nK=nK+1;end;(zK)[0X0001]=UK[EK[7]];nK=nK+1;nK=nK+0X01;nK=nK+1;QK=0X00001;(zK[QK])();QK=QK-0x1;nK=nK+0x001;repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0X2]>=0)then else local LK=lK[2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0X001]=aK[LK];(lK)[2]=1;end;end;end;until true;do return;end;end;end;end;elseif not(dK>=0X2)then if dK~=0X1 then do(zK)[EK[3]]=l(zK[EK[2]]);end;else local MK=nil;local VK=(EK[0x002]);local aK=VK[0X9];local gK=#aK;if gK>0X0 then MK={};do for wK=1,gK do local rK=(aK[wK]);if rK[0X1]~=0 then MK[wK-1]=sK[rK[2]];else MK[wK-0x1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else if not(dK>=0X003)then do(zK)[EK[0x3]]=UK[EK[7]];end;else do if dK==0X4 then zK[EK[3]]=EK[7];else(zK)[EK[0X0003]]={S({},0x1,EK[0x02])};end;end;end;end;until false;end;end;else do _K=function(...)local nK=(1);local zK={};local pK=(Q());local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-1;for EK=0,NK do if not(WK>EK)then do break;end;else do(zK)[EK]=HK[EK+1];end;end;end;local UK=((pK==z and KK or pK));if not PK then do HK=nil;end;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then(_)(_K,UK);end;local QK=0X0;repeat local EK=(eK[nK]);local dK=EK[1];nK=nK+0x1;if not(dK<0X6)then if not(dK>=0X009)then if not(dK<7)then if dK==0x8 then do zK[EK[0X3]]=UK[EK[0x07]];end;else for VK=EK[0X03],EK[2]do zK[VK]=nil;end;end;else(zK)[EK[0X3]]=zK[EK[2]]~=zK[EK[5]];end;else if not(dK>=11)then do if dK==10 then do nK=EK[2];end;else end;end;else do if dK==0Xc then zK[EK[0X3]]=EK[0X7];else local MK=EK[0X2];local VK=EK[0X0003];do if MK~=0 then QK=VK+MK-0X01;end;end;local aK,gK,wK=EK[0X0005],nil,(nil);if MK==0X1 then do gK,wK=vi(zK[VK]());end;else gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));end;do if aK~=1 then if aK==0 then do gK=gK+VK-1;end;QK=gK;else gK=VK+aK-2;do QK=gK+1;end;end;local rK=(0);for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;else QK=VK-1;end;end;end;end;end;end;else do if not(dK<3)then do if dK<0X4 then local VK=EK[2];local MK=(nil);local aK=(VK[0X9]);local gK=#aK;do if gK>0X0000 then MK={};for wK=1,gK do local rK=aK[wK];do if rK[0x1]~=0 then(MK)[wK-0X0001]=sK[rK[0X02]];else MK[wK-1]={zK,rK[0X0002]};end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);else if dK~=0X5 then do zK[EK[3]]={S({},1,EK[2])};end;else(zK)[EK[3]]=zK[EK[2]]^zK[EK[5]];end;end;end;else if not(dK>=1)then do(zK)[0X01]=UK[EK[7]];end;nK=nK+0x1;zK[2]=zK[0];EK=eK[nK];nK=nK+1;do(zK[1])[EK[7]]=zK[0X2];end;EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[0X0007]];do nK=nK+0x1;end;QK=1;(zK[QK])();do QK=QK-1;end;nK=nK+1;nK=nK+1;nK=nK+1;repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do do if not(lK[0X01]==MK and lK[0X2]>=0X0)then else local LK=(lK[0X02]);if not aK[LK]then(aK)[LK]={MK[LK]};end;do(lK)[0x1]=aK[LK];end;lK[0X002]=1;end;end;end;end;end;until true;return;else if dK==0X002 then(zK)[EK[3]]=w(zK[EK[2]],zK[EK[5]]);else zK[EK[0X0003]]=true;end;end;end;end;end;until false;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=Q();local QK,CK=0X0,({[1]=xK,[2]=zK});local NK,HK=vi(...);local UK=((pK==z and KK or pK));do NK=NK-1;end;for EK=0,NK do if not(WK>EK)then do break;end;else zK[EK]=HK[EK+1];end;end;if not PK then HK=nil;else if not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;if UK==pK then else(_)(_K,UK);end;while-0X68659538 do local EK=(eK[nK]);local dK=(EK[0X01]);nK=nK+1;if dK>=0X9 then if dK>=13 then if not(dK<15)then if dK<0x10 then zK[EK[3]]=UK[EK[7]];else do if dK==17 then zK[1]=UK[EK[0X7]];nK=nK+0x1;(zK)[0X00002]={};do EK=eK[nK];end;do nK=nK+0X1;end;zK[0x1][EK[7]]=zK[2];EK=eK[nK];nK=nK+1;nK=EK[0X00002];else local VK=(EK[0X3]);local MK,aK=zK[VK]();if not(MK)then else for gK=1,EK[5]do zK[VK+gK]=aK[gK];end;nK=EK[0X0002];end;end;end;end;else if dK~=14 then do for VK=EK[0X00003],EK[2]do(zK)[VK]=nil;end;end;else(zK)[EK[3]]=EK[0X7];end;end;else do if not(dK<11)then if dK==0X0000C then(zK)[EK[3]]=CK[EK[2]];else local VK=(EK[0X2]);local MK=(nil);local aK=VK[0X9];local gK=(#aK);if gK>0 then MK={};for wK=1,gK do local rK=aK[wK];if rK[1]==0 then MK[wK-1]={zK,rK[0X02]};else MK[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;elseif dK~=10 then(zK)[1]=UK[EK[7]];nK=nK+0x1;nK=nK+0X1;nK=nK+1;QK=1;(zK[QK])();QK=QK-1;do nK=nK+0X1;end;nK=nK+1;nK=nK+0X0001;repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[2]>=0 then local LK=lK[2];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;(lK)[1]=aK[LK];lK[2]=0x1;end;end;end;end;until true;return;else end;end;end;else do if dK>=4 then if dK<0X0006 then if dK~=5 then do UK[EK[7]]=zK[EK[3]];end;else do(zK)[1]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;local VK=0X00001;nK=nK+0X0001;zK[0x00002]=zK[0];nK=nK+1;zK[VK]=zK[VK](zK[VK+1]);do QK=VK;end;nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+1;if zK[1]~=EK[6]then nK=EK[0X3];end;end;else if dK>=7 then if dK==0x8 then(zK)[EK[0X00003]]={S({},1,EK[0X2])};else local MK=(EK[0X2]);local VK=EK[0x03];if MK~=0X0 then QK=VK+MK-1;end;local aK,gK,wK=EK[5],nil,(nil);if MK==0x0001 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK~=0X1 then if aK~=0 then gK=VK+aK-0X02;QK=gK+0X01;else gK=gK+VK-0x0001;QK=gK;end;local rK=0X0;for lK=VK,gK do rK=rK+1;do zK[lK]=wK[rK];end;end;else QK=VK-1;end;end;else zK[EK[3]]=zK[EK[0X00002]]<=zK[EK[5]];end;end;else if dK>=0X00002 then do if dK~=0X00003 then local VK=(EK[0X0003]);local MK,aK,gK=zK[VK],zK[VK+1],(zK[VK+0X2]);do zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);end;nK=EK[2];else nK=EK[0x2];end;end;else if dK~=1 then(zK)[1]=UK[EK[0X7]];nK=nK+1;zK[2]=zK[0];EK=eK[nK];nK=nK+0x0001;do(zK[0x01])[EK[0X00007]]=zK[0X00002];end;EK=eK[nK];nK=nK+0X001;nK=EK[0X2];else local VK=EK[2];local MK=zK[VK];for aK=VK+0X01,EK[0X005]do MK=MK..zK[aK];end;do(zK)[EK[3]]=MK;end;end;end;end;end;end;end;end;end;else if not(SK>=0xAE)then _K=function(...)local zK=({});local nK=0X001;local pK=Q();local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});do NK=NK-1;end;for EK=0X000,NK do if not(WK>EK)then do break;end;else(zK)[EK]=HK[EK+0X1];end;end;local QK=(0X0);local UK=((pK==z and KK or pK));if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X001,NK+0x1)};end;end;if UK~=pK then(_)(_K,UK);end;repeat local EK=eK[nK];local dK=EK[0X001];nK=nK+0X00001;if not(dK<11)then if dK<0X11 then do if not(dK<14)then if dK>=0XF then if dK==0X10 then do if not(zK[EK[0X2]]<=zK[EK[0X5]])then nK=EK[3];end;end;else(zK)[EK[3]]={S({},1,EK[0X2])};end;else zK[EK[0X3]]=zK[EK[2]]+zK[EK[5]];end;else if not(dK<0Xc)then if dK~=13 then do(zK)[EK[3]]=EK[7];end;else(zK)[0X0]=UK[EK[0X07]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X00]=zK[0][EK[0X06]];nK=nK+1;nK=nK+0x1;do nK=nK+0X1;end;do QK=0;end;do(zK)[QK]=zK[QK]();end;nK=nK+0X0001;do nK=nK+1;end;EK=eK[nK];nK=nK+0X01;if not zK[0]then nK=EK[0X00002];end;end;else repeat local MK,aK,gK=mK,zK,({});for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[1]==aK and LK[2]>=0)then else local DK=(LK[0X2]);if not(not gK[DK])then else gK[DK]={aK[DK]};end;do LK[0X0001]=gK[DK];end;(LK)[0X2]=0X1;end;end;end;until true;local VK=EK[0X03];return S(zK,VK,VK+EK[0X2]-2);end;end;end;else if not(dK>=20)then do if not(dK<0X12)then if dK~=0X013 then do zK[0]=UK[EK[7]];end;do nK=nK+0X1;end;nK=nK+0X1;nK=nK+1;QK=0x0;(zK)[QK]=zK[QK]();nK=nK+0x01;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;do zK[0x0]=zK[0][EK[0X06]];end;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X001;if zK[0]~=EK[6]then else do nK=EK[3];end;end;else(zK)[EK[0X03]]=D(zK[EK[2]],zK[EK[0X5]]);end;else if zK[EK[0X0002]]==zK[EK[0x5]]then nK=EK[3];end;end;end;else do if not(dK<21)then if dK==22 then(zK)[EK[3]]=UK[EK[7]];else local VK=EK[0X00003];local MK,aK=zK[VK]();if MK then for gK=1,EK[5]do zK[VK+gK]=aK[gK];end;do nK=EK[2];end;end;end;else(zK)[0]=UK[EK[7]];do nK=nK+0X00001;end;do nK=nK+0X001;end;local VK=(sK[0]);nK=nK+1;QK=0;(zK)[QK]=zK[QK]();EK=eK[nK];nK=nK+0X1;do(zK)[0X0]=zK[0][EK[0X006]];end;nK=nK+0X1;nK=nK+1;do nK=nK+0X1;end;(zK)[0X1]=VK[1][VK[0X2]];do nK=nK+1;end;nK=nK+0x001;EK=eK[nK];nK=nK+0x00001;zK[1]=zK[0X1][EK[6]];EK=eK[nK];nK=nK+0X001;do(zK)[1]=zK[0X01][EK[6]];end;do nK=nK+1;end;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;do(zK[0])[EK[7]]=zK[1];end;EK=eK[nK];nK=nK+0X1;nK=EK[0x2];end;end;end;end;else if dK<0X5 then if dK<2 then do if dK==1 then(zK)[0X0]=UK[EK[0X07]];nK=nK+1;nK=nK+0x00001;nK=nK+0X1;do QK=0;end;(zK)[QK]=zK[QK]();EK=eK[nK];nK=nK+1;zK[0x0]=zK[0][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK[0])[EK[0x7]]=EK[6];EK=eK[nK];nK=nK+1;nK=EK[0X02];else do repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[0x2]>=0X0)then else local LK=(lK[2]);if not aK[LK]then do aK[LK]={MK[LK]};end;end;lK[0X1]=aK[LK];(lK)[0X2]=0X1;end;end;end;end;until true;end;return;end;end;else if not(dK<0x003)then if dK==0X4 then(zK)[EK[0X003]]=-zK[EK[0X00002]];else end;else(zK)[EK[0X003]]=zK[EK[0x00002]]/zK[EK[0X5]];end;end;else do if dK<8 then do if dK>=6 then if dK==7 then zK[0]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0]=zK[0][EK[0X0006]];do nK=nK+0X00001;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not zK[0]then nK=EK[0x002];end;else local VK=EK[2];local aK=VK[9];local MK=nil;local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X1]~=0X0 then(MK)[wK-1]=sK[rK[2]];else(MK)[wK-0X1]={zK,rK[0X0002]};end;end;K(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else do nK=EK[2];end;end;end;else if dK>=9 then if dK~=10 then(zK)[EK[0x3]]=zK[EK[2]]-zK[EK[5]];else do for VK=EK[3],EK[0X2]do do(zK)[VK]=nil;end;end;end;end;else(zK)[0]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0x0]=zK[0][EK[6]];nK=nK+0X0001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;if zK[0]==EK[6]then else nK=EK[3];end;end;end;end;end;end;until false;end;else if SK==0XaF then _K=function(...)local nK,zK=1,{};local pK=Q();local QK=(0);local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-0X1;for EK=0x0,NK do if WK>EK then zK[EK]=HK[EK+0X1];else do break;end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;else if YK then do(zK)[WK]={n=NK>=WK and NK-WK+0X001 or 0,S(HK,WK+0X1,NK+1)};end;end;end;do if UK~=pK then(_)(_K,UK);end;end;while-0X330eb6Ba do local EK=eK[nK];local dK=(EK[0x1]);nK=nK+0X1;if dK>=0x0019 then do if not(dK<37)then do if dK>=0X02b then if not(dK>=0X2E)then if not(dK<44)then if dK~=45 then if not(zK[EK[3]])then else nK=EK[2];end;else local VK=(EK[3]);local MK,aK=zK[VK]();if MK then for gK=1,EK[5]do do zK[VK+gK]=aK[gK];end;end;nK=EK[2];end;end;else zK[EK[0X3]]=UK[EK[7]];end;else if not(dK<48)then if dK==49 then else do zK[11]=UK[EK[0X7]];end;nK=nK+0X1;nK=nK+0x1;EK=eK[nK];nK=nK+0X001;zK[12]=EK[7];EK=eK[nK];nK=nK+1;do(zK)[0xD]=EK[7];end;do nK=nK+0X1;end;(zK)[0x0000e]={};local VK=(11);EK=eK[nK];nK=nK+1;do(zK[14])[EK[7]]=zK[0];end;nK=nK+0X00001;QK=VK+0x4-0x1;(zK[VK])(S(zK,VK+0X1,QK));QK=VK-1;nK=nK+1;do nK=nK+0X001;end;EK=eK[nK];nK=nK+0X1;(zK)[11]=zK[7]+EK[0x006];nK=nK+1;zK[7]=zK[0xb];EK=eK[nK];nK=nK+1;zK[11]=zK[6]+EK[0x06];nK=nK+0X00001;zK[0X006]=zK[11];EK=eK[nK];nK=nK+1;(zK)[11]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;zK[12]=EK[7];nK=nK+1;do VK=11;end;zK[VK](zK[VK+1]);do QK=VK-0X1;end;do EK=eK[nK];end;nK=nK+1;do nK=EK[0X2];end;end;else do if dK~=0X0002f then zK[EK[0X3]]=true;else(zK)[0XD]=zK[6];nK=nK+0X0001;local VK=10;zK[14]=zK[7];nK=nK+1;do QK=VK+0x5-0X00001;end;zK[VK](S(zK,VK+1,QK));QK=VK-1;nK=nK+0X00001;nK=nK+1;end;end;end;end;else do if dK>=40 then do if not(dK>=41)then(zK)[0Xc]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;(zK)[12]=zK[0xC][EK[0X6]];do EK=eK[nK];end;do nK=nK+0X0001;end;if not(not zK[12])then else nK=EK[2];end;else if dK==0X2a then local VK=sK[0X2];(zK)[0X00003]=VK[1][VK[2]];nK=nK+1;nK=nK+1;nK=nK+0X01;zK[4]=zK[0x1][zK[0X00]];nK=nK+1;local MK=4;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0X4]=zK[4][EK[0X6]];nK=nK+0x1;nK=nK+0X1;nK=nK+1;zK[0x3]=zK[3][zK[4]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;zK[0X3]=zK[3][EK[0X006]];nK=nK+0X001;do zK[4]={S({},0x00001,3)};end;EK=eK[nK];nK=nK+1;(zK)[5]=EK[7];EK=eK[nK];nK=nK+1;zK[6]=EK[0x7];do EK=eK[nK];end;do nK=nK+0x1;end;do(zK)[7]=EK[7];end;local gK=(zK[MK]);nK=nK+1;local aK=(0X1-1)*0X32;for wK=1,0X3 do(gK)[aK+wK]=zK[MK+wK];end;do EK=eK[nK];end;nK=nK+0X1;(zK)[0X0005]=UK[EK[7]];do nK=nK+1;end;do(zK)[0X0006]=zK[0x0];end;nK=nK+0x1;MK=5;do zK[MK]=zK[MK](zK[MK+0X01]);end;do QK=MK;end;nK=nK+0x0001;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0x6]=EK[0x7];EK=eK[nK];nK=nK+1;do zK[7]=EK[0X7];end;nK=nK+1;do for wK=8,0X9 do do(zK)[wK]=nil;end;end;end;do EK=eK[nK];end;nK=nK+0X1;do if zK[0X5]then nK=EK[2];end;end;else zK[EK[3]]=D(zK[EK[0X2]],zK[EK[5]]);end;end;end;else if dK<0X026 then if not(not(EK[0X7]<=zK[EK[0X5]]))then else nK=EK[3];end;else if dK~=39 then local VK=sK[0X01];(zK)[0Xa]=VK[0X01][VK[2]];EK=eK[nK];do nK=nK+0X1;end;do(zK)[0Xa]=zK[0Xa][EK[0X6]];end;EK=eK[nK];nK=nK+1;do zK[0Xa]=zK[0XA][EK[6]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0x1;(zK)[10]=zK[0Xa][EK[0X0006]];do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[0Xa]=zK[0xA][EK[6]];EK=eK[nK];nK=nK+1;zK[0XA]=zK[10][EK[6]];do EK=eK[nK];end;nK=nK+0x01;if not(not zK[0Xa])then else nK=EK[0X2];end;else local VK=sK[EK[0x002]];do zK[EK[0x3]]=VK[0X00001][VK[0x2]];end;end;end;end;end;end;end;else if not(dK<0X01F)then if not(dK<34)then do if dK>=0X23 then if dK~=0X24 then do if not(zK[EK[0X002]]<=zK[EK[0x5]])then else nK=EK[0X3];end;end;else local VK=(EK[0x2]);local aK=VK[9];local gK,MK=#aK,nil;if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0 then do(MK)[wK-0x1]=sK[rK[2]];end;else do(MK)[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;zK[EK[0X03]]=Ri(MK,UK,VK);end;else local VK,MK=sK[3],10;zK[10]=VK[1][VK[2]];do nK=nK+1;end;do nK=nK+0X01;end;do EK=eK[nK];end;nK=nK+1;local aK=zK[0xa];zK[MK+0X1]=aK;(zK)[MK]=aK[EK[0X6]];do EK=eK[nK];end;nK=nK+1;zK[12]=UK[EK[7]];EK=eK[nK];nK=nK+0X001;(zK)[0XC]=zK[12][EK[0X006]];do nK=nK+1;end;nK=nK+0X01;do EK=eK[nK];end;nK=nK+1;(zK)[0x0000d]=EK[0X7];nK=nK+0x01;do VK=sK[0X2];end;zK[14]=VK[1][VK[0x2]];nK=nK+1;nK=nK+0X0001;nK=nK+0X1;do(zK)[0Xf]=zK[1][zK[0]];end;EK=eK[nK];nK=nK+0x1;(zK)[15]=zK[0XF][EK[0X6]];nK=nK+0x1;(zK)[0Xe]=zK[14][zK[0XF]];do EK=eK[nK];end;do nK=nK+0X1;end;do zK[0XE]=zK[0X000e][EK[6]];end;do nK=nK+0X001;end;nK=nK+0x1;nK=nK+1;do zK[0X00f]=zK[0x9];end;nK=nK+0X0001;zK[0X10]=zK[7];nK=nK+1;(zK)[17]=zK[6];nK=nK+0X1;MK=12;QK=MK+0X6-0X00001;do zK[MK]=zK[MK](S(zK,MK+1,QK));end;QK=MK;nK=nK+0X0001;nK=nK+0X01;EK=eK[nK];do nK=nK+1;end;zK[13]=EK[0X7];nK=nK+1;do MK=10;end;do QK=MK+4-0X0001;end;(zK[MK])(S(zK,MK+0X1,QK));QK=MK-0X00001;EK=eK[nK];nK=nK+1;(zK)[0X0A]=UK[EK[7]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+0X1;end;zK[11]=EK[7];nK=nK+1;zK[12]=zK[9];EK=eK[nK];do nK=nK+0x001;end;if not(zK[12])then else nK=EK[0x2];end;end;end;else if not(dK<32)then do if dK==33 then do(zK)[EK[3]]=g(zK[EK[0x2]],zK[EK[0X5]]);end;else do repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0X0 then local LK=(lK[2]);if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];lK[0X2]=0X1;end;end;end;until true;end;do return;end;end;end;else zK[0X000a]=UK[EK[0X7]];local aK=0;EK=eK[nK];do nK=nK+0x00001;end;do(zK)[0Xb]=UK[EK[7]];end;EK=eK[nK];local VK=(11);nK=nK+1;do zK[0Xc]=EK[7];end;nK=nK+0X1;local MK=2;do if MK~=0 then QK=VK+MK-1;end;end;local gK,wK=nil,(nil);if MK~=0X1 then do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;else do gK,wK=vi(zK[VK]());end;end;if aK==0x00001 then do QK=VK-0x0001;end;else if aK~=0x0 then do gK=VK+aK-0X2;end;QK=gK+0x1;else gK=gK+VK-0x1;do QK=gK;end;end;local rK=(0);for lK=VK,gK do rK=rK+1;(zK)[lK]=wK[rK];end;end;nK=nK+0X1;nK=nK+0X1;nK=nK+0X00001;VK=0xa;do(zK)[VK]=zK[VK](S(zK,VK+0x0001,QK));end;QK=VK;do EK=eK[nK];end;nK=nK+1;(zK)[11]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[11]=zK[0Xb][EK[6]];nK=nK+0X1;nK=nK+1;nK=nK+1;do(zK)[0Xc]=zK[0X4];end;do nK=nK+0X1;end;zK[0X000D]=zK[3];nK=nK+0X001;do VK=0Xb;end;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;if not(not zK[0Xb])then else nK=EK[0X00002];end;end;end;else if dK<0x00001c then if not(dK<26)then if dK~=27 then(zK)[0x2]=zK[0X001][zK[0x000]];EK=eK[nK];nK=nK+1;zK[0X2]=zK[2][EK[0X6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[2]=zK[2][EK[0X6]];EK=eK[nK];do nK=nK+1;end;do nK=EK[2];end;else(zK)[2]=zK[1][zK[0]];do EK=eK[nK];end;do nK=nK+0x00001;end;(zK)[0X2]=zK[2][EK[0X6]];nK=nK+0x1;nK=nK+0x1;EK=eK[nK];nK=nK+1;do if not zK[0X2]then nK=EK[0x2];end;end;end;else local VK=sK[0X1];zK[0xB]=VK[0X1][VK[0x002]];nK=nK+1;nK=nK+0X01;EK=eK[nK];nK=nK+0X01;(zK)[0X00b]=zK[11][EK[0X6]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;zK[0X0000b]=zK[11][EK[6]];EK=eK[nK];nK=nK+0X1;(zK)[0X000b]=zK[11][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK)[0Xb]=zK[0X000B][EK[0X006]];EK=eK[nK];nK=nK+0X1;zK[0Xb]=zK[0Xb][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;if not(not zK[0x00b])then else do nK=EK[0X2];end;end;end;else if not(dK<0x1d)then do if dK==30 then(zK)[0X00001]=UK[EK[0x007]];EK=eK[nK];nK=nK+1;(zK)[1]=zK[1][EK[6]];do nK=nK+0X1;end;nK=nK+0X001;do nK=nK+1;end;zK[1]=#zK[1];do EK=eK[nK];end;nK=nK+1;if not(EK[7]<=zK[1])then nK=EK[3];end;else zK[0XB]=UK[EK[7]];local VK=12;do EK=eK[nK];end;local aK=(0x0);nK=nK+1;zK[0X0c]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;zK[13]=EK[7];nK=nK+0X1;local MK=2;if MK==0x0 then else QK=VK+MK-0X01;end;local gK,wK=nil,(nil);if MK==0x1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;do if aK==1 then do QK=VK-0X1;end;else if aK~=0 then gK=VK+aK-2;QK=gK+1;else gK=gK+VK-1;QK=gK;end;local rK=(0X0);for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;end;end;nK=nK+0X1;nK=nK+1;do nK=nK+0x1;end;VK=0xB;(zK)[VK]=zK[VK](S(zK,VK+0X1,QK));QK=VK;EK=eK[nK];nK=nK+1;if not(zK[0XB]<EK[0x6])then else nK=EK[0X3];end;end;end;else zK[0X0]=UK[EK[7]];EK=eK[nK];nK=nK+1;local VK=(0);do(zK)[0]=zK[0][EK[6]];end;EK=eK[nK];nK=nK+1;local MK=zK[0];zK[VK+1]=MK;do zK[VK]=MK[EK[0x6]];end;EK=eK[nK];nK=nK+0x00001;do(zK)[0X0002]=EK[7];end;nK=nK+1;local aK=(sK[0X1]);VK=0X0000;(zK)[VK]=zK[VK](zK[VK+0X01],zK[VK+2]);do QK=VK;end;do EK=eK[nK];end;nK=nK+0X0001;(zK)[0X0]=zK[0X00][EK[0X006]];do nK=nK+0x1;end;(zK)[1]=aK[0X1][aK[2]];do nK=nK+0X00001;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[0X1]=zK[0x1][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;do nK=nK+0x1;end;zK[1]=zK[0X1][EK[0x0006]];do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[0X1]=zK[0x1][EK[0x6]];do EK=eK[nK];end;nK=nK+1;zK[1]=zK[0X1][EK[0x6]];nK=nK+0X00001;do zK[2]=zK[1][zK[0]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not zK[2]then nK=EK[2];end;end;end;end;end;end;elseif not(dK>=12)then if not(dK>=6)then if dK>=3 then do if not(dK<4)then if dK~=5 then zK[EK[0X00003]]=EK[0x7];else zK[0Xb]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;zK[11]=zK[0x000B][EK[6]];nK=nK+0X0001;nK=nK+1;nK=nK+1;local VK=(0XB);zK[0xC]=zK[0X0004];nK=nK+0x0001;do(zK)[0XD]=zK[3];end;do nK=nK+1;end;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);QK=VK;nK=nK+0X001;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do if not(zK[0xb])then else nK=EK[2];end;end;end;else(zK)[11]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;(zK)[11]=zK[11][EK[6]];nK=nK+0X1;nK=nK+0x1;nK=nK+0X01;do zK[0xC]=zK[0X0004];end;local VK=(11);nK=nK+0x1;(zK)[13]=zK[3];nK=nK+0X00001;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+2]);do QK=VK;end;do EK=eK[nK];end;do nK=nK+1;end;if not(zK[0X0000b])then else nK=EK[2];end;end;end;else if dK<0x01 then do(zK)[0XA]=UK[EK[7]];end;nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+1;do zK[11]=UK[EK[0X07]];end;do EK=eK[nK];end;nK=nK+1;(zK)[0Xc]=EK[7];nK=nK+1;local MK,VK=0X2,0X0000b;local aK=(0X0);if MK~=0X0 then do QK=VK+MK-1;end;end;local gK,wK=nil,nil;if MK==1 then gK,wK=vi(zK[VK]());else do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK~=1 then if aK~=0X0 then do gK=VK+aK-2;end;QK=gK+1;else gK=gK+VK-0X1;QK=gK;end;local rK=(0X0);do for lK=VK,gK do rK=rK+1;do zK[lK]=wK[rK];end;end;end;else QK=VK-1;end;nK=nK+0x1;do VK=10;end;zK[VK]=zK[VK](S(zK,VK+1,QK));QK=VK;EK=eK[nK];do nK=nK+0X0001;end;do if not(zK[0x00A]<EK[0X6])then else nK=EK[0X3];end;end;else if dK==0X2 then if not(not(zK[EK[2]]<=zK[EK[0X5]]))then else nK=EK[0x3];end;else do zK[12]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0X001;do zK[0XC]=zK[12][EK[0X6]];end;EK=eK[nK];nK=nK+1;if zK[0xc]~=EK[0X6]then do nK=EK[0X003];end;end;end;end;end;else if dK>=9 then if dK<0xa then local VK=EK[0X03];for MK=VK,VK+(EK[2]-1)do(zK)[MK]=HK[WK+(MK-VK)+0X1];end;else if dK==0X0b then zK[0]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X00001;(zK)[0x0]=zK[0x00000][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;if not zK[0X0]then do nK=EK[2];end;end;else do zK[11]=UK[EK[7]];end;do nK=nK+0X1;end;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+1;do(zK)[0X000C]=EK[7];end;EK=eK[nK];nK=nK+1;(zK)[13]=EK[0x0007];nK=nK+0X01;do zK[14]={};end;EK=eK[nK];nK=nK+1;(zK[14])[EK[7]]=zK[0];nK=nK+1;local VK=11;do QK=VK+4-0x1;end;zK[VK](S(zK,VK+1,QK));QK=VK-0X1;EK=eK[nK];nK=nK+0X00001;zK[0Xb]=zK[7]+EK[6];nK=nK+1;zK[7]=zK[11];EK=eK[nK];nK=nK+1;zK[0X00b]=zK[6]+EK[6];do nK=nK+0X0001;end;(zK)[6]=zK[0X00b];EK=eK[nK];nK=nK+1;(zK)[11]=UK[EK[0X7]];nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0Xc]=EK[0x00007];do nK=nK+1;end;VK=11;zK[VK](zK[VK+1]);QK=VK-1;nK=nK+0X0001;nK=nK+0X01;EK=eK[nK];nK=nK+1;do nK=EK[0X2];end;end;end;else if dK<0x7 then do zK[0X00002]=UK[EK[7]];end;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X001;zK[2]=zK[2][EK[0X6]];EK=eK[nK];nK=nK+1;if zK[2]~=EK[6]then else do nK=EK[0X3];end;end;else if dK==8 then do if zK[EK[0X2]]==EK[0X6]then nK=EK[3];end;end;else nK=EK[2];end;end;end;end;else do if not(dK>=0X12)then do if dK>=0xf then if dK<16 then do zK[2]=UK[EK[7]];end;nK=nK+1;zK[0X3]=zK[1][zK[0]];nK=nK+0X1;nK=nK+0x00001;EK=eK[nK];nK=nK+0X001;zK[0X003]=zK[0X3][EK[0X06]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+1;zK[3]=zK[0X3][EK[0x6]];EK=eK[nK];nK=nK+1;(zK)[3]=zK[3][EK[6]];nK=nK+0X001;nK=nK+0X00001;nK=nK+1;zK[2]=zK[2][zK[3]];EK=eK[nK];nK=nK+1;nK=EK[0X00002];else if dK~=0X011 then zK[EK[0X0003]]=zK[EK[0X00002]]>=zK[EK[5]];else(zK)[EK[0X3]]={S({},1,EK[2])};end;end;else if dK>=0Xd then if dK~=0x000e then if not zK[EK[3]]then nK=EK[0X02];end;else zK[EK[3]][zK[EK[2]]]=zK[EK[0X5]];end;else(zK)[0x0]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do zK[0]=zK[0][EK[0X6]];end;do nK=nK+1;end;nK=nK+0X00001;nK=nK+1;QK=0;(zK)[QK]=zK[QK]();EK=eK[nK];nK=nK+0x001;if not zK[0X00]then do nK=EK[2];end;end;end;end;end;else if dK<21 then if not(dK<19)then if dK==20 then for VK=EK[3],EK[0X00002]do(zK)[VK]=nil;end;else zK[0X0]=UK[EK[0X0007]];EK=eK[nK];nK=nK+1;local VK=0X0;(zK)[0X00001]=EK[0x7];do nK=nK+0X00001;end;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if not(EK[7]<=zK[0X0])then do nK=EK[0X03];end;end;end;else zK[0X3]=UK[EK[0X7]];nK=nK+1;local VK=0X003;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+0X1;(zK)[0x3]=zK[3][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;local MK=zK[0X3];do zK[VK+0X00001]=MK;end;(zK)[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+0X1;zK[0X5]=EK[0X7];nK=nK+1;VK=0x0003;do zK[VK]=zK[VK](zK[VK+1],zK[VK+0x2]);end;QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do(zK)[0x03]=zK[0X03][EK[6]];end;nK=nK+0X001;do nK=nK+1;end;EK=eK[nK];nK=nK+0X01;if zK[3]~=EK[6]then else nK=EK[3];end;end;else if dK<0X17 then if dK==0x16 then zK[10]=UK[EK[7]];EK=eK[nK];local VK=0XA;nK=nK+1;zK[0x0000A]=zK[0X0a][EK[0X06]];nK=nK+0X1;nK=nK+1;nK=nK+1;(zK)[0X0000B]=zK[4];nK=nK+1;do zK[0xc]=zK[3];end;nK=nK+0x1;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;EK=eK[nK];nK=nK+0X00001;if not(not zK[0XA])then else nK=EK[2];end;else do zK[0X03]=UK[EK[7]];end;do EK=eK[nK];end;local VK=(3);do nK=nK+0x1;end;zK[3]=zK[0x3][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK)[4]=UK[EK[7]];do nK=nK+0x1;end;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0X04]=zK[0X04][EK[0X06]];do nK=nK+1;end;do zK[5]=zK[2];end;nK=nK+0X1;zK[VK]=zK[VK](zK[VK+0X1],zK[VK+0x2]);QK=VK;do EK=eK[nK];end;nK=nK+1;if zK[3]then nK=EK[0X00002];end;end;else do if dK==24 then local VK=(sK[0X1]);zK[0XA]=VK[1][VK[2]];nK=nK+1;nK=nK+0X001;do EK=eK[nK];end;nK=nK+1;do(zK)[0X00a]=zK[0X000A][EK[6]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do(zK)[0Xa]=zK[10][EK[6]];end;nK=nK+0X1;do nK=nK+0x001;end;do EK=eK[nK];end;nK=nK+1;(zK)[10]=zK[10][EK[0X006]];EK=eK[nK];nK=nK+0X1;(zK)[10]=zK[10][EK[6]];do EK=eK[nK];end;nK=nK+1;(zK)[0XA]=zK[0Xa][EK[6]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not zK[10]then nK=EK[0X2];end;else do zK[0XA]=UK[EK[7]];end;nK=nK+0X01;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0xA]=zK[0XA][EK[0x6]];do nK=nK+0X001;end;local VK=(0X00A);nK=nK+0X1;EK=eK[nK];nK=nK+1;local MK=zK[10];zK[VK+0X0001]=MK;zK[VK]=MK[EK[6]];do EK=eK[nK];end;nK=nK+0X1;(zK)[12]=EK[0X7];nK=nK+1;do VK=10;end;do zK[VK]=zK[VK](zK[VK+0x1],zK[VK+0X2]);end;QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0x0001;do(zK)[10]=zK[0X0000a][EK[0x06]];end;do nK=nK+0X0001;end;local aK=sK[2];do(zK)[0]=zK[10];end;nK=nK+1;(zK)[0X000A]=aK[0x001][aK[2]];nK=nK+1;zK[0x00b]=zK[0X1][zK[0X0]];EK=eK[nK];nK=nK+0X01;(zK)[0Xb]=zK[0x00b][EK[0x6]];do nK=nK+0X1;end;zK[0X00a]=zK[10][zK[0XB]];local gK=2;do EK=eK[nK];end;nK=nK+0X1;(zK)[10]=zK[0xA][EK[6]];nK=nK+1;zK[3]=zK[10];EK=eK[nK];nK=nK+1;do zK[0XA]=UK[EK[7]];end;do nK=nK+1;end;(zK)[11]=zK[0];nK=nK+0x0001;VK=0Xa;local wK=(3);if gK~=0 then QK=VK+gK-1;end;local rK,lK=nil,(nil);if gK==1 then rK,lK=vi(zK[VK]());else do rK,lK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if wK==1 then do QK=VK-0X1;end;else if wK~=0 then rK=VK+wK-0x2;QK=rK+0x0001;else do rK=rK+VK-1;end;QK=rK;end;local LK=(0);for DK=VK,rK do LK=LK+0X1;zK[DK]=lK[LK];end;end;nK=nK+1;do zK[0X9]=zK[11];end;nK=nK+0X1;(zK)[8]=zK[0Xa];EK=eK[nK];nK=nK+0X1;if zK[8]then nK=EK[2];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local zK=({});local QK=(0);local nK=1;local pK=(Q());local UK=((pK==z and KK or pK));local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-1;end;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0x1];else break;end;end;do if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0x0,S(HK,WK+1,NK+1)};end;end;end;do if UK~=pK then(_)(_K,UK);end;end;do while 0.35127022707435895 do local EK=eK[nK];local dK=(EK[1]);do nK=nK+0X1;end;do if not(dK>=7)then do if dK<3 then do if not(dK>=0X1)then zK[EK[3]]=UK[EK[0X7]];elseif dK~=0X2 then zK[EK[3]]=zK[EK[0X2]][zK[EK[5]]];else(zK)[EK[3]]=EK[0X002];end;end;else do if dK<5 then if dK~=4 then local VK=EK[0X003];local MK=(EK[0X0005]-1)*0X32;local aK=(zK[VK]);do for gK=0X1,EK[0x2]do aK[MK+gK]=zK[VK+gK];end;end;else local VK=EK[2];local aK=(VK[9]);local gK=#aK;local MK=nil;do if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]==0 then MK[wK-1]={zK,rK[0X2]};else MK[wK-1]=sK[rK[0x2]];end;end;(K)(mK,MK);end;end;do zK[EK[0x03]]=Ri(MK,UK,VK);end;end;else if dK~=6 then nK=EK[0X2];else end;end;end;end;end;else do if not(dK>=0Xb)then if not(dK<0X00009)then if dK~=10 then do zK[EK[0x3]]=D(zK[EK[2]],zK[EK[5]]);end;else zK[EK[0x3]]=EK[0X0007];end;else if dK==8 then(zK)[EK[3]]={S({},1,EK[0x2])};else local VK=EK[0X2];local MK=(zK[VK]);do for aK=VK+0x0001,EK[0X5]do MK=MK..zK[aK];end;end;zK[EK[3]]=MK;end;end;elseif dK>=0X000d then do if dK==14 then zK[0X1]=UK[EK[7]];do nK=nK+1;end;do nK=nK+1;end;do nK=nK+1;end;zK[0X002]=zK[0X00000];EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[0X2];EK=eK[nK];nK=nK+0X1;zK[1]=UK[EK[0X00007]];do nK=nK+0x1;end;QK=0X1;zK[QK]();QK=QK-0X1;nK=nK+0x0001;repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[0X2]>=0 then local LK=(lK[2]);if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];do(lK)[2]=1;end;end;end;end;end;until true;do return;end;else if zK[EK[2]]==zK[EK[5]]then do nK=EK[3];end;end;end;end;else if dK~=12 then(zK)[EK[0x003]]=zK[EK[2]]%zK[EK[5]];else local VK=(EK[0x3]);local MK,aK=zK[VK]();do if not(MK)then else for gK=1,EK[5]do do(zK)[VK+gK]=aK[gK];end;end;do nK=EK[0X02];end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK>=182)then if SK<179 then if SK>=0X00b1 then if SK==0XB2 then _K=function(...)local nK=1;local zK={};local CK=({[1]=xK,[2]=zK});local pK=(Q());local QK=(0);local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-0X01;do for EK=0x0,NK do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;end;do if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;do if UK~=pK then(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if not(dK<0x9)then do if dK<13 then do if dK<11 then do if dK~=10 then(zK)[EK[3]]=EK[0X7];else local VK=EK[3];local MK=(b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end));(MK)(zK[VK],zK[VK+0X1],zK[VK+2]);do QK=VK;end;zK[VK]=MK;nK=EK[2];end;end;else if dK==0X00C then nK=EK[2];else end;end;end;else do if not(dK>=15)then do if dK~=0X00e then zK[0X001]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X01;zK[2]=UK[EK[0X7]];nK=nK+0X1;local VK=2;zK[0X03]=zK[0];do nK=nK+1;end;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;EK=eK[nK];nK=nK+1;do(zK[0x1])[EK[7]]=zK[2];end;EK=eK[nK];nK=nK+1;zK[0x1]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X1;do zK[1]=zK[1][EK[0X00006]];end;nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X0001;if zK[1]~=EK[6]then do nK=EK[3];end;end;else local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=#aK;if gK>0X0 then do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);do if rK[1]==0 then MK[wK-1]={zK,rK[0X02]};else(MK)[wK-0X1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;else if dK>=16 then if dK==17 then if zK[EK[0X3]]then do nK=EK[2];end;end;else zK[EK[3]][zK[EK[2]]]=zK[EK[0X5]];end;else do repeat local VK,MK,aK=mK,zK,(EK[0x3]);local gK=({});for wK,rK in W,VK do do for lK,LK in W,rK do do if not(LK[0X00001]==MK and LK[2]>=aK)then else local DK=(LK[0X2]);if not gK[DK]then gK[DK]={MK[DK]};end;LK[0X1]=gK[DK];LK[0X2]=0X0001;end;end;end;end;end;until true;end;end;end;end;end;end;else if dK>=0X004 then if dK>=0x6 then if not(dK>=0X7)then local MK=EK[2];local VK=EK[0X00003];QK=VK+MK-0X1;repeat local aK,gK,wK=mK,zK,({});do for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[1]==gK and DK[2]>=0)then else local ZK=(DK[0x2]);if not(not wK[ZK])then else do(wK)[ZK]={gK[ZK]};end;end;(DK)[0x0001]=wK[ZK];DK[0X2]=0X1;end;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));else if dK==0X8 then do zK[EK[3]]=UK[EK[0x7]];end;else for VK=EK[0X003],EK[2]do do(zK)[VK]=nil;end;end;end;end;else if dK==5 then do zK[0X1]=UK[EK[0X0007]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[1][EK[0x7]]=EK[0X6];end;EK=eK[nK];nK=nK+0X1;(zK)[0X0001]=UK[EK[0x7]];local VK=(0x001);EK=eK[nK];nK=nK+0X0001;zK[0X1]=zK[0X1][EK[0x6]];do EK=eK[nK];end;do nK=nK+1;end;local MK=zK[0X1];(zK)[VK+1]=MK;zK[VK]=MK[EK[0X0006]];do EK=eK[nK];end;nK=nK+1;(zK)[3]=UK[EK[7]];nK=nK+0X00001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0x3]=zK[0X3][EK[6]];nK=nK+0x1;VK=1;zK[VK](zK[VK+1],zK[VK+2]);QK=VK-1;else local MK=EK[0x2];local VK=(EK[3]);if MK~=0 then QK=VK+MK-0X1;end;local aK=(EK[5]);local gK,wK=nil,nil;if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));else gK,wK=vi(zK[VK]());end;if aK==1 then QK=VK-1;else if aK==0 then gK=gK+VK-1;QK=gK;else do gK=VK+aK-0X2;end;QK=gK+0X1;end;local rK=0;for lK=VK,gK do rK=rK+1;do zK[lK]=wK[rK];end;end;end;end;end;else do if dK<2 then if dK~=1 then zK[EK[0X3]]=#zK[EK[2]];else(zK)[EK[0X3]]=zK[EK[0x00002]]<=zK[EK[0x5]];end;else do if dK~=0X00003 then zK[0x001]=UK[EK[7]];nK=nK+1;nK=nK+1;do nK=nK+0X1;end;do QK=0X1;end;zK[QK]();QK=QK-0X01;do nK=nK+0X1;end;nK=nK+0x01;nK=nK+0x1;repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0 then local LK=lK[2];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];do(lK)[0X002]=0X1;end;end;end;end;end;until true;return;else zK[EK[0X03]]={S({},0X01,EK[2])};end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X0001,({});local pK=Q();local NK,HK=vi(...);do NK=NK-1;end;local QK=(0);local CK,UK={[2]=zK,[1]=xK},((pK==z and KK or pK));for EK=0,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif YK then do zK[WK]={n=NK>=WK and NK-WK+0X1 or 0x000,S(HK,WK+1,NK+1)};end;end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0x1;if dK>=0X9 then if not(dK<14)then if dK<16 then if dK==0XF then if not zK[EK[3]]then nK=EK[0X02];end;else if not(zK[EK[0X00002]]<zK[EK[0X5]])then else do nK=EK[3];end;end;end;else if dK<0x000011 then(zK)[EK[0X003]]=zK[EK[2]]-zK[EK[5]];else if dK~=0X012 then zK[EK[0X0003]]={S({},1,EK[0X002])};else do(zK)[EK[3]]=zK[EK[2]];end;end;end;end;else if not(dK>=0Xb)then if dK~=0Xa then zK[EK[3]]=zK[EK[0X2]]>=zK[EK[0X5]];else end;else if dK<0X000c then do zK[EK[0X3]]=EK[7];end;else if dK==13 then if zK[EK[0X2]]<=zK[EK[5]]then nK=EK[0X3];end;else zK[EK[3]]=CK[EK[2]];end;end;end;end;else if not(dK<0X4)then do if dK>=6 then if dK<0X7 then local VK=(sK[0]);do zK[0X00000]=VK[0X01][VK[0x02]];end;do nK=nK+0X1;end;nK=nK+0X01;do EK=eK[nK];end;do nK=nK+0X1;end;zK[0]=zK[0][EK[6]];do nK=nK+0X1;end;do QK=0X0000;end;zK[QK]();do QK=QK-1;end;nK=nK+0x1;repeat local MK,aK=mK,zK;local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[0x0001]==aK and LK[2]>=0X0)then else local DK=(LK[0x02]);if not gK[DK]then(gK)[DK]={aK[DK]};end;LK[0X1]=gK[DK];LK[0X0002]=1;end;end;end;until true;return;else if dK~=8 then local VK=(EK[0X002]);local MK=(nil);local aK=VK[9];local gK=#aK;do if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[1]~=0 then(MK)[wK-1]=sK[rK[0X2]];else(MK)[wK-1]={zK,rK[2]};end;end;K(mK,MK);end;end;do(zK)[EK[0x3]]=Ri(MK,UK,VK);end;else if not(not(zK[EK[0X2]]<=zK[EK[0X5]]))then else nK=EK[3];end;end;end;else if dK==5 then if not(zK[EK[0X2]]<zK[EK[5]])then nK=EK[3];end;else local VK,MK=EK[0x3],(EK[2]);QK=VK+MK-0X1;do repeat local aK,gK,wK=mK,zK,({});for rK,lK in W,aK do for LK,DK in W,lK do do if not(DK[0X0001]==gK and DK[2]>=0)then else local ZK=(DK[0x0002]);if not wK[ZK]then(wK)[ZK]={gK[ZK]};end;do(DK)[0x01]=wK[ZK];end;(DK)[0X2]=0X1;end;end;end;end;until true;end;return zK[VK](S(zK,VK+0x1,QK));end;end;end;else if dK>=0X2 then if dK~=3 then(zK)[EK[0x3]]=g(zK[EK[0X0002]],zK[EK[0X5]]);else zK[EK[3]]=UK[EK[7]];end;else if dK~=1 then do zK[EK[0x3]]=#zK[EK[0X2]];end;else nK=EK[0X2];end;end;end;end;end;end;end;else _K=function(...)local zK={};local nK=1;local pK=Q();local NK,HK=vi(...);NK=NK-1;local UK=(pK==z and KK or pK);local QK=(0X00000);local CK={[2]=zK,[1]=xK};for EK=0X0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+1,NK+0x1)};end;if UK==pK then else _(_K,UK);end;do while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X1;if not(dK>=0X6)then if dK>=0X3 then do if not(dK<0X04)then if dK==5 then zK[1]=UK[EK[0x7]];nK=nK+0X1;nK=nK+1;nK=nK+0X01;zK[2]=zK[0];local wK=(1);EK=eK[nK];nK=nK+1;(zK[0X1])[EK[0X7]]=zK[2];EK=eK[nK];do nK=nK+0x00001;end;zK[1]=UK[EK[7]];nK=nK+0X1;QK=0X1;(zK[QK])();QK=QK-1;EK=eK[nK];nK=nK+0x1;(zK)[0x1]=UK[EK[0x0007]];EK=eK[nK];nK=nK+0x1;(zK)[0X01]=zK[0X1][EK[0x00006]];EK=eK[nK];local VK=(EK[0x2]);nK=nK+1;local aK=(VK[0X9]);local MK=nil;local gK=#aK;if gK>0X00000 then MK={};for rK=0X00001,gK do local lK=(aK[rK]);if lK[0X0001]==0X0 then do MK[rK-1]={zK,lK[2]};end;else do MK[rK-1]=sK[lK[2]];end;end;end;K(mK,MK);end;zK[0X2]=Ri(MK,UK,VK);nK=nK+1;zK[wK](zK[wK+0X001]);do QK=wK-1;end;nK=nK+1;nK=nK+0x0001;nK=nK+1;repeat local rK,lK,LK=mK,zK,{};for DK,ZK in W,rK do for GK,OK in W,ZK do do if OK[1]==lK and OK[2]>=0 then local tK=OK[2];do if not LK[tK]then(LK)[tK]={lK[tK]};end;end;do OK[1]=LK[tK];end;do OK[2]=1;end;end;end;end;end;until true;do return;end;else(zK)[EK[0x3]]={S({},0X00001,EK[0x2])};end;else zK[EK[0X3]]=zK[EK[0X2]]==zK[EK[0X0005]];end;end;else do if dK<0X0001 then zK[EK[0X00003]]=EK[7];else if dK==0X00002 then local VK=EK[0X2];local aK=(VK[9]);local gK,MK=#aK,nil;if not(gK>0X0)then else do MK={};end;for wK=0X001,gK do local rK=(aK[wK]);if rK[1]~=0 then(MK)[wK-1]=sK[rK[0X00002]];else(MK)[wK-0X00001]={zK,rK[0X2]};end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);else zK[EK[0X3]]=zK[EK[0x0002]][zK[EK[5]]];end;end;end;end;else if dK<9 then if dK<7 then local VK=EK[3];local MK=(EK[5]-0X1)*50;local aK=(zK[VK]);do for gK=0x0001,EK[2]do(aK)[MK+gK]=zK[VK+gK];end;end;else if dK~=0x8 then else(zK)[EK[0X00003]]=UK[EK[7]];end;end;else do if not(dK>=0XB)then if dK~=0Xa then do for VK=EK[0X3],EK[2]do zK[VK]=nil;end;end;else nK=EK[0X2];end;else do if dK~=0XC then if not(zK[EK[2]]<=zK[EK[5]])then else do nK=EK[0X3];end;end;else if zK[EK[0X2]]==zK[EK[0X5]]then do nK=EK[3];end;end;end;end;end;end;end;end;end;end;end;end;else if SK<180 then _K=function(...)local nK,zK=0X1,{};local pK=Q();local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-0X1;local QK=0X0;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X001];else break;end;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0x000,S(HK,WK+0X001,NK+1)};end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+1;if not(dK>=0X6)then if dK<0X3 then if not(dK<0X1)then if dK==0X002 then nK=EK[2];else do zK[EK[0X003]]=g(zK[EK[2]],zK[EK[0X5]]);end;end;else do zK[EK[0X3]]=zK[EK[0X002]]~=zK[EK[0X5]];end;end;else do if not(dK>=4)then do(zK)[EK[3]]=w(zK[EK[2]],zK[EK[0X5]]);end;else if dK~=5 then local VK=EK[2];local aK=(VK[9]);local MK=(nil);local gK=#aK;if not(gK>0X0)then else do MK={};end;for wK=0X001,gK do local rK=aK[wK];if rK[0X01]~=0 then MK[wK-0x1]=sK[rK[0x2]];else MK[wK-0X1]={zK,rK[2]};end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);else local VK=(sK[0x0]);do zK[0]=VK[0X0001][VK[2]];end;do nK=nK+0X1;end;do VK=sK[1];end;zK[0X1]=VK[0X1][VK[0x0002]];do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];nK=nK+1;zK[0][EK[0X7]]=zK[1];nK=nK+0X00001;do VK=sK[0X0];end;do(zK)[0]=VK[0X1][VK[2]];end;nK=nK+1;VK=sK[2];do(zK)[0X1]=VK[0X1][VK[0x002]];end;do EK=eK[nK];end;nK=nK+0x1;zK[0X0000][EK[0x7]]=zK[1];do nK=nK+1;end;VK=sK[0X0];(zK)[0X0]=VK[0X00001][VK[0X2]];nK=nK+0X0001;nK=nK+0X1;EK=eK[nK];nK=nK+1;do zK[0][EK[0X7]]=EK[6];end;nK=nK+0x01;repeat local gK=({});local MK,aK=mK,(zK);for wK,rK in W,MK do do for lK,LK in W,rK do if LK[0X1]==aK and LK[0x002]>=0 then local DK=LK[2];do if not gK[DK]then(gK)[DK]={aK[DK]};end;end;(LK)[0X001]=gK[DK];do LK[2]=1;end;end;end;end;end;until true;return;end;end;end;end;else do if dK<9 then if dK>=7 then if dK==0X8 then zK[EK[3]]=EK[7];else zK[EK[0X3]]={S({},0X1,EK[2])};end;else local VK=EK[3];local gK=(zK[VK+0X2]);local MK,aK=zK[VK],zK[VK+1];zK[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);do nK=EK[0x00002];end;end;else if not(dK<11)then if dK==0x0000C then(zK)[EK[0X3]]=UK[EK[0X0007]];else(CK)[EK[0X2]]=zK[EK[3]];end;else if dK~=0X0A then else do repeat local VK,MK,aK=mK,zK,EK[0X3];local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[0X01]==MK and LK[2]>=aK)then else local DK=(LK[2]);if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;(LK)[1]=gK[DK];do LK[2]=1;end;end;end;end;until true;end;end;end;end;end;end;end;end;else if SK~=0Xb5 then do _K=function(...)local nK,zK=1,({});local pK=Q();local QK,CK=0x0000,{[1]=xK,[2]=zK};local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0X1;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X001];end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X00001,NK+1)};end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0X1];do nK=nK+1;end;if dK>=0x0000d then do if not(dK>=0X00013)then if dK<0X10 then if dK>=0X0000E then if dK==15 then if not(not zK[EK[3]])then else nK=EK[0X2];end;else zK[0X3]=UK[EK[0X007]];nK=nK+1;local VK=(3);do nK=nK+1;end;EK=eK[nK];nK=nK+0X0001;zK[0x4]=zK[2][EK[6]];nK=nK+1;(zK)[VK]=zK[VK](zK[VK+0X00001]);QK=VK;nK=nK+1;nK=nK+0x00001;EK=eK[nK];do nK=nK+0X001;end;if zK[0X03]==EK[6]then else nK=EK[0x03];end;end;else local VK=EK[2];local aK,MK=VK[9],(nil);local gK=#aK;do if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[0X1]==0 then(MK)[wK-1]={zK,rK[2]};else do(MK)[wK-0X1]=sK[rK[0X00002]];end;end;end;K(mK,MK);end;end;zK[EK[3]]=Ri(MK,UK,VK);end;else if dK<0X11 then zK[0]=UK[EK[7]];EK=eK[nK];local VK=(0x0000);do nK=nK+1;end;(zK)[0x0001]=EK[0X7];do nK=nK+0X1;end;zK[VK](zK[VK+1]);QK=VK-0X00001;nK=nK+0X01;nK=nK+0x0001;do EK=eK[nK];end;nK=nK+0X00001;nK=EK[2];else if dK==18 then(zK)[EK[0X0003]]=UK[EK[0X0007]];else(zK)[EK[0X3]]=g(zK[EK[0x02]],zK[EK[5]]);end;end;end;else if dK<0X16 then if dK>=0X14 then if dK==0x15 then do(zK)[EK[3]]=zK[EK[2]][zK[EK[0X5]]];end;else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if not(MK)then else zK[VK+1]=aK;zK[VK+0X2]=gK;nK=EK[0X2];end;end;else if zK[EK[0X2]]==EK[0X6]then else nK=EK[0X00003];end;end;else if dK>=24 then do if dK==25 then(zK)[0]=UK[EK[0X0007]];do EK=eK[nK];end;local VK=(0X0);nK=nK+1;local aK=(4);zK[0x1]=UK[EK[0X7]];nK=nK+1;nK=nK+0X01;do nK=nK+0X001;end;local MK=(2);do if MK~=0x0 then do QK=VK+MK-0X1;end;end;end;local gK,wK=nil,(nil);if MK==1 then do gK,wK=vi(zK[VK]());end;else gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));end;if aK~=1 then if aK==0x0 then do gK=gK+VK-1;end;do QK=gK;end;else gK=VK+aK-2;QK=gK+0X1;end;local lK=(0);for LK=VK,gK do lK=lK+0X1;zK[LK]=wK[lK];end;else QK=VK-1;end;EK=eK[nK];nK=nK+1;VK=0;local rK=b(function(...)o();for lK,LK in...do(o)(true,lK,LK);end;end);(rK)(zK[VK],zK[VK+1],zK[VK+2]);QK=VK;do(zK)[VK]=rK;end;do nK=EK[2];end;else zK[0X003]=zK[0X02][EK[0X6]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;local VK=(4);nK=nK+1;zK[0X4]=UK[EK[0X07]];EK=eK[nK];nK=nK+0x1;do zK[5]=EK[7];end;do nK=nK+1;end;(zK)[6]=zK[3];nK=nK+0X1;(zK[VK])(zK[VK+1],zK[VK+0X002]);QK=VK-1;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do nK=EK[0X00002];end;end;end;else if dK==23 then zK[0]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X00001;do(zK)[0X0000]=zK[0][EK[0X6]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X0001;end;do if not zK[0]then do nK=EK[0X2];end;end;end;else do(zK)[0]=EK[7];end;EK=eK[nK];nK=nK+0X01;(zK)[0X1]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;(zK)[0x2]=EK[7];nK=nK+0x00001;local VK=(0X00001);zK[3]=zK[0];nK=nK+0x00001;(zK[VK])(zK[VK+0X0001],zK[VK+0x2]);QK=VK-1;EK=eK[nK];nK=nK+0X1;nK=EK[2];end;end;end;end;end;else if not(dK<6)then if dK<9 then do if not(dK>=7)then local VK=(EK[0x00003]);local MK,aK=zK[VK]();do if MK then for gK=0X1,EK[5]do(zK)[VK+gK]=aK[gK];end;nK=EK[0x00002];end;end;else if dK==8 then zK[EK[3]]=EK[0X7];else nK=EK[2];end;end;end;else if dK>=0X00b then if dK==12 then for VK=EK[0x003],EK[2]do(zK)[VK]=nil;end;else zK[0X000]=UK[EK[0X00007]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;(zK)[0X000]=zK[0][EK[0X6]];do nK=nK+0X1;end;QK=0;zK[QK]=zK[QK]();EK=eK[nK];nK=nK+0X1;if not(not zK[0X0])then else nK=EK[2];end;end;else if dK~=0XA then(UK)[EK[7]]=zK[EK[3]];else local VK=sK[EK[2]];zK[EK[3]]=VK[0x1][VK[0X2]];end;end;end;else if dK<3 then if dK<1 then do repeat local VK,MK=mK,(zK);local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do do if lK[0X00001]==MK and lK[0X002]>=0X00 then local LK=lK[0x2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[1]=aK[LK];lK[2]=1;end;end;end;end;end;until true;end;return;else if dK~=0X002 then local VK=(EK[0X0003]);local MK=zK[EK[2]];zK[VK+1]=MK;zK[VK]=MK[EK[6]];else end;end;else if dK<0x0004 then(zK)[0X3]=zK[0X2][EK[0x6]];do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;do if zK[3]~=EK[0X6]then nK=EK[3];end;end;else if dK~=5 then(zK)[EK[0X03]]=true;else(zK)[EK[0X03]]={S({},1,EK[0x02])};end;end;end;end;end;end;end;end;else do _K=function(...)local nK=(0X1);local QK,zK=0,{};local pK=(Q());local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X01];else do break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0x0001 or 0X0,S(HK,WK+0X1,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[0x1];do nK=nK+0X0001;end;if not(dK<14)then if not(dK<21)then if dK>=0X00019 then if dK<0X1b then if dK==26 then do zK[0]={};end;EK=eK[nK];nK=nK+1;zK[0X1]=UK[EK[7]];local VK=sK[1];nK=nK+0X00001;local gK=4;(zK)[2]=VK[0X00001][VK[0X2]];EK=eK[nK];nK=nK+0X01;do zK[0x02]=zK[0X2][EK[0X6]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[2]=zK[0X2][EK[0X6]];EK=eK[nK];nK=nK+1;zK[2]=zK[0x2][EK[0X00006]];local MK=(0X1);nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[2]=zK[0X2][EK[0X6]];nK=nK+0X01;nK=nK+0X1;do nK=nK+0x1;end;local aK=(0X002);if aK==0x0 then else do QK=MK+aK-1;end;end;local wK,rK=nil,(nil);if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+1,QK)));else do wK,rK=vi(zK[MK]());end;end;if gK==1 then do QK=MK-0X001;end;else if gK~=0X0 then do wK=MK+gK-0X2;end;QK=wK+1;else wK=wK+MK-0X00001;do QK=wK;end;end;local LK=0X000;do for DK=MK,wK do LK=LK+1;(zK)[DK]=rK[LK];end;end;end;EK=eK[nK];nK=nK+0X00001;do MK=1;end;local lK=(b(function(...)o();for LK,DK in...do(o)(true,LK,DK);end;end));(lK)(zK[MK],zK[MK+1],zK[MK+2]);QK=MK;zK[MK]=lK;nK=EK[2];else zK[EK[0X0003]]=zK[EK[0X2]]~=zK[EK[0X5]];end;else if dK==0X1C then local VK,MK=EK[0X2],nil;local aK=(VK[9]);local gK=#aK;if gK>0X0 then do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]~=0X00 then MK[wK-0x1]=sK[rK[0X0002]];else do MK[wK-1]={zK,rK[0X0002]};end;end;end;K(mK,MK);end;do(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else(zK)[0x4]=UK[EK[0X7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[0X4]=zK[0X0004][EK[0X6]];end;nK=nK+0X001;do nK=nK+0X0001;end;local VK=0x4;do nK=nK+1;end;do(zK)[0X05]=zK[0x0];end;EK=eK[nK];nK=nK+0x0001;(zK)[6]=zK[3][EK[0X6]];do nK=nK+1;end;nK=nK+1;nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+0X01],zK[VK+0x0002]);QK=VK;EK=eK[nK];nK=nK+0X1;if not(zK[4])then else do nK=EK[2];end;end;end;end;else if dK>=23 then if dK==24 then(zK)[EK[0x3]]=zK[EK[2]]==zK[EK[0X00005]];else do zK[0X4]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X1;local VK=(sK[0X00002]);(zK)[0X004]=zK[4][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[5]=UK[EK[7]];end;local MK=(0X0004);do EK=eK[nK];end;nK=nK+1;(zK)[5]=zK[0x5][EK[6]];do nK=nK+0x1;end;(zK)[6]=VK[1][VK[0X2]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X001;(zK)[0X0007]=zK[0X3][EK[6]];do nK=nK+0x1;end;nK=nK+1;nK=nK+1;do(zK)[6]=zK[0X6][zK[7]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[6]=zK[0X0006][EK[0X6]];nK=nK+1;zK[MK]=zK[MK](zK[MK+1],zK[MK+0X2]);QK=MK;EK=eK[nK];nK=nK+1;do if not zK[0X0004]then nK=EK[2];end;end;end;else if dK~=0x16 then do(zK)[EK[3]]={S({},1,EK[0x00002])};end;else zK[EK[3]]=CK[EK[0X002]];end;end;end;else do if dK<0X011 then if dK>=0Xf then if dK==0X000010 then do for VK=EK[3],EK[0X2]do do(zK)[VK]=nil;end;end;end;else local VK=(EK[3]);local MK,aK,gK=zK[VK]();do if MK then do(zK)[VK+0X1]=aK;end;(zK)[VK+2]=gK;do nK=EK[2];end;end;end;end;else do zK[0]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+1;zK[0]=zK[0X00][EK[0x6]];nK=nK+0x0001;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+0x1;do if not zK[0X00]then nK=EK[0X2];end;end;end;else do if not(dK<19)then if dK==20 then zK[0X0004]=UK[EK[0x7]];nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X00001;zK[4]=zK[0X4][EK[0x6]];do nK=nK+1;end;do(zK)[0x05]=zK[0X0];end;do EK=eK[nK];end;nK=nK+1;(zK)[6]=zK[3][EK[0x6]];nK=nK+0x1;local VK=(4);do nK=nK+0x1;end;nK=nK+0X00001;zK[VK](zK[VK+1],zK[VK+0X0002]);QK=VK-0X0001;EK=eK[nK];do nK=nK+1;end;nK=EK[2];else(zK)[EK[3]]=#zK[EK[0X2]];end;else if dK==0X000012 then zK[EK[3]]=EK[0X7];else local VK=EK[3];local MK,aK=zK[VK]();if MK then do nK=EK[0X00002];end;(zK)[VK+3]=aK;end;end;end;end;end;end;end;else if not(dK>=7)then if dK>=3 then do if dK>=0X05 then if dK~=6 then zK[EK[0X3]]=UK[EK[7]];else zK[0]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;zK[0]=zK[0][EK[0X0006]];nK=nK+0X1;nK=nK+0X1;nK=nK+0X0001;do QK=0;end;do(zK)[QK]=zK[QK]();end;do nK=nK+0X001;end;nK=nK+1;EK=eK[nK];nK=nK+1;if not zK[0]then nK=EK[0x2];end;end;else if dK~=4 then(zK)[EK[0X3]]=true;else end;end;end;else if dK<1 then(zK)[EK[0X3]]=EK[0X02];else if dK==0X2 then local VK=(sK[0]);do zK[0X0]=VK[0x1][VK[0X2]];end;nK=nK+0x0001;nK=nK+1;do EK=eK[nK];end;nK=nK+0x1;do if not(not zK[0])then else do nK=EK[2];end;end;end;else local VK=(sK[2]);zK[0X4]=VK[0X0001][VK[2]];EK=eK[nK];nK=nK+0X1;(zK)[5]=zK[3][EK[0x6]];nK=nK+1;nK=nK+1;do nK=nK+1;end;do zK[0X04]=zK[0X4][zK[5]];end;do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];do nK=nK+0X01;end;zK[0x04]=zK[0x00004][EK[6]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;do nK=nK+0X1;end;if zK[0X4]~=EK[6]then nK=EK[3];end;end;end;end;else do if not(dK<0x0000a)then if not(dK<12)then if dK==13 then(zK)[EK[3]]=zK[EK[0X2]];else(zK)[0X1]=UK[EK[0X7]];local VK=(0X1);nK=nK+0X01;nK=nK+0x1;EK=eK[nK];nK=nK+1;do zK[2]=EK[7];end;nK=nK+1;(zK)[0X3]=zK[0];nK=nK+0X001;(zK[VK])(zK[VK+0X1],zK[VK+0X02]);QK=VK-1;nK=nK+0X0001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do nK=EK[2];end;end;else do if dK~=11 then nK=EK[2];else zK[EK[0x003]]=zK[EK[2]]-zK[EK[5]];end;end;end;else if not(dK>=8)then repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0X0)then else local LK=(lK[0X02]);if not aK[LK]then do(aK)[LK]={MK[LK]};end;end;lK[1]=aK[LK];lK[0X02]=0X0001;end;end;end;until true;return;else if dK==9 then if not(not(EK[0X00007]<=zK[EK[5]]))then else nK=EK[3];end;else UK[EK[7]]=zK[EK[3]];end;end;end;end;end;end;end;end;end;end;end;end;else if SK<0Xb9 then if not(SK<0X0000b7)then if SK==0X00b8 then _K=function(...)local nK=0X1;local zK=({});local pK=(Q());local UK,CK=(pK==z and KK or pK),{[2]=zK,[1]=xK};local NK,HK=vi(...);local QK=0X0;NK=NK-1;for EK=0X0,NK do do if WK>EK then(zK)[EK]=HK[EK+0X1];else break;end;end;end;if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0x00,S(HK,WK+0X1,NK+1)};end;end;if UK~=pK then(_)(_K,UK);end;do repeat local EK=(eK[nK]);local dK=EK[1];nK=nK+0x1;if dK<0X7 then do if not(dK>=3)then if not(dK>=1)then local VK=EK[2];local MK=(nil);local aK=VK[0x09];local gK=(#aK);if gK>0X0 then do MK={};end;for wK=0x1,gK do local rK=(aK[wK]);do if rK[0X0001]==0X0000 then MK[wK-1]={zK,rK[2]};else MK[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else do if dK==0X2 then do zK[EK[3]]=zK[EK[2]]*zK[EK[5]];end;else nK=EK[2];end;end;end;else if dK>=0x05 then if dK==0X6 then do zK[EK[3]]=CK[EK[0X0002]];end;else(CK)[EK[0X2]]=zK[EK[0X03]];end;else do if dK~=4 then zK[EK[0X3]]=EK[0x7];else do zK[EK[0X003]]=UK[EK[7]];end;end;end;end;end;end;else do if dK<11 then do if not(dK>=9)then do if dK==8 then zK[EK[3]]=#zK[EK[2]];else repeat local MK,aK=mK,zK;local gK={};for wK,rK in W,MK do do for lK,LK in W,rK do if LK[0X1]==aK and LK[2]>=0X0 then local DK=(LK[2]);if not gK[DK]then do gK[DK]={aK[DK]};end;end;(LK)[1]=gK[DK];LK[2]=1;end;end;end;end;until"\/\>rc\hZ\065p";local VK=(EK[3]);return S(zK,VK,VK+EK[2]-0X0002);end;end;else if dK==10 then for VK=EK[3],EK[0X2]do do zK[VK]=nil;end;end;else local VK,MK=EK[3],EK[2];QK=VK+MK-0X1;repeat local aK,gK,wK=mK,zK,{};for rK,lK in W,aK do do for LK,DK in W,lK do do if not(DK[0X1]==gK and DK[2]>=0)then else local ZK=DK[2];if not wK[ZK]then do wK[ZK]={gK[ZK]};end;end;DK[1]=wK[ZK];do(DK)[0X2]=1;end;end;end;end;end;end;until 0.34118030421267953;return zK[VK](S(zK,VK+1,QK));end;end;end;else if dK<13 then if dK~=12 then else(zK)[0X0000]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[1]=EK[7];EK=eK[nK];nK=nK+1;zK[0X2]=EK[7];do nK=nK+0x00001;end;local VK=(0);(zK[VK])(zK[VK+0X00001],zK[VK+2]);QK=VK-0x1;nK=nK+1;nK=nK+0X1;do nK=nK+1;end;repeat local gK={};local MK,aK=mK,(zK);for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[0X1]==aK and LK[2]>=0X0)then else local DK=(LK[0X0002]);do if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;end;LK[0X1]=gK[DK];LK[0x2]=1;end;end;end;until true;return;end;elseif dK==0Xe then(zK)[EK[0x3]]={S({},0X1,EK[2])};else(zK[EK[0X003]])[zK[EK[0X2]]]=zK[EK[0X0005]];end;end;end;end;until false;end;end;else _K=function(...)local zK=({});local nK=0X1;local pK=Q();local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);do NK=NK-1;end;do for EK=0X0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;end;local QK,UK=0X0000,((pK==z and KK or pK));if not PK then HK=nil;else if not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0x1 or 0,S(HK,WK+0X1,NK+1)};end;end;if UK==pK then else(_)(_K,UK);end;do repeat local EK=(eK[nK]);local dK=EK[1];nK=nK+1;if not(dK<0X6)then if dK<0X009 then do if dK<7 then do zK[EK[3]]=EK[7];end;else if dK==0X0008 then local VK=(EK[0x3]);local MK,aK=zK[VK]();if MK then for gK=0X1,EK[0X5]do do zK[VK+gK]=aK[gK];end;end;nK=EK[2];end;else nK=EK[0X0002];end;end;end;else if not(dK>=10)then(zK)[EK[3]]=w(zK[EK[0X0002]],zK[EK[0X5]]);else if dK~=0XB then local VK,MK=EK[2],(nil);local aK=(VK[9]);local gK=(#aK);if not(gK>0)then else do MK={};end;do for wK=1,gK do local rK=aK[wK];if rK[0x1]==0x0 then MK[wK-0X1]={zK,rK[0X2]};else do(MK)[wK-0X0001]=sK[rK[2]];end;end;end;end;K(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;else end;end;end;else if dK>=0X3 then do if not(dK<4)then if dK~=5 then zK[EK[3]]=zK[EK[2]]^zK[EK[5]];else do repeat local VK,MK,aK,gK=mK,zK,EK[3],{};for wK,rK in W,VK do for lK,LK in W,rK do if LK[0x00001]==MK and LK[0X2]>=aK then local DK=(LK[0X2]);if not gK[DK]then gK[DK]={MK[DK]};end;do LK[0X01]=gK[DK];end;(LK)[2]=1;end;end;end;until true;end;end;else zK[EK[3]]=UK[EK[7]];end;end;else do if dK>=0x001 then if dK~=0x2 then zK[0X1]=UK[EK[7]];nK=nK+1;do nK=nK+0x1;end;nK=nK+1;do zK[2]=zK[0X0];end;EK=eK[nK];do nK=nK+1;end;zK[0X001][EK[7]]=zK[0X0002];EK=eK[nK];nK=nK+1;do zK[1]=UK[EK[7]];end;nK=nK+1;nK=nK+0x1;do nK=nK+1;end;QK=0X1;zK[QK]();QK=QK-0X1;local wK=(0X1);EK=eK[nK];nK=nK+0X01;zK[1]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;(zK)[1]=zK[0X001][EK[0X6]];do EK=eK[nK];end;local VK=(EK[0X2]);local aK=(VK[9]);nK=nK+0x01;local MK,gK=nil,#aK;if gK>0X000 then MK={};for rK=0X1,gK do local lK=(aK[rK]);do if lK[0X01]~=0 then do MK[rK-1]=sK[lK[0X02]];end;else(MK)[rK-1]={zK,lK[0x2]};end;end;end;K(mK,MK);end;(zK)[0x002]=Ri(MK,UK,VK);nK=nK+0x00001;(zK[wK])(zK[wK+0X00001]);do QK=wK-1;end;nK=nK+0X01;do repeat local rK,lK=mK,zK;local LK={};for DK,ZK in W,rK do do for GK,OK in W,ZK do do if OK[0X1]==lK and OK[0X2]>=0X0 then local tK=(OK[0X0002]);if not LK[tK]then(LK)[tK]={lK[tK]};end;OK[1]=LK[tK];(OK)[2]=0X1;end;end;end;end;end;until true;end;return;else(zK)[EK[3]]={S({},0X1,EK[0x2])};end;else zK[EK[0X3]]=EK[0X2];end;end;end;end;until false;end;end;end;else do _K=function(...)local zK={};local nK=1;local pK=(Q());local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-0X00001;for EK=0X0000,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;local QK,UK=0X0,((pK==z and KK or pK));if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+0x001)};end;end;if UK~=pK then _(_K,UK);end;while 0.0628124611628047 do local EK=eK[nK];local dK=(EK[0x0001]);nK=nK+0X1;if not(dK>=9)then if not(dK<4)then do if dK<6 then if dK~=5 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else(zK)[EK[0X3]]=UK[EK[7]];end;else if dK>=7 then if dK==8 then if not(zK[EK[0X2]]<=zK[EK[0X5]])then nK=EK[0X3];end;else local VK=EK[0X2];local aK,MK=VK[9],(nil);local gK=(#aK);if not(gK>0X0)then else MK={};do for wK=0X01,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-0X1]=sK[rK[2]];else MK[wK-1]={zK,rK[0X2]};end;end;end;K(mK,MK);end;do zK[EK[0X00003]]=Ri(MK,UK,VK);end;end;else local VK=(EK[0X00002]);local MK=zK[VK];for aK=VK+0X1,EK[0X5]do do MK=MK..zK[aK];end;end;(zK)[EK[3]]=MK;end;end;end;elseif dK<2 then if dK==0x0001 then local VK=(zK[EK[0X02]]/zK[EK[0X5]]);do(zK)[EK[0X3]]=VK-VK%0x00001;end;else do zK[EK[0X3]][EK[0X07]]=zK[EK[0X005]];end;end;else if dK~=0x00003 then(zK)[EK[0X3]]=EK[0X2];else do(zK)[EK[3]]={S({},0x01,EK[0X002])};end;end;end;else if dK<0XE then do if not(dK>=0X00B)then if dK==10 then do(zK)[0x1]=UK[EK[0X7]];end;nK=nK+0X00001;nK=nK+0X1;do nK=nK+0X1;end;(zK)[2]={};do EK=eK[nK];end;nK=nK+0X001;(zK[0X1])[EK[0X0007]]=zK[0x0002];EK=eK[nK];nK=nK+0X00001;nK=EK[0X2];else(zK)[1]=UK[EK[0x7]];do nK=nK+1;end;QK=0X1;zK[QK]();do QK=QK-1;end;nK=nK+0X001;nK=nK+0X0001;nK=nK+1;do repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do do if lK[0X1]==MK and lK[2]>=0x0 then local LK=lK[0x2];if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;lK[0X1]=aK[LK];lK[2]=1;end;end;end;end;end;until true;end;return;end;elseif not(dK>=0X00C)then(zK)[0X1]=UK[EK[7]];do nK=nK+0X1;end;do(zK)[0X002]=zK[0X0];end;nK=nK+1;local VK=0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+0X1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+0X001;if zK[0X001]==EK[0X006]then else nK=EK[0X03];end;else if dK==13 then(zK)[EK[3]]=EK[0X00007];else end;end;end;else do if not(dK>=0X10)then if dK==0X00F then nK=EK[2];else local VK=EK[0X3];local MK=((EK[0x5]-1)*0X32);local aK=(zK[VK]);for gK=0X1,EK[2]do aK[MK+gK]=zK[VK+gK];end;end;else do if not(dK<0X11)then do if dK==18 then(zK)[EK[3]]={};else(zK)[1]=UK[EK[7]];nK=nK+0X01;do nK=nK+0X0001;end;do nK=nK+1;end;do(zK)[0X002]=zK[0];end;EK=eK[nK];nK=nK+1;if zK[2]then nK=EK[0X2];end;end;end;else(zK)[EK[3]]=L(zK[EK[2]],zK[EK[0X5]]);end;end;end;end;end;end;end;end;end;end;else if not(SK<0X00Ba)then if SK~=187 then _K=function(...)local nK,zK=0x1,({});local CK=({[2]=zK,[1]=xK});local pK=Q();local NK,HK=vi(...);NK=NK-0X0001;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0x001];else break;end;end;local QK=(0x0);local UK=(pK==z and KK or pK);do if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0X0,S(HK,WK+1,NK+1)};end;end;end;do if UK~=pK then _(_K,UK);end;end;while"\h\j"do local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+1;if dK>=7 then if dK<10 then if not(dK>=0x08)then zK[EK[0X003]]=CK[EK[0X2]];else do if dK~=9 then nK=EK[0X2];else(zK[3])[EK[7]]=zK[4];do EK=eK[nK];end;nK=nK+0x1;local VK=sK[0X3];zK[0X3][EK[7]]=EK[0X6];nK=nK+1;(zK)[0X004]=VK[1][VK[2]];do EK=eK[nK];end;nK=nK+0X1;local MK=0;zK[0X03][EK[0x00007]]=zK[0x4];do nK=nK+1;end;QK=MK+0X4-0x001;zK[MK]=zK[MK](S(zK,MK+1,QK));QK=MK;do EK=eK[nK];end;local aK=(zK[0x00000]);nK=nK+1;MK=0X0;(zK)[MK+1]=aK;zK[MK]=aK[EK[0x6]];EK=eK[nK];local gK=(EK[2]);nK=nK+0X01;local rK,wK=gK[9],(nil);local lK=#rK;if lK>0X0 then wK={};do for LK=0X1,lK do local DK=(rK[LK]);if DK[1]==0 then do wK[LK-1]={zK,DK[2]};end;else(wK)[LK-1]=sK[DK[2]];end;end;end;K(mK,wK);end;(zK)[0X0002]=Ri(wK,UK,gK);nK=nK+1;do MK=0;end;zK[MK](zK[MK+0X00001],zK[MK+2]);QK=MK-0X1;do nK=nK+0X1;end;nK=nK+0X1;nK=nK+0X00001;repeat local LK,DK=mK,(zK);local ZK=({});for GK,OK in W,LK do for tK,AK in W,OK do if AK[0x1]==DK and AK[2]>=0 then local jK=AK[2];if not(not ZK[jK])then else do ZK[jK]={DK[jK]};end;end;AK[1]=ZK[jK];AK[2]=0x1;end;end;end;until true;return;end;end;end;else do if dK<12 then do if dK~=0Xb then do zK[EK[0X3]]=zK[EK[2]]+zK[EK[5]];end;else local VK=(EK[0X02]);local aK,MK=VK[0X9],(nil);local gK=#aK;if not(gK>0)then else MK={};do for wK=1,gK do local rK=(aK[wK]);if rK[0X0001]==0X000 then(MK)[wK-1]={zK,rK[2]};else MK[wK-1]=sK[rK[0x2]];end;end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;else do if dK~=0xd then UK[EK[7]]=zK[EK[0X3]];else zK[EK[0X3]]=UK[EK[0X7]];end;end;end;end;end;elseif dK<0X00003 then if not(dK<1)then if dK==2 then local VK,MK=EK[3],EK[0X2];QK=VK+MK-1;do repeat local aK,gK=mK,zK;local wK={};for rK,lK in W,aK do for LK,DK in W,lK do do if DK[1]==gK and DK[0X002]>=0 then local ZK=DK[0X2];if not wK[ZK]then(wK)[ZK]={gK[ZK]};end;DK[0x1]=wK[ZK];DK[2]=0X1;end;end;end;end;until true;end;do return zK[VK](S(zK,VK+0X001,QK));end;else for VK=EK[3],EK[2]do do zK[VK]=nil;end;end;end;else end;else if dK<0X5 then if dK~=4 then(zK)[EK[3]]={S({},0X1,EK[0X2])};else zK[EK[3]][zK[EK[0X2]]]=zK[EK[0X5]];end;else do if dK==0X00006 then local VK=(sK[0]);(zK)[0]=VK[0X1][VK[0X2]];local MK=(0);do EK=eK[nK];end;nK=nK+0X0001;local aK=zK[0];local gK=2;do(zK)[MK+1]=aK;end;zK[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+1;do(zK)[2]=EK[7];end;do nK=nK+1;end;VK=sK[1];zK[0x3]=VK[1][VK[0x02]];nK=nK+1;zK[2]=zK[gK]..zK[gK+0X1];do nK=nK+1;end;(zK)[3]={};EK=eK[nK];nK=nK+0X0001;zK[0X4]=UK[EK[0X7]];nK=nK+0x1;VK=sK[0X2];(zK)[0X005]=VK[0X1][VK[2]];nK=nK+0X1;do MK=4;end;zK[MK]=zK[MK](zK[MK+0X1]);QK=MK;do nK=nK+1;end;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;do(zK[3])[EK[0X7]]=zK[0X4];end;EK=eK[nK];nK=nK+1;zK[0X4]=UK[EK[7]];do nK=nK+0X1;end;nK=nK+0x1;EK=eK[nK];do nK=nK+0x00001;end;do zK[4]=zK[4][EK[6]];end;nK=nK+0X1;VK=sK[0X0001];(zK)[5]=VK[0X1][VK[2]];do nK=nK+0X1;end;nK=nK+0X1;nK=nK+1;zK[4]=zK[0X00004][zK[0X5]];EK=eK[nK];nK=nK+0X0001;if zK[4]then nK=EK[0x00002];end;else(zK)[EK[0X3]]=EK[0X7];end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local QK=0;local UK=(pK==z and KK or pK);NK=NK-0X1;for EK=0X0,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+0X1];end;end;end;if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+0x001 or 0x0,S(HK,WK+0X00001,NK+1)};end;end;if UK==pK then else _(_K,UK);end;repeat local EK=eK[nK];local dK=EK[0X1];nK=nK+1;if not(dK<0X11)then if not(dK<0X000019)then do if dK>=29 then if not(dK<31)then if dK>=32 then if dK~=33 then(zK)[0X6]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[7]=zK[0x3][EK[0X6]];nK=nK+1;nK=nK+0x00001;EK=eK[nK];nK=nK+1;(zK)[0x007]=zK[7][EK[0X00006]];nK=nK+1;local VK=6;do(zK)[VK]=zK[VK](zK[VK+0X1]);end;do QK=VK;end;do nK=nK+0x001;end;do nK=nK+0X0001;end;EK=eK[nK];nK=nK+0X001;if zK[6]then nK=EK[2];end;else(zK)[0X0000]=UK[EK[7]];nK=nK+0x01;nK=nK+0X01;EK=eK[nK];local VK=0X00000;nK=nK+1;(zK)[1]=EK[0X00007];nK=nK+0x1;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;EK=eK[nK];nK=nK+1;if not(zK[0X00000])then else nK=EK[2];end;end;else local VK=(sK[EK[2]]);(zK)[EK[3]]=VK[1][VK[0X002]];end;else do if dK~=0X1e then do if not zK[EK[3]]then nK=EK[0x2];end;end;else zK[EK[0x3]]=UK[EK[7]];end;end;end;else do if dK>=0X1B then do if dK~=28 then do zK[EK[0x3]]={S({},0X1,EK[2])};end;else repeat local VK,MK,aK=mK,zK,(EK[3]);local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[1]==MK and LK[2]>=aK)then else local DK=(LK[0X002]);if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;LK[0x1]=gK[DK];do LK[0X2]=0X0001;end;end;end;end;until true;end;end;elseif dK==0X001a then do zK[0]=UK[EK[7]];end;nK=nK+1;nK=nK+0x0001;local VK=0;EK=eK[nK];do nK=nK+0x001;end;do(zK)[1]=EK[0X7];end;nK=nK+1;zK[VK]=zK[VK](zK[VK+0X1]);do QK=VK;end;nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if not(zK[0])then else nK=EK[2];end;else zK[0X0000]=UK[EK[7]];nK=nK+0X01;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X0001;(zK)[0X1]=EK[0X7];nK=nK+1;local VK=0X0;(zK)[VK]=zK[VK](zK[VK+0X1]);QK=VK;nK=nK+0X001;nK=nK+0X00001;EK=eK[nK];nK=nK+0X1;if zK[0X0000]then nK=EK[2];end;end;end;end;end;else if dK>=21 then do if not(dK<0X17)then if dK~=0x18 then else zK[4]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X00001;do(zK)[5]=EK[0x7];end;do nK=nK+1;end;(zK)[0X00006]=zK[2];local VK=4;nK=nK+1;zK[VK](zK[VK+0X00001],zK[VK+2]);do QK=VK-1;end;do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;nK=EK[0X2];end;else if dK~=22 then zK[4]=UK[EK[7]];local VK=(0x4);EK=eK[nK];nK=nK+0x01;zK[0X5]=zK[0X3][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0x1;end;(zK)[5]=zK[0x05][EK[0x6]];nK=nK+1;do zK[VK]=zK[VK](zK[VK+1]);end;do QK=VK;end;nK=nK+0X001;local MK=(sK[0X2]);(zK)[5]=MK[1][MK[0X002]];EK=eK[nK];nK=nK+1;do(zK)[5]=zK[0X05][EK[0x0006]];end;nK=nK+0x001;nK=nK+0x01;EK=eK[nK];nK=nK+1;if zK[4]~=zK[0X5]then do nK=EK[3];end;end;else local VK,MK=0X00004,(zK[3]);(zK)[VK+1]=MK;do zK[VK]=MK[EK[6]];end;do EK=eK[nK];end;nK=nK+1;(zK)[0X6]=EK[0X0007];do nK=nK+1;end;VK=4;do zK[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);end;QK=VK;EK=eK[nK];nK=nK+1;if not(not zK[4])then else do nK=EK[0X2];end;end;end;end;end;else if dK>=0X00013 then if dK==0X000014 then zK[0X0000]=UK[EK[0x00007]];nK=nK+0X01;nK=nK+1;EK=eK[nK];nK=nK+0x1;zK[0X01]=EK[0X7];nK=nK+1;local VK=0X000;do zK[VK]=zK[VK](zK[VK+0X1]);end;QK=VK;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;if zK[0]then nK=EK[2];end;else local VK=(EK[0X2]);local MK=zK[VK];do for aK=VK+0x1,EK[5]do MK=MK..zK[aK];end;end;zK[EK[3]]=MK;end;else if dK==18 then(zK)[0]=UK[EK[0X7]];nK=nK+0x1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0X1;(zK)[0x0]=zK[0][EK[0x00006]];nK=nK+0X01;QK=0X0;zK[QK]=zK[QK]();nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+1;if not zK[0]then nK=EK[0X2];end;else for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;end;end;end;else if dK<0X8 then do if not(dK<4)then do if dK<6 then if dK~=0X5 then zK[0X000]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;(zK)[0]=zK[0][EK[6]];do nK=nK+0X1;end;nK=nK+0x001;do EK=eK[nK];end;nK=nK+0X1;do if not(not zK[0])then else do nK=EK[2];end;end;end;else zK[EK[0X3]]=zK[EK[2]]-zK[EK[5]];end;else if dK==7 then do repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0x1]=aK[LK];do(lK)[2]=1;end;end;end;end;end;until true;end;do return;end;else if not(not(zK[EK[0x0002]]<=zK[EK[5]]))then else nK=EK[0x0003];end;end;end;end;else if dK<2 then if dK==1 then zK[0X0]=UK[EK[7]];local VK=sK[1];nK=nK+0X1;local MK=0X01;nK=nK+0X1;nK=nK+0x1;zK[0X01]=VK[1][VK[2]];do nK=nK+0x1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;local aK=(zK[1]);(zK)[MK+0X001]=aK;zK[MK]=aK[EK[0X0006]];do EK=eK[nK];end;nK=nK+0x001;local gK=0X002;zK[0X003]=EK[7];nK=nK+0X1;MK=1;(zK)[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;do nK=nK+1;end;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;MK=0x1;do aK=zK[1];end;do zK[MK+0X1]=aK;end;zK[MK]=aK[EK[0X00006]];nK=nK+0X1;MK=1;local wK=0X0;do if gK~=0 then QK=MK+gK-0x1;end;end;local rK,lK=nil,nil;if gK~=1 then do rK,lK=vi(zK[MK](S(zK,MK+1,QK)));end;else rK,lK=vi(zK[MK]());end;do if wK~=1 then if wK~=0 then do rK=MK+wK-2;end;QK=rK+0X0001;else rK=rK+MK-0X1;QK=rK;end;local DK=0;for ZK=MK,rK do do DK=DK+0X0001;end;do zK[ZK]=lK[DK];end;end;else do QK=MK-0x001;end;end;end;nK=nK+1;do MK=0;end;gK=0;wK=0X4;do if gK~=0X0 then QK=MK+gK-1;end;end;rK,lK=nil;if gK==0X1 then rK,lK=vi(zK[MK]());else rK,lK=vi(zK[MK](S(zK,MK+1,QK)));end;if wK~=1 then if wK==0 then do rK=rK+MK-0X1;end;QK=rK;else rK=MK+wK-2;QK=rK+1;end;local DK=(0X0);for ZK=MK,rK do DK=DK+1;(zK)[ZK]=lK[DK];end;else QK=MK-1;end;nK=nK+0X01;nK=nK+0X1;EK=eK[nK];nK=nK+1;MK=0;local LK=b(function(...)(o)();for DK,ZK in...do o(true,DK,ZK);end;end);LK(zK[MK],zK[MK+1],zK[MK+2]);QK=MK;zK[MK]=LK;nK=EK[0X00002];else local VK=(EK[0X3]);local MK,aK,gK=zK[VK]();if not(MK)then else zK[VK+0X01]=aK;do zK[VK+0X2]=gK;end;nK=EK[2];end;end;else if dK~=3 then local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=(#aK);if gK>0 then MK={};for wK=1,gK do local rK=aK[wK];if rK[1]==0 then(MK)[wK-0x1]={zK,rK[2]};else(MK)[wK-0X00001]=sK[rK[0x2]];end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else local VK,MK=4,zK[0X3];do(zK)[VK+1]=MK;end;(zK)[VK]=MK[EK[6]];EK=eK[nK];nK=nK+0X1;do(zK)[0X6]=EK[7];end;do nK=nK+0X1;end;VK=4;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);do QK=VK;end;nK=nK+0X1;nK=nK+0X01;EK=eK[nK];nK=nK+1;do if not(not zK[0X004])then else nK=EK[2];end;end;end;end;end;end;else if not(dK<0X0C)then if dK>=0X000e then if not(dK<15)then if dK~=16 then local MK=zK[2];local VK=(0x3);zK[VK+0X1]=MK;do(zK)[VK]=MK[EK[0X0006]];end;EK=eK[nK];do nK=nK+1;end;do(zK)[0X5]=EK[0X7];end;nK=nK+0X1;VK=0X03;do zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);end;QK=VK;nK=nK+0X0001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;if not zK[0x3]then nK=EK[2];end;else nK=EK[0X002];end;else local VK=zK[EK[2]]/zK[EK[0X5]];(zK)[EK[3]]=VK-VK%0X01;end;else if dK==13 then zK[EK[3]]=EK[0X7];else zK[0]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;local VK=0X0;do(zK)[1]=EK[7];end;nK=nK+1;do(zK)[VK]=zK[VK](zK[VK+0X00001]);end;QK=VK;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not(zK[0])then else nK=EK[0X00002];end;end;end;else if not(dK<10)then if dK==0Xb then do zK[EK[3]]=D(zK[EK[0X2]],zK[EK[5]]);end;else zK[EK[0X003]]=w(zK[EK[2]],zK[EK[0X0005]]);end;else if dK==0X9 then do zK[0]=UK[EK[0X7]];end;local VK=0;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;(zK)[0X01]=EK[0X7];do EK=eK[nK];end;nK=nK+0X001;zK[0x2]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X1;do(zK)[2]=zK[0X2][EK[0X0006]];end;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0X2]);QK=VK;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;if not zK[0X0]then nK=EK[2];end;else do(zK)[EK[3]]=zK[EK[0X2]][zK[EK[0X5]]];end;end;end;end;end;end;until false;end;end;else _K=function(...)local zK,QK={},0X0;local nK=1;local pK=Q();local UK,CK=(pK==z and KK or pK),{[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0x1;for EK=0x00000,NK do if WK>EK then(zK)[EK]=HK[EK+0X1];else break;end;end;if not PK then do HK=nil;end;else if not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+0x1)};end;end;if UK~=pK then _(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[0X00001]);nK=nK+1;if not(dK>=0X07)then do if dK>=3 then if dK<5 then do if dK==4 then do zK[EK[0X00003]][zK[EK[2]]]=zK[EK[0X05]];end;else(zK)[EK[0X3]]=EK[2];end;end;else if dK==0x6 then(zK)[EK[3]]=zK[EK[2]][zK[EK[5]]];else(zK)[EK[0x3]]=UK[EK[7]];end;end;else if not(dK>=1)then for VK=EK[0X3],EK[2]do(zK)[VK]=nil;end;else do if dK~=0X00002 then if not(zK[EK[0X2]]<zK[EK[0x05]])then else do nK=EK[3];end;end;else zK[EK[3]]=EK[0X007];end;end;end;end;end;else if not(dK>=11)then do if dK<0X9 then do if dK~=8 then local VK=EK[2];local MK=(nil);local aK=(VK[9]);local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[1]~=0X0 then MK[wK-0X1]=sK[rK[2]];else do MK[wK-0X001]={zK,rK[0X2]};end;end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else do if zK[EK[0X2]]==zK[EK[5]]then nK=EK[0X3];end;end;end;end;else if dK==10 then(zK)[1]=UK[EK[0X7]];nK=nK+1;do nK=nK+1;end;local VK=sK[0X0];EK=eK[nK];nK=nK+0X1;zK[1]=zK[1][EK[6]];do nK=nK+0X1;end;nK=nK+0X001;local MK=0X2;EK=eK[nK];nK=nK+0x00001;local aK=3;zK[0X2]=EK[7];nK=nK+1;(zK)[3]=VK[1][VK[2]];nK=nK+0X1;(zK)[0X2]=zK[MK]..zK[MK+0X1];EK=eK[nK];do nK=nK+0X1;end;zK[0X3]=UK[EK[0X0007]];nK=nK+0X1;do(zK)[4]=zK[0X0000];end;do nK=nK+0X1;end;zK[aK]=zK[aK](zK[aK+1]);QK=aK;nK=nK+0X001;nK=nK+1;nK=nK+1;(zK[0X1])[zK[2]]=zK[3];EK=eK[nK];nK=nK+0X1;do(zK)[1]=UK[EK[7]];end;nK=nK+0X001;nK=nK+1;nK=nK+0x001;QK=1;zK[QK]();QK=QK-0x1;nK=nK+1;repeat local gK,wK=mK,(zK);local rK={};do for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[0X1]==wK and ZK[2]>=0 then local GK=ZK[2];if not rK[GK]then do(rK)[GK]={wK[GK]};end;end;ZK[0X00001]=rK[GK];do ZK[0X2]=0X1;end;end;end;end;end;until true;return;else zK[EK[0X3]]=zK[EK[2]]<zK[EK[5]];end;end;end;elseif dK>=13 then do if dK==14 then else zK[EK[0X3]]=zK[EK[0x2]]*zK[EK[0x5]];end;end;else if dK==0Xc then(zK)[EK[0X00003]]={S({},1,EK[0X2])};else do nK=EK[2];end;end;end;end;until false;end;end;end;end;end;end;end;end;else if SK<117 then if not(SK<0X069)then if SK>=111 then if SK>=114 then if SK<115 then _K=function(...)local nK,zK=1,{};local pK=Q();local CK={[1]=xK,[2]=zK};local UK=(pK==z and KK or pK);local QK=0X0;local NK,HK=vi(...);do NK=NK-0x1;end;for EK=0X0,NK do if WK>EK then zK[EK]=HK[EK+0X001];else break;end;end;do if not PK then do HK=nil;end;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0x1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;do if dK>=0x6 then if not(dK>=9)then if not(dK<0X7)then do if dK==0X8 then local VK=EK[2];local aK=VK[0x9];local gK,MK=#aK,nil;do if not(gK>0)then else MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X1]==0X000 then MK[wK-1]={zK,rK[0X2]};else do MK[wK-0X1]=sK[rK[2]];end;end;end;end;(K)(mK,MK);end;end;zK[EK[0X00003]]=Ri(MK,UK,VK);else if zK[EK[0X00002]]~=zK[EK[0X5]]then else do nK=EK[0x3];end;end;end;end;else end;else if dK<10 then do(zK)[EK[0x3]]=UK[EK[0X7]];end;else if dK~=11 then local VK=(EK[0X0002]);local aK,MK=VK[9],nil;local gK=#aK;if not(gK>0x0)then else MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0x001]==0 then MK[wK-0x1]={zK,rK[2]};else MK[wK-1]=sK[rK[0x2]];end;end;K(mK,MK);end;zK[EK[3]]=i[EK[5]](MK);else zK[EK[0X3]]=not zK[EK[0X2]];end;end;end;else if not(dK<3)then if not(dK<0X4)then if dK==5 then nK=EK[2];else do zK[1]=UK[EK[0X00007]];end;nK=nK+0X1;do nK=nK+0X1;end;do nK=nK+0X1;end;zK[0X2]=zK[0X0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[7]]=zK[0X2];EK=eK[nK];nK=nK+0x01;do zK[1]=UK[EK[0X0007]];end;do nK=nK+0X1;end;nK=nK+1;nK=nK+0x1;QK=1;zK[QK]();do QK=QK-0x1;end;nK=nK+0X001;repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=(lK[0x2]);if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];lK[0X2]=1;end;end;end;until true;return;end;else(zK)[EK[0x3]]=EK[0X7];end;else if not(dK<0X1)then if dK~=2 then zK[EK[0X03]]=zK[EK[0X00002]]-zK[EK[5]];else zK[EK[3]]=D(zK[EK[2]],zK[EK[5]]);end;else do(zK)[EK[3]]={S({},1,EK[2])};end;end;end;end;end;end;end;else if SK==116 then do _K=function(...)local zK=({});local nK=1;local pK=(Q());local CK,UK={[1]=xK,[2]=zK},((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0x1;for EK=0,NK do do if WK>EK then do zK[EK]=HK[EK+0X001];end;else do break;end;end;end;end;if not PK then HK=nil;elseif YK then do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0x0,S(HK,WK+1,NK+1)};end;end;do if UK==pK then else _(_K,UK);end;end;local QK=0;while true do local EK=eK[nK];local dK=(EK[1]);do nK=nK+0X1;end;do if dK>=0x9 then if dK<13 then do if not(dK<11)then if dK==12 then zK[EK[0X3]]=zK[EK[2]][zK[EK[5]]];else zK[EK[3]]=w(zK[EK[0X2]],zK[EK[5]]);end;else if dK~=0XA then if zK[EK[2]]~=zK[EK[5]]then nK=EK[3];end;else(zK)[EK[0X3]]=zK[EK[0X2]]>=zK[EK[5]];end;end;end;else if not(dK<15)then if dK<0X010 then if not(zK[EK[0x0002]]<zK[EK[0X05]])then else nK=EK[3];end;else do if dK~=17 then do CK[EK[2]]=zK[EK[0x3]];end;else local VK=(EK[3]);local MK,aK=zK[VK]();do if MK then for gK=1,EK[5]do(zK)[VK+gK]=aK[gK];end;nK=EK[0X2];end;end;end;end;end;else do if dK==14 then zK[EK[3]]=zK[EK[0X2]]<=zK[EK[0X00005]];else(zK)[EK[3]]=UK[EK[0X0007]];end;end;end;end;else if dK>=0X4 then if not(dK<6)then do if dK<0X7 then do nK=EK[0X2];end;else if dK~=0x0008 then zK[EK[3]]={S({},0X1,EK[0X2])};else zK[EK[3]]=EK[2];end;end;end;else if dK==0X5 then for VK=EK[3],EK[0x00002]do(zK)[VK]=nil;end;else(zK)[1]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+1;nK=nK+1;(zK)[2]=zK[0x0];EK=eK[nK];local wK=0X00001;nK=nK+1;(zK[0X001])[EK[7]]=zK[2];EK=eK[nK];nK=nK+1;(zK)[0x00001]=UK[EK[7]];nK=nK+1;do QK=0X01;end;(zK[QK])();QK=QK-1;do nK=nK+0X00001;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+1;do(zK)[0X1]=zK[0x001][EK[0X6]];end;nK=nK+0X01;nK=nK+0X01;EK=eK[nK];local VK=EK[0X002];local aK=(VK[9]);nK=nK+0X00001;local MK,gK=nil,#aK;if gK>0X00000 then MK={};for rK=0x1,gK do local lK=aK[rK];if lK[0X1]~=0 then MK[rK-1]=sK[lK[2]];else(MK)[rK-1]={zK,lK[2]};end;end;K(mK,MK);end;(zK)[2]=Ri(MK,UK,VK);nK=nK+0X1;zK[wK](zK[wK+0x1]);do QK=wK-0X1;end;nK=nK+1;nK=nK+1;nK=nK+1;repeat local rK,lK,LK=mK,zK,{};do for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0x001]==lK and OK[0x2]>=0 then local tK=OK[0X2];do if not LK[tK]then do(LK)[tK]={lK[tK]};end;end;end;OK[1]=LK[tK];do OK[0X2]=1;end;end;end;end;end;until true;return;end;end;else do if not(dK>=0X2)then do if dK==0x00001 then local VK,MK=EK[0X2],(nil);local aK=VK[9];local gK=(#aK);do if not(gK>0X0)then else MK={};for wK=0X01,gK do local rK=aK[wK];do if rK[0X001]~=0X0 then(MK)[wK-1]=sK[rK[0X02]];else(MK)[wK-0X1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;end;(zK)[EK[0X0003]]=Ri(MK,UK,VK);else(zK)[EK[3]]=l(zK[EK[2]]);end;end;else do if dK==0x0003 then else zK[EK[3]]=EK[7];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK,QK=0X01,{},0X0;local pK=(Q());local CK=({[2]=zK,[1]=xK});local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-1;for EK=0x0000,NK do do if not(WK>EK)then break;else zK[EK]=HK[EK+0X001];end;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0000,S(HK,WK+1,NK+0X01)};end;if UK==pK then else _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0X001]);nK=nK+1;if dK>=10 then do if dK>=0x0000f then if not(dK<0X11)then if dK<0X12 then zK[EK[0X00003]]=EK[0X2];else if dK==19 then local VK,MK=EK[0X003],(EK[0X5]-1)*0X00032;local aK=(zK[VK]);for gK=0X1,EK[0X00002]do do(aK)[MK+gK]=zK[VK+gK];end;end;else zK[0X0]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;(zK)[1]=EK[7];local VK=(0x0);nK=nK+1;zK[VK](zK[VK+0X1]);QK=VK-1;nK=nK+1;nK=nK+0x1;nK=nK+0X1;do zK[0]=nil;end;EK=eK[nK];nK=nK+0x0001;(zK)[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+0x01;zK[2]=EK[0X7];nK=nK+1;VK=0x0001;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not(not zK[0X0001])then else nK=EK[0X2];end;end;end;else if dK~=16 then(zK)[EK[0x3]]=zK[EK[0X00002]]%zK[EK[0X5]];else(zK)[0x000]=UK[EK[0X7]];do nK=nK+0x00001;end;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+0x1;end;do zK[0]=zK[0][EK[6]];end;nK=nK+1;QK=0;(zK)[QK]=zK[QK]();nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0X0001;do if not(not zK[0x00])then else nK=EK[0x2];end;end;end;end;else if not(dK>=12)then if dK==11 then(zK)[0X1]={};EK=eK[nK];do nK=nK+1;end;zK[0X2]=UK[EK[0X7]];nK=nK+0X00001;do nK=nK+0X001;end;EK=eK[nK];do nK=nK+1;end;zK[0X2]=zK[0X2][EK[6]];do EK=eK[nK];end;do nK=nK+0x01;end;(zK[0X1])[EK[7]]=zK[0X2];nK=nK+0X1;zK[0x000]=zK[1];EK=eK[nK];nK=nK+0X1;do nK=EK[2];end;else local VK=sK[0];(zK)[0X0]=VK[1][VK[0X02]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[1]=UK[EK[7]];local MK=(0);nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X001;(zK)[2]=EK[0X7];nK=nK+0X1;do zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);end;QK=MK;EK=eK[nK];nK=nK+0X1;do if not(not zK[0])then else nK=EK[0X00002];end;end;end;else do if dK<13 then local VK=(EK[0X3]);local MK,aK=zK[VK]();if not(MK)then else nK=EK[2];zK[VK+3]=aK;end;else do if dK~=14 then nK=EK[2];else do repeat local aK=({});local VK,MK=mK,(zK);for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[0X02]>=0x000)then else local LK=(lK[0x0002]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[1]=aK[LK];(lK)[2]=1;end;end;end;end;until true;end;do return;end;end;end;end;end;end;end;end;else do if not(dK<0X00005)then if dK>=0X007 then if dK<8 then do zK[0X0001]=UK[EK[7]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[2]=EK[7];end;EK=eK[nK];nK=nK+1;do(zK)[3]=EK[0X07];end;nK=nK+0X1;(zK)[0X4]=zK[0];local VK=0X1;nK=nK+0X1;QK=VK+4-0X1;(zK[VK])(S(zK,VK+0x1,QK));QK=VK-1;do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do zK[0X0001]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+0X1;do zK[0X02]=EK[0X7];end;do nK=nK+0X1;end;VK=1;zK[VK](zK[VK+0x0001]);do QK=VK-1;end;nK=nK+0x1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do nK=EK[2];end;else if dK~=0X9 then do(zK)[EK[3]]={S({},1,EK[0x2])};end;else end;end;else if dK~=6 then(zK)[EK[3]]=UK[EK[0X7]];else local VK=(EK[0X2]);local aK,MK=VK[9],(nil);local gK=(#aK);if not(gK>0X00000)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[1]==0 then MK[wK-1]={zK,rK[2]};else MK[wK-0X0001]=sK[rK[2]];end;end;(K)(mK,MK);end;do(zK)[EK[0X003]]=Ri(MK,UK,VK);end;end;end;else if dK<2 then if dK==0X1 then do(zK)[EK[0x3]]=EK[0x00007];end;else do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;else if not(dK<3)then do if dK~=4 then local VK=(zK[EK[2]]/zK[EK[0X00005]]);(zK)[EK[0x3]]=VK-VK%1;else do zK[EK[0x03]]=g(zK[EK[2]],zK[EK[0X5]]);end;end;end;else(zK)[0]=UK[EK[7]];do nK=nK+0x001;end;nK=nK+1;do EK=eK[nK];end;do nK=nK+0x1;end;(zK)[0]=zK[0][EK[6]];nK=nK+0x00001;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;do if not(not zK[0])then else nK=EK[0x00002];end;end;end;end;end;end;end;end;end;end;end;else if SK>=112 then do if SK~=0X71 then _K=function(...)local nK=0X1;local zK={};local CK={[2]=zK,[1]=xK};local pK=(Q());local UK=(pK==z and KK or pK);local NK,HK=vi(...);local QK=0;NK=NK-0X1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X1];else break;end;end;if not PK then do HK=nil;end;elseif not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+0X01,NK+0X00001)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0x1];do nK=nK+1;end;do if dK>=0XA then if not(dK>=15)then if dK<12 then if dK==0X00b then do zK[EK[0X3]][zK[EK[0X2]]]=zK[EK[5]];end;else(zK)[EK[0X3]]=zK[EK[2]]<zK[EK[5]];end;else do if dK>=0xD then if dK~=0XE then local VK=EK[0X3];local MK=zK[EK[0x2]];zK[VK+1]=MK;zK[VK]=MK[EK[6]];else(zK)[0x001]=UK[EK[0X007]];do nK=nK+1;end;QK=1;zK[QK]();do QK=QK-0X00001;end;nK=nK+1;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if lK[0X1]==MK and lK[2]>=0X00000 then local LK=lK[0X00002];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[0X1]=aK[LK];lK[0X002]=1;end;end;end;end;until true;return;end;else zK[0X0001]=UK[EK[0x0007]];nK=nK+0X1;zK[0X002]={};EK=eK[nK];nK=nK+0X1;(zK[0X0001])[EK[0X7]]=zK[2];EK=eK[nK];do nK=nK+0X001;end;nK=EK[0x2];end;end;end;else if not(dK<0X0011)then do if dK<0X00012 then do(zK)[EK[0x3]]={S({},0x1,EK[0X00002])};end;else if dK~=0X13 then do zK[EK[0X3]]=UK[EK[0X0007]];end;else local VK=(EK[0X3]);local MK=EK[2];do if MK==0 then else QK=VK+MK-1;end;end;local aK,gK,wK=EK[0X5],nil,(nil);if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));else gK,wK=vi(zK[VK]());end;if aK==0X0001 then do QK=VK-1;end;else if aK~=0 then gK=VK+aK-2;do QK=gK+0X1;end;else gK=gK+VK-1;QK=gK;end;local rK=0x0;do for lK=VK,gK do rK=rK+1;(zK)[lK]=wK[rK];end;end;end;end;end;end;else do if dK==0x10 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else end;end;end;end;else do if not(dK<5)then if dK<0X7 then if dK==6 then do zK[1]=UK[EK[0X0007]];end;nK=nK+1;do nK=nK+1;end;nK=nK+0x0001;(zK)[2]=zK[0X0];do EK=eK[nK];end;nK=nK+1;do(zK[0X1])[EK[7]]=zK[0X2];end;EK=eK[nK];do nK=nK+1;end;do nK=EK[0X002];end;else zK[0x1]=UK[EK[0x7]];local VK=1;nK=nK+1;do nK=nK+1;end;nK=nK+0X1;do zK[0X2]=zK[0X0];end;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;do nK=nK+0X0001;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do if zK[0X0001]~=EK[0X6]then nK=EK[3];end;end;end;else do if dK<0X8 then(zK)[EK[3]]=EK[0X07];else if dK==9 then(zK)[EK[0X3]]=CK[EK[0x002]];else CK[EK[2]]=zK[EK[3]];end;end;end;end;else do if not(dK<0x2)then if not(dK<3)then if dK~=0x4 then local VK,MK=EK[0x2],nil;local aK=(VK[0x9]);local gK=(#aK);if not(gK>0)then else MK={};do for wK=1,gK do local rK=aK[wK];do if rK[0X1]~=0X0 then(MK)[wK-0X0001]=sK[rK[0X2]];else MK[wK-1]={zK,rK[0X2]};end;end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else(zK)[EK[3]]=zK[EK[2]]-zK[EK[5]];end;else do nK=EK[2];end;end;else if dK~=1 then(zK)[EK[3]]=D(zK[EK[0X2]],zK[EK[5]]);else local VK=(zK[EK[2]]/zK[EK[5]]);(zK)[EK[0X3]]=VK-VK%0X1;end;end;end;end;end;end;end;end;end;else _K=function(...)local zK={};local QK=0;local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);local nK=(1);NK=NK-1;for EK=0x00,NK do if not(WK>EK)then do break;end;else zK[EK]=HK[EK+0X1];end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X0001,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X1];do nK=nK+0x01;end;if not(dK>=0x8)then if not(dK>=0X004)then do if not(dK<2)then if dK~=3 then for VK=EK[3],EK[0X2]do(zK)[VK]=nil;end;else zK[EK[0x3]]=r(zK[EK[2]],zK[EK[0X5]]);end;else if dK==0X1 then else do zK[1]=UK[EK[7]];end;nK=nK+0X1;nK=nK+1;nK=nK+0X1;(zK)[2]=zK[0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[7]]=zK[2];EK=eK[nK];nK=nK+1;zK[1]=UK[EK[0X7]];nK=nK+1;do QK=1;end;(zK[QK])();QK=QK-1;nK=nK+0X1;do nK=nK+1;end;do nK=nK+1;end;repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[0X0001]==MK and lK[0X2]>=0X0)then else local LK=lK[0X002];if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[0X0001]=aK[LK];lK[2]=0X1;end;end;end;end;until true;do return;end;end;end;end;else if not(dK>=0X6)then if dK==5 then(zK)[EK[3]]={S({},1,EK[2])};else local VK=EK[0X3];local MK=(EK[0x5]-0X01)*50;local aK=(zK[VK]);for gK=1,EK[0x2]do aK[MK+gK]=zK[VK+gK];end;end;else if dK==7 then nK=EK[2];else if not(zK[EK[2]]<=zK[EK[0X5]])then else nK=EK[0X3];end;end;end;end;else do if dK<0X0c then do if not(dK<10)then if dK==11 then do(zK)[EK[0X3]]=zK[EK[0x2]]~=zK[EK[5]];end;else local VK,MK=EK[0x2],nil;local aK=VK[0x0009];local gK=(#aK);if not(gK>0X000)then else MK={};do for wK=1,gK do local rK=aK[wK];do if rK[0X1]~=0X0000 then do(MK)[wK-0X1]=sK[rK[0x2]];end;else(MK)[wK-0X01]={zK,rK[2]};end;end;end;end;K(mK,MK);end;do zK[EK[0X00003]]=Ri(MK,UK,VK);end;end;else if dK~=0X00009 then zK[EK[3]]=UK[EK[7]];else(zK)[EK[3]]=w(zK[EK[2]],zK[EK[0x00005]]);end;end;end;else if not(dK<14)then if dK~=0X000F then repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0X02]>=0X000)then else local LK=(lK[0X00002]);if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[0x0001]=aK[LK];do(lK)[0X0002]=1;end;end;end;end;until true;return S(zK,EK[3],QK);else zK[EK[0X3]]=zK[EK[0X2]]^zK[EK[0X0005]];end;else if dK~=13 then do(zK)[EK[0x3]]=EK[0X0007];end;else local VK=(EK[3]);for MK=VK,VK+(EK[0X2]-1)do do zK[MK]=HK[WK+(MK-VK)+0x1];end;end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=0X1,{};local CK={[2]=zK,[1]=xK};local pK=(Q());local QK=0;local NK,HK=vi(...);do NK=NK-1;end;local UK=(pK==z and KK or pK);do for EK=0X0,NK do do if WK>EK then do(zK)[EK]=HK[EK+0x1];end;else break;end;end;end;end;do if not PK then do HK=nil;end;elseif YK then do(zK)[WK]={n=NK>=WK and NK-WK+0X001 or 0,S(HK,WK+0X1,NK+0x1)};end;end;end;if UK==pK then else _(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+0x00001;if dK>=5 then if dK>=0X8 then do if not(dK<0x9)then if dK~=10 then nK=EK[2];else(zK)[EK[3]]=l(zK[EK[2]]);end;else(zK)[EK[0X3]]=zK[EK[2]]<zK[EK[5]];end;end;else if dK>=6 then if dK~=7 then zK[EK[3]]=UK[EK[7]];else zK[EK[0X00003]]=EK[0X7];end;else end;end;else if dK<0X2 then if dK~=1 then(zK)[EK[0X3]]=zK[EK[0X002]]>=zK[EK[5]];else zK[0X1]=UK[EK[0X7]];nK=nK+1;(zK)[2]=zK[0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[0X00007]]=zK[2];EK=eK[nK];nK=nK+0x01;(zK)[0x1]=UK[EK[0X7]];nK=nK+0x1;nK=nK+0X1;nK=nK+0X1;QK=0X1;zK[QK]();QK=QK-1;do nK=nK+1;end;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0 then local LK=(lK[2]);do if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;lK[0X2]=1;end;end;end;until true;return;end;else if dK>=3 then if dK==0X00004 then zK[EK[3]]={S({},1,EK[2])};else(CK)[EK[0X2]]=zK[EK[3]];end;else local VK=(EK[0x2]);local MK=nil;local aK=(VK[0x09]);local gK=(#aK);do if gK>0 then do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[1]==0X0 then do MK[wK-1]={zK,rK[0X2]};end;else MK[wK-1]=sK[rK[0X2]];end;end;K(mK,MK);end;end;zK[EK[0X03]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;end;else if not(SK>=108)then do if not(SK>=0X6a)then do _K=function(...)local zK=({});local nK=0X001;local CK={[2]=zK,[1]=xK};local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;if not PK then HK=nil;elseif YK then do zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+0x1)};end;end;if UK~=pK then _(_K,UK);end;local QK=(0);do while true do local EK=eK[nK];local dK=EK[1];do nK=nK+0X1;end;if not(dK<7)then if not(dK<0Xb)then if dK<13 then if dK~=12 then local VK=EK[0X0003];local MK,aK,gK=zK[VK],zK[VK+1],zK[VK+2];(zK)[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);nK=EK[0X00002];else local VK,MK=EK[0X3],EK[2];QK=VK+MK-0X1;repeat local aK,gK=mK,zK;local wK={};do for rK,lK in W,aK do for LK,DK in W,lK do if DK[0X00001]==gK and DK[2]>=0 then local ZK=DK[0X00002];do if not wK[ZK]then wK[ZK]={gK[ZK]};end;end;do DK[1]=wK[ZK];end;(DK)[2]=1;end;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));end;else do if dK==14 then for VK=EK[0X0003],EK[0x2]do(zK)[VK]=nil;end;else nK=EK[2];end;end;end;else if not(dK>=0x9)then if dK==0X0008 then local MK,aK=EK[2],EK[5];local VK=(EK[3]);if MK==0 then else do QK=VK+MK-0X1;end;end;local gK,wK=nil,nil;do if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK==1 then QK=VK-1;else if aK==0 then gK=gK+VK-0X01;QK=gK;else gK=VK+aK-2;QK=gK+0X1;end;local rK=(0x0000);for lK=VK,gK do rK=rK+1;do zK[lK]=wK[rK];end;end;end;else(zK)[EK[0X03]]={S({},0X1,EK[2])};end;else if dK~=10 then local VK=EK[2];local aK=VK[0X9];local gK=(#aK);local MK=nil;if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[1]==0X0 then MK[wK-1]={zK,rK[0X2]};else do MK[wK-1]=sK[rK[0X2]];end;end;end;K(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else if zK[EK[2]]~=zK[EK[5]]then nK=EK[3];end;end;end;end;else if not(dK>=0x3)then do if dK<1 then(zK)[EK[0X3]]=zK[EK[0X2]]-zK[EK[5]];else do if dK~=2 then zK[EK[0x0003]]=zK[EK[0x02]][zK[EK[0X00005]]];else zK[EK[0x00003]]=EK[7];end;end;end;end;else if dK<0x5 then if dK~=0X4 then do(zK)[1]=UK[EK[7]];end;do nK=nK+0x001;end;do zK[0X2]=zK[0];end;EK=eK[nK];do nK=nK+0X1;end;zK[1][EK[0X7]]=zK[2];do EK=eK[nK];end;nK=nK+1;zK[1]=UK[EK[0x7]];nK=nK+1;nK=nK+1;nK=nK+1;QK=0X001;(zK[QK])();do QK=QK-0X00001;end;nK=nK+1;nK=nK+1;do nK=nK+1;end;do repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0X0)then else local LK=lK[0x2];if not aK[LK]then aK[LK]={MK[LK]};end;lK[0X01]=aK[LK];do(lK)[0X2]=0X1;end;end;end;end;end;until true;end;do return;end;else(zK)[EK[0X3]]=UK[EK[0X7]];end;else if dK~=6 then else if not(not(zK[EK[2]]<=zK[EK[5]]))then else do nK=EK[3];end;end;end;end;end;end;end;end;end;end;else if SK~=0X6b then _K=function(...)local nK,zK=0X1,{};local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if WK>EK then do zK[EK]=HK[EK+1];end;else break;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X0001,NK+0x1)};end;local QK=0;if UK==pK then else _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+1;if not(dK<7)then if dK<0Xb then if not(dK<9)then do if dK~=0X000A then do nK=EK[0X2];end;else do if zK[EK[0X2]]~=zK[EK[0X5]]then else do nK=EK[0X3];end;end;end;end;end;else if dK~=8 then do(zK)[1]=UK[EK[7]];end;do nK=nK+0x1;end;do nK=nK+0x1;end;EK=eK[nK];nK=nK+1;zK[0X2]=EK[7];local VK=0X1;nK=nK+1;(zK[VK])(zK[VK+0x1]);QK=VK-1;do nK=nK+1;end;do nK=nK+0X001;end;nK=nK+0X1;do repeat local MK,aK=mK,(zK);local gK={};for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[0X1]==aK and LK[0X2]>=0)then else local DK=LK[0X2];if not gK[DK]then(gK)[DK]={aK[DK]};end;do(LK)[0X1]=gK[DK];end;(LK)[0x002]=0X00001;end;end;end;until true;end;return;else for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;end;else do if not(dK<0xd)then if dK~=0Xe then zK[EK[0X3]]=L(zK[EK[0X2]],zK[EK[5]]);else zK[EK[0X03]]=zK[EK[0X002]]~=zK[EK[5]];end;else if dK~=0XC then local VK=EK[3];local MK=(b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end));(MK)(zK[VK],zK[VK+1],zK[VK+2]);QK=VK;zK[VK]=MK;nK=EK[0X0002];else end;end;end;end;else if dK<0X3 then if not(dK>=1)then(zK)[EK[0X03]]=UK[EK[0X00007]];else do if dK~=2 then do(zK)[EK[0X3]]=EK[0X0007];end;else(zK)[EK[3]]=not zK[EK[2]];end;end;end;else if dK<0X0005 then if dK~=4 then(zK)[EK[0X00003]]=zK[EK[0X2]]+zK[EK[5]];else(zK)[EK[0x3]]={S({},1,EK[0X2])};end;else if dK==6 then local VK=EK[0X02];local aK=(VK[9]);local MK=(nil);local gK=#aK;do if gK>0X0 then MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[1]~=0 then MK[wK-1]=sK[rK[2]];else MK[wK-0X001]={zK,rK[0x2]};end;end;end;(K)(mK,MK);end;end;zK[EK[0X03]]=Ri(MK,UK,VK);else local VK=zK[EK[2]]/zK[EK[5]];(zK)[EK[3]]=VK-VK%1;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=Q();local UK=(pK==z and KK or pK);local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local QK=(0x00000);NK=NK-0X01;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else do break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X1;do if not(dK<0X000A)then do if not(dK>=15)then if not(dK>=12)then if dK==11 then do zK[0x1]=UK[EK[7]];end;do nK=nK+1;end;do nK=nK+0X1;end;do nK=nK+0X1;end;do QK=1;end;(zK[QK])();QK=QK-0x01;nK=nK+1;do repeat local aK=({});local VK,MK=mK,(zK);for gK,wK in W,VK do do for rK,lK in W,wK do do if not(lK[0X1]==MK and lK[0X002]>=0)then else local LK=(lK[0X2]);if not aK[LK]then(aK)[LK]={MK[LK]};end;do(lK)[0x001]=aK[LK];end;(lK)[2]=1;end;end;end;end;end;until true;end;return;else zK[EK[3]]={S({},1,EK[0x2])};end;else if not(dK<13)then if dK==14 then local VK=EK[3];local MK=EK[2];QK=VK+MK-0X1;repeat local aK,gK=mK,zK;local wK={};for rK,lK in W,aK do for LK,DK in W,lK do do if not(DK[1]==gK and DK[0X2]>=0x0)then else local ZK=(DK[0X2]);if not wK[ZK]then do wK[ZK]={gK[ZK]};end;end;(DK)[1]=wK[ZK];(DK)[0X02]=1;end;end;end;end;until true;return zK[VK](S(zK,VK+0X1,QK));else zK[1]=UK[EK[7]];local VK=(1);nK=nK+1;nK=nK+0X00001;do nK=nK+0X1;end;zK[2]=zK[0];nK=nK+1;zK[VK]=zK[VK](zK[VK+0X1]);QK=VK;EK=eK[nK];nK=nK+0x001;if zK[0x1]~=EK[0X006]then nK=EK[3];end;end;else(zK)[0X1]=UK[EK[0X007]];local VK=(sK[0X00000]);do EK=eK[nK];end;nK=nK+1;zK[0x1]=zK[0X1][EK[0X6]];nK=nK+0X0001;zK[0x2]=VK[1][VK[0x2]];do nK=nK+1;end;(zK)[3]=zK[0];EK=eK[nK];do nK=nK+0x1;end;if not(zK[3])then else nK=EK[0X2];end;end;end;else if not(dK<0X012)then do if not(dK<0X13)then if dK~=20 then do zK[EK[0x3]][zK[EK[0X2]]]=zK[EK[5]];end;else do if zK[EK[2]]==zK[EK[0X0005]]then else nK=EK[0X0003];end;end;end;else for VK=EK[3],EK[0X0002]do zK[VK]=nil;end;end;end;else if not(dK>=0x10)then local VK=EK[2];local MK=(zK[VK]);for aK=VK+1,EK[5]do MK=MK..zK[aK];end;do(zK)[EK[3]]=MK;end;else if dK~=17 then do zK[EK[0X3]]=zK[EK[0X00002]]+zK[EK[5]];end;else local VK=(EK[2]);local aK,MK=VK[0x0009],nil;local gK=(#aK);do if not(gK>0X0000)then else do MK={};end;do for wK=1,gK do local rK=(aK[wK]);if rK[0X01]==0x0 then MK[wK-0X1]={zK,rK[0X0002]};else(MK)[wK-1]=sK[rK[0x2]];end;end;end;K(mK,MK);end;end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;else if dK<0X0005 then do if not(dK<2)then if dK<3 then(zK)[EK[0X00003]]=zK[EK[0x2]]*zK[EK[5]];else do if dK==0X4 then zK[0X1]=UK[EK[0x00007]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+0X1;if zK[0X1]==EK[6]then else nK=EK[3];end;else zK[1]=UK[EK[0X007]];nK=nK+0X0001;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do zK[0X2]=EK[0X07];end;do nK=nK+0X1;end;local VK=1;zK[VK](zK[VK+1]);QK=VK-0x00001;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0x1;end;do nK=EK[2];end;end;end;end;else do if dK~=0X1 then local VK=(EK[2]);local aK=VK[9];local gK=(#aK);local MK=nil;if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0 then(MK)[wK-0X1]=sK[rK[2]];else MK[wK-1]={zK,rK[0X00002]};end;end;(K)(mK,MK);end;zK[EK[0x0003]]=i[EK[5]](MK);else zK[1]=UK[EK[0X07]];EK=eK[nK];nK=nK+1;(zK)[1]=zK[1][EK[0X6]];local VK=sK[0];nK=nK+0x1;(zK)[2]=VK[1][VK[0X02]];EK=eK[nK];nK=nK+1;(zK[1])[zK[2]]=EK[0X6];EK=eK[nK];nK=nK+0X01;do nK=EK[2];end;end;end;end;end;else if not(dK>=7)then if dK==6 then(zK)[EK[0x3]]=UK[EK[7]];else local VK=(EK[3]);local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+1],zK[VK+0x2]);QK=VK;(zK)[VK]=MK;nK=EK[0X2];end;else do if not(dK<8)then if dK==9 then nK=EK[0x2];else(zK)[EK[0X3]]=EK[0X7];end;else end;end;end;end;end;end;end;end;end;end;end;else do if SK>=0X6d then if SK~=0X6E then _K=function(...)local nK,zK=1,({});local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if not(WK>EK)then do break;end;else(zK)[EK]=HK[EK+1];end;end;local UK=((pK==z and KK or pK));if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0x0,S(HK,WK+1,NK+0x01)};end;if UK~=pK then(_)(_K,UK);end;local QK=(0X00);do while true do local EK=eK[nK];local dK=EK[0X1];do nK=nK+1;end;do if not(dK<0x8)then if dK>=12 then if dK<14 then do if dK==0X00d then zK[EK[0X3]]=w(zK[EK[0X002]],zK[EK[5]]);else zK[1]=UK[EK[7]];do nK=nK+0x1;end;nK=nK+1;nK=nK+1;do QK=1;end;(zK[QK])();QK=QK-0x1;nK=nK+1;repeat local VK,MK=mK,(zK);local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do do if lK[0X001]==MK and lK[0X2]>=0 then local LK=lK[2];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;(lK)[1]=aK[LK];lK[2]=1;end;end;end;end;end;until true;return;end;end;else if dK~=15 then zK[EK[0X3]]={S({},1,EK[0X2])};else do zK[EK[0X3]]=zK[EK[0X002]];end;end;end;else if dK<0X0a then if dK==9 then else(zK)[1]=UK[EK[7]];nK=nK+1;nK=nK+0X1;do nK=nK+0X1;end;zK[0X2]=zK[0X0];EK=eK[nK];nK=nK+0X00001;do zK[0X1][EK[7]]=zK[2];end;do EK=eK[nK];end;nK=nK+0X1;do nK=EK[2];end;end;else if dK~=0x000B then zK[EK[3]]=UK[EK[0X7]];else local VK=EK[0x0002];local aK=VK[9];local MK=(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=0X001,gK do local rK=(aK[wK]);if rK[1]~=0 then do MK[wK-0X1]=sK[rK[2]];end;else MK[wK-0X0001]={zK,rK[0X2]};end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;else do if dK<4 then do if not(dK>=2)then if dK~=0X0001 then(zK)[0x1]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;zK[1][EK[0X007]]=EK[0X6];EK=eK[nK];nK=nK+0x00001;nK=EK[0x002];else nK=EK[0x02];end;else if dK==0X3 then do(zK)[EK[0X00003]]=EK[0X07];end;else local VK,MK=EK[3],EK[2];do QK=VK+MK-0X01;end;repeat local aK,gK,wK=mK,zK,{};do for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[1]==gK and DK[0X00002]>=0X0)then else local ZK=DK[0X02];do if not(not wK[ZK])then else do wK[ZK]={gK[ZK]};end;end;end;DK[1]=wK[ZK];(DK)[2]=0X1;end;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));end;end;end;else if dK<0X0006 then if dK==0x005 then zK[EK[0X3]]=-zK[EK[2]];else CK[EK[0X2]]=zK[EK[0X3]];end;else if dK==0X7 then do(zK)[EK[3]]=r(zK[EK[0X2]],zK[EK[5]]);end;else zK[0X00001]=UK[EK[0X007]];do nK=nK+1;end;zK[0X0002]=zK[0X00000];do nK=nK+0X1;end;local VK=(0x1);(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+0X001;if zK[0X1]==EK[6]then else nK=EK[0X3];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local QK,zK=0,{};local pK=(Q());local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);local UK,nK=(pK==z and KK or pK),(1);NK=NK-0x1;for EK=0x0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;if not PK then HK=nil;elseif not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X1,NK+1)};end;end;do if UK==pK then else(_)(_K,UK);end;end;do while true do local EK=eK[nK];local dK=EK[0X00001];do nK=nK+1;end;do if dK>=0X0007 then do if dK>=10 then if not(dK>=12)then if dK~=0XB then local VK,MK=EK[3],(zK[EK[0x0002]]);(zK)[VK+0X1]=MK;(zK)[VK]=MK[EK[6]];else(zK)[EK[0x3]]=true;end;else if dK==0X000d then else(zK)[EK[0X3]]=zK[EK[2]];end;end;else if dK>=8 then do if dK~=0x9 then local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=#aK;if not(gK>0X0)then else do MK={};end;for wK=0X1,gK do local rK=aK[wK];if rK[0X1]~=0X0000 then MK[wK-1]=sK[rK[0X2]];else do MK[wK-0X1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else for VK=EK[3],EK[0X2]do zK[VK]=nil;end;end;end;else(zK)[EK[3]]={S({},1,EK[2])};end;end;end;else if not(dK<3)then if dK<0X005 then if dK~=0X4 then zK[EK[3]]=-zK[EK[0X2]];else if not(not zK[EK[3]])then else do nK=EK[0x2];end;end;end;else if dK==6 then zK[EK[0X0003]]=UK[EK[0x00007]];else(zK)[EK[3]]=EK[7];end;end;else if dK<1 then(zK)[1]=UK[EK[7]];nK=nK+0x01;zK[2]=zK[0];do EK=eK[nK];end;nK=nK+1;(zK[1])[EK[0X0007]]=zK[2];EK=eK[nK];do nK=nK+1;end;zK[0X00001]=UK[EK[0X00007]];nK=nK+0X1;QK=1;zK[QK]();QK=QK-1;nK=nK+0x00001;do nK=nK+0X001;end;nK=nK+1;do repeat local VK,MK,aK=mK,zK,{};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0x0 then local LK=lK[2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0x1]=aK[LK];lK[2]=0X0001;end;end;end;end;until true;end;return;else if dK~=2 then repeat local VK,MK,aK,gK=mK,zK,EK[0x3],{};do for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[1]==MK and LK[0X00002]>=aK)then else local DK=(LK[2]);if not(not gK[DK])then else gK[DK]={MK[DK]};end;(LK)[0X1]=gK[DK];LK[0X2]=1;end;end;end;end;until true;else nK=EK[2];end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK,QK=1,{},(0X0);local pK=Q();local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-0X001;local UK=(pK==z and KK or pK);for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0x1];else break;end;end;if not PK then do HK=nil;end;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X0001,NK+0x1)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+1;if dK<10 then if dK>=5 then do if not(dK<0x7)then if dK<8 then zK[EK[0X3]]=CK[EK[0X2]];else do if dK~=0X00009 then if zK[EK[0X2]]~=zK[EK[5]]then else nK=EK[3];end;else zK[EK[3]]=EK[7];end;end;end;else if dK==0X6 then do if zK[EK[2]]~=zK[EK[0X5]]then do nK=EK[3];end;end;end;else(zK)[EK[0X3]]=w(zK[EK[2]],zK[EK[5]]);end;end;end;else do if dK<0X2 then do if dK~=0X1 then zK[0X01]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X001;nK=nK+1;(zK)[0x2]=zK[0X0];EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[0X002];EK=eK[nK];nK=nK+0X1;do nK=EK[2];end;else do zK[EK[0x00003]]={S({},0X0001,EK[2])};end;end;end;else if not(dK>=0X3)then(zK)[EK[3]]=D(zK[EK[2]],zK[EK[0X5]]);else if dK==0x4 then local VK=(EK[2]);local aK=(VK[9]);local gK,MK=#aK,nil;if not(gK>0X000)then else MK={};do for wK=1,gK do local rK=aK[wK];if rK[1]~=0x0 then(MK)[wK-1]=sK[rK[0x2]];else MK[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;do(zK)[EK[0X003]]=Ri(MK,UK,VK);end;else(zK)[0X0001]=UK[EK[0X00007]];do nK=nK+0x1;end;zK[2]={};EK=eK[nK];nK=nK+1;(zK[0x00001])[EK[0X7]]=zK[0X2];EK=eK[nK];nK=nK+1;nK=EK[2];end;end;end;end;end;else if not(dK<0XF)then if not(dK<0x11)then if not(dK>=0X0012)then(zK)[1]=UK[EK[0x007]];do nK=nK+0X1;end;nK=nK+0X1;do nK=nK+0x0001;end;do QK=0x1;end;zK[QK]();QK=QK-1;nK=nK+1;nK=nK+0X001;nK=nK+0X001;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[2];if not aK[LK]then do(aK)[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];do lK[0X00002]=1;end;end;end;end;end;until true;return;else if dK==19 then else do(zK)[1]=UK[EK[0x7]];end;local VK=1;nK=nK+0X00001;do zK[0X2]=zK[0x00];end;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0x1;if zK[1]~=EK[0X6]then nK=EK[3];end;end;end;else if dK~=0X10 then do for VK=EK[0X03],EK[2]do do(zK)[VK]=nil;end;end;end;else do if not(not(zK[EK[0X0002]]<zK[EK[0x5]]))then else nK=EK[0X3];end;end;end;end;else do if dK>=0X0000c then do if dK<0X00d then local VK,MK=EK[0X003],(EK[0X02]);do QK=VK+MK-1;end;do repeat local aK,gK=mK,zK;local wK=({});do for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[0X001]==gK and DK[0X2]>=0)then else local ZK=DK[0x0002];if not(not wK[ZK])then else(wK)[ZK]={gK[ZK]};end;DK[0x001]=wK[ZK];(DK)[0X2]=1;end;end;end;end;until true;end;do return zK[VK](S(zK,VK+0x1,QK));end;else if dK==0Xe then do(zK)[EK[3]]=UK[EK[0X7]];end;else nK=EK[0X00002];end;end;end;else if dK~=11 then zK[EK[3]]=zK[EK[2]]*zK[EK[5]];else if not zK[EK[3]]then nK=EK[2];end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK<0X63)then do if not(SK<0X66)then do if not(SK<0X67)then do if SK~=104 then _K=function(...)local QK=0X0;local zK,nK={},(1);local CK={[1]=xK,[2]=zK};local pK=Q();local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-1;do for EK=0,NK do if not(WK>EK)then break;else do zK[EK]=HK[EK+1];end;end;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0,S(HK,WK+0X1,NK+1)};end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X1;do if dK>=8 then if not(dK>=0xc)then if dK>=0XA then if dK~=11 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else local VK=(EK[2]);local aK=VK[9];local MK=(nil);local gK=#aK;if not(gK>0x0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[1]==0x0000 then do(MK)[wK-1]={zK,rK[0X02]};end;else(MK)[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else do if dK==0X009 then do(zK)[1]=UK[EK[7]];end;nK=nK+1;(zK)[0X2]=zK[0];EK=eK[nK];do nK=nK+1;end;zK[0x01][EK[7]]=zK[0X2];EK=eK[nK];do nK=nK+1;end;(zK)[0X1]=UK[EK[7]];nK=nK+0X1;QK=1;(zK[QK])();QK=QK-1;nK=nK+0X1;nK=nK+1;nK=nK+1;repeat local aK=({});local VK,MK=mK,zK;for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X00002]>=0X0000 then local LK=(lK[0X2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;lK[0X1]=aK[LK];(lK)[0X2]=0X1;end;end;end;until true;return;else local VK=EK[3];local MK=EK[2];QK=VK+MK-0x001;repeat local aK,gK=mK,zK;local wK={};for rK,lK in W,aK do for LK,DK in W,lK do do if DK[0X001]==gK and DK[0X00002]>=0 then local ZK=(DK[0x2]);if not(not wK[ZK])then else do wK[ZK]={gK[ZK]};end;end;do DK[0x1]=wK[ZK];end;do DK[2]=1;end;end;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));end;end;end;else do if not(dK>=14)then do if dK~=0Xd then do if zK[EK[0x3]]then nK=EK[0X2];end;end;else repeat local VK,MK,aK,gK=mK,zK,EK[3],({});do for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[0X001]==MK and LK[2]>=aK)then else local DK=(LK[2]);if not(not gK[DK])then else do gK[DK]={MK[DK]};end;end;do(LK)[1]=gK[DK];end;(LK)[2]=0x1;end;end;end;end;until true;end;end;else if dK>=15 then if dK==0X10 then if not(zK[EK[2]]<=zK[EK[5]])then nK=EK[3];end;else(zK)[EK[3]]=#zK[EK[2]];end;else end;end;end;end;else do if dK<0x004 then if dK<0X2 then if dK~=1 then nK=EK[0X2];else if zK[EK[0X2]]==zK[EK[5]]then else nK=EK[0X003];end;end;else if dK~=3 then(zK)[EK[0X0003]]={S({},0X1,EK[2])};else local VK=EK[2];local MK=zK[VK];do for aK=VK+1,EK[5]do MK=MK..zK[aK];end;end;zK[EK[0X0003]]=MK;end;end;else if not(dK>=6)then if dK~=0X5 then(zK)[EK[3]]=zK[EK[0X00002]]~=zK[EK[5]];else zK[EK[0X03]]=EK[7];end;else if dK~=0X7 then(zK)[EK[3]]=l(zK[EK[0X2]]);else(zK)[EK[0X3]]=UK[EK[0X7]];end;end;end;end;end;end;end;end;else _K=function(...)local zK=({});local QK=(0X0);local nK=(1);local pK=Q();local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);NK=NK-1;for EK=0X0,NK do do if not(WK>EK)then break;else zK[EK]=HK[EK+0X00001];end;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0,S(HK,WK+1,NK+0X1)};end;end;if UK~=pK then(_)(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK<7)then if not(dK>=11)then if dK>=9 then do if dK==0X0A then zK[EK[3]]=CK[EK[2]];else end;end;else if dK==0X8 then if zK[EK[2]]~=zK[EK[0X00005]]then else nK=EK[3];end;else(zK)[EK[3]]=UK[EK[0X7]];end;end;else if not(dK<0X0D)then if dK~=14 then(zK)[EK[0X3]]={S({},1,EK[0X2])};else local VK=(EK[0X3]);local MK,aK=zK[VK]();if not(MK)then else nK=EK[2];zK[VK+0X03]=aK;end;end;else if dK==12 then(zK)[EK[3]]=EK[0X7];else zK[0X0001]=UK[EK[7]];nK=nK+0X1;nK=nK+1;nK=nK+0X1;(zK)[2]={};EK=eK[nK];nK=nK+1;do(zK[1])[EK[7]]=zK[2];end;EK=eK[nK];nK=nK+0X00001;nK=EK[0x002];end;end;end;else if not(dK<3)then do if not(dK<5)then if dK~=6 then do nK=EK[0X2];end;else zK[EK[3]]=zK[EK[2]]*zK[EK[5]];end;else if dK==0X04 then do(zK)[0X1]=UK[EK[0x7]];end;nK=nK+1;local VK=(0X0001);(zK)[0X02]=zK[0X0];do nK=nK+0X1;end;do(zK)[VK]=zK[VK](zK[VK+1]);end;QK=VK;nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+0X1;if zK[0X001]==EK[0X6]then else do nK=EK[0x3];end;end;else for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;else do if not(dK<1)then if dK==2 then zK[1]=UK[EK[0X7]];nK=nK+1;nK=nK+0X0001;nK=nK+1;QK=1;zK[QK]();QK=QK-0X1;nK=nK+1;repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[2]>=0)then else local LK=lK[0x2];do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;(lK)[0x2]=1;end;end;end;until true;return;else local VK=EK[0X2];local aK,MK=VK[9],nil;local gK=#aK;if gK>0 then do MK={};end;do for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0 then(MK)[wK-1]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else zK[0X1]=UK[EK[0X0007]];nK=nK+1;do zK[0X2]=zK[0];end;EK=eK[nK];nK=nK+0X1;zK[0X1][EK[0X00007]]=zK[2];EK=eK[nK];nK=nK+1;nK=EK[0X02];end;end;end;end;end;end;end;end;else _K=function(...)local nK=1;local zK=({});local pK=Q();local UK=((pK==z and KK or pK));local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-0X0001;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X00001];else break;end;end;if not PK then do HK=nil;end;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+1,NK+0X00001)};end;if UK==pK then else _(_K,UK);end;local QK=(0X00);while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X1;if dK<0X17 then if dK>=11 then if not(dK<17)then do if not(dK>=20)then do if not(dK<18)then do if dK==0x13 then(zK)[0]=UK[EK[7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[0X0]=zK[0][EK[0X00006]];nK=nK+0X01;do nK=nK+1;end;nK=nK+0X1;QK=0X00;zK[QK]=zK[QK]();nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;if not(not zK[0])then else nK=EK[2];end;else do if not(not(zK[EK[2]]<zK[EK[0X5]]))then else nK=EK[0X3];end;end;end;end;else zK[6]=UK[EK[0X7]];do nK=nK+0x001;end;nK=nK+0X1;do nK=nK+1;end;(zK)[0x6]=zK[0x6][zK[0x3]];do EK=eK[nK];end;do nK=nK+0x001;end;if not(not zK[6])then else nK=EK[2];end;end;end;else if dK<21 then do(zK)[0X6]=UK[EK[0x7]];end;nK=nK+0x1;do(zK)[6]=zK[0X0006][zK[0x003]];end;EK=eK[nK];nK=nK+0x1;(zK)[6]=zK[6][EK[6]];do nK=nK+1;end;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X6]=zK[6][EK[6]];do EK=eK[nK];end;nK=nK+0X1;zK[6]=zK[0x6][EK[6]];nK=nK+0X0001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;if not(EK[7]<=zK[6])then nK=EK[3];end;else if dK~=0X0016 then else local VK=(sK[0]);do zK[0X000]=VK[0X1][VK[0X02]];end;nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+1;end;if not zK[0]then nK=EK[0X2];end;end;end;end;end;else if dK<14 then if dK<0XC then(zK)[0x0]=UK[EK[0X7]];nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;(zK)[0]=zK[0x0][EK[0X006]];do EK=eK[nK];end;nK=nK+1;if not(not zK[0])then else nK=EK[2];end;else if dK~=13 then local VK=EK[0X3];local MK=(b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end));MK(zK[VK],zK[VK+1],zK[VK+0X02]);QK=VK;(zK)[VK]=MK;nK=EK[2];else if zK[EK[2]]~=zK[EK[0X5]]then else nK=EK[0X3];end;end;end;else if dK<0x000f then do zK[EK[0X03]]={S({},0X1,EK[2])};end;else if dK==16 then zK[0X6]=UK[EK[0X7]];nK=nK+0x0001;zK[0X06]=zK[6][zK[0X004]];EK=eK[nK];nK=nK+0X1;if not(zK[6])then else nK=EK[0X0002];end;else(zK)[6]=UK[EK[0X007]];nK=nK+0x1;zK[0X6]=zK[0X06][zK[3]];EK=eK[nK];nK=nK+0X001;do(zK)[6]=zK[6][EK[6]];end;nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x01;(zK)[6]=zK[6][EK[6]];EK=eK[nK];nK=nK+0X1;(zK)[6]=zK[6][EK[6]];do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do if not zK[6]then do nK=EK[0x2];end;end;end;end;end;end;end;else if not(dK<5)then if not(dK<8)then if not(dK>=9)then zK[EK[3]]=g(zK[EK[2]],zK[EK[5]]);else if dK~=0X0a then do(zK)[5]=UK[EK[7]];end;do nK=nK+0x1;end;nK=nK+1;nK=nK+1;(zK)[5]=zK[0x0005][zK[0X3]];EK=eK[nK];do nK=nK+0X1;end;do if not zK[0X5]then nK=EK[0X02];end;end;else zK[6]=UK[EK[7]];do nK=nK+1;end;nK=nK+1;nK=nK+0x1;do QK=6;end;zK[QK]();QK=QK-1;EK=eK[nK];nK=nK+1;(zK)[6]=UK[EK[7]];nK=nK+1;nK=nK+0X1;EK=eK[nK];local VK=(EK[2]);nK=nK+1;local MK,aK=nil,(VK[0x009]);local gK=#aK;do if not(gK>0X0)then else MK={};do for rK=1,gK do local lK=aK[rK];if lK[1]~=0 then(MK)[rK-0X1]=sK[lK[0X2]];else(MK)[rK-1]={zK,lK[0X2]};end;end;end;K(mK,MK);end;end;local wK=(6);do(zK)[0X07]=Ri(MK,UK,VK);end;do nK=nK+1;end;zK[wK](zK[wK+0X0001]);do QK=wK-0X1;end;do EK=eK[nK];end;nK=nK+0X0001;zK[6]=UK[EK[0x7]];nK=nK+0X1;zK[6]=zK[6][zK[0X3]];nK=nK+0x01;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;if not(not zK[0x006])then else nK=EK[0x002];end;end;end;else if dK>=0x6 then if dK~=0X7 then do if not(zK[EK[0X2]]<zK[EK[0x05]])then else nK=EK[3];end;end;else local VK=(EK[0X3]);local MK,aK=zK[VK]();do if not(MK)then else nK=EK[2];do(zK)[VK+3]=aK;end;end;end;end;else zK[0X0000]=UK[EK[0X7]];nK=nK+0X00001;do QK=0x0;end;(zK[QK])();QK=QK-1;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;do(zK)[0X0]=EK[7];end;local VK=(0X00);EK=eK[nK];nK=nK+1;zK[1]=EK[0X7];do EK=eK[nK];end;nK=nK+0X1;zK[2]=EK[2];EK=eK[nK];do nK=nK+1;end;local MK,aK,gK=zK[VK],zK[VK+1],(zK[VK+0X2]);(zK)[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[2];end;end;else if dK<2 then if dK==1 then zK[5]=UK[EK[7]];nK=nK+1;QK=5;zK[QK]();QK=QK-0X001;do EK=eK[nK];end;nK=nK+1;zK[5]=UK[EK[7]];do nK=nK+0x0001;end;zK[0X0005]=zK[0x5][zK[3]];EK=eK[nK];nK=nK+1;do(zK)[0x5]=zK[5][EK[0X6]];end;do nK=nK+0X001;end;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;(zK)[0X5]=zK[0X5][EK[0X0006]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[5]=zK[5][EK[6]];EK=eK[nK];nK=nK+1;nK=EK[0X2];else(zK)[7]=UK[EK[7]];nK=nK+0x1;(zK)[0X0007]=zK[7][zK[3]];do EK=eK[nK];end;nK=nK+1;zK[7]=zK[7][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[7]=zK[0X7][EK[0x00006]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];do nK=nK+0X1;end;(zK)[7]=zK[0x7][EK[6]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;if not(EK[7]<zK[7])then nK=EK[3];end;end;else if not(dK<0X3)then if dK==4 then(zK)[0X0005]=UK[EK[0X07]];nK=nK+1;zK[5]=zK[5][zK[4]];EK=eK[nK];nK=nK+0X01;if not zK[0x5]then nK=EK[2];end;else(zK)[0X0000]=UK[EK[7]];nK=nK+0X1;nK=nK+0x1;EK=eK[nK];do nK=nK+0X1;end;do zK[0X0]=zK[0x0][EK[6]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;if not(not zK[0])then else nK=EK[2];end;end;else(zK)[0x0]=UK[EK[0X7]];nK=nK+1;nK=nK+1;do nK=nK+0X1;end;do(zK)[0X0]=#zK[0];end;EK=eK[nK];do nK=nK+1;end;if not(not(EK[7]<=zK[0X00000]))then else nK=EK[3];end;end;end;end;end;else if not(dK<0X22)then if not(dK>=40)then if dK>=37 then if dK>=0X0026 then if dK~=39 then(zK)[0x006]=UK[EK[7]];nK=nK+0X1;local VK=0X0006;do(zK)[0x6]=zK[6][zK[3]];end;do EK=eK[nK];end;nK=nK+1;local MK=(zK[6]);do zK[VK+0X1]=MK;end;(zK)[VK]=MK[EK[0x6]];EK=eK[nK];nK=nK+0X1;zK[8]=EK[7];nK=nK+0X1;VK=0x6;(zK)[VK]=zK[VK](zK[VK+0X0001],zK[VK+2]);QK=VK;EK=eK[nK];nK=nK+1;if not zK[0X6]then nK=EK[2];end;else do(zK)[0]=UK[EK[7]];end;nK=nK+1;QK=0;zK[QK]();QK=QK-0x0001;do nK=nK+1;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+0x1;end;zK[0]=UK[EK[0X7]];EK=eK[nK];local VK=(0);nK=nK+0X001;(zK)[0X1]=EK[7];nK=nK+1;(zK[VK])(zK[VK+0X1]);QK=VK-1;EK=eK[nK];nK=nK+1;nK=EK[2];end;else repeat local VK,MK,aK=mK,zK,(EK[0x03]);local gK={};do for wK,rK in W,VK do do for lK,LK in W,rK do if LK[1]==MK and LK[0X0002]>=aK then local DK=(LK[0X2]);if not(not gK[DK])then else gK[DK]={MK[DK]};end;(LK)[1]=gK[DK];do(LK)[0X2]=0x001;end;end;end;end;end;end;until true;end;else do if not(dK>=0X23)then zK[EK[0X003]]=CK[EK[0X02]];else do if dK~=36 then zK[0x0]=UK[EK[0x07]];nK=nK+1;zK[0]=#zK[0];EK=eK[nK];nK=nK+1;if not(zK[0]<EK[6])then nK=EK[3];end;else repeat local VK,MK=mK,(zK);local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0X2]>=0X0)then else local LK=(lK[0x0002]);if not aK[LK]then(aK)[LK]={MK[LK]};end;(lK)[0X00001]=aK[LK];(lK)[2]=1;end;end;end;end;until true;return;end;end;end;end;end;else if not(dK>=43)then if dK>=0X29 then do if dK~=0X2a then zK[EK[0X003]]=true;else zK[5]=UK[EK[0x7]];do nK=nK+0X1;end;nK=nK+0X1;do nK=nK+1;end;do(zK)[0X005]=#zK[0X05];end;EK=eK[nK];do nK=nK+1;end;if not(zK[5]<EK[6])then else nK=EK[0X3];end;end;end;else do(zK)[0X00005]=UK[EK[0X7]];end;nK=nK+0X1;do nK=nK+1;end;do nK=nK+1;end;(zK)[5]=zK[0x00005][zK[3]];EK=eK[nK];do nK=nK+1;end;(zK)[0X5]=zK[5][EK[6]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];do nK=nK+0X1;end;do(zK)[5]=zK[5][EK[6]];end;do nK=nK+0X001;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;(zK)[0X5]=zK[0X00005][EK[6]];nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if zK[5]==EK[6]then else nK=EK[3];end;end;else do if dK<0X02c then(zK)[EK[0x3]]=w(zK[EK[0X002]],zK[EK[5]]);else do if dK==45 then zK[EK[0X03]]=zK[EK[2]]-zK[EK[0x05]];else zK[EK[0X3]]=EK[0X07];end;end;end;end;end;end;else do if not(dK<0x01C)then if dK>=31 then if dK<32 then(zK)[6]=UK[EK[7]];nK=nK+1;(zK)[0X006]=zK[0X6][zK[0X3]];EK=eK[nK];nK=nK+1;do zK[6]=zK[0X0006][EK[6]];end;do EK=eK[nK];end;nK=nK+1;(zK)[0X00006]=zK[6][EK[0x6]];do EK=eK[nK];end;do nK=nK+0X00001;end;zK[6]=zK[0x6][EK[0x6]];do nK=nK+0x1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0x0001;if zK[6]==zK[0X5]then do nK=EK[0x3];end;end;else if dK~=0X00021 then zK[0]=UK[EK[0X7]];do nK=nK+0X1;end;nK=nK+1;nK=nK+0X01;zK[0]=#zK[0];do EK=eK[nK];end;nK=nK+0x0001;if not(EK[0x7]<=zK[0])then nK=EK[3];end;else zK[5]=UK[EK[0X7]];nK=nK+0X00001;do nK=nK+1;end;nK=nK+1;QK=5;zK[QK]=zK[QK]();do nK=nK+0X1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0x01;(zK)[0X6]=UK[EK[0X7]];do nK=nK+0X1;end;nK=nK+1;nK=nK+1;(zK)[6]=zK[6][zK[0x4]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+1;zK[6]=zK[0X0006][EK[0X6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0X6]=zK[6][EK[6]];EK=eK[nK];nK=nK+1;do(zK)[6]=zK[6][EK[0x00006]];end;nK=nK+1;do nK=nK+0X00001;end;do nK=nK+0X001;end;(zK)[5]=zK[0x5]-zK[0X6];EK=eK[nK];nK=nK+0X1;if not(not(zK[5]<EK[6]))then else nK=EK[3];end;end;end;else if dK>=29 then do if dK~=0x1e then(zK)[0x4]=UK[EK[0X7]];do EK=eK[nK];end;local VK=4;nK=nK+1;(zK)[4]=zK[0X4][EK[0X6]];nK=nK+0X00001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[5]=zK[3]-EK[0x006];do EK=eK[nK];end;do nK=nK+0x1;end;zK[6]=EK[0X007];do EK=eK[nK];end;nK=nK+0X1;zK[7]=EK[0X7];nK=nK+0X1;do QK=VK+4-1;end;zK[VK]=zK[VK](S(zK,VK+0X1,QK));QK=VK;do nK=nK+0X1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if zK[0X4]~=EK[0X6]then nK=EK[0X0003];end;else zK[5]=UK[EK[7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[5]=zK[0x05][EK[6]];end;nK=nK+0X1;nK=nK+1;nK=nK+1;QK=5;(zK[QK])();QK=QK-0X001;EK=eK[nK];nK=nK+0X1;nK=EK[0X02];end;end;else for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;end;end;else if not(dK<25)then do if dK<0x01A then do zK[EK[0X003]]=UK[EK[0X7]];end;else do if dK==27 then nK=EK[0X2];else local VK=(EK[2]);local aK,MK=VK[9],(nil);local gK=#aK;do if not(gK>0)then else MK={};do for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0 then(MK)[wK-0X001]={zK,rK[0X2]};else(MK)[wK-0X01]=sK[rK[2]];end;end;end;K(mK,MK);end;end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;else if dK~=24 then do zK[0X5]=EK[7];end;nK=nK+0X01;(zK)[4]=zK[0X5];do EK=eK[nK];end;nK=nK+0X1;nK=EK[2];else do zK[EK[3]]=zK[EK[0X2]]<zK[EK[5]];end;end;end;end;end;end;end;end;end;end;end;else if not(SK>=0x64)then _K=function(...)local nK=(1);local zK=({});local pK=(Q());local NK,HK=vi(...);local UK=(pK==z and KK or pK);local CK={[2]=zK,[1]=xK};NK=NK-1;for EK=0x000,NK do do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0x00001];end;end;end;do if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X00,S(HK,WK+0X0001,NK+1)};end;end;local QK=(0x0);if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0X1;if dK>=19 then if not(dK>=0X1d)then do if dK<24 then if dK>=21 then if dK<0X00016 then else do if dK==23 then do repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[2]>=0 then local LK=lK[2];if not aK[LK]then(aK)[LK]={MK[LK]};end;do(lK)[1]=aK[LK];end;do lK[2]=0X1;end;end;end;end;end;end;until true;end;do return;end;else do zK[0X0004]=zK[3][EK[0X00006]];end;nK=nK+0x0001;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[5]=zK[0x0003][EK[0X6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do zK[6]=UK[EK[7]];end;EK=eK[nK];do nK=nK+1;end;(zK)[0X6]=zK[6][EK[0x6]];nK=nK+0X1;nK=nK+0x01;EK=eK[nK];nK=nK+0x1;if not(zK[0X6]<=zK[0X005])then nK=EK[3];end;end;end;end;else if dK==0X000014 then zK[EK[3]]=EK[7];else local VK=(EK[2]);local MK=zK[VK];for aK=VK+0X1,EK[5]do MK=MK..zK[aK];end;zK[EK[0X3]]=MK;end;end;else if not(dK>=26)then if dK==0x0019 then if not(zK[EK[0X3]])then else nK=EK[2];end;else zK[0]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;zK[0]=zK[0][EK[6]];EK=eK[nK];nK=nK+1;do if not zK[0]then do nK=EK[0x2];end;end;end;end;else if not(dK>=0X1B)then(zK)[EK[0X3]]={S({},0X1,EK[0x002])};else if dK~=0X1c then local VK,MK=0x5,(zK[0X1]);zK[VK+0X1]=MK;do zK[VK]=MK[EK[0X6]];end;EK=eK[nK];nK=nK+1;zK[0X7]=EK[7];nK=nK+1;VK=0x5;(zK)[VK]=zK[VK](zK[VK+0X001],zK[VK+2]);do QK=VK;end;EK=eK[nK];nK=nK+1;do zK[5]=zK[0X5][EK[6]];end;EK=eK[nK];nK=nK+0X1;if zK[0x005]==zK[0X2]then nK=EK[0X3];end;else repeat local VK,MK,aK,gK=mK,zK,EK[0X3],({});for wK,rK in W,VK do do for lK,LK in W,rK do if LK[0X01]==MK and LK[0X2]>=aK then local DK=(LK[0x2]);do if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;end;LK[0X1]=gK[DK];do LK[0X2]=0X1;end;end;end;end;end;until true;end;end;end;end;end;else if not(dK<34)then if not(dK>=0X24)then if dK~=35 then do zK[EK[0X3]]=UK[EK[0x07]];end;else(zK)[1]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X1;(zK)[0X001]=zK[1][EK[0X6]];nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+0X1;if not(zK[0X00001])then else do nK=EK[0x2];end;end;end;else if dK>=37 then if dK~=0X000026 then zK[EK[0x3]]=zK[EK[0x2]]-zK[EK[5]];else zK[EK[0X003]]=zK[EK[0x0002]]<=zK[EK[5]];end;else zK[0X0]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0]=zK[0X0][EK[6]];do nK=nK+0X1;end;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0x00001;do zK[1]=EK[0X00007];end;local VK=(0);nK=nK+0X1;zK[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+1;do if not(not zK[0])then else do nK=EK[2];end;end;end;end;end;else if dK<31 then if dK==0x001e then if not(not zK[EK[0X3]])then else do nK=EK[2];end;end;else zK[1]=UK[EK[7]];EK=eK[nK];nK=nK+0x1;local VK=(0x1);zK[1]=zK[0x1][EK[6]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[2]=EK[7];local MK=sK[1];nK=nK+0X1;zK[VK](zK[VK+1]);QK=VK-0X1;do EK=eK[nK];end;nK=nK+1;(zK)[1]=UK[EK[7]];nK=nK+1;zK[0X2]=MK[0x01][MK[0X02]];local aK=0X2;nK=nK+1;VK=0X00001;local gK=(4);if aK==0 then else QK=VK+aK-1;end;local wK,rK=nil,(nil);if aK~=1 then wK,rK=vi(zK[VK](S(zK,VK+0X1,QK)));else do wK,rK=vi(zK[VK]());end;end;do if gK==1 then do QK=VK-0x1;end;else do if gK==0X0 then wK=wK+VK-1;do QK=wK;end;else do wK=VK+gK-0X2;end;QK=wK+1;end;end;local LK=0;for DK=VK,wK do LK=LK+0X1;(zK)[DK]=rK[LK];end;end;end;do EK=eK[nK];end;nK=nK+0x1;VK=1;local lK=b(function(...)o();do for LK,DK in...do o(true,LK,DK);end;end;end);lK(zK[VK],zK[VK+1],zK[VK+2]);do QK=VK;end;do(zK)[VK]=lK;end;nK=EK[0X0002];end;else if dK<32 then zK[0x1]=UK[EK[0x7]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;zK[1]=zK[1][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do if not zK[1]then nK=EK[2];end;end;else if dK==0X00021 then nK=EK[0X02];else zK[0x1]=UK[EK[0X07]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0x00001]=zK[0x01][EK[0X6]];do nK=nK+0x1;end;nK=nK+0x001;nK=nK+1;QK=1;local MK=1;zK[QK]();local VK=(sK[0X2]);QK=QK-0X01;nK=nK+0X01;nK=nK+0X1;nK=nK+1;(zK)[1]=VK[1][VK[0X2]];do nK=nK+1;end;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0X1;local aK=(zK[1]);(zK)[MK+0X1]=aK;(zK)[MK]=aK[EK[0X6]];EK=eK[nK];nK=nK+1;(zK)[0X3]=EK[0X7];nK=nK+1;MK=1;zK[MK]=zK[MK](zK[MK+0x1],zK[MK+2]);QK=MK;EK=eK[nK];nK=nK+1;if not(not zK[0X01])then else nK=EK[0X2];end;end;end;end;end;end;else if not(dK>=0X9)then if not(dK<0x4)then if not(dK>=0X06)then if dK==0X05 then zK[0]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;(zK)[0x000]=zK[0X0][EK[0X6]];EK=eK[nK];do nK=nK+0X00001;end;if not(not zK[0X000])then else do nK=EK[2];end;end;else do if not(zK[EK[2]]<=zK[EK[5]])then do nK=EK[3];end;end;end;end;else if not(dK>=0X7)then local VK=sK[0X2];do(zK)[1]=VK[1][VK[0x2]];end;EK=eK[nK];nK=nK+1;zK[1]=zK[1][EK[6]];do EK=eK[nK];end;nK=nK+0x1;(zK)[0X02]=zK[1][EK[6]];EK=eK[nK];nK=nK+1;zK[0X00002]=zK[0X2][EK[0x6]];nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;(zK)[3]=UK[EK[0x7]];do nK=nK+1;end;do nK=nK+0x1;end;nK=nK+0x1;VK=sK[0x0];do zK[0x4]=VK[1][VK[0X02]];end;nK=nK+0X0001;(zK)[3]=zK[3][zK[0X004]];nK=nK+0X0001;do nK=nK+0X0001;end;do EK=eK[nK];end;do nK=nK+1;end;zK[0X3]=zK[0X0003][EK[6]];do nK=nK+0X1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X00001;do if not(zK[3]<=zK[0X02])then nK=EK[3];end;end;else if dK~=0x8 then zK[EK[0x3]]=zK[EK[0X2]][zK[EK[0X00005]]];else for VK=EK[3],EK[2]do do zK[VK]=nil;end;end;end;end;end;else do if dK>=2 then if dK~=0X3 then zK[EK[3]]=nil;else zK[6]=UK[EK[0x0007]];local MK=nil;EK=eK[nK];nK=nK+1;local VK=(EK[2]);local aK=VK[9];local gK=(#aK);if gK>0 then MK={};for rK=0X1,gK do local lK=(aK[rK]);do if lK[0X0001]~=0X00 then(MK)[rK-0x01]=sK[lK[2]];else MK[rK-0X1]={zK,lK[2]};end;end;end;(K)(mK,MK);end;local wK=0X06;(zK)[0x7]=Ri(MK,UK,VK);nK=nK+1;zK[wK](zK[wK+0X1]);QK=wK-0X00001;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[2];end;else do if dK~=0X1 then local MK=zK[0X1];local VK=(0X4);do(zK)[VK+1]=MK;end;zK[VK]=MK[EK[0X6]];EK=eK[nK];do nK=nK+1;end;(zK)[0x06]=EK[7];nK=nK+1;VK=0X4;do zK[VK]=zK[VK](zK[VK+0X001],zK[VK+0X00002]);end;do QK=VK;end;EK=eK[nK];nK=nK+0X1;if not(not zK[0x4])then else do nK=EK[2];end;end;else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if MK then do(zK)[VK+0X1]=aK;end;zK[VK+0x2]=gK;nK=EK[0X02];end;end;end;end;end;end;else if not(dK<14)then do if dK<0x10 then do if dK~=15 then(zK[EK[0X3]])[zK[EK[0X002]]]=zK[EK[5]];else local VK,MK=2,(zK[0x00001]);(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];do EK=eK[nK];end;do nK=nK+1;end;zK[0x4]=EK[7];nK=nK+0X0001;VK=2;do(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0X0002]);end;QK=VK;do EK=eK[nK];end;do nK=nK+0x1;end;if not(not zK[2])then else nK=EK[0X002];end;end;end;else if not(dK<17)then if dK==18 then zK[2]=UK[EK[7]];EK=eK[nK];nK=nK+0X0001;(zK)[2]=zK[2][EK[6]];nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;do QK=2;end;(zK[QK])();do QK=QK-0X01;end;nK=nK+0X0001;nK=nK+1;EK=eK[nK];nK=nK+1;if not zK[1]then nK=EK[2];end;else zK[0X0]=UK[EK[0X7]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X0]=zK[0][EK[6]];nK=nK+1;QK=0;zK[QK]();QK=QK-1;EK=eK[nK];nK=nK+0X1;local VK=(0);(zK)[0]=UK[EK[7]];EK=eK[nK];nK=nK+1;do(zK)[1]=EK[7];end;do EK=eK[nK];end;do nK=nK+0X1;end;do zK[2]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+0x00001;EK=eK[nK];do nK=nK+0X001;end;(zK)[0X00002]=zK[0X2][EK[0X6]];nK=nK+1;nK=nK+1;nK=nK+1;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);do QK=VK;end;do EK=eK[nK];end;nK=nK+1;if not(not zK[0X00])then else nK=EK[2];end;end;else local VK,MK=EK[2],(nil);local aK=(VK[0x9]);local gK=#aK;if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0 then MK[wK-0X1]={zK,rK[0X00002]};else(MK)[wK-0X001]=sK[rK[2]];end;end;(K)(mK,MK);end;zK[EK[0X03]]=Ri(MK,UK,VK);end;end;end;else do if dK<11 then if dK==0X0a then zK[4]=UK[EK[0X7]];do nK=nK+0X1;end;QK=4;local VK=5;(zK)[QK]=zK[QK]();nK=nK+0X1;nK=nK+0x00001;EK=eK[nK];do nK=nK+0X1;end;local MK=zK[1];(zK)[VK+0X1]=MK;(zK)[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+1;(zK)[0X7]=EK[0X7];nK=nK+0X1;VK=5;zK[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);QK=VK;local aK=(sK[0X0]);EK=eK[nK];nK=nK+0x00001;zK[0x00005]=zK[5][EK[6]];nK=nK+1;do nK=nK+0X1;end;nK=nK+0X01;zK[4]=zK[0X00004]-zK[5];EK=eK[nK];nK=nK+1;zK[5]=UK[EK[7]];nK=nK+0X00001;nK=nK+0X01;nK=nK+1;zK[6]=aK[1][aK[2]];do nK=nK+1;end;(zK)[0X00005]=zK[0X5][zK[6]];EK=eK[nK];nK=nK+1;zK[0X00005]=zK[0X5][EK[0x6]];nK=nK+0x00001;nK=nK+1;EK=eK[nK];nK=nK+0x1;if not(not(zK[5]<=zK[4]))then else nK=EK[3];end;else zK[0X3]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;local VK=(EK[0X002]);do nK=nK+0x001;end;local MK=nil;local aK=VK[0X009];local gK=(#aK);local wK=3;local lK=0X03;do if not(gK>0)then else MK={};do for ZK=0X1,gK do local GK=(aK[ZK]);do if GK[1]~=0x0 then MK[ZK-0X1]=sK[GK[0X2]];else MK[ZK-0X1]={zK,GK[2]};end;end;end;end;(K)(mK,MK);end;end;(zK)[4]=Ri(MK,UK,VK);do nK=nK+1;end;local rK=2;if rK==0 then else QK=wK+rK-0X1;end;local LK,DK=nil,nil;if rK==0X1 then LK,DK=vi(zK[wK]());else LK,DK=vi(zK[wK](S(zK,wK+0X00001,QK)));end;if lK~=0X001 then if lK~=0X0000 then LK=wK+lK-0x2;QK=LK+1;else LK=LK+wK-0X1;QK=LK;end;local ZK=0X0;do for GK=wK,LK do ZK=ZK+1;(zK)[GK]=DK[ZK];end;end;else QK=wK-0X01;end;EK=eK[nK];nK=nK+1;do(zK)[0X00005]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+1;(zK)[5]=zK[5][EK[0X06]];EK=eK[nK];do nK=nK+0X0001;end;zK[6]=EK[7];nK=nK+1;wK=0X5;(zK[wK])(zK[wK+0X1]);QK=wK-0X1;nK=nK+1;nK=nK+0x01;EK=eK[nK];nK=nK+1;if not zK[3]then do nK=EK[0x2];end;end;end;else do if not(dK<12)then if dK==0XD then zK[0X0]=UK[EK[0X00007]];do nK=nK+0x00001;end;nK=nK+0x01;local VK=sK[0X00000];do EK=eK[nK];end;nK=nK+1;do zK[0X0]=zK[0][EK[6]];end;do EK=eK[nK];end;nK=nK+1;local MK=(0X0);(zK)[1]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;do(zK)[0x01]=zK[1][EK[6]];end;EK=eK[nK];nK=nK+0x1;do zK[2]=UK[EK[7]];end;nK=nK+1;do(zK)[3]=VK[0X00001][VK[0X2]];end;do nK=nK+0X0001;end;(zK)[0X2]=zK[2][zK[0x003]];EK=eK[nK];nK=nK+0X00001;(zK)[0X2]=zK[2][EK[6]];nK=nK+1;(zK)[MK]=zK[MK](zK[MK+0x01],zK[MK+0X2]);do QK=MK;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0X1;end;if not zK[0]then do nK=EK[2];end;end;else local VK=0X2;local MK=zK[0X1];do zK[VK+1]=MK;end;(zK)[VK]=MK[EK[6]];do EK=eK[nK];end;do nK=nK+0x00001;end;(zK)[0x4]=EK[7];nK=nK+1;VK=2;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+2]);do QK=VK;end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X01;do zK[0x2]=zK[2][EK[0X006]];end;nK=nK+0X0001;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;if zK[2]~=EK[0X6]then nK=EK[0X3];end;end;else local VK,MK=0X2,(zK[0x1]);(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+1;(zK)[0X4]=EK[7];nK=nK+0X1;VK=0X02;zK[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);QK=VK;EK=eK[nK];nK=nK+0X01;zK[0X2]=zK[0X002][EK[0X06]];do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X001;end;nK=EK[2];end;end;end;end;end;end;end;end;end;else if SK~=101 then _K=function(...)local nK=(1);local zK={};local pK=Q();local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);local UK=(pK==z and KK or pK);local QK=(0X0);NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0x1];end;end;if not PK then do HK=nil;end;elseif YK then do(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0X0000,S(HK,WK+0X01,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK<6 then if not(dK>=3)then if dK<0x01 then zK[EK[3]]=EK[2];else if dK~=0X002 then local VK=(EK[2]);local MK=nil;local aK=(VK[9]);local gK=(#aK);if not(gK>0)then else MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0X0000 then do(MK)[wK-0x1]=sK[rK[0X2]];end;else(MK)[wK-1]={zK,rK[2]};end;end;(K)(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;else zK[EK[3]]=EK[7];end;end;else if not(dK<0X4)then if dK==0X5 then do(UK)[EK[0X7]]=zK[EK[0X3]];end;else zK[EK[0x003]]=UK[EK[0X0007]];end;else end;end;else do if dK<0x9 then if not(dK>=0X7)then(zK)[EK[0x0003]]={S({},1,EK[2])};else if dK~=0x00008 then do if zK[EK[0X00002]]==zK[EK[5]]then else do nK=EK[0x3];end;end;end;else do zK[0X1]=UK[EK[0X7]];end;nK=nK+0x01;(zK)[2]=zK[0X0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[7]]=zK[0X002];do EK=eK[nK];end;do nK=nK+0X01;end;zK[0X1]=UK[EK[0x7]];nK=nK+1;QK=0x1;(zK[QK])();QK=QK-1;nK=nK+1;do repeat local aK={};local VK,MK=mK,zK;for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[2]>=0X00 then local LK=lK[0X2];do if not aK[LK]then aK[LK]={MK[LK]};end;end;do lK[0X001]=aK[LK];end;lK[0x2]=1;end;end;end;end;until true;end;do return;end;end;end;else do if not(dK>=0X0000a)then do nK=EK[0X0002];end;else if dK==11 then do if zK[EK[2]]~=zK[EK[0X5]]then else nK=EK[3];end;end;else if not(zK[EK[0X02]]<zK[EK[5]])then else nK=EK[0x0003];end;end;end;end;end;end;end;end;end;else _K=function(...)local nK=(0x001);local zK=({});local pK=Q();local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);local QK=0;do NK=NK-1;end;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0x00001];nK=nK+0X001;if dK>=7 then if dK>=0Xa then do if dK<0x000c then do if dK~=11 then if zK[EK[2]]<=zK[EK[5]]then nK=EK[0x003];end;else zK[EK[3]]={S({},1,EK[2])};end;end;else if dK~=13 then zK[EK[0X3]]=EK[0x0007];else local VK=(EK[0X00002]);local aK=(VK[0X9]);local MK=nil;local gK=#aK;if not(gK>0)then else do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0X0 then do(MK)[wK-1]=sK[rK[2]];end;else MK[wK-0x1]={zK,rK[0X02]};end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=8)then do zK[EK[0x3]]=UK[EK[0x7]];end;else do if dK==9 then(zK)[EK[0x3]]=-zK[EK[2]];else do(zK)[0X01]=UK[EK[7]];end;nK=nK+1;do zK[2]=zK[0];end;EK=eK[nK];nK=nK+0X1;(zK[1])[EK[0x7]]=zK[2];EK=eK[nK];nK=nK+0x1;local wK=1;(zK)[1]=UK[EK[7]];do nK=nK+1;end;QK=0X1;(zK[QK])();QK=QK-0X0001;EK=eK[nK];do nK=nK+1;end;(zK)[0X1]=UK[EK[0X7]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;do zK[0X001]=zK[1][EK[6]];end;nK=nK+0x1;nK=nK+1;local MK=(nil);EK=eK[nK];nK=nK+1;local VK=EK[0X2];local aK=(VK[0X9]);local gK=#aK;do if not(gK>0)then else MK={};for rK=0X1,gK do local lK=(aK[rK]);if lK[0X1]==0X0 then(MK)[rK-0X1]={zK,lK[2]};else(MK)[rK-0X0001]=sK[lK[2]];end;end;(K)(mK,MK);end;end;zK[0X2]=Ri(MK,UK,VK);nK=nK+0x1;zK[wK](zK[wK+0X1]);QK=wK-0X1;nK=nK+0X1;nK=nK+1;nK=nK+0X1;repeat local rK,lK=mK,(zK);local LK={};do for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[0X2]>=0X000 then local tK=OK[2];if not(not LK[tK])then else do LK[tK]={lK[tK]};end;end;(OK)[1]=LK[tK];OK[2]=0x00001;end;end;end;end;until true;do return;end;end;end;end;end;else if not(dK>=3)then do if dK>=0X00001 then if dK==0X002 then if not(not(zK[EK[2]]<zK[EK[0X0005]]))then else do nK=EK[3];end;end;else(zK)[EK[0X3]]=zK[EK[0X2]]^zK[EK[5]];end;else zK[EK[0X003]]=zK[EK[0X2]]==zK[EK[0x5]];end;end;else if dK<0X5 then do if dK==4 then do for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;else end;end;else do if dK~=6 then do nK=EK[0X00002];end;else zK[EK[3]]=g(zK[EK[2]],zK[EK[5]]);end;end;end;end;end;end;end;end;end;end;end;else if SK<96 then if SK==95 then do _K=function(...)local nK,zK=0x1,({});local pK=(Q());local NK,HK=vi(...);local QK,CK,UK=0,{[1]=xK,[2]=zK},(pK==z and KK or pK);do NK=NK-0x001;end;for EK=0X000,NK do if WK>EK then do zK[EK]=HK[EK+1];end;else do break;end;end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X1;do if not(dK>=7)then if dK<3 then if dK<0X1 then nK=EK[0x2];else do if dK==2 then zK[EK[3]]=UK[EK[7]];else local VK=EK[3];local MK,aK=zK[VK]();if MK then do nK=EK[2];end;zK[VK+3]=aK;end;end;end;end;else if not(dK<0X05)then if dK==6 then if not(zK[EK[2]]<=zK[EK[5]])then do nK=EK[3];end;end;else local VK,MK=EK[2],(nil);local aK=VK[9];local gK=#aK;do if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[1]==0 then do(MK)[wK-1]={zK,rK[0X2]};end;else(MK)[wK-1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else do if dK~=4 then(zK)[EK[0X3]]=EK[7];else do zK[EK[0x3]]=r(zK[EK[0X2]],zK[EK[0X5]]);end;end;end;end;end;else if dK<11 then if dK>=9 then if dK~=10 then zK[EK[0x03]]=D(zK[EK[2]],zK[EK[0X5]]);else do(zK)[EK[3]]=zK[EK[2]]<zK[EK[0X0005]];end;end;else do if dK~=8 then for VK=EK[0X3],EK[0x2]do do zK[VK]=nil;end;end;else end;end;end;else if not(dK>=13)then do if dK==0X0c then zK[EK[3]]=#zK[EK[2]];else(zK)[EK[0X3]]={S({},0x0001,EK[0x2])};end;end;else if dK==0x00e then do zK[0x0001]=UK[EK[0X07]];end;nK=nK+1;nK=nK+0X01;nK=nK+0X0001;(zK)[0X00002]=zK[0X0];EK=eK[nK];nK=nK+0x1;do zK[0X1][EK[7]]=zK[0x0002];end;EK=eK[nK];nK=nK+1;zK[1]=UK[EK[7]];nK=nK+1;do QK=1;end;(zK[QK])();QK=QK-1;do EK=eK[nK];end;do nK=nK+1;end;zK[1]=UK[EK[0x07]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0X1]=zK[0X1][EK[0X6]];local wK=(0X1);EK=eK[nK];nK=nK+0X0001;local VK=(EK[0X02]);local aK=(VK[0x00009]);local MK=nil;local gK=#aK;do if gK>0X0 then MK={};do for rK=0x01,gK do local lK=(aK[rK]);if lK[1]==0X00 then MK[rK-1]={zK,lK[2]};else(MK)[rK-1]=sK[lK[2]];end;end;end;(K)(mK,MK);end;end;do(zK)[2]=Ri(MK,UK,VK);end;nK=nK+1;zK[wK](zK[wK+1]);do QK=wK-0X01;end;nK=nK+0X001;nK=nK+0X01;nK=nK+0X0001;repeat local rK,lK=mK,zK;local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0X1]==lK and OK[0X2]>=0X0 then local tK=OK[0X002];if not(not LK[tK])then else LK[tK]={lK[tK]};end;OK[1]=LK[tK];(OK)[2]=0X001;end;end;end;until true;return;else do zK[EK[0X03]]=zK[EK[2]]==zK[EK[5]];end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=1,{};local CK={[1]=xK,[2]=zK};local QK=0X0;local pK=Q();local NK,HK=vi(...);NK=NK-1;local UK=(pK==z and KK or pK);for EK=0X0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;do if not PK then do HK=nil;end;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X00,S(HK,WK+1,NK+1)};end;end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+0X0001;if not(dK<9)then if dK<13 then do if dK<11 then if dK==10 then nK=EK[0X2];else(zK)[EK[0X3]]=zK[EK[0x2]]<zK[EK[0X5]];end;else if dK~=0Xc then else zK[EK[0x3]]={S({},1,EK[0X2])};end;end;end;else do if dK>=15 then do if dK>=16 then do if dK~=0X011 then zK[EK[3]]=l(zK[EK[0X02]]);else local VK=(sK[0X0]);zK[0]=VK[1][VK[0X2]];nK=nK+0x1;nK=nK+0x1;do EK=eK[nK];end;local MK=0X0;nK=nK+1;local aK=zK[0X0000];zK[MK+1]=aK;(zK)[MK]=aK[EK[6]];EK=eK[nK];do nK=nK+0X1;end;zK[0X02]=EK[0X07];local gK=0X2;nK=nK+0X1;VK=sK[1];do(zK)[0X03]=VK[0X001][VK[0X2]];end;do nK=nK+0X1;end;(zK)[2]=zK[gK]..zK[gK+1];nK=nK+1;do(zK)[0x3]={};end;EK=eK[nK];nK=nK+1;(zK)[0X4]=UK[EK[7]];nK=nK+1;do VK=sK[2];end;(zK)[0X0005]=VK[0X01][VK[2]];nK=nK+0X1;MK=0X4;do zK[MK]=zK[MK](zK[MK+0x01]);end;do QK=MK;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;do(zK[3])[EK[7]]=zK[4];end;EK=eK[nK];nK=nK+1;(zK)[4]=UK[EK[7]];EK=eK[nK];nK=nK+0X001;(zK)[0x0004]=zK[4][EK[6]];nK=nK+1;nK=nK+1;nK=nK+1;do VK=sK[0X1];end;zK[0X00005]=VK[0X1][VK[0x2]];nK=nK+1;do nK=nK+0X1;end;nK=nK+0X00001;zK[0x004]=zK[0X4][zK[5]];do nK=nK+0X0001;end;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X1;end;if zK[0x4]then do nK=EK[0X02];end;end;end;end;else(zK)[EK[3]]=CK[EK[2]];end;end;else if dK==0Xe then(zK[3])[EK[7]]=zK[0X4];EK=eK[nK];nK=nK+1;(zK[3])[EK[7]]=EK[0X6];nK=nK+0X1;local VK=(sK[3]);zK[4]=VK[0X1][VK[2]];EK=eK[nK];local MK=(0);nK=nK+1;zK[3][EK[0X07]]=zK[4];do nK=nK+1;end;QK=MK+4-1;zK[MK]=zK[MK](S(zK,MK+1,QK));QK=MK;nK=nK+0X0001;nK=nK+0X1;EK=eK[nK];nK=nK+1;local aK=(zK[0]);MK=0X0;local wK=(nil);(zK)[MK+1]=aK;zK[MK]=aK[EK[6]];EK=eK[nK];do nK=nK+0X1;end;local gK=EK[0x2];local rK=(gK[0X9]);local lK=(#rK);if not(lK>0X0)then else wK={};do for LK=1,lK do local DK=(rK[LK]);do if DK[1]==0X0000 then(wK)[LK-1]={zK,DK[0X2]};else(wK)[LK-1]=sK[DK[2]];end;end;end;end;K(mK,wK);end;do zK[0X2]=Ri(wK,UK,gK);end;nK=nK+0X1;MK=0;(zK[MK])(zK[MK+1],zK[MK+0X2]);QK=MK-1;nK=nK+1;do nK=nK+0x0001;end;do nK=nK+1;end;do repeat local LK,DK=mK,(zK);local ZK=({});for GK,OK in W,LK do for tK,AK in W,OK do if AK[0x1]==DK and AK[2]>=0X0 then local jK=AK[0X2];do if not(not ZK[jK])then else(ZK)[jK]={DK[jK]};end;end;(AK)[1]=ZK[jK];AK[0x02]=0x1;end;end;end;until true;end;return;else(zK)[EK[0x3]]=zK[EK[0x2]]+zK[EK[5]];end;end;end;end;else do if dK<0x4 then if not(dK>=2)then if dK==0x00001 then zK[EK[3]]=w(zK[EK[0X00002]],zK[EK[0X00005]]);else(zK[EK[3]])[zK[EK[0X0002]]]=zK[EK[5]];end;else if dK~=0X0003 then local VK=(EK[3]);local MK,aK=zK[VK]();do if MK then nK=EK[0x002];zK[VK+3]=aK;end;end;else local VK=(EK[0X2]);local aK=VK[9];local gK,MK=#aK,(nil);if not(gK>0X0000)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[1]~=0 then(MK)[wK-0x00001]=sK[rK[2]];else MK[wK-0X1]={zK,rK[0X2]};end;end;(K)(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK<6)then if not(dK<0X7)then do if dK==0X08 then zK[EK[0x003]]=UK[EK[7]];else zK[EK[3]]=EK[0X7];end;end;else local VK,MK=EK[0X3],EK[2];if MK~=0x00000 then QK=VK+MK-0X1;end;local aK,gK,wK=EK[0X5],nil,(nil);do if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+0X001,QK)));else do gK,wK=vi(zK[VK]());end;end;end;if aK==1 then QK=VK-1;else if aK==0X00 then gK=gK+VK-0X01;QK=gK;else gK=VK+aK-0X2;QK=gK+1;end;local rK=(0);for lK=VK,gK do do rK=rK+1;end;(zK)[lK]=wK[rK];end;end;end;else if dK~=0x00005 then do zK[EK[0X3]]=zK[EK[2]]<=zK[EK[5]];end;else for VK=EK[3],EK[0x2]do do zK[VK]=nil;end;end;end;end;end;end;end;end;end;end;end;else do if not(SK<0X000061)then if SK~=98 then _K=function(...)local nK,zK=1,({});local pK=Q();local CK=({[1]=xK,[2]=zK});local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-1;do for EK=0X0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;do if not PK then do HK=nil;end;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X001 or 0X0,S(HK,WK+0X1,NK+0X01)};end;end;local QK=0X0000;do if UK~=pK then _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+1;do if not(dK<0X6)then if dK<0X09 then if dK<7 then local VK=EK[2];local aK,MK=VK[9],nil;local gK=#aK;if gK>0X0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0X00001]~=0X000 then(MK)[wK-0X1]=sK[rK[2]];else MK[wK-0x00001]={zK,rK[2]};end;end;K(mK,MK);end;do(zK)[EK[0X0003]]=Ri(MK,UK,VK);end;else do if dK~=0X008 then do(zK)[EK[3]]=EK[0x7];end;else do(zK)[EK[0X3]]=l(zK[EK[2]]);end;end;end;end;else do if not(dK<0x0a)then do if dK~=0xb then(zK)[EK[3]]={S({},0X0001,EK[0X2])};else do(zK)[EK[0x03]]=zK[EK[2]]^zK[EK[5]];end;end;end;else end;end;end;else do if not(dK<0X03)then do if not(dK>=4)then zK[EK[0x03]]=zK[EK[2]]-zK[EK[0X05]];else if dK==0X5 then nK=EK[0X0002];else do(zK)[0X1]=UK[EK[0X7]];end;nK=nK+0X1;(zK)[0X2]=zK[0X0];EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[2];do EK=eK[nK];end;nK=nK+0X01;(zK)[1]=UK[EK[0X0007]];nK=nK+0x1;do QK=1;end;zK[QK]();QK=QK-1;EK=eK[nK];nK=nK+1;do(zK)[0X001]=UK[EK[0X07]];end;local MK=(nil);EK=eK[nK];do nK=nK+1;end;do(zK)[0X1]=zK[0X1][EK[6]];end;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;local wK,VK=1,EK[0X2];local aK=VK[0X9];local gK=(#aK);if not(gK>0X0)then else MK={};for rK=1,gK do local lK=(aK[rK]);do if lK[1]~=0 then do MK[rK-0x1]=sK[lK[2]];end;else(MK)[rK-1]={zK,lK[2]};end;end;end;(K)(mK,MK);end;do(zK)[2]=Ri(MK,UK,VK);end;nK=nK+0X01;(zK[wK])(zK[wK+1]);QK=wK-1;nK=nK+1;repeat local rK,lK=mK,(zK);local LK=({});for DK,ZK in W,rK do do for GK,OK in W,ZK do do if not(OK[0X00001]==lK and OK[0X2]>=0)then else local tK=(OK[0X002]);do if not(not LK[tK])then else LK[tK]={lK[tK]};end;end;(OK)[0x001]=LK[tK];OK[0x2]=0X001;end;end;end;end;end;until true;do return;end;end;end;end;else do if dK<1 then(zK)[EK[0x003]]=zK[EK[2]]+zK[EK[5]];else do if dK==0X2 then(zK)[EK[0X3]]=zK[EK[0x2]][zK[EK[0X5]]];else(zK)[EK[3]]=UK[EK[0X7]];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local zK=({});local nK=(0X1);local pK=Q();local NK,HK=vi(...);local QK,CK=0,({[1]=xK,[2]=zK});do NK=NK-0X1;end;local UK=((pK==z and KK or pK));for EK=0x0000,NK do do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;end;if not PK then do HK=nil;end;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0X0,S(HK,WK+0X01,NK+0X001)};end;if UK==pK then else(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if not(dK<9)then if not(dK>=0Xd)then if dK>=11 then do if dK==12 then(zK)[1]=UK[EK[0X7]];nK=nK+0X1;nK=nK+1;do nK=nK+1;end;QK=1;zK[QK]();QK=QK-1;do nK=nK+0X1;end;nK=nK+0X001;nK=nK+0X1;repeat local aK=({});local VK,MK=mK,zK;do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[0X00002]>=0X0000 then local LK=lK[2];if not aK[LK]then do(aK)[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];lK[2]=1;end;end;end;end;until true;do return;end;else(zK)[1]=UK[EK[7]];nK=nK+0X1;(zK)[2]={};EK=eK[nK];nK=nK+0X1;zK[1][EK[0x07]]=zK[0X2];EK=eK[nK];do nK=nK+0x1;end;nK=EK[0X2];end;end;else do if dK==10 then(zK[EK[3]])[zK[EK[2]]]=zK[EK[0X5]];else zK[1]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;do nK=nK+1;end;do(zK)[2]=zK[0X0];end;do nK=nK+1;end;local VK=(1);do zK[VK]=zK[VK](zK[VK+0X001]);end;QK=VK;do nK=nK+0X1;end;nK=nK+0X0001;EK=eK[nK];nK=nK+1;if zK[1]==EK[0X0006]then else do nK=EK[3];end;end;end;end;end;else if dK>=15 then do if dK<0X10 then do nK=EK[2];end;else if dK~=17 then local MK=(EK[2]);local VK=(EK[3]);do if MK~=0x0000 then QK=VK+MK-0X1;end;end;local gK,wK,aK=nil,nil,EK[0X5];if MK==0X00001 then do gK,wK=vi(zK[VK]());end;else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK==0X1 then QK=VK-1;else if aK==0 then gK=gK+VK-1;do QK=gK;end;else gK=VK+aK-2;QK=gK+0X0001;end;local rK=0X0;for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;end;else zK[0X1]=UK[EK[7]];nK=nK+1;(zK)[2]=zK[0x0];EK=eK[nK];nK=nK+1;do(zK[1])[EK[0X007]]=zK[0x2];end;EK=eK[nK];nK=nK+0X001;do nK=EK[2];end;end;end;end;else if dK~=0X000E then do zK[EK[3]]=UK[EK[0x7]];end;else for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;else if not(dK>=0X4)then if not(dK>=2)then if dK==0x0001 then local VK=(EK[0X02]);local aK,MK=VK[0x0009],(nil);local gK=#aK;if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0X001]==0 then(MK)[wK-0X00001]={zK,rK[0X0002]};else MK[wK-1]=sK[rK[0x2]];end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else end;else do if dK~=3 then zK[EK[0X3]]=zK[EK[0X02]]>=zK[EK[0X05]];else zK[EK[0X3]]=EK[7];end;end;end;else if not(dK>=0x006)then do if dK~=5 then local VK=EK[3];local MK=b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end);MK(zK[VK],zK[VK+1],zK[VK+2]);QK=VK;zK[VK]=MK;nK=EK[2];else zK[EK[0X0003]]=l(zK[EK[2]]);end;end;else if dK>=0X7 then if dK~=0X0008 then zK[EK[0X003]]={S({},1,EK[0X002])};else do repeat local VK,MK,aK,gK=mK,zK,EK[3],{};for wK,rK in W,VK do for lK,LK in W,rK do if LK[0X1]==MK and LK[0x2]>=aK then local DK=(LK[0X2]);if not(not gK[DK])then else gK[DK]={MK[DK]};end;(LK)[1]=gK[DK];LK[0X0002]=0X0001;end;end;end;until true;end;end;else do(zK)[EK[0x003]]=w(zK[EK[0x002]],zK[EK[5]]);end;end;end;end;end;end;end;end;end;else _K=function(...)local nK=1;local zK={};local QK=0X0;local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);NK=NK-0X1;for EK=0X0,NK do if not(WK>EK)then do break;end;else(zK)[EK]=HK[EK+0X1];end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X01,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[0X1];do nK=nK+0X1;end;if dK<6 then do if not(dK<3)then do if dK<0x4 then zK[EK[3]]=D(zK[EK[2]],zK[EK[0x5]]);else if dK==0x5 then if not(zK[EK[2]]<=zK[EK[5]])then nK=EK[0X3];end;else zK[EK[3]]=EK[7];end;end;end;else do if dK<1 then zK[EK[3]]={S({},1,EK[0X002])};else if dK==2 then zK[1]=UK[EK[0X7]];nK=nK+1;(zK)[0X0002]=zK[0x0];EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[2];EK=eK[nK];nK=nK+1;do zK[1]=UK[EK[0X7]];end;nK=nK+1;do nK=nK+0X1;end;do nK=nK+0X1;end;QK=1;(zK[QK])();do QK=QK-1;end;nK=nK+0x1;do nK=nK+1;end;nK=nK+1;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0x0002]>=0 then local LK=lK[0x02];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[0X0001]=aK[LK];lK[0X00002]=0X1;end;end;end;end;until true;return;else zK[EK[3]]=UK[EK[0X7]];end;end;end;end;end;else if dK<9 then if not(dK>=7)then else if dK~=0X8 then local VK=(EK[0x00002]);local aK=VK[9];local MK=nil;local gK=(#aK);if not(gK>0)then else MK={};do for wK=1,gK do local rK=aK[wK];if rK[0x1]==0 then do MK[wK-1]={zK,rK[0X2]};end;else(MK)[wK-1]=sK[rK[0X2]];end;end;end;(K)(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;else do for VK=EK[0X003],EK[0X2]do do(zK)[VK]=nil;end;end;end;end;end;else if dK>=0XB then do if dK~=12 then zK[EK[3]]=zK[EK[0X00002]];else if not(not zK[EK[0X003]])then else do nK=EK[0X00002];end;end;end;end;else if dK==0X0000A then do if zK[EK[0X2]]==zK[EK[5]]then else do nK=EK[3];end;end;end;else nK=EK[0X2];end;end;end;end;end;end;end;end;end;end;end;else if not(SK>=0X081)then if SK<123 then if SK>=120 then if not(SK<0X0079)then if SK==0X07A then _K=function(...)local zK=({});local QK=(0);local nK=1;local pK=(Q());local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-0X1;for EK=0x00,NK do if WK>EK then do zK[EK]=HK[EK+1];end;else break;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif YK then do zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X1,NK+0X0001)};end;end;if UK==pK then else _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0X1;if dK<0X6 then if dK>=3 then do if dK<0X4 then local VK=EK[0X02];local aK,MK=VK[9],nil;local gK=(#aK);if not(gK>0x0)then else MK={};do for wK=1,gK do local rK=(aK[wK]);do if rK[0X00001]==0 then do MK[wK-0X1]={zK,rK[0x2]};end;else(MK)[wK-0X01]=sK[rK[0x2]];end;end;end;end;(K)(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;else if dK~=0X5 then if zK[EK[0X002]]==zK[EK[5]]then nK=EK[3];end;else(zK)[1]=UK[EK[0X7]];nK=nK+1;nK=nK+1;nK=nK+0X1;(zK)[2]=zK[0X00000];EK=eK[nK];nK=nK+0X1;zK[0X1][EK[7]]=zK[0X00002];EK=eK[nK];do nK=nK+1;end;(zK)[0X0001]=UK[EK[7]];nK=nK+0x1;QK=0X00001;(zK[QK])();QK=QK-0X1;do nK=nK+1;end;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do do for rK,lK in W,wK do do if lK[0X001]==MK and lK[2]>=0x000 then local LK=(lK[0X2]);do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];lK[2]=0X1;end;end;end;end;end;until true;return;end;end;end;else if dK<0X1 then zK[EK[0X3]]=UK[EK[7]];else if dK==2 then else zK[EK[3]]={S({},1,EK[2])};end;end;end;else if not(dK<9)then if dK<11 then do if dK~=0x0000A then nK=EK[0X2];else local VK=(EK[2]);local MK=(zK[VK]);do for aK=VK+0X0001,EK[5]do do MK=MK..zK[aK];end;end;end;(zK)[EK[3]]=MK;end;end;else if dK==0xc then if not(zK[EK[0X2]]<=zK[EK[5]])then else nK=EK[3];end;else local MK=EK[0X00002];local VK=(EK[3]);QK=VK+MK-1;repeat local aK,gK=mK,(zK);local wK=({});for rK,lK in W,aK do for LK,DK in W,lK do if DK[1]==gK and DK[2]>=0X0 then local ZK=DK[0X2];do if not(not wK[ZK])then else(wK)[ZK]={gK[ZK]};end;end;(DK)[0X01]=wK[ZK];DK[0x02]=0X1;end;end;end;until true;return zK[VK](S(zK,VK+0X1,QK));end;end;else if not(dK>=0x07)then(zK)[EK[0X3]]=EK[0X7];else if dK==0X8 then local VK=(EK[3]);local MK,aK=zK[VK]();do if not(MK)then else do for gK=0x1,EK[5]do(zK)[VK+gK]=aK[gK];end;end;nK=EK[2];end;end;else zK[EK[3]]=zK[EK[0X2]]/zK[EK[5]];end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK=({});local pK=Q();local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-1;for EK=0X000,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;local QK=(0);local UK=(pK==z and KK or pK);if not PK then do HK=nil;end;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0x00001 or 0X0,S(HK,WK+1,NK+1)};end;do if UK~=pK then(_)(_K,UK);end;end;while true do local EK=eK[nK];local dK=(EK[0X1]);do nK=nK+1;end;do if not(dK>=14)then if not(dK<7)then if not(dK<10)then if dK>=0XC then if dK==13 then local VK=EK[0X0003];local MK=(zK[VK]);local aK,gK=zK[VK+1],zK[VK+2];(zK)[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[0X2];else(zK)[0X4]=zK[0x03][EK[6]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;if zK[0X4]~=EK[0X6]then nK=EK[3];end;end;else if dK~=0XB then zK[4]=UK[EK[0X0007]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0X4]=zK[0X4][EK[6]];local VK,MK=sK[2],0X4;nK=nK+0X001;nK=nK+0X00001;EK=eK[nK];nK=nK+1;do(zK)[0x5]=UK[EK[0X7]];end;nK=nK+0X00001;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;zK[5]=zK[5][EK[6]];nK=nK+1;nK=nK+0X0001;do nK=nK+1;end;(zK)[6]=VK[1][VK[2]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X7]=zK[3][EK[6]];do nK=nK+1;end;do nK=nK+1;end;nK=nK+0X001;(zK)[0X06]=zK[0X6][zK[7]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X0001;do(zK)[6]=zK[6][EK[6]];end;do nK=nK+1;end;nK=nK+1;do nK=nK+0x00001;end;zK[MK]=zK[MK](zK[MK+1],zK[MK+0X02]);QK=MK;EK=eK[nK];do nK=nK+1;end;if not(not zK[4])then else nK=EK[2];end;else(zK)[EK[0X3]]={S({},1,EK[2])};end;end;else if not(dK>=0X8)then repeat local VK,MK=mK,zK;local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[2]);if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;do(lK)[0x1]=aK[LK];end;do lK[2]=0X1;end;end;end;end;end;until true;return;else if dK~=9 then local VK,MK=EK[0x02],nil;local aK=VK[0x9];local gK=(#aK);if not(gK>0X0000)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X1]==0 then MK[wK-0X1]={zK,rK[2]};else MK[wK-0X1]=sK[rK[0X0002]];end;end;K(mK,MK);end;zK[EK[0x00003]]=Ri(MK,UK,VK);else nK=EK[0X2];end;end;end;else if not(dK>=0x3)then if dK<0X1 then(zK)[EK[3]]=EK[7];else if dK~=2 then(zK)[0]={};do EK=eK[nK];end;do nK=nK+0X001;end;(zK)[0X1]=UK[EK[0X7]];local VK=(sK[1]);do nK=nK+1;end;nK=nK+1;nK=nK+1;local gK=(0x4);(zK)[2]=VK[0X1][VK[0x2]];nK=nK+0X001;nK=nK+0X1;do EK=eK[nK];end;local MK=0x001;nK=nK+1;do zK[2]=zK[2][EK[6]];end;nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;zK[2]=zK[2][EK[6]];do EK=eK[nK];end;nK=nK+0X0001;zK[2]=zK[0X2][EK[0X6]];EK=eK[nK];nK=nK+0X1;zK[0X2]=zK[0X002][EK[6]];nK=nK+0X1;local aK=0X2;if aK==0 then else QK=MK+aK-0x0001;end;local wK,rK=nil,(nil);if aK~=0X1 then wK,rK=vi(zK[MK](S(zK,MK+0X01,QK)));else wK,rK=vi(zK[MK]());end;if gK==0X01 then QK=MK-0X1;else do if gK==0 then wK=wK+MK-0X1;QK=wK;else do wK=MK+gK-0X2;end;QK=wK+0x1;end;end;local LK=(0x000);for DK=MK,wK do do LK=LK+0X001;end;zK[DK]=rK[LK];end;end;do EK=eK[nK];end;nK=nK+1;MK=1;local lK=b(function(...)o();for LK,DK in...do(o)(true,LK,DK);end;end);(lK)(zK[MK],zK[MK+1],zK[MK+2]);do QK=MK;end;(zK)[MK]=lK;nK=EK[0X0002];else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if MK then zK[VK+0X1]=aK;zK[VK+2]=gK;nK=EK[2];end;end;end;else if not(dK<5)then if dK==0X00006 then local VK=EK[2];local MK=(zK[VK]);for aK=VK+1,EK[5]do do MK=MK..zK[aK];end;end;(zK)[EK[0X003]]=MK;else local VK=(zK[EK[0x2]]/zK[EK[0x5]]);zK[EK[0X3]]=VK-VK%1;end;else if dK==0x4 then zK[4]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;local VK=(0X04);(zK)[0X04]=zK[0x00004][EK[6]];nK=nK+0x0001;nK=nK+0X01;do nK=nK+1;end;(zK)[0X05]=zK[0x00000];EK=eK[nK];do nK=nK+0x1;end;do zK[0X6]=zK[0X3][EK[6]];end;do nK=nK+0X01;end;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0X00002]);QK=VK;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x001;if zK[4]then nK=EK[0X2];end;else if not(EK[0X7]<=zK[EK[0x5]])then nK=EK[0X00003];end;end;end;end;end;else if dK<21 then do if not(dK>=0X11)then do if dK>=15 then if dK==16 then do for VK=EK[0X03],EK[2]do zK[VK]=nil;end;end;else local VK=EK[3];local MK,aK=zK[VK]();do if not(MK)then else nK=EK[0X002];do zK[VK+0X3]=aK;end;end;end;end;else local VK,MK=EK[3],EK[0x0002];if MK==0X0 then else QK=VK+MK-1;end;local aK=(EK[5]);local gK,wK=nil,(nil);if MK~=0X0001 then do gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;else gK,wK=vi(zK[VK]());end;if aK==0X1 then do QK=VK-1;end;else if aK~=0X0 then gK=VK+aK-2;QK=gK+0X1;else gK=gK+VK-1;QK=gK;end;local rK=(0X0);for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;end;end;end;else do if not(dK<0X13)then do if dK~=0X14 then zK[EK[0x3]]=UK[EK[7]];else zK[1]=UK[EK[0x07]];nK=nK+0x00001;do nK=nK+1;end;EK=eK[nK];local VK=1;nK=nK+0X00001;do(zK)[0X2]=EK[7];end;nK=nK+1;(zK)[3]=zK[0x0];nK=nK+0x1;(zK[VK])(zK[VK+0X01],zK[VK+0X2]);QK=VK-0x1;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;nK=EK[2];end;end;else if dK==0X00012 then do zK[0]=UK[EK[7]];end;nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;(zK)[0X0]=zK[0X00][EK[0x00006]];do nK=nK+0X1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not(not zK[0X0])then else do nK=EK[2];end;end;else end;end;end;end;end;else if dK<24 then if not(dK<0x16)then if dK~=0X000017 then(zK)[0X000]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;(zK)[0X0]=zK[0X000][EK[6]];nK=nK+1;do QK=0;end;do(zK)[QK]=zK[QK]();end;nK=nK+1;nK=nK+0X01;EK=eK[nK];nK=nK+1;if not zK[0X0000]then nK=EK[0X2];end;else(CK)[EK[0X00002]]=zK[EK[0x3]];end;else zK[EK[3]]=#zK[EK[0X0002]];end;else if not(dK<0x1a)then if dK==27 then(zK)[EK[3]]=not zK[EK[2]];else zK[EK[0x3]]=r(zK[EK[2]],zK[EK[5]]);end;else if dK~=25 then local VK=sK[0x0];do(zK)[0]=VK[0X1][VK[0x2]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;if not zK[0X00]then nK=EK[2];end;else do zK[0X004]=UK[EK[0X07]];end;EK=eK[nK];local VK=4;nK=nK+0X1;zK[0X4]=zK[4][EK[0X06]];nK=nK+1;nK=nK+1;do nK=nK+0X001;end;zK[5]=zK[0x0000];EK=eK[nK];nK=nK+1;zK[0X6]=zK[3][EK[0X0006]];nK=nK+1;do nK=nK+1;end;nK=nK+0X1;(zK[VK])(zK[VK+0X1],zK[VK+0x2]);QK=VK-1;EK=eK[nK];nK=nK+1;do nK=EK[2];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local QK=0X0000;local nK,zK=0X001,({});local CK=({[1]=xK,[2]=zK});local pK=(Q());local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-1;for EK=0X0,NK do if WK>EK then do(zK)[EK]=HK[EK+0X1];end;else do break;end;end;end;do if not PK then do HK=nil;end;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0x001 or 0X00,S(HK,WK+1,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+1;do if dK>=14 then if dK>=0x15 then if not(dK<0x19)then do if dK>=0X1B then do if dK~=0X1c then local VK=(sK[4]);zK[6]=VK[0X1][VK[2]];do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;(zK)[6]=zK[6][EK[0X0006]];EK=eK[nK];nK=nK+0X1;zK[6]=zK[0X6][EK[0X6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;zK[6]=zK[6][EK[0X6]];do EK=eK[nK];end;local MK=7;nK=nK+0X00001;zK[0X7]=UK[EK[0x007]];EK=eK[nK];do nK=nK+0X1;end;(zK)[0X00008]=zK[0x2][EK[0x6]];nK=nK+0X1;do zK[MK]=zK[MK](zK[MK+0X1]);end;QK=MK;nK=nK+0X001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do if not(zK[7]<=zK[6])then nK=EK[3];end;end;else local VK=(EK[3]);local MK,aK=zK[VK]();if MK then nK=EK[2];zK[VK+3]=aK;end;end;end;else if dK~=0x00001a then(zK)[0X0]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;(zK)[0X000]=zK[0][EK[6]];nK=nK+0X1;nK=nK+1;local VK=(0X0);do EK=eK[nK];end;nK=nK+1;(zK)[1]=EK[0X00007];do nK=nK+1;end;do(zK)[VK]=zK[VK](zK[VK+1]);end;QK=VK;EK=eK[nK];do nK=nK+0X1;end;if not(not zK[0x000])then else nK=EK[2];end;else do repeat local VK,MK=mK,(zK);local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[2]>=0X0 then local LK=(lK[0x02]);if not aK[LK]then do aK[LK]={MK[LK]};end;end;lK[0X1]=aK[LK];do(lK)[2]=0X1;end;end;end;end;end;end;until true;end;return;end;end;end;else if dK>=0X17 then do if dK==24 then zK[3]=zK[0x1];do EK=eK[nK];end;nK=nK+1;zK[0X4]=zK[0X2][EK[0x6]];EK=eK[nK];nK=nK+0X1;zK[5]=EK[0X7];EK=eK[nK];nK=nK+1;(zK)[6]=UK[EK[0X0007]];nK=nK+1;nK=nK+1;do nK=nK+0X1;end;do(zK)[0X00007]=zK[4];end;do nK=nK+1;end;local VK=0x6;zK[VK]=zK[VK](zK[VK+1]);do QK=VK;end;EK=eK[nK];nK=nK+0x0001;if not(zK[6])then else nK=EK[0X2];end;else(zK)[0]=UK[EK[0X07]];nK=nK+0X1;nK=nK+0X0001;do nK=nK+0X1;end;local VK=(sK[1]);do(zK)[0x0001]=VK[1][VK[0X2]];end;nK=nK+1;local gK=0X0004;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X0001]=zK[0X1][EK[6]];local MK=0;nK=nK+0X1;local aK=0x2;do if aK==0 then else do QK=MK+aK-0X1;end;end;end;local wK,rK=nil,(nil);if aK~=0X1 then wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));else wK,rK=vi(zK[MK]());end;if gK==0X00001 then QK=MK-1;else if gK~=0X000 then wK=MK+gK-0X2;do QK=wK+0X1;end;else do wK=wK+MK-1;end;QK=wK;end;local LK=0x0;for DK=MK,wK do LK=LK+0X00001;(zK)[DK]=rK[LK];end;end;do nK=nK+0x1;end;nK=nK+0x1;EK=eK[nK];nK=nK+1;MK=0X00;local lK=b(function(...)o();for LK,DK in...do o(true,LK,DK);end;end);lK(zK[MK],zK[MK+0X1],zK[MK+0X2]);do QK=MK;end;do zK[MK]=lK;end;nK=EK[2];end;end;else if dK==22 then zK[EK[3]]=zK[EK[0x2]]==zK[EK[0X5]];else do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;end;else if dK>=0X011 then if dK>=19 then if dK~=20 then zK[0x00006]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X0001;zK[0X00007]=EK[7];nK=nK+0X01;do zK[0x00008]=zK[0X3];end;local VK=(0X0006);nK=nK+0X1;zK[VK](zK[VK+1],zK[VK+0X2]);do QK=VK-0X1;end;do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];do nK=nK+0x001;end;(zK)[0x6]=UK[EK[7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[0X00006]=zK[6][EK[6]];end;EK=eK[nK];do nK=nK+1;end;zK[0x00007]=EK[0X7];nK=nK+0X1;VK=6;zK[VK](zK[VK+0X1]);QK=VK-1;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[6]=zK[0X002][EK[0X6]];EK=eK[nK];nK=nK+0X1;(zK)[0x007]=EK[7];local MK=(0x6);nK=nK+1;(zK)[6]=zK[MK]..zK[MK+1];do nK=nK+0X1;end;zK[0x5]=zK[0x6];EK=eK[nK];do nK=nK+1;end;do(zK)[0X6]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X00001;if not(zK[0x6])then else nK=EK[2];end;else zK[EK[3]]=UK[EK[0x7]];end;else if dK==18 then local VK=EK[3];local MK,aK,gK=zK[VK]();if MK then zK[VK+1]=aK;zK[VK+2]=gK;nK=EK[2];end;else(zK)[0]=UK[EK[0X7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0]=zK[0][EK[6]];do EK=eK[nK];end;nK=nK+1;if not(not zK[0X0])then else nK=EK[2];end;end;end;else if dK>=0X0F then if dK~=16 then local MK=nil;local VK=(EK[2]);local aK=VK[9];local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[0X01]~=0X00000 then(MK)[wK-0X1]=sK[rK[0X2]];else(MK)[wK-1]={zK,rK[0x2]};end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else local VK=sK[0X002];(zK)[3]=VK[1][VK[0X2]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;do nK=nK+0X1;end;zK[0X3]=zK[3][EK[0X6]];do nK=nK+0X001;end;nK=nK+1;do EK=eK[nK];end;do nK=nK+0x01;end;do(zK)[3]=zK[3][EK[6]];end;nK=nK+0X001;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X0001;end;(zK)[3]=zK[0x3][EK[6]];do nK=nK+1;end;nK=nK+1;nK=nK+0X001;do(zK)[0X3]=zK[0X00003][zK[1]];end;EK=eK[nK];nK=nK+1;if not(zK[0X3])then else do nK=EK[2];end;end;end;else(zK)[6]=UK[EK[0X00007]];EK=eK[nK];nK=nK+1;(zK)[7]=EK[0x7];nK=nK+1;local VK=0X6;(zK)[0X08]=zK[0X04];do nK=nK+0X001;end;(zK)[0X9]=zK[0X00005];nK=nK+1;QK=VK+4-0X1;zK[VK](S(zK,VK+0x00001,QK));QK=VK-0X00001;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;end;else if not(dK<0X0007)then if dK<0X0a then if dK<0X0008 then do zK[6]=zK[0X02][EK[6]];end;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;if not(not zK[6])then else do nK=EK[2];end;end;else do if dK==9 then local VK=sK[0X0];do(zK)[0X0]=VK[0X1][VK[2]];end;nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if not(not zK[0X0])then else nK=EK[2];end;else zK[EK[3]]=EK[0X002];end;end;end;else if dK<12 then if dK==0X0000B then do zK[EK[3]]={S({},0X0001,EK[0x2])};end;else nK=EK[0X02];end;else if dK==13 then zK[EK[3]]=EK[7];else local VK=sK[5];(zK)[0X06]=VK[0X01][VK[2]];do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];local MK=(6);do nK=nK+1;end;zK[7]=UK[EK[0x7]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do zK[8]=EK[7];end;do nK=nK+1;end;(zK[MK])(zK[MK+1],zK[MK+2]);QK=MK-0X1;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do nK=EK[2];end;end;end;end;else do if dK<3 then if dK>=1 then do if dK==0X02 then local VK=(sK[0X1]);zK[0]=VK[0X0001][VK[0X2]];do EK=eK[nK];end;nK=nK+1;do(zK)[0]=zK[0][EK[0X06]];end;do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];nK=nK+1;if not(not zK[0])then else nK=EK[2];end;else(zK)[0X0006]=zK[0X2][EK[0X6]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not zK[0X6]then nK=EK[2];end;end;end;else do zK[0X006]=UK[EK[7]];end;nK=nK+1;nK=nK+0X0001;local VK=6;EK=eK[nK];nK=nK+1;do zK[7]=EK[7];end;nK=nK+1;zK[8]=zK[3];nK=nK+0X01;zK[VK](zK[VK+0X0001],zK[VK+2]);QK=VK-1;nK=nK+0x0001;nK=nK+0x1;local aK=sK[0X0005];EK=eK[nK];nK=nK+1;(zK)[6]=UK[EK[7]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[6]=zK[0X006][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0X007]=EK[0X7];nK=nK+0X1;VK=6;zK[VK](zK[VK+0X1]);QK=VK-1;nK=nK+0X1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0x01;zK[6]=zK[2][EK[0x6]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x0001;zK[0x7]=EK[0X7];nK=nK+1;local MK=0x6;(zK)[0X6]=zK[MK]..zK[MK+0x1];do nK=nK+0X1;end;(zK)[0x5]=zK[0X6];nK=nK+1;do(zK)[0x6]=aK[0X1][aK[2]];end;do EK=eK[nK];end;nK=nK+1;do(zK)[7]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;(zK)[8]=EK[7];nK=nK+0X1;do(zK)[9]=zK[0X4];end;do nK=nK+1;end;zK[10]=zK[5];nK=nK+0x001;VK=0X6;QK=VK+5-0X1;zK[VK](S(zK,VK+0x1,QK));do QK=VK-1;end;nK=nK+0X001;do nK=nK+0X001;end;EK=eK[nK];nK=nK+0X1;do nK=EK[0X2];end;end;else do if dK>=5 then if dK~=0X6 then local VK=sK[0X4];(zK)[6]=VK[1][VK[2]];EK=eK[nK];nK=nK+1;do(zK)[0x6]=zK[0X6][EK[0X6]];end;do nK=nK+1;end;local MK=(7);nK=nK+0x1;EK=eK[nK];do nK=nK+0X1;end;zK[0X6]=zK[0X06][EK[0x6]];do EK=eK[nK];end;nK=nK+0X1;(zK)[0X6]=zK[0X6][EK[6]];do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[7]=UK[EK[0X00007]];EK=eK[nK];nK=nK+0X1;(zK)[8]=zK[2][EK[6]];nK=nK+0X0001;nK=nK+1;do nK=nK+0X001;end;zK[MK]=zK[MK](zK[MK+1]);QK=MK;nK=nK+0x0001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if not(not(zK[7]<=zK[6]))then else nK=EK[3];end;else(zK)[0X6]=UK[EK[0X07]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;(zK)[6]=zK[0x6][EK[6]];EK=eK[nK];local MK,VK=0X6,sK[3];nK=nK+0x1;(zK)[0X7]=UK[EK[7]];nK=nK+1;do nK=nK+0x0001;end;EK=eK[nK];nK=nK+0X00001;do(zK)[7]=zK[0X7][EK[0x6]];end;nK=nK+1;nK=nK+0X1;nK=nK+0X01;do(zK)[8]=VK[1][VK[2]];end;nK=nK+0x1;zK[8]=zK[0x0008][zK[4]];nK=nK+0X00001;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[8]=zK[8][EK[0X006]];nK=nK+0x00001;nK=nK+0X1;nK=nK+0x001;do(zK)[MK]=zK[MK](zK[MK+0x1],zK[MK+2]);end;QK=MK;EK=eK[nK];do nK=nK+0x00001;end;do if not(not zK[6])then else nK=EK[2];end;end;end;else if dK==0X4 then else if not zK[EK[0x00003]]then do nK=EK[0x02];end;end;end;end;end;end;end;end;end;end;end;end;end;else if SK>=118 then do if SK~=0X77 then _K=function(...)local nK=0x1;local zK={};local pK=(Q());local UK,CK=(pK==z and KK or pK),({[2]=zK,[1]=xK});local NK,HK=vi(...);local QK=(0X00);NK=NK-0x1;for EK=0,NK do if WK>EK then do zK[EK]=HK[EK+0X0001];end;else break;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0X000,S(HK,WK+1,NK+0X0001)};end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X0001;do if dK>=7 then do if not(dK>=11)then if not(dK<9)then if dK~=0Xa then(zK)[EK[3]]={S({},0X001,EK[2])};else zK[1]=UK[EK[7]];nK=nK+1;nK=nK+0X001;nK=nK+1;(zK)[2]={};do EK=eK[nK];end;do nK=nK+1;end;zK[1][EK[0X07]]=zK[0x2];EK=eK[nK];nK=nK+0X00001;nK=EK[2];end;else if dK==0x0008 then do zK[EK[0x3]]=UK[EK[7]];end;else local VK=(EK[2]);local aK=(VK[0X0009]);local MK=nil;local gK=#aK;if not(gK>0X0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0X00 then(MK)[wK-1]=sK[rK[0X2]];else(MK)[wK-0X00001]={zK,rK[0X2]};end;end;K(mK,MK);end;(zK)[EK[0X03]]=Ri(MK,UK,VK);end;end;else if not(dK>=0X0d)then if dK==0xC then(zK)[1]=UK[EK[7]];local VK=0X1;nK=nK+1;(zK)[2]=zK[0];do nK=nK+0X01;end;zK[VK]=zK[VK](zK[VK+1]);do QK=VK;end;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X00001;do if zK[0X1]==EK[6]then else nK=EK[0X003];end;end;else(zK)[0X1]=UK[EK[7]];nK=nK+0X1;(zK)[2]=zK[0];EK=eK[nK];nK=nK+1;zK[0X00001][EK[0X7]]=zK[2];end;else if dK~=14 then nK=EK[0X02];else zK[0x1]=UK[EK[0X7]];nK=nK+0X1;nK=nK+1;nK=nK+1;QK=0X1;(zK[QK])();QK=QK-1;nK=nK+1;do nK=nK+1;end;nK=nK+0X0001;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X001]==MK and lK[2]>=0X0 then local LK=(lK[0X00002]);if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];(lK)[0x02]=0x1;end;end;end;until true;do return;end;end;end;end;end;else if dK>=3 then if dK>=5 then if dK==6 then for VK=EK[0x00003],EK[0X2]do zK[VK]=nil;end;else if not(not zK[EK[0X03]])then else nK=EK[0X2];end;end;else if dK==0x4 then do(zK)[EK[0X3]]=zK[EK[2]]%zK[EK[0x5]];end;else local VK=EK[0X2];local aK=VK[9];local MK=(nil);local gK=#aK;do if gK>0 then MK={};do for wK=0X1,gK do local rK=aK[wK];do if rK[1]==0X0 then(MK)[wK-0X01]={zK,rK[2]};else(MK)[wK-1]=sK[rK[2]];end;end;end;end;K(mK,MK);end;end;zK[EK[3]]=i[EK[5]](MK);end;end;else if dK>=0x00001 then if dK==0x2 then(zK)[EK[0X03]]=EK[0X7];else end;else do repeat local VK,MK,aK=mK,zK,EK[3];local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if LK[0X1]==MK and LK[0x2]>=aK then local DK=(LK[0X2]);if not(not gK[DK])then else gK[DK]={MK[DK]};end;(LK)[0X0001]=gK[DK];LK[2]=1;end;end;end;until true;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local CK={[1]=xK,[2]=zK};local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));local QK=(0);NK=NK-0X001;for EK=0X00000,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0x00,S(HK,WK+1,NK+1)};end;do if UK~=pK then _(_K,UK);end;end;do while true do local EK=eK[nK];local dK=(EK[1]);do nK=nK+0X1;end;if not(dK<11)then do if dK>=16 then if dK<19 then if dK<0X0011 then if not(zK[EK[2]]<zK[EK[5]])then else do nK=EK[0X00003];end;end;else if dK~=18 then zK[EK[3]]=EK[7];else zK[0X1]=UK[EK[0X7]];nK=nK+1;nK=nK+0X1;nK=nK+1;do QK=0X0001;end;(zK[QK])();QK=QK-0x0001;EK=eK[nK];nK=nK+0x1;zK[0X1]=UK[EK[0X0007]];EK=eK[nK];nK=nK+1;if zK[1]==EK[0X006]then else nK=EK[0X3];end;end;end;else if dK>=20 then if dK~=21 then(zK)[EK[3]]=zK[EK[2]]<=zK[EK[5]];else do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;else if zK[EK[2]]~=zK[EK[5]]then else do nK=EK[0X3];end;end;end;end;else do if not(dK<0Xd)then if dK<14 then local VK,MK=EK[0X3],((EK[0x005]-1)*50);local aK=(zK[VK]);for gK=0X00001,EK[0x00002]do aK[MK+gK]=zK[VK+gK];end;else if dK~=0x0f then do(zK)[EK[0x00003]]=zK[EK[2]]/zK[EK[0X0005]];end;else do(zK)[EK[0x3]]=UK[EK[7]];end;end;end;else do if dK~=0Xc then(zK)[1]={};nK=nK+1;local VK=sK[0X00];VK[1][VK[2]]=zK[1];nK=nK+0X0001;local MK=(0X01);VK=sK[1];zK[1]=VK[1][VK[2]];do EK=eK[nK];end;nK=nK+1;local aK=zK[1];zK[MK+1]=aK;zK[MK]=aK[EK[0x6]];EK=eK[nK];nK=nK+1;(zK)[3]=EK[7];nK=nK+1;do MK=0X1;end;(zK[MK])(zK[MK+1],zK[MK+2]);do QK=MK-0X01;end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do nK=EK[2];end;else local VK,MK=EK[0X3],(EK[0X0002]);QK=VK+MK-0X01;repeat local wK=({});local aK,gK=mK,zK;for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[0x0001]==gK and DK[0X2]>=0X0)then else local ZK=DK[0X2];if not wK[ZK]then wK[ZK]={gK[ZK]};end;(DK)[1]=wK[ZK];DK[0X2]=0X1;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));end;end;end;end;end;end;else if dK>=0X5 then if not(dK>=8)then if dK>=6 then if dK==0X0007 then(zK)[1]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[2]=UK[EK[0x7]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;zK[2]=zK[2][EK[0X6]];local MK=2;nK=nK+1;local VK,aK=0X1,3;if MK~=0 then QK=VK+MK-1;end;local gK,wK=nil,nil;if MK==0X01 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK==1 then QK=VK-1;else if aK~=0X00 then do gK=VK+aK-0x02;end;QK=gK+1;else do gK=gK+VK-1;end;do QK=gK;end;end;local rK=0;for lK=VK,gK do rK=rK+0X01;zK[lK]=wK[rK];end;end;nK=nK+0X01;nK=nK+0x01;EK=eK[nK];nK=nK+1;if not(zK[1])then else nK=EK[0X2];end;else(zK)[0X3]=EK[0X00007];do EK=eK[nK];end;nK=nK+0X0001;UK[EK[0X7]]=zK[3];EK=eK[nK];nK=nK+0X1;do nK=EK[0X02];end;end;else zK[EK[3]]={S({},1,EK[0X2])};end;else do if dK>=9 then if dK~=10 then local VK=(EK[2]);local aK,MK=VK[0X9],(nil);local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0x01]~=0X000 then(MK)[wK-1]=sK[rK[2]];else do MK[wK-0X01]={zK,rK[2]};end;end;end;K(mK,MK);end;(zK)[EK[0X0003]]=Ri(MK,UK,VK);else(zK)[1]=zK[0X0000];EK=eK[nK];nK=nK+0X1;UK[EK[0X7]]=zK[1];do EK=eK[nK];end;do nK=nK+1;end;zK[0x00001]=UK[EK[7]];nK=nK+1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+0X1;if zK[1]~=EK[0X6]then nK=EK[0X3];end;end;else end;end;end;else do if dK>=2 then if not(dK>=3)then local VK=(sK[1]);do zK[0X3]=VK[1][VK[2]];end;nK=nK+0x1;local gK=5;nK=nK+1;EK=eK[nK];local MK=3;do nK=nK+0x01;end;local aK=(zK[0X3]);zK[MK+1]=aK;(zK)[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+1;(zK)[0X5]=EK[7];nK=nK+0x1;(zK)[6]=zK[2];nK=nK+1;zK[0x00005]=zK[gK]..zK[gK+1];nK=nK+0X001;do MK=0X03;end;zK[MK](zK[MK+1],zK[MK+2]);QK=MK-0X0001;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X0001;nK=EK[2];else if dK~=4 then local VK=(EK[0X3]);local MK,aK=zK[VK]();if MK then nK=EK[2];(zK)[VK+3]=aK;end;else repeat local VK,MK,aK=mK,zK,({});do for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[0X01]==MK and lK[0x002]>=0)then else local LK=(lK[2]);if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[2]=0x1;end;end;end;end;end;until true;return;end;end;else if dK~=0X1 then nK=EK[0X2];else local VK=sK[0X00001];zK[0X03]=VK[1][VK[2]];nK=nK+1;nK=nK+0X1;local MK=3;EK=eK[nK];nK=nK+1;local aK=zK[0X0003];zK[MK+1]=aK;do(zK)[MK]=aK[EK[6]];end;EK=eK[nK];do nK=nK+1;end;zK[0X5]=EK[7];nK=nK+1;MK=0X003;zK[MK](zK[MK+1],zK[MK+0X0002]);QK=MK-1;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local QK=0;local nK,zK=1,({});local pK=Q();local UK,CK=(pK==z and KK or pK),{[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0x00001;do for EK=0,NK do if not(WK>EK)then do break;end;else do(zK)[EK]=HK[EK+0x1];end;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0X0,S(HK,WK+1,NK+1)};end;if UK~=pK then(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0x1]);do nK=nK+0X1;end;do if dK>=0X14 then if not(dK>=30)then do if dK>=0x0019 then if not(dK>=27)then if dK~=26 then nK=EK[2];else(zK)[0x0004]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[4]=zK[4][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;zK[5]=UK[EK[7]];nK=nK+1;local VK=(sK[0x5]);zK[0X00006]=VK[1][VK[2]];nK=nK+0x1;do nK=nK+0x1;end;EK=eK[nK];do nK=nK+0X001;end;(zK)[6]=zK[0X6][EK[0X6]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;(zK)[0X06]=zK[0X0006][EK[6]];nK=nK+1;nK=nK+0X1;local MK=0X5;do EK=eK[nK];end;nK=nK+1;(zK)[0x06]=zK[0x6][EK[6]];EK=eK[nK];nK=nK+0X1;do(zK)[0X6]=zK[0X006][EK[6]];end;nK=nK+1;nK=nK+0X0001;nK=nK+1;do(zK)[MK]=zK[MK](zK[MK+1]);end;QK=MK;nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;do if zK[4]==zK[5]then nK=EK[3];end;end;end;else if not(dK>=28)then if zK[EK[2]]~=zK[EK[5]]then else do nK=EK[0X3];end;end;else if dK==29 then zK[2]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;zK[0X3]=EK[7];nK=nK+0X001;local VK=0X002;zK[VK](zK[VK+1]);QK=VK-1;EK=eK[nK];nK=nK+0X0001;nK=EK[2];else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if MK then zK[VK+1]=aK;(zK)[VK+2]=gK;nK=EK[2];end;end;end;end;else if not(dK<22)then if dK>=23 then do if dK==0X00018 then do zK[0X0002]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;local VK=(0X02);zK[0X3]=UK[EK[0X7]];do nK=nK+0x1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X00001;do(zK)[3]=zK[0X3][EK[6]];end;nK=nK+1;nK=nK+0X01;do nK=nK+1;end;do zK[VK]=zK[VK](zK[VK+0x1]);end;QK=VK;nK=nK+0x001;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK)[3]=UK[EK[0x0007]];do nK=nK+1;end;nK=nK+0X00001;nK=nK+0X1;do zK[4]=zK[2];end;nK=nK+1;do VK=3;end;do(zK)[VK]=zK[VK](zK[VK+0x1]);end;do QK=VK;end;nK=nK+0X001;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;if not(not zK[3])then else nK=EK[2];end;else(zK)[2]=UK[EK[0x7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[2]=zK[2][EK[0X6]];end;do EK=eK[nK];end;nK=nK+0X001;do if zK[2]~=EK[6]then do nK=EK[3];end;end;end;end;end;else local VK=sK[0X2];(zK)[0X3]=VK[1][VK[0X002]];do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X1;end;(zK)[3]=zK[3][EK[6]];nK=nK+0X001;do nK=nK+1;end;EK=eK[nK];nK=nK+0X01;(zK)[3]=zK[0X03][EK[0x0006]];EK=eK[nK];nK=nK+1;if zK[3]~=EK[6]then nK=EK[3];end;end;else if dK~=0X00015 then(zK)[2]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;do(zK)[0X2]=zK[0X2][EK[0x6]];end;nK=nK+0X1;QK=0x2;(zK)[QK]=zK[QK]();EK=eK[nK];nK=nK+0x0001;do if not zK[0x02]then nK=EK[2];end;end;else(UK)[EK[0X7]]=zK[EK[3]];end;end;end;end;else do if dK<0x23 then do if dK<32 then if dK~=0X0001f then zK[2]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X1;do(zK)[0X3]=EK[0X7];end;EK=eK[nK];nK=nK+1;(zK)[0X004]=UK[EK[7]];do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];nK=nK+0X01;(zK)[0x4]=zK[4][EK[0X6]];nK=nK+0x1;nK=nK+0x001;nK=nK+1;local VK=(0x02);zK[VK](zK[VK+0X1],zK[VK+0X2]);QK=VK-0x1;nK=nK+0X1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X1;do nK=EK[0X0002];end;else repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0x2]>=0X000)then else local LK=(lK[0X2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;do lK[1]=aK[LK];end;do(lK)[2]=0x1;end;end;end;end;until true;return;end;else if not(dK<0X21)then do if dK~=0x22 then if zK[EK[0X2]]==EK[6]then else nK=EK[3];end;else if not(not zK[EK[3]])then else nK=EK[0x2];end;end;end;else zK[5]={};EK=eK[nK];do nK=nK+0x1;end;zK[0X0005][EK[7]]=zK[0];EK=eK[nK];nK=nK+0X01;do(zK[0X5])[EK[7]]=zK[2];end;do EK=eK[nK];end;nK=nK+1;(zK[0X5])[EK[0x7]]=EK[6];EK=eK[nK];nK=nK+1;do(zK)[0X6]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;zK[0X6]=zK[0x06][EK[0X6]];do EK=eK[nK];end;do nK=nK+1;end;(zK[0X05])[EK[0X7]]=zK[0X00006];EK=eK[nK];nK=nK+0X1;do UK[EK[7]]=zK[5];end;EK=eK[nK];do nK=nK+1;end;nK=EK[2];end;end;end;else if not(dK<0X00025)then do if dK>=38 then if dK==39 then local VK=sK[0X1];(zK)[0X2]=VK[0X1][VK[0X02]];EK=eK[nK];nK=nK+0x1;local MK=(2);do zK[3]=UK[EK[0x7]];end;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0X00004]=EK[7];do nK=nK+1;end;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);do QK=MK;end;nK=nK+0x1;nK=nK+1;EK=eK[nK];do nK=nK+0X00001;end;if not(not zK[2])then else do nK=EK[0X00002];end;end;else zK[EK[0X3]]={S({},0X01,EK[0X2])};end;else for VK=EK[0X3],EK[0X02]do zK[VK]=nil;end;end;end;else if dK==0X24 then do zK[0X2]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+0X0001;zK[2]=zK[2][EK[0X00006]];EK=eK[nK];do nK=nK+1;end;if zK[2]~=EK[0x6]then else nK=EK[3];end;else(zK)[0X00003]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X1;(zK)[3]=zK[0x03][EK[0X00006]];nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+1;do if zK[3]~=EK[6]then else nK=EK[0X3];end;end;end;end;end;end;end;else if dK>=0XA then do if dK<15 then if not(dK<0X00c)then if dK>=0X0D then do if dK~=14 then zK[EK[3]]=zK[EK[2]][EK[0X6]];else if not(zK[EK[0x002]]<=zK[EK[0X5]])then else do nK=EK[0X3];end;end;end;end;else do zK[EK[0x3]]=D(zK[EK[0X2]],zK[EK[5]]);end;end;else if dK==0X00b then do zK[6]=zK[0x4][EK[0X6]];end;nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0x01;if zK[6]==EK[6]then else do nK=EK[3];end;end;else do(zK)[5]={};end;EK=eK[nK];nK=nK+0X1;zK[0X00005][EK[0X7]]=zK[0];EK=eK[nK];nK=nK+1;zK[0x5][EK[7]]=zK[0X2];EK=eK[nK];do nK=nK+0X00001;end;zK[0x5][EK[7]]=EK[6];EK=eK[nK];nK=nK+1;zK[0X5][EK[7]]=EK[6];EK=eK[nK];nK=nK+1;UK[EK[0x07]]=zK[5];EK=eK[nK];do nK=nK+1;end;nK=EK[2];end;end;else if dK>=17 then if dK<0X0012 then zK[2]=UK[EK[7]];local VK=sK[3];do nK=nK+1;end;(zK)[0x00003]=VK[0X001][VK[2]];do EK=eK[nK];end;nK=nK+1;local MK=0X0003;zK[0X3]=zK[3][EK[0X6]];EK=eK[nK];nK=nK+1;(zK)[0X00003]=zK[0X3][EK[0X0006]];EK=eK[nK];do nK=nK+1;end;local aK=zK[0X3];(zK)[MK+0X1]=aK;(zK)[MK]=aK[EK[6]];local gK=(0X2);nK=nK+1;MK=3;local wK=0;if gK~=0X0 then QK=MK+gK-0x0001;end;local rK,lK=nil,(nil);if gK~=0X001 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else rK,lK=vi(zK[MK]());end;if wK==1 then QK=MK-0X1;else if wK~=0x0000 then do rK=MK+wK-2;end;QK=rK+0X0001;else rK=rK+MK-0x1;do QK=rK;end;end;local DK=0x0000;for ZK=MK,rK do DK=DK+0x1;zK[ZK]=lK[DK];end;end;do nK=nK+0X1;end;do MK=2;end;do gK=0X0;end;wK=0X0004;do if gK==0X000 then else QK=MK+gK-0x1;end;end;do rK,lK=nil;end;if gK==0x1 then rK,lK=vi(zK[MK]());else do rK,lK=vi(zK[MK](S(zK,MK+0x1,QK)));end;end;if wK==1 then QK=MK-0x1;else if wK==0 then rK=rK+MK-0x0001;QK=rK;else rK=MK+wK-2;do QK=rK+0X1;end;end;local DK=(0);for ZK=MK,rK do DK=DK+0X001;(zK)[ZK]=lK[DK];end;end;EK=eK[nK];nK=nK+1;MK=0x2;local LK=(b(function(...)o();do for DK,ZK in...do o(true,DK,ZK);end;end;end));LK(zK[MK],zK[MK+0X1],zK[MK+0X2]);QK=MK;do zK[MK]=LK;end;nK=EK[2];else do if dK~=0X13 then zK[5]=zK[0X4][EK[0x006]];EK=eK[nK];nK=nK+0X00001;do zK[5]=zK[0X5][EK[0X6]];end;do nK=nK+1;end;zK[0]=zK[0X5];local VK=(0X5);do EK=eK[nK];end;nK=nK+0X001;do zK[5]=zK[0x04][EK[6]];end;EK=eK[nK];do nK=nK+0X1;end;local MK=(zK[0X5]);(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];nK=nK+0X1;VK=5;zK[VK]=zK[VK](zK[VK+0X1]);QK=VK;nK=nK+0x0001;nK=nK+1;nK=nK+0X1;zK[0x00001]=zK[5];EK=eK[nK];nK=nK+1;nK=EK[0X2];else do zK[2]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0x02]=zK[0X2][EK[6]];nK=nK+0x1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if not zK[2]then do nK=EK[2];end;end;end;end;end;else if dK~=0X10 then local VK=(sK[0]);zK[2]=VK[1][VK[0X02]];nK=nK+1;nK=nK+0X0001;do EK=eK[nK];end;do nK=nK+1;end;if not(not zK[2])then else do nK=EK[2];end;end;else local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=#aK;do if gK>0 then do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0X0 then MK[wK-0X1]={zK,rK[2]};else do MK[wK-1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;else do if not(dK>=5)then if not(dK>=2)then do if dK~=0X001 then do zK[EK[3]]=l(zK[EK[2]]);end;else end;end;else if not(dK<3)then if dK==0x04 then zK[EK[0X03]]=EK[0X7];else zK[3]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X01;do zK[0X3]=zK[0X00003][EK[6]];end;EK=eK[nK];nK=nK+1;if zK[3]~=EK[6]then else nK=EK[0X3];end;end;else local VK,MK=sK[4],(3);do(zK)[0X03]=VK[0X1][VK[2]];end;nK=nK+1;do nK=nK+0x0001;end;EK=eK[nK];nK=nK+0X1;local aK=(zK[0x3]);zK[MK+1]=aK;zK[MK]=aK[EK[6]];EK=eK[nK];nK=nK+0x1;(zK)[0X5]=EK[7];EK=eK[nK];do nK=nK+1;end;zK[6]=UK[EK[0X007]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[0x006]=zK[6][EK[6]];EK=eK[nK];nK=nK+0X01;zK[0x7]=EK[7];EK=eK[nK];nK=nK+1;(zK)[0X8]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0X008]=zK[8][EK[6]];local gK=0x5;do nK=nK+1;end;local wK=zK[gK];for ZK=gK+1,8 do wK=wK..zK[ZK];end;(zK)[0x005]=wK;do EK=eK[nK];end;nK=nK+0X00001;zK[6]=EK[0X7];nK=nK+0X1;do MK=0X3;end;do QK=MK+0X00004-0X1;end;zK[MK](S(zK,MK+0x0001,QK));QK=MK-1;nK=nK+1;do VK=sK[2];end;do zK[0x3]=VK[0X001][VK[0X2]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[3]=zK[0X3][EK[6]];do EK=eK[nK];end;nK=nK+0X1;zK[0x3]=zK[0x3][EK[0X006]];local rK=2;do EK=eK[nK];end;nK=nK+1;zK[0X3]=zK[3][EK[6]];nK=nK+1;zK[4]={};EK=eK[nK];nK=nK+1;(zK[4])[EK[0X7]]=zK[0];EK=eK[nK];do nK=nK+0x1;end;(zK)[0x5]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[0x6]=EK[0X0007];EK=eK[nK];nK=nK+0X1;zK[7]=UK[EK[7]];do nK=nK+0X1;end;nK=nK+1;nK=nK+1;(zK)[8]=zK[4];nK=nK+0X1;do MK=0X7;end;local lK=0X0;if rK~=0 then QK=MK+rK-0x1;end;local LK,DK=nil,nil;do if rK~=0X00001 then LK,DK=vi(zK[MK](S(zK,MK+0X01,QK)));else LK,DK=vi(zK[MK]());end;end;if lK~=1 then do if lK~=0 then LK=MK+lK-2;QK=LK+1;else do LK=LK+MK-1;end;QK=LK;end;end;local ZK=(0);for GK=MK,LK do ZK=ZK+1;(zK)[GK]=DK[ZK];end;else QK=MK-0X0001;end;nK=nK+0x1;do nK=nK+1;end;nK=nK+1;MK=0X5;(zK[MK])(S(zK,MK+0x001,QK));QK=MK-0X1;do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[5]=UK[EK[7]];nK=nK+1;nK=nK+0x1;EK=eK[nK];do nK=nK+1;end;zK[5]=zK[5][EK[6]];nK=nK+1;do QK=5;end;(zK[QK])();QK=QK-1;nK=nK+0x1;do nK=nK+0x1;end;EK=eK[nK];do nK=nK+0x0001;end;zK[5]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;do(zK)[5]=zK[0X5][EK[6]];end;EK=eK[nK];nK=nK+0x1;MK=0X5;aK=zK[5];zK[MK+0X001]=aK;(zK)[MK]=aK[EK[0X006]];EK=eK[nK];nK=nK+0X1;(zK)[0x0007]=EK[0X07];do nK=nK+1;end;MK=5;(zK)[MK]=zK[MK](zK[MK+0x1],zK[MK+0X2]);do QK=MK;end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not(not zK[5])then else nK=EK[0x002];end;end;end;else do if dK>=7 then if dK>=0X008 then do if dK~=0x9 then do zK[EK[0X3]]=UK[EK[0X7]];end;else local VK=sK[2];zK[0X3]=VK[0X1][VK[0X2]];EK=eK[nK];nK=nK+0X001;zK[3]=zK[0X3][EK[0X6]];EK=eK[nK];nK=nK+0X1;do zK[3]=zK[3][EK[6]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;if zK[0X003]==EK[0X6]then else nK=EK[3];end;end;end;else local VK=(sK[2]);do(zK)[2]=VK[0X1][VK[2]];end;EK=eK[nK];nK=nK+1;do zK[2]=zK[0X2][EK[0X6]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do zK[2]=zK[2][EK[0X6]];end;EK=eK[nK];nK=nK+1;if zK[2]==EK[0X6]then else nK=EK[0X3];end;end;else if dK==6 then(zK)[5]=UK[EK[7]];do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do(zK)[6]=EK[7];end;EK=eK[nK];local VK=(0X7);do nK=nK+0X0001;end;(zK)[7]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;zK[0X00008]=UK[EK[0X7]];local aK=0;nK=nK+0x1;local MK=(0X2);if MK==0 then else QK=VK+MK-1;end;local gK,wK=nil,nil;if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else do gK,wK=vi(zK[VK]());end;end;if aK==1 then QK=VK-0x1;else if aK~=0X0 then gK=VK+aK-2;do QK=gK+1;end;else gK=gK+VK-1;QK=gK;end;local lK=0;for LK=VK,gK do lK=lK+0X1;zK[LK]=wK[lK];end;end;local rK=(sK[2]);nK=nK+0X1;VK=0X0005;zK[VK](S(zK,VK+1,QK));do QK=VK-0X1;end;nK=nK+1;nK=nK+1;nK=nK+0X1;zK[5]=rK[0X1][rK[2]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[5]=zK[0X5][EK[0X6]];EK=eK[nK];nK=nK+0X1;zK[0X5]=zK[0x5][EK[6]];do nK=nK+1;end;zK[0x6]=zK[3];EK=eK[nK];do nK=nK+1;end;(zK[5])[EK[7]]=zK[6];do nK=nK+1;end;zK[0X005]={};do EK=eK[nK];end;nK=nK+1;(zK[5])[EK[7]]=zK[0];do EK=eK[nK];end;do nK=nK+1;end;do zK[0x6]=UK[EK[0x7]];end;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X1;do zK[7]=EK[0x07];end;do EK=eK[nK];end;do nK=nK+0x01;end;zK[0X8]=UK[EK[0X007]];nK=nK+0X1;nK=nK+1;nK=nK+0x1;do(zK)[0x9]=zK[5];end;nK=nK+1;VK=0X8;MK=2;aK=0X0;if MK==0 then else QK=VK+MK-0X1;end;gK,wK=nil;if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;if aK~=1 then if aK~=0 then do gK=VK+aK-2;end;do QK=gK+1;end;else gK=gK+VK-0X1;QK=gK;end;local lK=0;for LK=VK,gK do do lK=lK+0x1;end;(zK)[LK]=wK[lK];end;else QK=VK-0X1;end;nK=nK+1;nK=nK+1;nK=nK+0X1;VK=0X0006;(zK[VK])(S(zK,VK+1,QK));QK=VK-1;EK=eK[nK];do nK=nK+0X0001;end;nK=EK[2];else local VK=(sK[0X0002]);zK[2]=VK[0X001][VK[2]];nK=nK+0x1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;zK[0x2]=zK[0X00002][EK[6]];nK=nK+1;do nK=nK+0X0001;end;EK=eK[nK];nK=nK+0X001;zK[0X02]=zK[0x2][EK[6]];EK=eK[nK];nK=nK+1;if zK[2]~=EK[0X6]then nK=EK[0x3];end;end;end;end;end;end;end;end;end;end;end;end;end;else do if SK<0X7e then do if SK>=0X7c then if SK==125 then do _K=function(...)local zK={};local nK=0X0001;local CK=({[2]=zK,[1]=xK});local pK=Q();local NK,HK=vi(...);NK=NK-0x1;local UK,QK=(pK==z and KK or pK),(0);do for EK=0x00,NK do do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X001)};end;if UK==pK then else _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0X1];do nK=nK+0X1;end;if dK>=0X8 then do if not(dK<12)then if not(dK<14)then if dK~=0xF then for VK=EK[3],EK[0X2]do zK[VK]=nil;end;else(zK)[EK[3]]={S({},0X1,EK[2])};end;else if dK==13 then(zK)[EK[0X03]]=l(zK[EK[0X002]]);else local VK,MK=EK[3],(zK[EK[2]]);do zK[VK+1]=MK;end;zK[VK]=MK[EK[6]];end;end;else if not(dK<10)then if dK~=11 then do nK=EK[0x2];end;else if not(zK[EK[0x3]])then else do nK=EK[2];end;end;end;else if dK~=0x009 then do(zK)[0X1]=UK[EK[7]];end;nK=nK+0X1;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;do zK[1][EK[0x7]]=EK[0X6];end;EK=eK[nK];do nK=nK+0X1;end;do(zK)[0X1]=UK[EK[0X7]];end;do EK=eK[nK];end;nK=nK+1;(zK)[0x1]=zK[0x00001][EK[6]];do nK=nK+1;end;nK=nK+1;local VK=(1);EK=eK[nK];nK=nK+1;local MK=(zK[1]);zK[VK+1]=MK;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+1;do zK[0X003]=UK[EK[0x07]];end;EK=eK[nK];nK=nK+1;do zK[3]=zK[3][EK[0X6]];end;nK=nK+1;VK=1;zK[VK](zK[VK+1],zK[VK+0X2]);do QK=VK-1;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;nK=EK[2];else(zK)[EK[3]]=EK[7];end;end;end;end;else if not(dK<4)then if not(dK>=0x6)then if dK~=0X5 then zK[1]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X01;zK[2]=UK[EK[0x007]];nK=nK+1;local VK=2;nK=nK+1;do nK=nK+0X01;end;(zK)[0X00003]=zK[0X0];nK=nK+0X01;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;do nK=nK+1;end;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+1;end;zK[0x1][EK[0X7]]=zK[0X2];do EK=eK[nK];end;nK=nK+0X1;zK[0X01]=UK[EK[0X007]];nK=nK+0X001;nK=nK+0x1;EK=eK[nK];nK=nK+1;do zK[1]=zK[1][EK[0x00006]];end;EK=eK[nK];nK=nK+0X1;if zK[1]==EK[0X06]then else nK=EK[3];end;else do zK[EK[0X0003]]=UK[EK[0X007]];end;end;else if dK==7 then else local VK=(EK[3]);for MK=VK,VK+(EK[0x0002]-1)do zK[MK]=HK[WK+(MK-VK)+0X1];end;end;end;else if dK<0x2 then if dK==0x1 then local VK=(EK[0X2]);local MK=zK[VK];do for aK=VK+1,EK[0X0005]do MK=MK..zK[aK];end;end;(zK)[EK[3]]=MK;else local MK,aK=EK[0X2],(EK[5]);local VK=EK[0X003];if MK==0X0 then else do QK=VK+MK-1;end;end;local gK,wK=nil,(nil);if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK~=1 then do if aK~=0X0 then gK=VK+aK-0X00002;QK=gK+0X1;else do gK=gK+VK-1;end;do QK=gK;end;end;end;local rK=0;do for lK=VK,gK do rK=rK+0x1;zK[lK]=wK[rK];end;end;else QK=VK-0X1;end;end;else do if dK~=0X003 then local VK=EK[0x2];local aK=VK[9];local gK=#aK;local MK=nil;if gK>0x00 then do MK={};end;for wK=0x0001,gK do local rK=aK[wK];do if rK[1]~=0 then do(MK)[wK-1]=sK[rK[2]];end;else MK[wK-1]={zK,rK[0X2]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else zK[0X1]=UK[EK[7]];nK=nK+1;QK=0X1;(zK[QK])();QK=QK-0X1;do nK=nK+1;end;nK=nK+1;nK=nK+1;repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0x0 then local LK=(lK[2]);if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;lK[1]=aK[LK];lK[0X2]=0x1;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,{};local pK=Q();local UK=(pK==z and KK or pK);local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-1;for EK=0X0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+1)};end;if UK==pK then else(_)(_K,UK);end;local QK=0X0;while true do local EK=eK[nK];local dK=EK[0X1];nK=nK+1;if not(dK<10)then if not(dK>=15)then do if not(dK<0XC)then if not(dK<13)then do if dK==14 then(zK)[EK[3]]=zK[EK[0X2]]%zK[EK[5]];else do(zK)[0]=UK[EK[7]];end;nK=nK+0X001;local MK,VK=0x1,sK[0];nK=nK+0X001;nK=nK+1;zK[1]=VK[0X0001][VK[0X2]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X001;end;local aK=(zK[0X01]);zK[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];EK=eK[nK];nK=nK+0x1;(zK)[3]=EK[7];do nK=nK+1;end;MK=0X1;zK[MK]=zK[MK](zK[MK+0X01],zK[MK+0X2]);QK=MK;do EK=eK[nK];end;nK=nK+0X01;zK[0x0001]=zK[1][EK[6]];EK=eK[nK];nK=nK+0X1;(zK)[0X1]=zK[0X1][EK[6]];do nK=nK+1;end;do nK=nK+0x1;end;nK=nK+0x1;MK=0X0;do(zK)[MK]=zK[MK](zK[MK+1]);end;do QK=MK;end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X1;end;zK[0X00001]=UK[EK[7]];nK=nK+1;VK=sK[0X01];zK[0x2]=VK[1][VK[2]];do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[0X002]=zK[0X00002][EK[6]];nK=nK+0X1;do MK=1;end;zK[MK]=zK[MK](zK[MK+1]);QK=MK;EK=eK[nK];do nK=nK+0X1;end;if zK[0]==zK[1]then else nK=EK[0x00003];end;end;end;else local VK=sK[2];do(zK)[0X0]=VK[0X00001][VK[2]];end;nK=nK+0x1;nK=nK+1;do nK=nK+0X00001;end;VK=sK[0X00];do(zK)[0X1]=VK[0X1][VK[2]];end;nK=nK+0x1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0][zK[0X1]]=EK[6];EK=eK[nK];nK=nK+1;do zK[0X0000]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+1;do zK[1]=UK[EK[0X7]];end;do nK=nK+1;end;nK=nK+1;nK=nK+1;local MK=(2);VK=sK[0];do zK[0x00002]=VK[0X1][VK[0X0002]];end;EK=eK[nK];do nK=nK+1;end;local aK=(zK[2]);zK[MK+1]=aK;zK[MK]=aK[EK[6]];EK=eK[nK];nK=nK+1;zK[0x04]=EK[0x07];do nK=nK+0x1;end;do MK=2;end;(zK)[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;EK=eK[nK];do nK=nK+1;end;zK[0x002]=zK[2][EK[0X0006]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[0x2]=zK[2][EK[0X06]];nK=nK+1;do nK=nK+0X00001;end;nK=nK+1;MK=0x1;(zK)[MK]=zK[MK](zK[MK+1]);QK=MK;nK=nK+0x1;VK=sK[0];(zK)[0X2]=VK[0X00001][VK[2]];do nK=nK+0X1;end;nK=nK+1;nK=nK+0X1;MK=0X0;zK[MK](zK[MK+1],zK[MK+2]);do QK=MK-0x0001;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;nK=EK[2];end;else do if dK==11 then for VK=EK[0X3],EK[0X2]do(zK)[VK]=nil;end;else do(zK)[0x1]=UK[EK[7]];end;local VK=sK[0];EK=eK[nK];do nK=nK+1;end;zK[0X1]=zK[0x0001][EK[0X6]];EK=eK[nK];nK=nK+1;do(zK)[2]=UK[EK[7]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X0001;zK[0X2]=zK[0X002][EK[0X6]];EK=eK[nK];do nK=nK+0x001;end;(zK)[3]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X00004]=UK[EK[7]];nK=nK+1;nK=nK+1;do nK=nK+1;end;local MK=0X5;zK[0x5]=VK[1][VK[2]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X001;end;local aK=zK[0X5];zK[MK+0X00001]=aK;zK[MK]=aK[EK[6]];EK=eK[nK];nK=nK+0x1;zK[0x7]=EK[0X7];nK=nK+1;MK=0X5;zK[MK]=zK[MK](zK[MK+0X1],zK[MK+2]);do QK=MK;end;EK=eK[nK];nK=nK+1;zK[0x5]=zK[5][EK[0X6]];do EK=eK[nK];end;nK=nK+1;(zK)[0X5]=zK[5][EK[0X00006]];nK=nK+0X1;do MK=4;end;(zK)[MK]=zK[MK](zK[MK+0X1]);QK=MK;nK=nK+0x1;nK=nK+1;nK=nK+0X01;zK[0X3]=zK[3][zK[4]];do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0x1;do zK[0X3]=zK[3][EK[6]];end;nK=nK+1;MK=1;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+0X1;do if not zK[0X00001]then nK=EK[2];end;end;end;end;end;end;else if dK>=18 then if dK>=19 then if dK~=20 then do zK[EK[0X0003]]=zK[EK[2]]<=zK[EK[5]];end;else end;else nK=EK[2];end;else if not(dK<16)then do if dK~=0X11 then(zK)[EK[3]]=EK[0X02];else do(zK)[EK[3]]=zK[EK[2]]+zK[EK[5]];end;end;end;else do(UK)[EK[7]]=zK[EK[3]];end;end;end;end;else do if dK>=5 then if not(dK<0X07)then if dK>=8 then if dK==0X009 then(zK)[EK[0X3]]=zK[EK[2]]-zK[EK[0X5]];else do zK[EK[0X3]]=UK[EK[7]];end;end;else local VK=EK[0X02];local MK=(zK[VK]);do for aK=VK+1,EK[5]do MK=MK..zK[aK];end;end;zK[EK[3]]=MK;end;else if dK~=6 then do zK[0]=UK[EK[0X7]];end;do nK=nK+0X1;end;nK=nK+1;local VK=(sK[0]);EK=eK[nK];nK=nK+1;zK[0x1]=UK[EK[7]];local MK=(0x2);nK=nK+0X1;zK[2]=VK[1][VK[0X002]];nK=nK+1;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+1;local aK=(zK[0X2]);do zK[MK+1]=aK;end;(zK)[MK]=aK[EK[6]];do EK=eK[nK];end;do nK=nK+0X0001;end;(zK)[0X04]=EK[0x00007];nK=nK+1;MK=0X2;(zK)[MK]=zK[MK](zK[MK+0X1],zK[MK+2]);QK=MK;EK=eK[nK];nK=nK+0X1;zK[0x0002]=zK[2][EK[0X6]];nK=nK+1;do nK=nK+0X01;end;do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X002]=zK[2][EK[0X06]];nK=nK+1;MK=0X0001;zK[MK]=zK[MK](zK[MK+1]);QK=MK;nK=nK+0X1;nK=nK+0X0001;nK=nK+0X1;do(zK)[0]=zK[0][zK[1]];end;EK=eK[nK];nK=nK+0x1;if zK[0]==EK[0X6]then do nK=EK[3];end;end;else repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[0X2];if not aK[LK]then do(aK)[LK]={MK[LK]};end;end;do(lK)[0X1]=aK[LK];end;(lK)[0x2]=1;end;end;end;until true;do return;end;end;end;else if dK<2 then if dK~=1 then if not(zK[EK[0X2]]<=zK[EK[5]])then else nK=EK[0X3];end;else local VK=(sK[0]);do(zK)[0]=VK[0X1][VK[2]];end;local MK=0X0;EK=eK[nK];do nK=nK+1;end;local aK=zK[0X0];(zK)[MK+0X001]=aK;zK[MK]=aK[EK[0X00006]];do EK=eK[nK];end;do nK=nK+1;end;zK[2]=EK[7];nK=nK+0X1;do MK=0;end;(zK)[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;nK=nK+0X01;nK=nK+1;EK=eK[nK];do nK=nK+1;end;MK=0;aK=zK[0];zK[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];EK=eK[nK];nK=nK+0X0001;zK[0X2]=EK[7];nK=nK+0x1;MK=0;zK[MK]=zK[MK](zK[MK+0X1],zK[MK+0X0002]);do QK=MK;end;EK=eK[nK];do nK=nK+1;end;if not(not zK[0X0])then else nK=EK[2];end;end;else if dK>=3 then do if dK~=0x04 then zK[EK[0X03]]={S({},1,EK[2])};else local VK=EK[0x02];local aK,MK=VK[9],(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X00001]~=0X0 then MK[wK-1]=sK[rK[0x2]];else MK[wK-1]={zK,rK[0x00002]};end;end;K(mK,MK);end;(zK)[EK[0X0003]]=Ri(MK,UK,VK);end;end;else(zK)[EK[3]]=EK[7];end;end;end;end;end;end;end;end;else _K=function(...)local nK=(0X001);local QK=(0);local zK={};local pK=(Q());local NK,HK=vi(...);local CK,UK={[2]=zK,[1]=xK},(pK==z and KK or pK);do NK=NK-1;end;do for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;do if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0X00001)};end;end;if UK~=pK then(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=(EK[0X001]);do nK=nK+1;end;if dK<6 then do if not(dK<0X3)then if dK>=4 then if dK==0X5 then zK[EK[3]]=-zK[EK[2]];else local VK,MK=EK[3],zK[EK[2]];(zK)[VK+1]=MK;(zK)[VK]=MK[EK[6]];end;else(zK)[EK[0X3]]=l(zK[EK[2]]);end;else if dK>=0X1 then do if dK~=2 then zK[EK[3]]=zK[EK[0x2]]~=zK[EK[0X05]];else zK[1]=UK[EK[7]];do nK=nK+1;end;zK[2]=zK[0];EK=eK[nK];nK=nK+0X01;(zK[1])[EK[7]]=zK[2];EK=eK[nK];nK=nK+0x1;do(zK)[0X1]=UK[EK[0X00007]];end;nK=nK+1;QK=0X1;zK[QK]();do QK=QK-0x001;end;nK=nK+1;repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[0x2]);if not aK[LK]then(aK)[LK]={MK[LK]};end;(lK)[1]=aK[LK];(lK)[2]=1;end;end;end;end;until true;return;end;end;else end;end;end;else if not(dK>=0X9)then if not(dK<0X7)then if dK==8 then(zK[EK[3]])[zK[EK[0X2]]]=zK[EK[0x0005]];else(zK)[EK[0X3]]=EK[7];end;else local VK=(EK[0X2]);local MK=(nil);local aK=VK[9];local gK=#aK;if gK>0X0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0X0000 then MK[wK-0X001]=sK[rK[0x2]];else do MK[wK-0X1]={zK,rK[0x2]};end;end;end;K(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;else if not(dK<0xB)then if dK~=0Xc then do if zK[EK[0X02]]<zK[EK[0X5]]then do nK=EK[0X3];end;end;end;else do zK[EK[3]]=UK[EK[7]];end;end;else if dK~=10 then zK[EK[3]]={S({},0X1,EK[0X002])};else nK=EK[0X00002];end;end;end;end;end;end;end;end;end;else if SK<0X7F then do _K=function(...)local nK,zK=0x01,({});local pK=Q();local CK={[1]=xK,[2]=zK};local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X01;for EK=0,NK do do if not(WK>EK)then do break;end;else do(zK)[EK]=HK[EK+1];end;end;end;end;do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0X0,S(HK,WK+0X00001,NK+1)};end;end;if UK~=pK then _(_K,UK);end;local QK=0X00000;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X001;if not(dK<6)then if dK>=9 then if dK<0xB then if dK~=0X000a then zK[EK[0X3]]=UK[EK[0x0007]];else zK[1]=UK[EK[7]];nK=nK+1;do(zK)[0X2]=zK[0X0000];end;do EK=eK[nK];end;nK=nK+0x1;(zK[0X0001])[EK[7]]=zK[0x2];EK=eK[nK];nK=nK+0X00001;do zK[1]=UK[EK[0X7]];end;nK=nK+1;do QK=0X001;end;(zK[QK])();QK=QK-0X1;do nK=nK+0X1;end;nK=nK+0X1;nK=nK+0X01;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0 then local LK=lK[0X02];if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];(lK)[0x0002]=1;end;end;end;end;until true;return;end;else do if dK~=12 then do(zK)[EK[0X3]]={S({},0X01,EK[0X2])};end;else for VK=EK[3],EK[0x2]do(zK)[VK]=nil;end;end;end;end;else if dK>=0X0007 then if dK~=0X00008 then local VK=EK[3];local MK,aK=zK[VK]();if not(MK)then else nK=EK[2];zK[VK+3]=aK;end;else zK[EK[3]]=zK[EK[2]]~=zK[EK[5]];end;else zK[EK[0X03]][zK[EK[0X2]]]=zK[EK[5]];end;end;else if not(dK>=3)then do if dK>=0X01 then if dK==0x2 then do(zK)[EK[0X3]]=EK[0x7];end;else end;else zK[EK[0X3]]=l(zK[EK[0x2]]);end;end;else if not(dK<4)then do if dK~=5 then nK=EK[0X002];else(zK)[EK[0x00003]]=zK[EK[0X2]]*zK[EK[5]];end;end;else local VK,MK=EK[2],(nil);local aK=VK[9];local gK=#aK;do if not(gK>0)then else do MK={};end;for wK=0X1,gK do local rK=aK[wK];if rK[1]~=0X0 then MK[wK-0X01]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X2]};end;end;K(mK,MK);end;end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;end;end;else if SK==0X80 then do _K=function(...)local nK,zK=1,({});local QK=(0);local CK={[2]=zK,[1]=xK};local pK=(Q());local NK,HK=vi(...);NK=NK-1;local UK=(pK==z and KK or pK);for EK=0x0,NK do if not(WK>EK)then break;else do zK[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0x01 or 0x0,S(HK,WK+1,NK+0X001)};end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;do if not(dK<0X7)then if dK>=11 then do if not(dK<13)then if dK==0Xe then(zK)[EK[3]]={S({},1,EK[2])};else(zK)[EK[0X3]]=not zK[EK[2]];end;else do if dK~=0Xc then zK[EK[3]]=EK[7];else local VK=EK[0X3];local MK,aK=EK[2],(EK[5]);if MK==0 then else QK=VK+MK-1;end;local gK,wK=nil,nil;if MK~=0X1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;if aK==0X1 then do QK=VK-1;end;else do if aK==0 then gK=gK+VK-0X00001;QK=gK;else gK=VK+aK-2;QK=gK+1;end;end;local rK=(0);for lK=VK,gK do rK=rK+0X0001;(zK)[lK]=wK[rK];end;end;end;end;end;end;else if not(dK>=9)then do if dK==0X8 then zK[0X1]=UK[EK[0x7]];nK=nK+1;(zK)[0X002]=zK[0X00];do EK=eK[nK];end;nK=nK+0X0001;zK[1][EK[0x7]]=zK[0X0002];EK=eK[nK];nK=nK+1;zK[0x001]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+1;QK=1;zK[QK]();QK=QK-1;do nK=nK+0x1;end;nK=nK+0X1;nK=nK+1;do repeat local VK,MK,aK=mK,zK,{};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0x1]==MK and lK[2]>=0X0)then else local LK=(lK[2]);if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];lK[2]=0X01;end;end;end;end;until true;end;return;else end;end;else if dK==0X000A then do for VK=EK[0x0003],EK[2]do(zK)[VK]=nil;end;end;else do zK[EK[0x3]]=zK[EK[2]];end;end;end;end;else if not(dK>=0X3)then if not(dK<1)then if dK~=2 then nK=EK[2];else(zK)[EK[3]]=CK[EK[0X2]];end;else(zK)[EK[0X003]]=UK[EK[0X007]];end;else if not(dK<0X5)then do if dK~=0x00006 then do(zK)[EK[3]]=D(zK[EK[2]],zK[EK[0X5]]);end;else do(zK)[EK[0x3]]=r(zK[EK[2]],zK[EK[5]]);end;end;end;else if dK~=4 then local VK=EK[0X002];local aK,MK=VK[9],nil;local gK=#aK;do if gK>0X0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-1]=sK[rK[0X00002]];else MK[wK-0x0001]={zK,rK[0x2]};end;end;(K)(mK,MK);end;end;(zK)[EK[0x3]]=Ri(MK,UK,VK);else zK[EK[0X003]]=L(zK[EK[2]],zK[EK[0X5]]);end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=0X01,({});local CK=({[2]=zK,[1]=xK});local pK=Q();local UK=((pK==z and KK or pK));local QK=0X00;local NK,HK=vi(...);NK=NK-0X1;do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X001 or 0X0,S(HK,WK+0x1,NK+0x01)};end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK>=7)then do if not(dK>=0X03)then if dK<1 then if zK[EK[0X00003]]then nK=EK[0X00002];end;else if dK==2 then do if not(zK[EK[2]]<=zK[EK[5]])then do nK=EK[3];end;end;end;else do(zK)[EK[0X03]]=EK[0X2];end;end;end;else if not(dK>=0X0005)then if dK==4 then if not(zK[EK[2]]<zK[EK[5]])then nK=EK[0X3];end;else(zK)[EK[0X03]]=EK[0X7];end;else if dK==0X06 then local VK=EK[3];local MK,aK=EK[0X02],EK[0X5];if MK~=0X000 then QK=VK+MK-0X1;end;local gK,wK=nil,nil;if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;if aK==1 then QK=VK-0X01;else if aK~=0x0000 then gK=VK+aK-0X02;QK=gK+1;else gK=gK+VK-1;QK=gK;end;local rK=(0);for lK=VK,gK do do rK=rK+1;end;do zK[lK]=wK[rK];end;end;end;else do(zK)[0x0]=UK[EK[7]];end;local VK=sK[0X000];do EK=eK[nK];end;nK=nK+0x001;(zK)[0x1]=EK[0X00007];EK=eK[nK];do nK=nK+0x1;end;do(zK)[2]=UK[EK[0X7]];end;nK=nK+0X1;local MK=0X000;do(zK)[3]=VK[0X00001][VK[0X2]];end;nK=nK+1;nK=nK+0x00001;nK=nK+0x1;(zK)[0X2]=zK[2][zK[0X003]];nK=nK+1;nK=nK+1;nK=nK+0x01;zK[MK](zK[MK+0X0001],zK[MK+0X002]);QK=MK-1;do nK=nK+0X00001;end;nK=nK+0X0001;do nK=nK+1;end;repeat local aK,gK=mK,(zK);local wK=({});for rK,lK in W,aK do do for LK,DK in W,lK do if DK[0X1]==gK and DK[2]>=0 then local ZK=(DK[0x2]);if not(not wK[ZK])then else(wK)[ZK]={gK[ZK]};end;DK[0x1]=wK[ZK];(DK)[0X2]=1;end;end;end;end;until true;return;end;end;end;end;else if dK<0XA then if dK>=8 then do if dK==0X9 then local MK=nil;local VK=EK[2];local aK=(VK[0X9]);local gK=(#aK);if not(gK>0x0)then else MK={};do for wK=0X00001,gK do local rK=(aK[wK]);if rK[1]==0X0000 then do MK[wK-0X1]={zK,rK[0X2]};end;else MK[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else end;end;else(zK)[EK[3]]=zK[EK[0X002]]^zK[EK[0X0005]];end;else if not(dK>=12)then if dK==0xB then for VK=EK[3],EK[0X00002]do zK[VK]=nil;end;else nK=EK[2];end;else if dK~=0Xd then zK[EK[0X3]]=UK[EK[7]];else do zK[EK[0x00003]]={S({},1,EK[2])};end;end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK<135)then do if not(SK<0X8A)then do if SK>=0x008B then do if SK~=0X8C then _K=function(...)local nK,zK=0X1,{};local pK=Q();local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-1;for EK=0X0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else do break;end;end;end;local UK,QK=(pK==z and KK or pK),(0x0);if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X001,NK+1)};end;if UK~=pK then(_)(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[0x1]);do nK=nK+0X1;end;if not(dK<8)then if not(dK>=12)then if not(dK<10)then if dK~=11 then for VK=EK[0X3],EK[0X2]do do zK[VK]=nil;end;end;else end;else do if dK~=0X9 then do zK[EK[0X3]]={S({},0X01,EK[0X002])};end;else local VK=(EK[3]);local MK=(EK[5]-0X1)*0x000032;local aK=zK[VK];for gK=0X01,EK[0X2]do do aK[MK+gK]=zK[VK+gK];end;end;end;end;end;else if not(dK>=14)then if dK==13 then zK[EK[3]]=EK[0X07];else local VK=(EK[0X3]);for MK=VK,VK+(EK[2]-0x00001)do(zK)[MK]=HK[WK+(MK-VK)+0X1];end;end;else if dK~=15 then zK[EK[3]]=zK[EK[2]];else zK[EK[0X003]]=zK[EK[2]]<=zK[EK[0X5]];end;end;end;else if not(dK>=0X04)then if dK<2 then do if dK~=0X01 then do(zK)[EK[3]]=true;end;else if zK[EK[2]]~=zK[EK[0X5]]then nK=EK[3];end;end;end;else if dK~=0X03 then zK[1]=UK[EK[7]];nK=nK+0x00001;do nK=nK+1;end;nK=nK+1;zK[2]=zK[0];do EK=eK[nK];end;nK=nK+0X1;do(zK[0x1])[EK[0x007]]=zK[0X2];end;EK=eK[nK];do nK=nK+0X001;end;zK[0x1]=UK[EK[7]];nK=nK+0X0001;QK=0x1;zK[QK]();QK=QK-1;nK=nK+0X00001;nK=nK+1;local wK=0X0001;EK=eK[nK];do nK=nK+0X001;end;(zK)[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X1]=zK[0X00001][EK[6]];nK=nK+0x0001;do nK=nK+0X01;end;EK=eK[nK];local VK=EK[0X2];nK=nK+1;local aK=(VK[0x9]);local MK=(nil);local gK=#aK;if not(gK>0)then else MK={};do for rK=1,gK do local lK=(aK[rK]);if lK[1]~=0X00 then MK[rK-1]=sK[lK[0X2]];else MK[rK-1]={zK,lK[2]};end;end;end;(K)(mK,MK);end;(zK)[2]=Ri(MK,UK,VK);do nK=nK+0x1;end;(zK[wK])(zK[wK+1]);QK=wK-1;nK=nK+1;nK=nK+0X001;nK=nK+1;do repeat local rK,lK=mK,(zK);local LK={};do for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0x01]==lK and OK[2]>=0 then local tK=(OK[2]);if not(not LK[tK])then else do(LK)[tK]={lK[tK]};end;end;OK[0x1]=LK[tK];do(OK)[0X2]=1;end;end;end;end;end;until true;end;return;else repeat local VK,MK,aK=mK,zK,(EK[3]);local gK=({});for wK,rK in W,VK do do for lK,LK in W,rK do if LK[0X1]==MK and LK[0X00002]>=aK then local DK=LK[2];if not gK[DK]then do(gK)[DK]={MK[DK]};end;end;LK[1]=gK[DK];do LK[0X02]=1;end;end;end;end;end;until true;end;end;else if dK<0X0006 then do if dK==0X5 then(zK)[EK[0X3]]=zK[EK[0X0002]]/zK[EK[5]];else nK=EK[0X0002];end;end;else if dK~=7 then(zK)[EK[3]]=UK[EK[0X007]];else local VK,MK=EK[0x2],nil;local aK=(VK[0X9]);local gK=#aK;do if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[0X0001]==0 then do(MK)[wK-0X1]={zK,rK[2]};end;else MK[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;end;else _K=function(...)local zK=({});local nK=(0X1);local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);local QK=(0X0);NK=NK-1;local UK=((pK==z and KK or pK));for EK=0x000,NK do if WK>EK then(zK)[EK]=HK[EK+0X00001];else break;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK>=0x7 then if not(dK<10)then if dK<0Xc then if dK==0xb then local VK=EK[0x2];local aK=(VK[9]);local gK,MK=#aK,(nil);if not(gK>0)then else do MK={};end;for wK=0X001,gK do local rK=aK[wK];if rK[0X00001]~=0X0 then(MK)[wK-1]=sK[rK[2]];else MK[wK-1]={zK,rK[2]};end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else local VK=(EK[0X3]);do for MK=VK,VK+(EK[0X2]-1)do do zK[MK]=HK[WK+(MK-VK)+0x00001];end;end;end;end;else do if dK~=0X0d then(zK)[EK[0X3]]={S({},0x1,EK[2])};else(zK)[EK[3]]=zK[EK[2]];end;end;end;else do if dK<8 then nK=EK[0X02];else if dK==0x9 then local VK=(EK[0X00003]);local MK=(b(function(...)o();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;(zK)[VK]=MK;nK=EK[2];else if zK[EK[2]]~=zK[EK[5]]then else nK=EK[0X00003];end;end;end;end;end;else if not(dK>=3)then do if not(dK<0X01)then if dK~=2 then else(zK)[EK[3]]=UK[EK[0X7]];end;else(zK)[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+1;do(zK)[1]=zK[0X0001][EK[0x6]];end;do EK=eK[nK];end;nK=nK+1;local VK=(sK[0]);zK[0X2]=EK[0X007];nK=nK+1;(zK)[3]=VK[0X1][VK[2]];nK=nK+0X1;nK=nK+1;do nK=nK+0X0001;end;local MK=2;zK[0x002]=zK[MK]..zK[MK+0X1];EK=eK[nK];nK=nK+0X001;do zK[3]=UK[EK[7]];end;do nK=nK+0X1;end;local aK=(0X003);do zK[0X4]=zK[0X0];end;do nK=nK+0X1;end;zK[aK]=zK[aK](zK[aK+0X00001]);QK=aK;nK=nK+1;nK=nK+1;nK=nK+1;zK[1][zK[2]]=zK[0X003];do EK=eK[nK];end;nK=nK+1;(zK)[0X1]=UK[EK[7]];nK=nK+0X00001;do nK=nK+0x0001;end;nK=nK+1;do QK=1;end;(zK[QK])();do QK=QK-0X00001;end;nK=nK+0X1;do repeat local gK,wK=mK,(zK);local rK={};do for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[1]==wK and ZK[0X2]>=0x0 then local GK=(ZK[0X2]);if not rK[GK]then rK[GK]={wK[GK]};end;(ZK)[0X1]=rK[GK];do ZK[2]=1;end;end;end;end;end;until true;end;return;end;end;else if not(dK<0X5)then do if dK~=6 then zK[EK[3]]=zK[EK[0X02]]<=zK[EK[5]];else do for VK=EK[0X3],EK[0X2]do zK[VK]=nil;end;end;end;end;else if dK~=0X4 then if not(zK[EK[2]]<zK[EK[5]])then do nK=EK[0X3];end;end;else zK[EK[0X3]]=EK[0X7];end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=(Q());local QK,UK=0x0,(pK==z and KK or pK);local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;do if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+1;if not(dK>=8)then if dK<4 then if not(dK<2)then do if dK~=0X3 then do(zK)[EK[3]]=zK[EK[2]];end;else(zK)[EK[0X003]]=zK[EK[0X002]]%zK[EK[5]];end;end;else if dK~=0x1 then do zK[0x1]=UK[EK[7]];end;nK=nK+1;nK=nK+0X001;nK=nK+1;QK=1;(zK[QK])();QK=QK-0X0001;nK=nK+1;nK=nK+0x1;nK=nK+0x1;repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[0X02]>=0X0)then else local LK=(lK[0X2]);if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];lK[2]=0x001;end;end;end;end;until true;return;else zK[EK[3]]=zK[EK[2]]~=zK[EK[0x5]];end;end;else if dK<0X6 then if dK==0X5 then if zK[EK[0X0002]]<=zK[EK[0X5]]then nK=EK[3];end;else(zK)[EK[0X003]]=EK[7];end;else do if dK==7 then do for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;else zK[0X1]=UK[EK[0X7]];nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;do zK[2]=zK[0x00000];end;EK=eK[nK];nK=nK+1;do zK[0X1][EK[0X7]]=zK[0X00002];end;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;end;end;else if dK<0x0c then if not(dK<10)then do if dK~=0X000b then do(zK)[EK[3]]={S({},1,EK[2])};end;else(zK)[EK[0X00003]]=UK[EK[7]];end;end;else if dK~=9 then local VK=zK[EK[2]]/zK[EK[5]];do zK[EK[0X3]]=VK-VK%1;end;else(zK)[0X1]=UK[EK[7]];nK=nK+1;local VK=1;do zK[2]=zK[0X0];end;do nK=nK+0x1;end;zK[VK]=zK[VK](zK[VK+0x01]);QK=VK;do nK=nK+1;end;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;if zK[1]==EK[6]then else nK=EK[0x3];end;end;end;else if dK<0XE then do if dK==13 then if not(zK[EK[2]]<zK[EK[0X5]])then else nK=EK[0X3];end;else end;end;else if dK<15 then(zK)[1]=UK[EK[0x7]];do EK=eK[nK];end;nK=nK+1;do zK[1][EK[7]]=EK[0X6];end;EK=eK[nK];nK=nK+1;nK=EK[0x0002];else do if dK~=16 then nK=EK[0X2];else local VK,MK=EK[2],nil;local aK=VK[9];local gK=#aK;if gK>0 then MK={};for wK=1,gK do local rK=aK[wK];do if rK[0X01]==0X0 then MK[wK-1]={zK,rK[2]};else(MK)[wK-0X1]=sK[rK[0X2]];end;end;end;(K)(mK,MK);end;do zK[EK[0X03]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;end;end;end;else do if SK>=0X0088 then if SK~=137 then _K=function(...)local nK,zK=1,{};local pK=(Q());local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0x001];else do break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0,S(HK,WK+1,NK+0X01)};end;local UK=(pK==z and KK or pK);local QK=(0X00);if UK==pK then else _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0x001;do if dK>=9 then if not(dK<0Xd)then if not(dK<15)then if not(dK<0X10)then if dK==0X11 then for VK=EK[3],EK[2]do zK[VK]=nil;end;else local VK,MK=EK[3],(zK[EK[0X2]]);(zK)[VK+1]=MK;do(zK)[VK]=MK[EK[6]];end;end;else(zK)[EK[0X03]]=EK[0X0007];end;else if dK~=14 then local VK=EK[0X03];local MK,aK=zK[VK]();if MK then nK=EK[0x2];zK[VK+0x00003]=aK;end;else nK=EK[0X002];end;end;else do if not(dK>=11)then if dK==10 then do(zK)[EK[3]]=g(zK[EK[0x2]],zK[EK[0X5]]);end;else end;else do if dK~=12 then do zK[EK[3]]=zK[EK[0X2]]<zK[EK[0X5]];end;else if not zK[EK[3]]then nK=EK[0X2];end;end;end;end;end;end;else if not(dK>=4)then if dK>=2 then if dK~=3 then(zK)[EK[0x3]]=#zK[EK[0X2]];else local MK=((EK[0X05]-0X0001)*50);local VK=EK[0X3];local aK=zK[VK];for gK=1,EK[0x2]do(aK)[MK+gK]=zK[VK+gK];end;end;else if dK==1 then do if zK[EK[0X2]]==zK[EK[5]]then nK=EK[3];end;end;else zK[1]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;nK=nK+1;zK[0X2]=zK[0X0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[0X0007]]=zK[2];EK=eK[nK];nK=nK+1;zK[1]=UK[EK[0X00007]];nK=nK+0X1;nK=nK+0x01;nK=nK+1;QK=1;zK[QK]();QK=QK-0x1;nK=nK+1;nK=nK+1;nK=nK+0X001;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0X2]>=0X0)then else local LK=(lK[2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[1]=aK[LK];lK[2]=1;end;end;end;end;until true;return;end;end;else if not(dK<0X6)then if dK<7 then local VK=(EK[0X2]);local aK=VK[0x00009];local MK=(nil);local gK=(#aK);do if gK>0X000 then do MK={};end;do for wK=1,gK do local rK=(aK[wK]);if rK[0X00001]~=0X0 then(MK)[wK-0x0001]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X2]};end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);else if dK==0x8 then zK[EK[0X3]]={S({},0X1,EK[0x2])};else zK[EK[3]]=UK[EK[0X07]];end;end;else if dK~=5 then zK[EK[0X00003]]=zK[EK[2]]-zK[EK[5]];else local VK=(EK[3]);local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+1],zK[VK+0x2]);QK=VK;do(zK)[VK]=MK;end;nK=EK[0X02];end;end;end;end;end;end;end;else do _K=function(...)local QK,zK=0X0,{};local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if not(WK>EK)then do break;end;else(zK)[EK]=HK[EK+1];end;end;if not PK then HK=nil;elseif not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+0X00001,NK+1)};end;end;local nK=1;local UK=(pK==z and KK or pK);if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0X01;if dK>=14 then if not(dK>=0x15)then if dK<0x11 then if dK>=0Xf then if dK==16 then zK[5]={S({},1,1)};EK=eK[nK];nK=nK+1;zK[6]=zK[0X4][EK[6]];local MK=(1-1)*50;nK=nK+0x1;do nK=nK+1;end;nK=nK+0X0001;local VK=(0x5);local aK=zK[VK];for gK=0X1,0X1 do aK[MK+gK]=zK[VK+gK];end;EK=eK[nK];nK=nK+1;if not zK[3]then do nK=EK[0x00002];end;end;else if not(not(zK[EK[0X2]]<zK[EK[0X005]]))then else nK=EK[0X3];end;end;else local VK=EK[3];local MK=EK[0X2];QK=VK+MK-1;do repeat local aK,gK=mK,(zK);local wK={};for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[1]==gK and DK[2]>=0X00)then else local ZK=(DK[2]);if not wK[ZK]then(wK)[ZK]={gK[ZK]};end;(DK)[0X1]=wK[ZK];do DK[2]=1;end;end;end;end;until true;end;do return zK[VK](S(zK,VK+0X00001,QK));end;end;else do if not(dK>=0x13)then if dK==0X12 then do zK[7]=UK[EK[0X7]];end;EK=eK[nK];do nK=nK+0x1;end;do zK[0X7]=zK[7][EK[0x6]];end;nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+1;zK[0x0008]=UK[EK[7]];nK=nK+0x1;nK=nK+1;local VK=(sK[3]);do nK=nK+1;end;(zK)[0x09]=VK[1][VK[2]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0X009]=zK[0X09][EK[0X00006]];do nK=nK+0X1;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;zK[0x0009]=zK[0X09][EK[6]];nK=nK+0X1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X001;local MK=(8);(zK)[9]=zK[9][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0x1;do(zK)[9]=zK[9][EK[0x00006]];end;nK=nK+0x1;zK[MK]=zK[MK](zK[MK+0X1]);QK=MK;do nK=nK+1;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;do if zK[0X7]==zK[8]then nK=EK[0X03];end;end;else(zK)[EK[0X3]]={S({},1,EK[0X2])};end;else if dK~=0x14 then zK[8]=UK[EK[7]];nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;do zK[9]=zK[0X7][EK[0x06]];end;EK=eK[nK];nK=nK+1;local VK=8;zK[0X9]=zK[0X9][EK[0X6]];nK=nK+1;nK=nK+1;nK=nK+1;zK[VK]=zK[VK](zK[VK+0X1]);do QK=VK;end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[9]=UK[EK[7]];nK=nK+1;do(zK)[10]=zK[0X00002];end;do nK=nK+0X01;end;do VK=9;end;(zK)[VK]=zK[VK](zK[VK+0x1]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do if zK[8]==zK[0X9]then else nK=EK[3];end;end;else zK[EK[0X3]]=EK[7];end;end;end;end;else if not(dK<25)then if dK<27 then if dK==0x1A then local VK=EK[0x3];local MK,aK,gK=zK[VK]();if MK then zK[VK+1]=aK;zK[VK+2]=gK;nK=EK[2];end;else do zK[EK[3]]=UK[EK[0X7]];end;end;else if dK==0X1C then zK[8]=zK[7];nK=nK+0x1;do zK[4]=zK[0X8];end;EK=eK[nK];do nK=nK+0X1;end;nK=EK[0X2];else do if not zK[EK[3]]then do nK=EK[2];end;end;end;end;end;else if dK<0X00017 then if dK==22 then nK=EK[2];else local VK=(sK[1]);(zK)[0]=VK[0x1][VK[2]];nK=nK+0X0001;nK=nK+0X01;do EK=eK[nK];end;nK=nK+1;(zK)[0x1]=UK[EK[0x00007]];EK=eK[nK];local gK,MK=0X005,0x00;nK=nK+1;zK[0x2]=EK[7];do nK=nK+1;end;local aK=0x3;do if aK==0 then else do QK=MK+aK-0X1;end;end;end;local wK,rK=nil,nil;if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+1,QK)));else wK,rK=vi(zK[MK]());end;if gK~=1 then if gK~=0X0 then wK=MK+gK-0X2;QK=wK+0X001;else wK=wK+MK-0X01;QK=wK;end;local lK=(0X0);for LK=MK,wK do do lK=lK+1;end;do zK[LK]=rK[lK];end;end;else QK=MK-1;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;do if not zK[0X000]then do nK=EK[0X2];end;end;end;end;else if dK~=0X18 then do zK[EK[0X3]]=zK[EK[0X002]]*zK[EK[0X5]];end;else local VK=(sK[EK[0x02]]);zK[EK[0X3]]=VK[0X0001][VK[0X00002]];end;end;end;end;else do if not(dK<7)then if dK<10 then if dK<8 then do for VK=EK[3],EK[0X00002]do zK[VK]=nil;end;end;else if dK==0X009 then(zK)[EK[3]]=zK[EK[2]]>zK[EK[5]];else do zK[7]=UK[EK[0X7]];end;nK=nK+1;local VK=(7);nK=nK+0x1;do EK=eK[nK];end;do nK=nK+1;end;zK[8]=EK[0X7];do nK=nK+1;end;(zK[VK])(zK[VK+1]);QK=VK-0X1;EK=eK[nK];do nK=nK+1;end;nK=EK[2];end;end;else if dK<12 then do if dK==11 then do(zK)[0x004]=nil;end;EK=eK[nK];nK=nK+1;zK[5]=UK[EK[7]];nK=nK+0X00001;nK=nK+0X1;do nK=nK+0X1;end;local VK=(sK[0X002]);(zK)[0X0006]=VK[0X00001][VK[2]];nK=nK+0X1;do nK=nK+1;end;local MK=6;EK=eK[nK];nK=nK+1;zK[0X6]=zK[6][EK[6]];do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[6]=zK[0x6][EK[6]];EK=eK[nK];nK=nK+0X1;local aK=(zK[0X006]);(zK)[MK+0X01]=aK;(zK)[MK]=aK[EK[6]];nK=nK+1;local gK=0X2;MK=6;local wK=(0X0);do if gK~=0 then QK=MK+gK-0x01;end;end;local rK,lK=nil,nil;if gK==1 then rK,lK=vi(zK[MK]());else rK,lK=vi(zK[MK](S(zK,MK+1,QK)));end;if wK~=1 then do if wK~=0 then rK=MK+wK-0x0002;do QK=rK+1;end;else do rK=rK+MK-1;end;QK=rK;end;end;local DK=(0x00);for ZK=MK,rK do DK=DK+0X001;do(zK)[ZK]=lK[DK];end;end;else QK=MK-1;end;nK=nK+1;nK=nK+0X01;nK=nK+1;MK=5;gK=0;wK=4;if gK~=0 then QK=MK+gK-1;end;do rK,lK=nil;end;do if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));else rK,lK=vi(zK[MK]());end;end;if wK==0X1 then QK=MK-1;else if wK==0X0 then rK=rK+MK-0X1;QK=rK;else rK=MK+wK-2;QK=rK+0x1;end;local DK=0X0;for ZK=MK,rK do DK=DK+1;zK[ZK]=lK[DK];end;end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;MK=0X0005;local LK=(b(function(...)(o)();for DK,ZK in...do(o)(true,DK,ZK);end;end));(LK)(zK[MK],zK[MK+1],zK[MK+0X2]);QK=MK;zK[MK]=LK;nK=EK[0X2];else end;end;else do if dK==0Xd then do zK[0x0]=UK[EK[7]];end;do nK=nK+0X0001;end;nK=nK+1;EK=eK[nK];nK=nK+0X00001;do zK[0]=zK[0x0][EK[0X00006]];end;nK=nK+1;nK=nK+0X1;nK=nK+1;do QK=0;end;zK[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+0X1;do if not zK[0]then nK=EK[2];end;end;else(zK)[6]=UK[EK[0x7]];EK=eK[nK];nK=nK+0X0001;local VK=9;zK[6]=zK[0X6][EK[0X00006]];EK=eK[nK];nK=nK+1;(zK)[0X6]=zK[0x6][EK[0x6]];do EK=eK[nK];end;nK=nK+0X1;(zK)[0X006]=zK[6][EK[6]];nK=nK+0x1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+0X01;do(zK)[0x6]=zK[0X6][EK[6]];end;nK=nK+0X01;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;do zK[6]=zK[0X0006][EK[6]];end;nK=nK+1;do nK=nK+0x01;end;EK=eK[nK];nK=nK+1;(zK)[0X7]=UK[EK[0X7]];do EK=eK[nK];end;do nK=nK+0X001;end;do zK[0X8]=EK[0x7];end;do EK=eK[nK];end;nK=nK+1;local aK=0x00;zK[9]=UK[EK[7]];nK=nK+1;(zK)[0x00A]=zK[0X005];nK=nK+0x1;local MK=(0X2);if MK==0X0 then else QK=VK+MK-1;end;local gK,wK=nil,nil;if MK==0x1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0X0001,QK)));end;do if aK~=0X01 then if aK==0 then do gK=gK+VK-1;end;QK=gK;else gK=VK+aK-0X2;QK=gK+0x0001;end;local rK=0;do for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;end;else QK=VK-1;end;end;do nK=nK+1;end;do nK=nK+1;end;nK=nK+0X1;VK=7;zK[VK](S(zK,VK+0X1,QK));QK=VK-0X0001;do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do(zK)[7]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X0008]=EK[0X007];do nK=nK+0x0001;end;do VK=7;end;zK[VK](zK[VK+1]);QK=VK-0X01;nK=nK+1;nK=nK+0x0001;EK=eK[nK];nK=nK+1;zK[0x007]=UK[EK[0x007]];EK=eK[nK];nK=nK+0X1;(zK)[7]=zK[7][EK[0X6]];do EK=eK[nK];end;nK=nK+1;zK[7]=zK[7][EK[0x006]];do nK=nK+0x1;end;do nK=nK+0x1;end;EK=eK[nK];do nK=nK+0X01;end;zK[7]=zK[7][EK[0X00006]];EK=eK[nK];nK=nK+1;(zK)[7]=zK[0X7][EK[6]];nK=nK+0X0001;do(zK)[0X0008]=zK[6];end;EK=eK[nK];nK=nK+1;do zK[7][EK[0X00007]]=zK[8];end;EK=eK[nK];nK=nK+0X1;do(zK)[0X7]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;(zK)[7]=zK[0X7][EK[0X6]];nK=nK+1;nK=nK+0X001;EK=eK[nK];nK=nK+0X1;if not zK[7]then do nK=EK[2];end;end;end;end;end;end;else do if not(dK<3)then if not(dK<0X5)then if dK==6 then local VK,MK=EK[2],nil;local aK=(VK[9]);local gK=(#aK);do if gK>0X00 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0X0 then MK[wK-0X1]={zK,rK[0X00002]};else(MK)[wK-0X0001]=sK[rK[0X2]];end;end;(K)(mK,MK);end;end;do zK[EK[3]]=Ri(MK,UK,VK);end;else(zK)[0X7]=UK[EK[0X00007]];EK=eK[nK];nK=nK+0X01;zK[8]=EK[7];EK=eK[nK];do nK=nK+0X1;end;do(zK)[9]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;(zK)[0x9]=zK[0X9][EK[0x6]];nK=nK+0X1;local VK=(7);zK[VK](zK[VK+1],zK[VK+0X2]);QK=VK-1;EK=eK[nK];nK=nK+1;do nK=EK[2];end;end;else do if dK==4 then zK[EK[3]]=not zK[EK[0x0002]];else(zK)[0X007]=UK[EK[0X7]];nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do(zK)[7]=zK[0X7][EK[0X6]];end;nK=nK+0X00001;nK=nK+0X01;do EK=eK[nK];end;do nK=nK+1;end;do if not zK[0X007]then nK=EK[2];end;end;end;end;end;else if dK>=0x001 then if dK~=0x2 then zK[0x0]=UK[EK[0x7]];EK=eK[nK];nK=nK+1;do zK[0X0]=zK[0x0][EK[0x6]];end;nK=nK+0X1;nK=nK+0X00001;EK=eK[nK];nK=nK+0x1;if not(not zK[0x0])then else nK=EK[0X2];end;else repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0x2]>=0x0)then else local LK=lK[0X0002];if not aK[LK]then do aK[LK]={MK[LK]};end;end;do(lK)[1]=aK[LK];end;lK[2]=0X1;end;end;end;end;until true;return;end;else zK[6]={};EK=eK[nK];nK=nK+1;(zK[6])[EK[0X00007]]=zK[0x3];EK=eK[nK];nK=nK+1;do zK[5][EK[7]]=zK[0X6];end;EK=eK[nK];do nK=nK+0X1;end;nK=EK[0X2];end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=0X001,{};local pK=Q();local UK=((pK==z and KK or pK));local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);NK=NK-1;for EK=0X0000,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+0X01];end;end;end;local QK=(0);if not PK then HK=nil;elseif not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+0X1 or 0X0,S(HK,WK+1,NK+0X00001)};end;end;if UK~=pK then(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X1];do nK=nK+1;end;if dK<11 then if dK>=5 then if dK<8 then if not(dK>=6)then zK[EK[0X3]]=zK[EK[0x00002]]/zK[EK[0X005]];else if dK==0X7 then nK=EK[0X2];else zK[EK[3]]=true;end;end;else if dK<0x9 then zK[EK[0X00003]]=g(zK[EK[2]],zK[EK[5]]);else do if dK==0X0000a then zK[EK[3]]=EK[0X007];else do if zK[EK[0X2]]==zK[EK[0X5]]then do nK=EK[3];end;end;end;end;end;end;end;else if dK<2 then if dK==1 then(zK)[0]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;(zK)[1]=UK[EK[0X07]];local VK=0;do EK=eK[nK];end;nK=nK+1;(zK)[1]=zK[1][EK[0X6]];nK=nK+0X001;local MK=0x2;do if MK==0 then else QK=VK+MK-1;end;end;local gK,wK,aK=nil,nil,(4);if MK==0X1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));end;if aK~=1 then do if aK~=0x00000 then gK=VK+aK-2;QK=gK+1;else do gK=gK+VK-0X1;end;do QK=gK;end;end;end;local lK=(0);for LK=VK,gK do lK=lK+0X1;do(zK)[LK]=wK[lK];end;end;else QK=VK-1;end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;VK=0;local rK=(b(function(...)(o)();do for lK,LK in...do(o)(true,lK,LK);end;end;end));(rK)(zK[VK],zK[VK+0X01],zK[VK+2]);QK=VK;zK[VK]=rK;nK=EK[0X2];else local VK=EK[3];local gK=zK[VK+2];local MK,aK=zK[VK],(zK[VK+1]);zK[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);nK=EK[2];end;else if not(dK<3)then if dK~=4 then else(zK)[0]=UK[EK[0x7]];nK=nK+1;local VK=(0X0000);do nK=nK+1;end;EK=eK[nK];do nK=nK+0X01;end;zK[0X0001]=UK[EK[7]];EK=eK[nK];do nK=nK+0X01;end;do zK[0x01]=zK[1][EK[0X6]];end;nK=nK+0x1;local MK=0X2;if MK~=0 then QK=VK+MK-0X1;end;local gK,wK,aK=nil,nil,0X004;if MK==0X001 then do gK,wK=vi(zK[VK]());end;else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;do if aK~=0X1 then if aK~=0 then gK=VK+aK-2;QK=gK+1;else gK=gK+VK-0X1;QK=gK;end;local lK=0X0;for LK=VK,gK do lK=lK+0X1;do(zK)[LK]=wK[lK];end;end;else QK=VK-0x1;end;end;EK=eK[nK];nK=nK+0X1;VK=0x000;local rK=b(function(...)(o)();for lK,LK in...do(o)(true,lK,LK);end;end);rK(zK[VK],zK[VK+0X001],zK[VK+2]);QK=VK;(zK)[VK]=rK;nK=EK[2];end;else do zK[3]=UK[EK[0X07]];end;local MK=(nil);nK=nK+0X1;nK=nK+1;nK=nK+0X00001;QK=3;zK[QK]();do QK=QK-1;end;local wK=4;EK=eK[nK];do nK=nK+1;end;(zK)[3]=UK[EK[0X007]];EK=eK[nK];nK=nK+1;(zK)[0x3]=zK[3][EK[6]];EK=eK[nK];nK=nK+1;zK[4]=UK[EK[7]];EK=eK[nK];nK=nK+0x0001;zK[0X4]=zK[0x04][EK[0X6]];EK=eK[nK];nK=nK+0X1;local VK=EK[0X2];local aK=VK[9];local gK=(#aK);if gK>0X0 then MK={};for ZK=0X001,gK do local GK=(aK[ZK]);if GK[1]==0X0 then(MK)[ZK-0X00001]={zK,GK[2]};else MK[ZK-0X00001]=sK[GK[2]];end;end;K(mK,MK);end;do zK[0x5]=Ri(MK,UK,VK);end;nK=nK+0X01;local rK,lK=0X02,(0);if rK~=0 then QK=wK+rK-0X1;end;local LK,DK=nil,(nil);if rK~=1 then LK,DK=vi(zK[wK](S(zK,wK+1,QK)));else LK,DK=vi(zK[wK]());end;do if lK~=1 then do if lK==0 then LK=LK+wK-1;QK=LK;else LK=wK+lK-2;QK=LK+1;end;end;local ZK=(0);for GK=wK,LK do ZK=ZK+0x1;(zK)[GK]=DK[ZK];end;else do QK=wK-0X1;end;end;end;nK=nK+0x1;nK=nK+0X0001;nK=nK+0X1;wK=0X03;(zK[wK])(S(zK,wK+1,QK));QK=wK-1;nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;repeat local ZK,GK=mK,(zK);local OK={};for tK,AK in W,ZK do for jK,FQ in W,AK do if not(FQ[0x01]==GK and FQ[2]>=0X0)then else local iQ=(FQ[0X0002]);if not(not OK[iQ])then else do OK[iQ]={GK[iQ]};end;end;FQ[1]=OK[iQ];(FQ)[2]=0X1;end;end;end;until true;EK=eK[nK];do nK=nK+0X00001;end;do nK=EK[2];end;end;end;end;else if not(dK>=17)then if dK>=14 then if dK>=15 then if dK==16 then do zK[EK[0X3]]=CK[EK[2]];end;else local VK=EK[3];local MK,aK,gK=zK[VK]();if MK then do(zK)[VK+0x1]=aK;end;(zK)[VK+2]=gK;do nK=EK[0X2];end;end;end;else repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=(lK[0X2]);do if not aK[LK]then aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[2]=0X00001;end;end;end;until true;return;end;else do if dK<12 then local VK=(EK[3]);local MK,aK=zK[VK]();do if MK then nK=EK[0X02];zK[VK+0X00003]=aK;end;end;else do if dK==0XD then zK[3]=UK[EK[7]];nK=nK+0X0001;nK=nK+0X1;nK=nK+1;local wK=4;QK=0X3;zK[QK]();do QK=QK-1;end;EK=eK[nK];do nK=nK+1;end;do zK[0X3]=UK[EK[0x7]];end;do EK=eK[nK];end;nK=nK+1;local lK=0;do(zK)[3]=zK[3][EK[0X6]];end;nK=nK+0x01;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0x004]=UK[EK[0X00007]];EK=eK[nK];do nK=nK+0x001;end;do(zK)[0X4]=zK[0X4][EK[0X6]];end;EK=eK[nK];local MK=(nil);nK=nK+0X0001;local VK=EK[0X2];local aK=(VK[9]);local gK=#aK;if not(gK>0)then else MK={};do for ZK=1,gK do local GK=aK[ZK];if GK[0X01]==0X0 then MK[ZK-0X1]={zK,GK[2]};else MK[ZK-0X1]=sK[GK[2]];end;end;end;K(mK,MK);end;zK[5]=Ri(MK,UK,VK);nK=nK+1;local rK=2;do if rK==0X0 then else QK=wK+rK-1;end;end;local LK,DK=nil,(nil);if rK~=1 then do LK,DK=vi(zK[wK](S(zK,wK+1,QK)));end;else do LK,DK=vi(zK[wK]());end;end;if lK~=1 then if lK~=0 then do LK=wK+lK-0x2;end;do QK=LK+1;end;else LK=LK+wK-1;QK=LK;end;local ZK=(0);for GK=wK,LK do ZK=ZK+1;zK[GK]=DK[ZK];end;else do QK=wK-1;end;end;nK=nK+0X0001;nK=nK+1;nK=nK+0X1;do wK=0x0003;end;(zK[wK])(S(zK,wK+0X1,QK));do QK=wK-1;end;do nK=nK+1;end;nK=nK+0X01;nK=nK+0X01;do repeat local ZK,GK=mK,zK;local OK=({});do for tK,AK in W,ZK do for jK,FQ in W,AK do if FQ[1]==GK and FQ[2]>=0 then local iQ=FQ[0X2];do if not(not OK[iQ])then else OK[iQ]={GK[iQ]};end;end;FQ[0X1]=OK[iQ];(FQ)[2]=0X1;end;end;end;end;until true;end;do EK=eK[nK];end;nK=nK+0X001;nK=EK[2];else(zK)[0x00]=UK[EK[0X7]];nK=nK+0x1;local VK=0X0;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;zK[1]=UK[EK[7]];local aK=4;EK=eK[nK];nK=nK+0x1;(zK)[1]=zK[1][EK[6]];nK=nK+1;nK=nK+1;do nK=nK+0X1;end;local MK=0X02;if MK~=0 then do QK=VK+MK-0x1;end;end;local gK,wK=nil,(nil);if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;if aK~=1 then if aK~=0 then gK=VK+aK-0X2;QK=gK+0X1;else gK=gK+VK-0X01;do QK=gK;end;end;local lK=(0);for LK=VK,gK do lK=lK+1;(zK)[LK]=wK[lK];end;else do QK=VK-0X1;end;end;EK=eK[nK];nK=nK+1;VK=0x0;local rK=b(function(...)(o)();do for lK,LK in...do(o)(true,lK,LK);end;end;end);(rK)(zK[VK],zK[VK+0X001],zK[VK+2]);do QK=VK;end;(zK)[VK]=rK;do nK=EK[0X00002];end;end;end;end;end;end;else if dK>=20 then if not(dK>=21)then local VK=EK[0X2];local aK,MK=VK[0x00009],(nil);local gK=(#aK);if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0x1]==0x0 then(MK)[wK-1]={zK,rK[0X2]};else(MK)[wK-0x00001]=sK[rK[0x00002]];end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);else if dK==0x16 then zK[EK[3]]=zK[EK[0X0002]]%zK[EK[5]];else(zK)[0x3]=UK[EK[0X007]];nK=nK+1;nK=nK+1;nK=nK+1;QK=3;(zK[QK])();do QK=QK-1;end;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[3]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[0X3]=zK[3][EK[0x00006]];EK=eK[nK];do nK=nK+0X001;end;(zK)[4]=UK[EK[7]];nK=nK+0x1;nK=nK+0x1;do EK=eK[nK];end;do nK=nK+1;end;zK[4]=zK[0x00004][EK[6]];EK=eK[nK];local wK=0X4;local VK=(EK[0x2]);local lK=(0);nK=nK+0X00001;local aK,MK=VK[9],(nil);local gK=(#aK);do if not(gK>0)then else MK={};for ZK=1,gK do local GK=(aK[ZK]);do if GK[1]~=0X0 then MK[ZK-0x01]=sK[GK[0X2]];else(MK)[ZK-1]={zK,GK[2]};end;end;end;(K)(mK,MK);end;end;do(zK)[0X0005]=Ri(MK,UK,VK);end;do nK=nK+0x0001;end;local rK=(2);if rK~=0 then QK=wK+rK-0x0001;end;local LK,DK=nil,(nil);if rK==0x00001 then LK,DK=vi(zK[wK]());else LK,DK=vi(zK[wK](S(zK,wK+1,QK)));end;if lK~=1 then if lK~=0X0 then LK=wK+lK-2;QK=LK+0x00001;else LK=LK+wK-1;QK=LK;end;local ZK=(0x0);for GK=wK,LK do ZK=ZK+0x1;do(zK)[GK]=DK[ZK];end;end;else do QK=wK-1;end;end;do nK=nK+1;end;nK=nK+0x1;nK=nK+1;do wK=3;end;(zK[wK])(S(zK,wK+1,QK));QK=wK-1;nK=nK+1;do nK=nK+1;end;nK=nK+1;do repeat local ZK,GK=mK,(zK);local OK=({});do for tK,AK in W,ZK do do for jK,FQ in W,AK do do if FQ[0X001]==GK and FQ[2]>=0 then local iQ=FQ[0x2];do if not(not OK[iQ])then else(OK)[iQ]={GK[iQ]};end;end;(FQ)[0X1]=OK[iQ];FQ[0X002]=1;end;end;end;end;end;end;until true;end;EK=eK[nK];nK=nK+0X01;nK=EK[0x00002];end;end;else if dK>=18 then if dK~=0X13 then do zK[EK[0X3]]={S({},1,EK[0X0002])};end;else do zK[EK[0X3]]=UK[EK[0X7]];end;end;else for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;end;end;end;end;end;end;end;end;else if SK>=0x84 then if not(SK<133)then do if SK==0X00086 then do _K=function(...)local nK,zK=1,{};local pK=Q();local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);NK=NK-0X1;local UK=((pK==z and KK or pK));for EK=0,NK do if WK>EK then do zK[EK]=HK[EK+0X00001];end;else break;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0000,S(HK,WK+1,NK+1)};end;local QK=(0);do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);do nK=nK+1;end;if dK>=0X000b then do if not(dK>=16)then if dK>=0X0000D then if not(dK>=0Xe)then local VK,MK=EK[3],EK[2];do QK=VK+MK-0X1;end;repeat local aK,gK=mK,(zK);local wK={};for rK,lK in W,aK do for LK,DK in W,lK do do if not(DK[1]==gK and DK[2]>=0X0)then else local ZK=DK[2];do if not wK[ZK]then wK[ZK]={gK[ZK]};end;end;do DK[1]=wK[ZK];end;(DK)[2]=0X00001;end;end;end;end;until true;return zK[VK](S(zK,VK+0x1,QK));else if dK~=15 then nK=EK[0x2];else zK[EK[0X3]]=zK[EK[0X2]]<=zK[EK[5]];end;end;else if dK~=12 then zK[EK[0X0003]]=UK[EK[0X0007]];else zK[0x3]=UK[EK[0X07]];EK=eK[nK];local MK=(nil);nK=nK+1;(zK)[0X3]=zK[0x3][EK[0X6]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X1;local VK=EK[0X00002];local aK,wK=VK[9],0X3;local gK=(#aK);if gK>0 then MK={};for rK=1,gK do local lK=(aK[rK]);if lK[0x1]~=0X000 then MK[rK-1]=sK[lK[2]];else MK[rK-0X1]={zK,lK[2]};end;end;K(mK,MK);end;(zK)[0X04]=Ri(MK,UK,VK);nK=nK+1;(zK[wK])(zK[wK+1]);QK=wK-0x1;EK=eK[nK];nK=nK+0X01;do nK=EK[2];end;end;end;else if dK<0X0013 then do if dK>=0X11 then do if dK==0X012 then local MK=(nil);local VK=EK[0X2];local aK=(VK[9]);local gK=(#aK);do if not(gK>0X00000)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[1]==0 then do MK[wK-1]={zK,rK[0x2]};end;else do(MK)[wK-1]=sK[rK[0X00002]];end;end;end;K(mK,MK);end;end;(zK)[EK[0X03]]=Ri(MK,UK,VK);else zK[0]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0X01;local VK=(sK[0X1]);zK[1]=VK[1][VK[2]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[0x0001]=zK[0X1][EK[0X06]];nK=nK+0X1;do nK=nK+0X1;end;local MK=0X1;EK=eK[nK];nK=nK+0X1;local aK=zK[1];(zK)[MK+0X1]=aK;zK[MK]=aK[EK[0X00006]];do nK=nK+1;end;MK=0X1;local gK=0X00002;local wK=(0);if gK~=0 then QK=MK+gK-0x1;end;local rK,lK=nil,(nil);if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else rK,lK=vi(zK[MK]());end;do if wK~=0x001 then do if wK==0X0 then rK=rK+MK-1;do QK=rK;end;else do rK=MK+wK-2;end;QK=rK+1;end;end;local DK=0;for ZK=MK,rK do do DK=DK+1;end;do(zK)[ZK]=lK[DK];end;end;else QK=MK-0X01;end;end;do nK=nK+1;end;nK=nK+0X1;nK=nK+0x00001;do MK=0;end;do gK=0;end;wK=4;do if gK==0X0 then else QK=MK+gK-1;end;end;do rK,lK=nil;end;if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else rK,lK=vi(zK[MK]());end;if wK~=0x1 then if wK==0X00 then rK=rK+MK-1;QK=rK;else rK=MK+wK-2;QK=rK+1;end;local DK=(0X00);for ZK=MK,rK do DK=DK+0X1;zK[ZK]=lK[DK];end;else QK=MK-0X1;end;EK=eK[nK];nK=nK+1;MK=0X0;local LK=(b(function(...)o();do for DK,ZK in...do(o)(true,DK,ZK);end;end;end));(LK)(zK[MK],zK[MK+0X1],zK[MK+2]);QK=MK;zK[MK]=LK;do nK=EK[2];end;end;end;else zK[0x000]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;zK[0]=zK[0X0][EK[6]];nK=nK+1;nK=nK+1;nK=nK+0X1;do QK=0;end;do(zK)[QK]=zK[QK]();end;nK=nK+1;do nK=nK+0X0001;end;EK=eK[nK];nK=nK+1;do if not zK[0]then nK=EK[0x2];end;end;end;end;else if not(dK>=20)then do repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[0X00002];if not(not aK[LK])then else do(aK)[LK]={MK[LK]};end;end;lK[0X0001]=aK[LK];(lK)[2]=0X1;end;end;end;until true;end;return;else do if dK~=0x0015 then do zK[EK[0X00003]]=zK[EK[0X002]]+zK[EK[5]];end;else do repeat local VK,MK,aK,gK=mK,zK,EK[0X00003],({});for wK,rK in W,VK do do for lK,LK in W,rK do do if LK[1]==MK and LK[0X2]>=aK then local DK=(LK[0X2]);if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;(LK)[1]=gK[DK];(LK)[0X002]=1;end;end;end;end;end;until true;end;end;end;end;end;end;end;else if dK>=5 then if dK>=8 then if dK>=0x9 then if dK~=10 then local VK=(sK[0]);(zK)[0X0]=VK[0X1][VK[0X2]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;if not(not zK[0X0])then else nK=EK[0X002];end;else local VK=EK[3];local MK,aK,gK=zK[VK]();if not(MK)then else zK[VK+1]=aK;zK[VK+2]=gK;nK=EK[2];end;end;else do zK[EK[0X3]]=zK[EK[0X2]]==zK[EK[5]];end;end;else if dK>=6 then do if dK~=7 then(zK)[0x0]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X1;zK[0X0]=zK[0][EK[6]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+0X1;if not(not zK[0x000])then else nK=EK[0X2];end;else end;end;else(zK)[EK[3]]={S({},1,EK[2])};end;end;else if dK<2 then do if dK==0X1 then(zK)[EK[0x3]]=r(zK[EK[2]],zK[EK[0X5]]);else do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;else if not(dK<3)then if dK==4 then local VK=(sK[0X00002]);(zK)[3]=VK[0X01][VK[0x2]];nK=nK+0x1;(zK)[3]=zK[0X3][zK[0X02]];EK=eK[nK];nK=nK+0X001;if zK[0X3]==EK[0X6]then else nK=EK[0X00003];end;else(zK)[EK[0X3]]=EK[0X007];end;else zK[EK[0X00003]]=zK[EK[0x2]]%zK[EK[5]];end;end;end;end;end;end;end;else _K=function(...)local QK,zK=0X0,({});local pK=Q();local nK=(0x01);local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-0X1;for EK=0X0,NK do if not(WK>EK)then break;else do zK[EK]=HK[EK+0X001];end;end;end;if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x01 or 0X0,S(HK,WK+0X01,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[0X1];do nK=nK+0x1;end;if not(dK<6)then do if dK>=0x009 then if not(dK<10)then if dK==0Xb then zK[EK[3]]={S({},1,EK[2])};else zK[EK[3]]=UK[EK[0x7]];end;else if zK[EK[2]]==zK[EK[0X5]]then do nK=EK[3];end;end;end;else do if not(dK<7)then if dK==8 then local VK=EK[0X3];local MK,aK=zK[VK]();if not(MK)then else nK=EK[2];(zK)[VK+0X3]=aK;end;else do nK=EK[0X2];end;end;else local VK=(EK[0x2]);local aK=VK[9];local gK=(#aK);local MK=nil;if gK>0X00 then MK={};for wK=0X1,gK do local rK=aK[wK];do if rK[0X1]~=0 then(MK)[wK-0X1]=sK[rK[2]];else MK[wK-1]={zK,rK[0X2]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;else if not(dK<3)then if dK>=0x4 then if dK~=0X5 then else(zK)[EK[0X3]]=EK[0X7];end;else zK[EK[3]]=zK[EK[0X2]]/zK[EK[5]];end;else if dK<0X1 then for VK=EK[3],EK[0x2]do do zK[VK]=nil;end;end;else do if dK==2 then zK[0X1]=UK[EK[0x007]];local MK=nil;nK=nK+1;zK[0x00002]=zK[0];EK=eK[nK];nK=nK+1;(zK[0x01])[EK[0X7]]=zK[0X2];EK=eK[nK];nK=nK+0x1;(zK)[1]=UK[EK[0X07]];nK=nK+1;nK=nK+0x001;nK=nK+0X001;QK=0X1;zK[QK]();QK=QK-0x1;EK=eK[nK];nK=nK+0x00001;do(zK)[1]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0x001;local wK=0x1;do(zK)[0X1]=zK[0X1][EK[0X6]];end;nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X0001;local VK=(EK[2]);local aK=(VK[9]);local gK=#aK;do if not(gK>0)then else MK={};do for rK=1,gK do local lK=aK[rK];if lK[1]~=0X0 then(MK)[rK-0X1]=sK[lK[2]];else(MK)[rK-1]={zK,lK[2]};end;end;end;K(mK,MK);end;end;zK[0X2]=Ri(MK,UK,VK);nK=nK+0X0001;zK[wK](zK[wK+0X01]);QK=wK-0X1;nK=nK+0X1;nK=nK+0X1;do nK=nK+1;end;repeat local rK,lK=mK,(zK);local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[0X2]>=0X0 then local tK=OK[2];do if not LK[tK]then do LK[tK]={lK[tK]};end;end;end;OK[0x1]=LK[tK];do OK[2]=1;end;end;end;end;until true;return;else(zK[EK[0x3]])[zK[EK[2]]]=zK[EK[5]];end;end;end;end;end;end;end;end;end;else _K=function(...)local zK={};local nK=(1);local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-0X1;end;local UK,QK=(pK==z and KK or pK),(0X0);for EK=0,NK do if not(WK>EK)then do break;end;else zK[EK]=HK[EK+1];end;end;do if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+0X1)};end;end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[0X1];nK=nK+1;if not(dK<0X8)then if not(dK<12)then if dK>=0X000e then if dK~=15 then do CK[EK[0X00002]]=zK[EK[0X0003]];end;else do zK[EK[3]]=EK[0X7];end;end;else if dK==0Xd then do zK[EK[3]]={S({},1,EK[2])};end;else do(zK)[1]=UK[EK[0x0007]];end;nK=nK+0X1;(zK)[0X0002]=zK[0X0];do EK=eK[nK];end;nK=nK+1;zK[0X1][EK[7]]=zK[0x02];EK=eK[nK];nK=nK+0x1;do(zK)[1]=UK[EK[0X7]];end;do nK=nK+0X1;end;do QK=1;end;(zK[QK])();QK=QK-1;nK=nK+1;repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[2]>=0 then local LK=(lK[2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[1]=aK[LK];do lK[0x02]=1;end;end;end;end;end;end;until true;return;end;end;else do if not(dK>=10)then if dK==9 then if zK[EK[0X2]]<=zK[EK[5]]then nK=EK[0x0003];end;else(zK)[EK[0X3]]=zK[EK[0X002]]%zK[EK[0X5]];end;else if dK==0xB then local VK=EK[0X03];for MK=VK,VK+(EK[2]-0X1)do zK[MK]=HK[WK+(MK-VK)+1];end;else local VK=(EK[3]);local MK,aK=zK[VK]();if MK then nK=EK[0X2];do(zK)[VK+3]=aK;end;end;end;end;end;end;else do if not(dK>=0X4)then if dK<0x002 then if dK~=0X1 then do if zK[EK[0X2]]~=zK[EK[5]]then else do nK=EK[0X3];end;end;end;else(zK)[EK[0X0003]]=UK[EK[7]];end;else do if dK~=0x3 then else local VK=(EK[0X00002]);local aK=VK[0X9];local MK=(nil);local gK=#aK;if gK>0 then MK={};do for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0X0000 then do MK[wK-0x1]=sK[rK[2]];end;else MK[wK-0X1]={zK,rK[0x002]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;else if dK>=6 then if dK==7 then local VK,MK=EK[0x3],(EK[2]);local aK=(EK[5]);if MK~=0X000 then do QK=VK+MK-1;end;end;local gK,wK=nil,nil;if MK==1 then gK,wK=vi(zK[VK]());else do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK==0X1 then do QK=VK-1;end;else if aK~=0x0000 then do gK=VK+aK-0X2;end;QK=gK+0x0001;else gK=gK+VK-1;do QK=gK;end;end;local rK=0X0000;for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;end;else zK[EK[3]]=zK[EK[2]]+zK[EK[0X5]];end;else do if dK~=0X5 then nK=EK[0X2];else local VK=(EK[0X2]);local aK,MK=VK[9],(nil);local gK=#aK;do if not(gK>0X0)then else do MK={};end;do for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0 then do(MK)[wK-1]={zK,rK[0X2]};end;else MK[wK-1]=sK[rK[0x2]];end;end;end;(K)(mK,MK);end;end;(zK)[EK[0X00003]]=i[EK[0X5]](MK);end;end;end;end;end;end;end;end;end;else if not(SK>=130)then _K=function(...)local nK,zK=0X00001,{};local pK=(Q());local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});NK=NK-0X1;local UK=((pK==z and KK or pK));for EK=0x00000,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;local QK=(0);do if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+1,NK+1)};end;end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[0X001];do nK=nK+0X1;end;if not(dK>=6)then if dK<3 then do if not(dK<0X1)then do if dK==0X2 then else local VK=(EK[3]);local MK,aK=zK[VK]();if MK then do nK=EK[0X2];end;zK[VK+0X3]=aK;end;end;end;else do(zK)[EK[0x00003]]=zK[EK[0x2]]*zK[EK[0x5]];end;end;end;else if not(dK>=0x0004)then zK[1]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+0x1;end;nK=nK+0X1;(zK)[2]=zK[0];EK=eK[nK];nK=nK+1;do zK[0X1][EK[7]]=zK[2];end;EK=eK[nK];nK=nK+0X1;zK[1]=UK[EK[0x7]];nK=nK+0x1;nK=nK+0x01;nK=nK+1;QK=0X1;zK[QK]();do QK=QK-1;end;EK=eK[nK];nK=nK+1;zK[0X1]=UK[EK[7]];local wK=(1);do nK=nK+0x1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;do zK[1]=zK[0x1][EK[0X006]];end;do nK=nK+0x0001;end;do nK=nK+1;end;do EK=eK[nK];end;local VK=(EK[0X2]);nK=nK+1;local aK=(VK[9]);local MK=nil;local gK=#aK;if not(gK>0X00)then else MK={};do for rK=1,gK do local lK=(aK[rK]);if lK[0x1]==0X000 then(MK)[rK-1]={zK,lK[0X0002]};else(MK)[rK-0X01]=sK[lK[0x02]];end;end;end;K(mK,MK);end;(zK)[2]=Ri(MK,UK,VK);nK=nK+0X1;zK[wK](zK[wK+1]);QK=wK-0X00001;do nK=nK+0X1;end;nK=nK+1;nK=nK+1;do repeat local rK,lK,LK=mK,zK,{};for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[1]==lK and OK[2]>=0)then else local tK=(OK[0X2]);if not(not LK[tK])then else LK[tK]={lK[tK]};end;OK[1]=LK[tK];(OK)[0X2]=0X001;end;end;end;until true;end;return;else if dK~=5 then do zK[EK[0x3]]={S({},1,EK[0X002])};end;else local VK=(EK[0x002]);local aK,MK=VK[9],nil;local gK=(#aK);if not(gK>0x0)then else do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[1]==0X0 then do(MK)[wK-1]={zK,rK[0X2]};end;else(MK)[wK-1]=sK[rK[2]];end;end;K(mK,MK);end;do(zK)[EK[0x0003]]=Ri(MK,UK,VK);end;end;end;end;else do if dK<9 then do if dK>=0X07 then do if dK~=8 then local VK=(zK[EK[0X2]]/zK[EK[0X5]]);(zK)[EK[3]]=VK-VK%0X0001;else zK[EK[3]]=zK[EK[0X0002]]/zK[EK[0X5]];end;end;else for VK=EK[3],EK[0X2]do zK[VK]=nil;end;end;end;else if dK>=11 then do if dK==12 then(zK)[EK[0x3]]=EK[7];else nK=EK[0X2];end;end;else if dK~=0x000a then zK[EK[3]]=UK[EK[7]];else zK[EK[3]]=not zK[EK[0x2]];end;end;end;end;end;end;end;else if SK~=0X83 then _K=function(...)local QK,zK,nK=0,{},0X1;local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);NK=NK-0X1;do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;if UK~=pK then(_)(_K,UK);end;do while true do local EK=eK[nK];local dK=EK[1];nK=nK+0X00001;do if not(dK<7)then if dK<0xa then if not(dK<0x8)then do if dK~=0X9 then UK[EK[0X7]]=zK[EK[0X03]];else do for VK=EK[3],EK[0X0002]do(zK)[VK]=nil;end;end;end;end;else do(zK)[EK[3]]=zK[EK[0X2]]+zK[EK[0X5]];end;end;else if dK>=0X00C then if dK==0Xd then(zK)[EK[0X3]]={S({},0X1,EK[0X2])};else(zK)[EK[0X0003]]=zK[EK[0X002]]-zK[EK[5]];end;else do if dK==0X00b then zK[EK[0x00003]]=#zK[EK[0X2]];else zK[0x1]=UK[EK[0X7]];do nK=nK+1;end;do nK=nK+0X1;end;nK=nK+1;local MK=nil;zK[0X0002]=zK[0X0];EK=eK[nK];nK=nK+1;(zK[1])[EK[0x7]]=zK[2];EK=eK[nK];nK=nK+0X1;zK[1]=UK[EK[0X7]];nK=nK+1;local wK=(1);do QK=0X1;end;zK[QK]();do QK=QK-0X1;end;do nK=nK+0x001;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[1]=UK[EK[0x7]];EK=eK[nK];nK=nK+1;zK[0X001]=zK[1][EK[6]];EK=eK[nK];nK=nK+0X1;local VK=EK[0x0002];local aK=VK[0X9];local gK=(#aK);if gK>0X00000 then MK={};for rK=1,gK do local lK=aK[rK];if lK[1]~=0x0 then do(MK)[rK-0X00001]=sK[lK[2]];end;else MK[rK-0x0001]={zK,lK[2]};end;end;(K)(mK,MK);end;(zK)[0X0002]=Ri(MK,UK,VK);nK=nK+0X01;zK[wK](zK[wK+1]);do QK=wK-0X1;end;nK=nK+0x1;repeat local rK,lK=mK,(zK);local LK={};for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[2]>=0 then local tK=(OK[2]);do if not(not LK[tK])then else(LK)[tK]={lK[tK]};end;end;do OK[1]=LK[tK];end;OK[0X00002]=0X001;end;end;end;until true;return;end;end;end;end;else if not(dK<0x3)then if dK>=0X5 then do if dK==6 then else do if zK[EK[0X2]]<=zK[EK[5]]then do nK=EK[3];end;end;end;end;end;else if dK~=4 then local VK=EK[0X2];local MK=(nil);local aK=(VK[0x9]);local gK=#aK;if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0x0 then(MK)[wK-1]={zK,rK[2]};else MK[wK-0X01]=sK[rK[2]];end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else zK[EK[0X003]]=EK[7];end;end;else do if not(dK<0X1)then if dK~=0x002 then nK=EK[0X2];else local VK=EK[0X3];local aK,MK=zK[VK],(EK[0X05]-1)*50;for gK=0X1,EK[0X2]do do aK[MK+gK]=zK[VK+gK];end;end;end;else do(zK)[EK[3]]=UK[EK[7]];end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X0001,{};local CK=({[2]=zK,[1]=xK});local pK=(Q());local NK,HK=vi(...);NK=NK-0X1;local UK=((pK==z and KK or pK));for EK=0X000,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;local QK=(0);if not PK then HK=nil;elseif not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+0X001 or 0,S(HK,WK+0X1,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK>=7)then if not(dK>=0X00003)then if not(dK<1)then if dK~=0X0002 then(zK)[1]=UK[EK[0X7]];nK=nK+0x1;nK=nK+1;nK=nK+1;(zK)[0x2]=zK[0];EK=eK[nK];do nK=nK+1;end;do zK[1][EK[0X7]]=zK[2];end;do EK=eK[nK];end;nK=nK+0X0001;(zK)[0X1]=UK[EK[0x07]];nK=nK+0X001;QK=0X00001;(zK[QK])();do QK=QK-0X1;end;nK=nK+0X1;do repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0x0001]==MK and lK[2]>=0 then local LK=lK[2];if not aK[LK]then aK[LK]={MK[LK]};end;do lK[0x1]=aK[LK];end;do(lK)[2]=0x1;end;end;end;end;end;until true;end;return;else zK[EK[3]]=g(zK[EK[2]],zK[EK[0X0005]]);end;else nK=EK[2];end;else do if not(dK<0X005)then if dK==6 then local VK=(EK[2]);local aK=VK[0X09];local MK=nil;local gK=#aK;if not(gK>0)then else do MK={};end;for wK=0x00001,gK do local rK=(aK[wK]);if rK[1]~=0X00000 then do MK[wK-0X1]=sK[rK[0X02]];end;else MK[wK-1]={zK,rK[0x2]};end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);else local VK=(EK[3]);do for MK=VK,VK+(EK[0X00002]-1)do(zK)[MK]=HK[WK+(MK-VK)+1];end;end;end;else if dK==0X4 then(zK)[EK[3]]=zK[EK[0X0002]]*zK[EK[5]];else(zK)[EK[0X3]]={S({},0X00001,EK[2])};end;end;end;end;else if not(dK<0X0a)then if dK<0xc then if dK==11 then CK[EK[0X00002]]=zK[EK[0X3]];else end;else if dK==0X0000D then do zK[EK[3]]=zK[EK[0X2]]%zK[EK[5]];end;else zK[EK[0X003]]=zK[EK[0X2]][zK[EK[5]]];end;end;else if dK<8 then zK[EK[3]]=L(zK[EK[0x2]],zK[EK[5]]);else if dK~=9 then zK[EK[3]]=UK[EK[7]];else zK[EK[0X3]]=EK[0x07];end;end;end;end;end;end;end;end;end;end;end;end;end;else do if SK>=0X2f then do if SK<70 then if not(SK>=58)then if not(SK>=52)then if not(SK>=0X0031)then do if SK==0x0030 then _K=function(...)local QK=0;local nK,zK=0X00001,({});local pK=(Q());local CK={[2]=zK,[1]=xK};local UK=((pK==z and KK or pK));local NK,HK=vi(...);do NK=NK-1;end;do for EK=0X0,NK do do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;end;end;if not PK then HK=nil;else if not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0X00,S(HK,WK+0X1,NK+1)};end;end;end;do if UK~=pK then _(_K,UK);end;end;repeat local EK=eK[nK];local dK=(EK[0X0001]);do nK=nK+0X1;end;if dK<7 then if not(dK<3)then do if dK>=5 then if dK==6 then nK=EK[0X2];else(zK)[1]=UK[EK[7]];nK=nK+1;(zK)[0X0002]=zK[0];do EK=eK[nK];end;do nK=nK+0X01;end;do(zK[1])[EK[0x7]]=zK[0X02];end;EK=eK[nK];local MK=nil;nK=nK+0X1;local wK=0X1;(zK)[0X1]=UK[EK[0X07]];nK=nK+1;do nK=nK+0X1;end;nK=nK+1;do QK=0X01;end;zK[QK]();QK=QK-1;EK=eK[nK];nK=nK+0x1;zK[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X1]=zK[1][EK[6]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;local VK=EK[2];local aK=(VK[9]);local gK=#aK;if gK>0 then MK={};for rK=0x001,gK do local lK=(aK[rK]);if lK[1]~=0 then do MK[rK-0X1]=sK[lK[2]];end;else MK[rK-1]={zK,lK[0X2]};end;end;K(mK,MK);end;do zK[2]=Ri(MK,UK,VK);end;nK=nK+0X1;zK[wK](zK[wK+0x01]);QK=wK-0X1;nK=nK+1;repeat local rK,lK,LK=mK,zK,({});for DK,ZK in W,rK do do for GK,OK in W,ZK do do if OK[0X1]==lK and OK[0x00002]>=0x0 then local tK=OK[0x0002];if not LK[tK]then(LK)[tK]={lK[tK]};end;do(OK)[0X1]=LK[tK];end;OK[2]=1;end;end;end;end;end;until true;return;end;else do if dK==0x4 then if not(zK[EK[0X003]])then else nK=EK[0x0002];end;else(zK)[EK[3]]=true;end;end;end;end;else if dK<1 then else if dK==2 then(zK)[EK[3]]={S({},1,EK[0X2])};else do(zK)[EK[3]]=UK[EK[0x00007]];end;end;end;end;else if not(dK<10)then if not(dK<0Xc)then if dK==0Xd then local VK=EK[0x3];for MK=VK,VK+(EK[0X2]-1)do zK[MK]=HK[WK+(MK-VK)+1];end;else CK[EK[2]]=zK[EK[3]];end;else if dK~=0X000b then local VK=EK[0X2];local MK=nil;local aK=VK[0X9];local gK=(#aK);do if not(gK>0X0)then else do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[1]==0X0 then(MK)[wK-1]={zK,rK[0X2]};else MK[wK-0X1]=sK[rK[0x2]];end;end;(K)(mK,MK);end;end;(zK)[EK[0x3]]=Ri(MK,UK,VK);else local VK=(EK[0X2]);local MK=(zK[VK]);for aK=VK+0x1,EK[0X05]do do MK=MK..zK[aK];end;end;(zK)[EK[0X03]]=MK;end;end;else if not(dK>=0X08)then do(zK)[EK[0X3]]=EK[7];end;elseif dK==0X9 then(zK)[EK[0X3]]=zK[EK[2]]>=zK[EK[5]];else zK[EK[0X03]]=zK[EK[2]]~=zK[EK[0X05]];end;end;end;until false;end;else _K=function(...)local nK,zK=1,({});local pK=(Q());local NK,HK=vi(...);local CK,UK={[2]=zK,[1]=xK},((pK==z and KK or pK));NK=NK-1;for EK=0X000,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;do if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0x0,S(HK,WK+1,NK+1)};end;end;end;local QK=0x0;if UK==pK then else _(_K,UK);end;do while's\035\|\120}6'do local EK=(eK[nK]);local dK=EK[1];do nK=nK+1;end;if dK<0X15 then do if not(dK<0X000A)then if not(dK<15)then if not(dK<0x12)then if dK>=0X00013 then if dK==20 then local VK=EK[0X0002];local aK=(VK[0X9]);local gK=(#aK);local MK=nil;do if not(gK>0x0)then else MK={};for wK=0X01,gK do local rK=aK[wK];if rK[1]~=0X0 then do MK[wK-1]=sK[rK[0X002]];end;else do(MK)[wK-0X1]={zK,rK[0X002]};end;end;end;K(mK,MK);end;end;zK[EK[0X3]]=i[EK[0X00005]](MK);else(zK)[0X0008]=UK[EK[7]];nK=nK+0X1;(zK)[8]=zK[8][zK[0x3]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;local VK=8;zK[0X0008]=zK[8][EK[6]];do EK=eK[nK];end;nK=nK+1;local MK=zK[0X0008];zK[VK+1]=MK;do zK[VK]=MK[EK[6]];end;EK=eK[nK];nK=nK+1;zK[0Xa]=EK[0X7];do nK=nK+0X1;end;VK=0X008;(zK)[VK]=zK[VK](zK[VK+0X0001],zK[VK+2]);QK=VK;nK=nK+0X1;do nK=nK+0x00001;end;do EK=eK[nK];end;nK=nK+0X1;zK[8]=zK[8][EK[0X6]];EK=eK[nK];nK=nK+1;if zK[8]~=zK[5]then else nK=EK[3];end;end;else zK[5]=UK[EK[0X7]];do nK=nK+0X00001;end;QK=5;zK[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+1;do zK[0X6]=UK[EK[0X07]];end;nK=nK+1;nK=nK+0X1;nK=nK+0x1;zK[0X6]=zK[0X6][zK[4]];EK=eK[nK];nK=nK+0x1;zK[0X6]=zK[0X00006][EK[0x6]];EK=eK[nK];nK=nK+1;(zK)[6]=zK[6][EK[6]];EK=eK[nK];nK=nK+1;zK[6]=zK[6][EK[6]];nK=nK+0X1;nK=nK+1;nK=nK+0X1;zK[5]=zK[0X005]-zK[0X6];do EK=eK[nK];end;nK=nK+1;if not(EK[7]<=zK[0X5])then nK=EK[0X3];end;end;else do if not(dK<16)then if dK==0X011 then do(zK)[0X6]=UK[EK[7]];end;nK=nK+0X0001;zK[6]=zK[0X0006][zK[3]];nK=nK+0X1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+1;do if not zK[0X6]then nK=EK[0x2];end;end;else local VK=sK[EK[2]];do(zK)[EK[3]]=VK[0X0001][VK[2]];end;end;else zK[0X5]=UK[EK[7]];do nK=nK+1;end;do zK[5]=zK[5][zK[0X003]];end;do EK=eK[nK];end;nK=nK+0X1;if not(not zK[0X5])then else nK=EK[2];end;end;end;end;else do if dK>=0Xc then if not(dK>=13)then(zK)[7]=UK[EK[0x7]];do nK=nK+1;end;zK[0X007]=zK[0X007][zK[3]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+0X0001;zK[0X007]=zK[7][EK[6]];EK=eK[nK];nK=nK+1;zK[0X007]=zK[7][EK[0x06]];nK=nK+0X1;nK=nK+0X01;do EK=eK[nK];end;nK=nK+0X00001;do zK[0X7]=zK[7][EK[0x6]];end;nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if zK[0X7]~=EK[0X6]then nK=EK[0x3];end;elseif dK~=14 then(zK)[0X0005]=UK[EK[7]];nK=nK+0X001;zK[5]=zK[5][zK[4]];nK=nK+0X00001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if not zK[0X5]then do nK=EK[0x2];end;end;else(zK)[8]=UK[EK[7]];nK=nK+1;do nK=nK+0X0001;end;nK=nK+0X1;do(zK)[8]=zK[0X08][zK[0X3]];end;EK=eK[nK];nK=nK+0X0001;(zK)[0X0008]=zK[0X8][EK[6]];nK=nK+0X00001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[8]=zK[8][EK[6]];EK=eK[nK];do nK=nK+1;end;do(zK)[8]=zK[0x00008][EK[0x6]];end;EK=eK[nK];do nK=nK+0X1;end;if not(not(EK[7]<=zK[0X8]))then else nK=EK[0X3];end;end;else if dK==11 then zK[0]=UK[EK[7]];nK=nK+1;do zK[0]=#zK[0X0];end;EK=eK[nK];nK=nK+1;do if not(EK[7]<=zK[0X0])then nK=EK[0X03];end;end;else do if not(not zK[EK[0X0003]])then else do nK=EK[0x00002];end;end;end;end;end;end;end;else if not(dK>=0x00005)then if not(dK>=2)then if dK~=0x0001 then(zK)[4]=zK[3]%EK[0x0006];do EK=eK[nK];end;nK=nK+0X001;do zK[4]=zK[0X4]+EK[0X6];end;EK=eK[nK];nK=nK+1;do(zK)[5]=UK[EK[0X07]];end;nK=nK+1;nK=nK+0X1;nK=nK+1;(zK)[5]=#zK[0x0005];EK=eK[nK];nK=nK+1;if zK[5]<EK[6]then nK=EK[0X03];end;else do zK[5]=UK[EK[7]];end;nK=nK+1;nK=nK+1;nK=nK+0X1;(zK)[5]=zK[5][zK[0X3]];EK=eK[nK];do nK=nK+1;end;do if not zK[5]then nK=EK[2];end;end;end;else if not(dK<0X003)then if dK~=0X004 then(zK)[0X00]=UK[EK[7]];EK=eK[nK];do nK=nK+0X1;end;zK[0]=zK[0][EK[0x6]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+0X00001;if not zK[0]then do nK=EK[0X2];end;end;else(zK)[8]=UK[EK[7]];nK=nK+0x001;nK=nK+1;nK=nK+0X1;zK[8]=zK[8][zK[0x0003]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;zK[0x8]=zK[8][EK[6]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;(zK)[0x8]=zK[8][EK[6]];EK=eK[nK];do nK=nK+1;end;zK[0X8]=zK[0X0008][EK[0X00006]];do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];nK=nK+1;if not(not zK[8])then else do nK=EK[0X00002];end;end;end;else repeat local VK,MK,aK=mK,zK,(EK[0X003]);local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do if LK[1]==MK and LK[0X2]>=aK then local DK=LK[2];if not(not gK[DK])then else gK[DK]={MK[DK]};end;(LK)[0X0001]=gK[DK];do LK[0X2]=1;end;end;end;end;until true;end;end;else do if not(dK<0X7)then if dK<8 then zK[0x000]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X00001;zK[0]=zK[0X0][EK[6]];nK=nK+1;do nK=nK+0x01;end;EK=eK[nK];nK=nK+0X0001;do(zK)[0X1]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;zK[2]=EK[0X7];local VK=(0X0);nK=nK+0x1;(zK[VK])(zK[VK+1],zK[VK+0X00002]);QK=VK-1;do EK=eK[nK];end;nK=nK+0X00001;nK=EK[2];else do if dK==0X9 then zK[0X8]=UK[EK[0X0007]];nK=nK+0X001;local VK=(0X08);nK=nK+1;nK=nK+0X01;zK[8]=zK[0x8][zK[0X03]];nK=nK+1;do nK=nK+0x1;end;EK=eK[nK];nK=nK+1;local MK=zK[0x8];zK[VK+1]=MK;(zK)[VK]=MK[EK[0X06]];EK=eK[nK];nK=nK+0X0001;(zK)[10]=EK[0X7];nK=nK+0X1;do VK=8;end;do(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0x002]);end;QK=VK;EK=eK[nK];nK=nK+0X1;if not zK[8]then do nK=EK[0X00002];end;end;else local VK=(EK[0X00002]);local aK=VK[0X9];local MK=(nil);local gK=#aK;do if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];do if rK[1]~=0x00 then do MK[wK-1]=sK[rK[2]];end;else(MK)[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;end;do zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;elseif dK==6 then do zK[0]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X00001;(zK)[0X0]=zK[0][EK[6]];EK=eK[nK];nK=nK+0X00001;if not(not zK[0x0])then else nK=EK[2];end;else zK[0X000]=UK[EK[0X0007]];EK=eK[nK];nK=nK+1;zK[0]=zK[0X0][EK[0x0006]];nK=nK+0X0001;QK=0;zK[QK]=zK[QK]();nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;do if not zK[0]then nK=EK[0x002];end;end;end;end;end;end;end;else do if not(dK>=31)then if dK>=0X1A then if dK<28 then if dK==0X1B then zK[6]=UK[EK[7]];nK=nK+0x00001;nK=nK+0x1;do nK=nK+1;end;zK[0X6]=zK[0x6][zK[0X4]];EK=eK[nK];nK=nK+0X001;if not(zK[0X006])then else nK=EK[0x2];end;else(zK)[0]=EK[7];EK=eK[nK];nK=nK+1;zK[1]=EK[7];EK=eK[nK];nK=nK+1;zK[2]=EK[0X2];do EK=eK[nK];end;local VK=(0);nK=nK+0X1;local gK=zK[VK+2];local MK,aK=zK[VK],(zK[VK+1]);(zK)[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);do nK=EK[0x2];end;end;else do if dK<0X1d then else if dK==0X1E then(zK)[EK[3]]=EK[0X7];else nK=EK[0X0002];end;end;end;end;else if dK<23 then do if dK==22 then local VK=(EK[3]);local MK,aK=zK[VK]();if MK then nK=EK[0x02];(zK)[VK+0X3]=aK;end;else(zK)[0]=UK[EK[7]];nK=nK+1;do QK=0x0;end;(zK[QK])();QK=QK-0X1;EK=eK[nK];nK=nK+0X1;zK[0X0]=UK[EK[0X7]];do EK=eK[nK];end;local VK=(0X0);nK=nK+1;(zK)[1]=EK[7];nK=nK+0X01;(zK[VK])(zK[VK+1]);do QK=VK-0X1;end;EK=eK[nK];nK=nK+0x1;nK=EK[0X2];end;end;else if dK<24 then zK[EK[3]]=UK[EK[7]];else if dK==0X0019 then(zK)[9]=UK[EK[0x007]];nK=nK+0x001;nK=nK+1;nK=nK+1;zK[9]=zK[0X9][zK[3]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[0X9]=zK[9][EK[0x6]];nK=nK+0x1;nK=nK+0X01;EK=eK[nK];nK=nK+0x1;do(zK)[0X9]=zK[9][EK[0X0006]];end;EK=eK[nK];nK=nK+0X1;zK[0X9]=zK[0X009][EK[0x006]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do if EK[0X7]<zK[0X9]then nK=EK[3];end;end;else for VK=EK[3],EK[0X2]do zK[VK]=nil;end;end;end;end;end;else if dK>=36 then if dK<0X27 then if not(dK>=0X00025)then local VK,MK=EK[3],(EK[0X5]-1)*0X32;local aK=(zK[VK]);for gK=1,EK[0X2]do(aK)[MK+gK]=zK[VK+gK];end;else do if dK~=0x26 then local VK=EK[0X3];local MK,aK=zK[VK]();if not(MK)then else do for gK=1,EK[5]do zK[VK+gK]=aK[gK];end;end;nK=EK[0X02];end;else(zK)[0X8]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+1;end;nK=nK+1;QK=0X8;(zK[QK])();QK=QK-1;local wK=0X08;nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+1;zK[8]=UK[EK[0X07]];do EK=eK[nK];end;local VK=EK[0x2];local aK=VK[9];nK=nK+1;local MK,gK=nil,#aK;if gK>0 then MK={};do for ZK=1,gK do local GK=(aK[ZK]);if GK[0X001]~=0x0 then(MK)[ZK-0X1]=sK[GK[2]];else(MK)[ZK-1]={zK,GK[0x2]};end;end;end;K(mK,MK);end;(zK)[9]=Ri(MK,UK,VK);nK=nK+1;local lK,rK=3,(0X2);if rK==0X000 then else QK=wK+rK-1;end;local LK,DK=nil,nil;if rK==1 then LK,DK=vi(zK[wK]());else LK,DK=vi(zK[wK](S(zK,wK+0X1,QK)));end;if lK==1 then QK=wK-1;else if lK~=0 then LK=wK+lK-0x2;QK=LK+0X1;else LK=LK+wK-1;QK=LK;end;local ZK=0;for GK=wK,LK do ZK=ZK+0X001;do zK[GK]=DK[ZK];end;end;end;do nK=nK+0X1;end;nK=nK+0X1;do nK=nK+1;end;zK[0x007]=zK[0X09];nK=nK+1;zK[6]=zK[0X0008];EK=eK[nK];do nK=nK+1;end;do if zK[6]~=EK[6]then nK=EK[0X3];end;end;end;end;end;else if dK<0X28 then(zK)[0X0]=UK[EK[0X7]];nK=nK+1;do nK=nK+0X00001;end;nK=nK+1;zK[0]=#zK[0];do EK=eK[nK];end;nK=nK+1;do if not(not(zK[0x0]<EK[0x6]))then else nK=EK[3];end;end;else if dK~=0x29 then do if zK[EK[2]]<=zK[EK[0x5]]then do nK=EK[0X3];end;end;end;else do(zK)[5]=UK[EK[7]];end;nK=nK+1;(zK)[5]=zK[0X00005][zK[0x3]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[0x0005]=zK[5][EK[6]];EK=eK[nK];do nK=nK+1;end;zK[0X5]=zK[0X5][EK[6]];do EK=eK[nK];end;nK=nK+0X01;do zK[0x5]=zK[0X005][EK[0X0006]];end;nK=nK+1;nK=nK+0x00001;nK=nK+1;for VK=0x6,7 do do(zK)[VK]=nil;end;end;EK=eK[nK];nK=nK+1;nK=EK[0X02];end;end;end;elseif not(dK>=33)then if dK==0x20 then(zK)[5]=UK[EK[7]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0x1;zK[5]=zK[0x005][EK[6]];nK=nK+0x1;do nK=nK+1;end;nK=nK+1;QK=5;(zK[QK])();QK=QK-1;do EK=eK[nK];end;do nK=nK+0X0001;end;do nK=EK[2];end;else zK[0X00000]=UK[EK[7]];do nK=nK+0x001;end;do QK=0;end;(zK[QK])();QK=QK-0X001;do EK=eK[nK];end;nK=nK+0x1;(zK)[0x0000]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;do nK=nK+0x1;end;(zK)[0X0]=#zK[0];EK=eK[nK];nK=nK+0X1;if zK[0]==EK[6]then else nK=EK[3];end;end;else if not(dK>=0X22)then zK[0x6]=UK[EK[0X7]];nK=nK+1;do QK=0x6;end;zK[QK]=zK[QK]();nK=nK+0x1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;zK[7]=UK[EK[7]];do nK=nK+1;end;zK[0X7]=zK[0X007][zK[0X3]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[7]=zK[7][EK[0X06]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[7]=zK[7][EK[6]];nK=nK+0x1;nK=nK+0X1;EK=eK[nK];nK=nK+0X00001;(zK)[0X7]=zK[0X7][EK[0X6]];do nK=nK+0X1;end;do nK=nK+0X1;end;nK=nK+1;zK[6]=zK[6]-zK[0X00007];EK=eK[nK];do nK=nK+1;end;if not(EK[7]<=zK[6])then nK=EK[3];end;else if dK==35 then zK[EK[0X3]]={S({},1,EK[2])};else repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0X0 then local LK=(lK[2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;lK[1]=aK[LK];lK[0X002]=1;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;end;end;end;end;else do if not(SK<0x32)then if SK==51 then _K=function(...)local zK=({});local nK=1;local CK,QK={[2]=zK,[1]=xK},(0x0);local pK=Q();local NK,HK=vi(...);do NK=NK-0X1;end;for EK=0x0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X1];end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;else if YK then do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+0X1)};end;end;end;if UK==pK then else _(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[0X0001]);nK=nK+1;if dK>=8 then if not(dK>=12)then if dK<10 then do if dK~=0x9 then(zK)[EK[0X0003]]={S({},0X0001,EK[2])};else end;end;else do if dK~=11 then zK[EK[3]]=-zK[EK[0x002]];else zK[EK[3]]=zK[EK[2]]<=zK[EK[0X5]];end;end;end;else if not(dK>=0x000e)then if dK~=13 then do for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;else zK[EK[3]]=g(zK[EK[0x2]],zK[EK[5]]);end;else do if dK==0X0000F then do nK=EK[0X2];end;else(zK[EK[0X3]])[zK[EK[2]]]=zK[EK[5]];end;end;end;end;elseif dK<0x4 then do if not(dK>=2)then if dK~=1 then(zK)[EK[0X3]]=true;else zK[0x0001]=UK[EK[0X7]];nK=nK+1;nK=nK+1;nK=nK+1;(zK)[2]=zK[0];local wK=(0X01);EK=eK[nK];do nK=nK+0x001;end;zK[1][EK[0x7]]=zK[2];EK=eK[nK];nK=nK+1;do(zK)[1]=UK[EK[0X7]];end;nK=nK+1;QK=1;zK[QK]();QK=QK-1;EK=eK[nK];do nK=nK+1;end;do zK[1]=UK[EK[0X7]];end;do EK=eK[nK];end;nK=nK+1;zK[1]=zK[1][EK[6]];do EK=eK[nK];end;local VK=(EK[2]);nK=nK+1;local MK=(nil);local aK=(VK[0x9]);local gK=#aK;if not(gK>0X0)then else do MK={};end;do for rK=1,gK do local lK=aK[rK];do if lK[0x1]==0 then(MK)[rK-1]={zK,lK[2]};else(MK)[rK-0X1]=sK[lK[2]];end;end;end;end;K(mK,MK);end;(zK)[0X2]=Ri(MK,UK,VK);nK=nK+0X1;zK[wK](zK[wK+1]);QK=wK-1;nK=nK+0X00001;nK=nK+0X1;nK=nK+0X1;repeat local rK,lK=mK,(zK);local LK=({});do for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[0X2]>=0X0 then local tK=(OK[2]);if not LK[tK]then LK[tK]={lK[tK]};end;(OK)[1]=LK[tK];(OK)[0X2]=0X01;end;end;end;end;until true;return;end;else do if dK==3 then(zK)[EK[0X3]]=UK[EK[0X00007]];else(zK)[EK[3]]=w(zK[EK[2]],zK[EK[5]]);end;end;end;end;else if not(dK>=6)then if dK==0x00005 then(zK)[EK[3]]=EK[0X007];else local VK=(EK[0x2]);local aK,MK=VK[0X9],nil;local gK=#aK;if not(gK>0)then else MK={};do for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-0X1]=sK[rK[0X0002]];else do MK[wK-1]={zK,rK[2]};end;end;end;end;(K)(mK,MK);end;(zK)[EK[0X03]]=Ri(MK,UK,VK);end;else do if dK==0x7 then zK[EK[3]]=zK[EK[0X0002]]<zK[EK[0X5]];else local VK=EK[3];local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;zK[VK]=MK;do nK=EK[0X02];end;end;end;end;end;until false;end;else do _K=function(...)local nK=(1);local zK={};local QK=0;local pK=Q();local NK,HK=vi(...);local CK,UK={[1]=xK,[2]=zK},(pK==z and KK or pK);NK=NK-1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X00001];else break;end;end;if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+1)};end;end;if UK==pK then else(_)(_K,UK);end;repeat local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if not(dK<7)then if dK<0x0B then if not(dK<0X009)then if dK~=10 then do nK=EK[2];end;else local VK=EK[0X00003];local MK,aK=zK[VK]();if not(MK)then else nK=EK[0X2];do zK[VK+3]=aK;end;end;end;else if dK==0X8 then else if zK[EK[0X002]]==zK[EK[5]]then else do nK=EK[3];end;end;end;end;else if dK>=13 then if dK==0Xe then zK[EK[3]]=zK[EK[2]]^zK[EK[0X005]];else zK[EK[0x00003]]=EK[7];end;else do if dK==12 then do if not(not(zK[EK[0X2]]<zK[EK[5]]))then else nK=EK[0X003];end;end;else local VK=(EK[0X2]);local aK=(VK[0X0009]);local gK,MK=#aK,nil;if gK>0 then do MK={};end;for wK=0X1,gK do local rK=aK[wK];if rK[1]~=0X00 then(MK)[wK-1]=sK[rK[0X0002]];else(MK)[wK-0x1]={zK,rK[2]};end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;end;else if dK<0X00003 then if not(dK>=1)then do(zK)[EK[3]]=r(zK[EK[2]],zK[EK[5]]);end;elseif dK~=0x2 then do zK[EK[3]]={S({},1,EK[2])};end;else(zK)[EK[0X0003]]=zK[EK[2]]*zK[EK[0X5]];end;else if dK<0x5 then if dK==0x4 then do(zK)[EK[0x3]]=UK[EK[0X007]];end;else(zK)[EK[3]]=w(zK[EK[0X2]],zK[EK[0X5]]);end;else do if dK==0X6 then local VK=(EK[0X0003]);local MK=(zK[VK]);local aK,gK=zK[VK+1],(zK[VK+2]);do zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);end;do nK=EK[0X00002];end;else zK[0X1]=UK[EK[0X00007]];nK=nK+0x00001;nK=nK+0X0001;nK=nK+0X001;zK[0X2]=zK[0];EK=eK[nK];nK=nK+0X01;zK[1][EK[0X7]]=zK[0X02];EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[0X00007]];nK=nK+0X01;do nK=nK+1;end;nK=nK+0X1;QK=0x0001;zK[QK]();QK=QK-1;nK=nK+1;do repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0X0 then local LK=(lK[0X2]);if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[0X00001]=aK[LK];lK[0X2]=1;end;end;end;end;until"\Z\054\041\037";end;return;end;end;end;end;end;until false;end;end;end;else _K=function(...)local zK=({});local nK=0X1;local pK=(Q());local QK=0;local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});do NK=NK-0X1;end;for EK=0X0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else do break;end;end;end;local UK=((pK==z and KK or pK));do if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0,S(HK,WK+1,NK+1)};end;end;end;do if UK~=pK then _(_K,UK);end;end;repeat local EK=eK[nK];local dK=EK[0X1];nK=nK+0X1;if dK<0x015 then if not(dK>=10)then do if dK>=5 then do if dK>=0X7 then if dK<8 then(zK)[2]=UK[EK[7]];nK=nK+0x01;nK=nK+0X001;EK=eK[nK];nK=nK+1;do zK[0x003]=EK[0x7];end;EK=eK[nK];do nK=nK+1;end;do(zK)[4]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0X1;local VK=2;(zK)[0x4]=zK[4][EK[0X06]];nK=nK+1;nK=nK+1;nK=nK+0X1;(zK[VK])(zK[VK+0X00001],zK[VK+2]);do QK=VK-0x1;end;do nK=nK+0X1;end;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;nK=EK[2];else do if dK==0X9 then do zK[3]=UK[EK[7]];end;nK=nK+0X001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;(zK)[3]=zK[0X3][EK[6]];nK=nK+0x00001;nK=nK+0x1;EK=eK[nK];do nK=nK+0X1;end;do if zK[0X3]==EK[0X6]then do nK=EK[3];end;end;end;else if not zK[EK[0X3]]then nK=EK[2];end;end;end;end;else if dK~=0X0006 then local VK=(sK[2]);(zK)[0X2]=VK[0X1][VK[0X2]];do nK=nK+1;end;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+1;end;zK[2]=zK[2][EK[0x6]];EK=eK[nK];nK=nK+1;zK[0X2]=zK[0X002][EK[6]];do EK=eK[nK];end;nK=nK+0x1;if zK[0X2]~=EK[6]then nK=EK[0X0003];end;else(zK)[0x2]=UK[EK[0X07]];EK=eK[nK];nK=nK+0X0001;zK[0X02]=zK[0X002][EK[0X06]];nK=nK+1;nK=nK+1;nK=nK+0X1;QK=0X002;zK[QK]=zK[QK]();nK=nK+0X1;do nK=nK+0X01;end;EK=eK[nK];nK=nK+0X0001;if not(not zK[0x02])then else nK=EK[0X00002];end;end;end;end;else if not(dK>=2)then do if dK~=1 then zK[EK[3]]=EK[7];else zK[2]=UK[EK[7]];nK=nK+1;do nK=nK+0x0001;end;EK=eK[nK];do nK=nK+1;end;(zK)[0X02]=zK[2][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if zK[2]~=EK[6]then nK=EK[0X3];end;end;end;else do if dK<3 then local VK=(sK[0x3]);do(zK)[0X2]=VK[1][VK[0X2]];end;EK=eK[nK];nK=nK+0X0001;zK[0X2]=zK[0x002][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[2]=zK[2][EK[6]];do nK=nK+1;end;nK=nK+1;nK=nK+0X1;(zK)[0x2]=zK[0X002][zK[0]];nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X0002]=zK[0X2][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[2]=zK[2][EK[6]];end;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;if zK[2]~=EK[0X00006]then else nK=EK[0X3];end;else do if dK==4 then zK[EK[0X0003]]=zK[EK[0x002]][zK[EK[5]]];else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if not(MK)then else(zK)[VK+0X1]=aK;zK[VK+2]=gK;do nK=EK[2];end;end;end;end;end;end;end;end;end;else if not(dK<0X0000f)then if dK>=18 then do if not(dK>=0X13)then do for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;end;else if dK==20 then zK[6]=UK[EK[0X7]];EK=eK[nK];do nK=nK+1;end;(zK)[7]=EK[0x7];local VK=6;nK=nK+0X1;zK[0x00008]=zK[0];do nK=nK+1;end;zK[VK](zK[VK+0X1],zK[VK+2]);QK=VK-0X001;EK=eK[nK];nK=nK+0X1;nK=EK[0X2];else zK[0x2]=UK[EK[7]];local VK=sK[0X3];nK=nK+0x1;do(zK)[0X3]=VK[0X1][VK[2]];end;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[3]=zK[3][EK[6]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;(zK)[0X3]=zK[0X00003][EK[6]];nK=nK+0X1;zK[0X003]=zK[0X3][zK[0]];EK=eK[nK];nK=nK+1;(zK)[3]=zK[3][EK[0x00006]];local MK=(0X3);nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X1;end;local aK=(zK[3]);zK[MK+0X1]=aK;(zK)[MK]=aK[EK[0x6]];local gK=(2);nK=nK+0X1;MK=0X3;(zK)[MK]=zK[MK](zK[MK+0X001]);do QK=MK;end;nK=nK+0x001;MK=2;local wK=(4);if gK~=0X0 then QK=MK+gK-0X1;end;local rK,lK=nil,nil;if gK==1 then rK,lK=vi(zK[MK]());else do rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;if wK~=1 then do if wK==0x0 then rK=rK+MK-1;do QK=rK;end;else do rK=MK+wK-0X2;end;QK=rK+1;end;end;local DK=(0X000);for ZK=MK,rK do DK=DK+1;do zK[ZK]=lK[DK];end;end;else do QK=MK-0X1;end;end;do nK=nK+0X00001;end;nK=nK+1;EK=eK[nK];nK=nK+1;MK=2;local LK=b(function(...)(o)();for DK,ZK in...do o(true,DK,ZK);end;end);LK(zK[MK],zK[MK+0X1],zK[MK+0x2]);QK=MK;(zK)[MK]=LK;do nK=EK[2];end;end;end;end;else if not(dK>=16)then zK[EK[3]]=UK[EK[0X7]];else do if dK==17 then local VK=sK[EK[2]];do zK[EK[3]]=VK[0X00001][VK[0X00002]];end;else zK[5]=UK[EK[7]];do EK=eK[nK];end;do nK=nK+0x1;end;local MK=(sK[2]);local VK=(0X5);(zK)[6]=zK[4][EK[0X6]];nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;do zK[6]=UK[EK[0x07]];end;nK=nK+0x01;nK=nK+0X001;nK=nK+1;zK[7]=MK[1][MK[0X02]];EK=eK[nK];nK=nK+0x0001;zK[7]=zK[0X0007][EK[6]];do nK=nK+0X1;end;VK=6;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;EK=eK[nK];nK=nK+0X1;if zK[0X5]==zK[6]then do nK=EK[0x3];end;end;end;end;end;end;else if not(dK<12)then do if not(dK<0x0000d)then if dK~=14 then local VK=(EK[0X2]);local aK,MK=VK[0X9],(nil);local gK=(#aK);do if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0X1]==0 then(MK)[wK-1]={zK,rK[2]};else(MK)[wK-0X00001]=sK[rK[2]];end;end;K(mK,MK);end;end;zK[EK[3]]=Ri(MK,UK,VK);else do if zK[EK[0X2]]~=EK[6]then nK=EK[0X003];end;end;end;else do(zK)[2]=UK[EK[0X7]];end;local VK=sK[0X3];local MK=(3);do nK=nK+1;end;nK=nK+1;nK=nK+0X1;zK[3]=VK[1][VK[2]];nK=nK+0X00001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;zK[3]=zK[3][EK[6]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;(zK)[3]=zK[0X03][EK[6]];do EK=eK[nK];end;do nK=nK+0X01;end;local gK=0X02;local aK=(zK[3]);zK[MK+0X1]=aK;zK[MK]=aK[EK[0x6]];nK=nK+1;MK=0X3;local wK=0X00;if gK~=0X0 then do QK=MK+gK-1;end;end;local rK,lK=nil,(nil);if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));else rK,lK=vi(zK[MK]());end;if wK~=1 then if wK~=0X0 then rK=MK+wK-2;do QK=rK+0X1;end;else rK=rK+MK-0X1;QK=rK;end;local DK=0X0;for ZK=MK,rK do DK=DK+1;do zK[ZK]=lK[DK];end;end;else QK=MK-0X1;end;nK=nK+1;MK=0X2;gK=0X00;wK=4;if gK==0X0 then else QK=MK+gK-0X1;end;rK,lK=nil;if gK==0X001 then rK,lK=vi(zK[MK]());else do rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;do if wK~=1 then do if wK==0X000 then do rK=rK+MK-0x01;end;QK=rK;else rK=MK+wK-0X2;QK=rK+1;end;end;local DK=0;for ZK=MK,rK do DK=DK+0X1;(zK)[ZK]=lK[DK];end;else QK=MK-1;end;end;EK=eK[nK];do nK=nK+0x1;end;MK=0X02;local LK=(b(function(...)o();for DK,ZK in...do o(true,DK,ZK);end;end));LK(zK[MK],zK[MK+0X1],zK[MK+2]);do QK=MK;end;(zK)[MK]=LK;nK=EK[0X2];end;end;else do if dK==0xB then zK[EK[0X0003]]={S({},0X1,EK[0X2])};else do zK[0x5]=zK[4][EK[0x006]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X001;do zK[5]=zK[5][EK[0x6]];end;nK=nK+1;nK=nK+0X0001;do nK=nK+0X1;end;do(zK)[0X0]=zK[0X5];end;EK=eK[nK];do nK=nK+1;end;(zK)[5]=zK[4][EK[6]];nK=nK+0X1;nK=nK+0X1;do nK=nK+0x1;end;(zK)[1]=zK[0X005];EK=eK[nK];nK=nK+0X1;nK=EK[2];end;end;end;end;end;else if not(dK>=32)then do if dK>=26 then if dK>=0x1D then if dK>=0X1E then if dK~=31 then repeat local MK,aK=mK,zK;local gK=({});do for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[1]==aK and LK[2]>=0X0000)then else local DK=(LK[0X2]);if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;(LK)[0X1]=gK[DK];LK[2]=0X1;end;end;end;end;until-0X0002BcC74A8;local VK=EK[0X00003];return S(zK,VK,VK+EK[2]-0X02);else do zK[EK[0X3]]=-zK[EK[2]];end;end;else zK[EK[0X3]]=zK[EK[0X2]]%zK[EK[0x0005]];end;else if dK>=0X1B then if dK~=28 then zK[EK[0x3]]=zK[EK[0X02]]<=zK[EK[0X5]];else local VK=(sK[3]);do zK[2]=VK[1][VK[2]];end;nK=nK+0x1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;do(zK)[0X2]=zK[2][EK[0x6]];end;do nK=nK+0X1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X01;do(zK)[0X0002]=zK[2][EK[6]];end;nK=nK+0X1;do zK[0X00002]=zK[2][zK[0]];end;EK=eK[nK];local MK=(2);nK=nK+0X01;(zK)[2]=zK[0X2][EK[6]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+0X1;local aK=zK[0X00002];(zK)[MK+0X1]=aK;do(zK)[MK]=aK[EK[0X6]];end;EK=eK[nK];nK=nK+1;zK[0X4]=EK[0X00007];do nK=nK+0X0001;end;MK=2;(zK)[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not zK[0X2]then nK=EK[2];end;end;end;else local VK=(sK[0X00002]);zK[2]=VK[1][VK[0x02]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;zK[2]=zK[2][EK[6]];nK=nK+1;do nK=nK+0x001;end;EK=eK[nK];do nK=nK+0x001;end;(zK)[2]=zK[0X2][EK[6]];do EK=eK[nK];end;nK=nK+0X1;if zK[0X2]~=EK[0x6]then nK=EK[0X3];end;end;end;else do if not(dK<0X0017)then if dK<24 then do(zK)[EK[0X003]]=zK[EK[0X2]];end;else if dK==25 then nK=EK[0X2];else zK[2]=UK[EK[0X7]];local VK=2;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do(zK)[3]=EK[0X7];end;nK=nK+1;(zK[VK])(zK[VK+0X1]);QK=VK-0X001;do EK=eK[nK];end;nK=nK+0X001;nK=EK[0x2];end;end;else do if dK~=22 then local VK=(sK[0X00002]);zK[0X3]=VK[1][VK[0X0002]];do EK=eK[nK];end;do nK=nK+0x1;end;do(zK)[3]=zK[3][EK[0X6]];end;do EK=eK[nK];end;nK=nK+0X1;zK[0X3]=zK[0X0003][EK[0X6]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+1;if zK[3]==EK[6]then else nK=EK[0X3];end;else local VK=(sK[2]);(zK)[2]=VK[1][VK[2]];nK=nK+1;do nK=nK+0x01;end;do EK=eK[nK];end;do nK=nK+0X1;end;zK[2]=zK[0x2][EK[6]];local MK=0X6;do EK=eK[nK];end;nK=nK+0X1;do(zK)[0X2]=zK[0X00002][EK[6]];end;EK=eK[nK];nK=nK+1;do(zK)[2]=zK[0x2][EK[0X006]];end;nK=nK+0X0001;zK[3]={};EK=eK[nK];nK=nK+1;(zK[3])[EK[7]]=zK[0];EK=eK[nK];nK=nK+0X1;do(zK)[0x04]=UK[EK[0x7]];end;do nK=nK+0x1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X00001;(zK)[0X5]=EK[0X7];EK=eK[nK];do nK=nK+1;end;(zK)[0X6]=UK[EK[7]];local gK=(0X00000);nK=nK+1;zK[7]=zK[3];do nK=nK+1;end;local aK=0X2;do if aK~=0X00000 then QK=MK+aK-1;end;end;local wK,rK=nil,nil;do if aK==1 then wK,rK=vi(zK[MK]());else do wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;end;local LK=(6);if gK~=0X1 then if gK==0 then wK=wK+MK-1;QK=wK;else wK=MK+gK-2;do QK=wK+1;end;end;local DK=(0X0000);for ZK=MK,wK do DK=DK+0X01;zK[ZK]=rK[DK];end;else QK=MK-0X1;end;nK=nK+1;do MK=4;end;zK[MK](S(zK,MK+0X1,QK));QK=MK-1;nK=nK+0X01;nK=nK+0X0001;nK=nK+0x1;VK=sK[4];do(zK)[0x4]=VK[0X0001][VK[0X002]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0X1;end;local lK=(zK[4]);MK=0X4;do(zK)[MK+0X00001]=lK;end;do zK[MK]=lK[EK[0X6]];end;EK=eK[nK];nK=nK+1;zK[6]=EK[0X7];EK=eK[nK];nK=nK+0X0001;zK[7]=zK[1][EK[6]];do EK=eK[nK];end;nK=nK+0X1;(zK)[0X7]=zK[0X7][EK[6]];nK=nK+1;do nK=nK+0X001;end;EK=eK[nK];nK=nK+0X00001;zK[0X7]=zK[7][EK[0X00006]];EK=eK[nK];do nK=nK+0X0001;end;(zK)[0X7]=zK[0X07][EK[0X6]];do nK=nK+0X1;end;do zK[6]=zK[LK]..zK[LK+0x00001];end;EK=eK[nK];nK=nK+1;zK[7]=EK[0X7];do nK=nK+0x1;end;MK=4;QK=MK+4-0x0001;zK[MK](S(zK,MK+0x01,QK));QK=MK-1;nK=nK+0X1;VK=sK[0x00002];zK[4]=VK[1][VK[2]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[4]=zK[4][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK)[0x4]=zK[0X4][EK[0x006]];nK=nK+0x1;nK=nK+1;nK=nK+1;do zK[0X5]=zK[0X0002];end;EK=eK[nK];do nK=nK+1;end;do(zK[4])[EK[0x7]]=zK[5];end;do EK=eK[nK];end;nK=nK+1;nK=EK[0X2];end;end;end;end;end;end;else do if dK>=0X025 then do if dK>=0X28 then if dK<0X0029 then do(zK)[0X7]=zK[0X4][EK[0X6]];end;nK=nK+0X1;do nK=nK+0x1;end;EK=eK[nK];nK=nK+1;zK[7]=zK[0X7][EK[6]];EK=eK[nK];do nK=nK+0x001;end;local VK=7;local MK=(zK[7]);zK[VK+1]=MK;(zK)[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+1;(zK)[9]=EK[7];nK=nK+0x1;VK=7;zK[VK]=zK[VK](zK[VK+0x1],zK[VK+0x2]);QK=VK;nK=nK+0x1;nK=nK+0X00001;EK=eK[nK];do nK=nK+1;end;if not(zK[7])then else nK=EK[0X002];end;else if dK~=0X2a then(zK)[EK[0X3]]=L(zK[EK[2]],zK[EK[0x05]]);else do(zK)[0X02]=UK[EK[0x7]];end;EK=eK[nK];nK=nK+1;do(zK)[0X2]=zK[0X2][EK[0X006]];end;nK=nK+0x01;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if not zK[0X0002]then do nK=EK[2];end;end;end;end;else do if not(dK>=0x26)then local VK=(sK[0X2]);(zK)[0X3]=VK[1][VK[0X0002]];EK=eK[nK];nK=nK+0x1;zK[3]=zK[0X3][EK[0X6]];EK=eK[nK];nK=nK+0x1;(zK)[0x00003]=zK[0x0003][EK[0X6]];nK=nK+0X00001;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;do if zK[3]==EK[6]then else do nK=EK[3];end;end;end;elseif dK==39 then do(zK)[4]=UK[EK[7]];end;do nK=nK+1;end;local VK=sK[0X0005];nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[4]=zK[4][EK[6]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[0X5]=UK[EK[0X7]];nK=nK+1;(zK)[6]=VK[0X001][VK[2]];local MK=(0x00005);nK=nK+1;nK=nK+0X01;EK=eK[nK];nK=nK+0X001;(zK)[0X006]=zK[6][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK)[6]=zK[6][EK[0X6]];EK=eK[nK];do nK=nK+0X1;end;do(zK)[0X006]=zK[0X6][EK[6]];end;do EK=eK[nK];end;nK=nK+0X1;zK[0X6]=zK[6][EK[6]];nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;zK[MK]=zK[MK](zK[MK+0X1]);do QK=MK;end;nK=nK+0X00001;nK=nK+0x01;do EK=eK[nK];end;nK=nK+1;if zK[4]==zK[5]then do nK=EK[3];end;end;else do repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[0X02]);if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;do(lK)[0X1]=aK[LK];end;(lK)[0X2]=1;end;end;end;until true;end;return;end;end;end;end;else do if dK<0x22 then if dK==0X21 then local VK=sK[0x3];do(zK)[0X3]=VK[1][VK[2]];end;do nK=nK+1;end;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0X1;zK[0X3]=zK[3][EK[6]];do EK=eK[nK];end;do nK=nK+0X0001;end;(zK)[3]=zK[0X3][EK[0X006]];nK=nK+1;nK=nK+0X1;nK=nK+1;zK[3]=zK[3][zK[0]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[3]=zK[3][EK[0X6]];EK=eK[nK];nK=nK+1;zK[0X3]=zK[0X0003][EK[6]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not(zK[0X3]<=EK[6])then nK=EK[3];end;end;else local VK=(sK[0x00001]);(zK)[0X2]=VK[0X1][VK[2]];nK=nK+0X0001;nK=nK+1;local MK=(0x2);EK=eK[nK];do nK=nK+0x1;end;zK[3]=UK[EK[0X7]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[4]=EK[7];nK=nK+0X001;do zK[MK]=zK[MK](zK[MK+1],zK[MK+0X2]);end;QK=MK;do EK=eK[nK];end;do nK=nK+1;end;if not(not zK[0x002])then else nK=EK[0x2];end;end;else if dK<35 then zK[EK[3]]=zK[EK[2]][EK[6]];elseif dK~=36 then do if zK[EK[2]]<=zK[EK[0x5]]then nK=EK[0x3];end;end;else end;end;end;end;end;end;end;until false;end;end;end;end;else if SK>=0x0037 then if not(SK>=56)then do _K=function(...)local QK,zK=0,({});local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));local CK={[2]=zK,[1]=xK};NK=NK-1;for EK=0x0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;local nK=(1);do if not PK then HK=nil;else if YK then do(zK)[WK]={n=NK>=WK and NK-WK+0x1 or 0X0,S(HK,WK+1,NK+1)};end;end;end;end;if UK==pK then else _(_K,UK);end;do repeat local EK=eK[nK];local dK=(EK[1]);nK=nK+0X00001;if dK>=0x9 then if not(dK>=0xe)then if not(dK<0X0b)then do if dK>=0Xc then if dK~=0Xd then do zK[EK[3]]=zK[EK[0X02]]>=zK[EK[0x00005]];end;else(zK)[EK[0X003]]=not zK[EK[0X00002]];end;else nK=EK[0X00002];end;end;else if dK~=10 then repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0X0002]>=0X00000)then else local LK=lK[0X2];if not aK[LK]then do aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[2]=1;end;end;end;end;until 197460572;do return;end;else end;end;else do if not(dK>=16)then if dK==15 then zK[0X0]=UK[EK[0X007]];EK=eK[nK];do nK=nK+0X1;end;zK[0X1]=EK[7];local VK=0;nK=nK+1;zK[VK](zK[VK+1]);QK=VK-0X1;do EK=eK[nK];end;do nK=nK+0X1;end;do(zK)[0]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;do(zK)[0X1]=EK[7];end;do nK=nK+0x1;end;VK=0x0;(zK[VK])(zK[VK+1]);QK=VK-1;nK=nK+1;do nK=nK+0x00001;end;EK=eK[nK];do nK=nK+1;end;nK=EK[2];else(zK)[EK[0x3]]=UK[EK[7]];end;else if dK>=17 then if dK~=18 then zK[EK[3]]=r(zK[EK[0X02]],zK[EK[0X5]]);else(zK)[EK[3]]={S({},1,EK[2])};end;else zK[EK[0X00003]]=zK[EK[0X2]]~=zK[EK[5]];end;end;end;end;else do if dK>=0X04 then if dK<0X6 then if dK~=5 then zK[0]=UK[EK[7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0x1;(zK)[0X00]=zK[0X00][EK[6]];nK=nK+0X01;do nK=nK+1;end;do nK=nK+0X0001;end;local VK=(sK[1]);QK=0X0;zK[QK]();QK=QK-0x1;nK=nK+1;do zK[0]=VK[1][VK[2]];end;EK=eK[nK];do nK=nK+1;end;(zK)[0]=zK[0][EK[6]];EK=eK[nK];nK=nK+1;zK[0]=zK[0x0000][EK[0X6]];do EK=eK[nK];end;nK=nK+0X01;do if zK[0]==EK[0X6]then else do nK=EK[0X3];end;end;end;else for VK=EK[0X003],EK[2]do do zK[VK]=nil;end;end;end;else do if not(dK<0x7)then if dK~=8 then local VK=EK[2];local aK=VK[9];local gK,MK=#aK,(nil);if gK>0 then do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[0x1]~=0 then(MK)[wK-0X1]=sK[rK[2]];else do MK[wK-0X0001]={zK,rK[0X2]};end;end;end;K(mK,MK);end;do zK[EK[0X3]]=Ri(MK,UK,VK);end;else zK[EK[3]]=EK[2];end;else do if not zK[EK[0X003]]then nK=EK[0X002];end;end;end;end;end;else do if dK>=2 then if dK==3 then local VK=sK[EK[0X02]];(zK)[EK[3]]=VK[1][VK[0X2]];else zK[EK[3]]=CK[EK[2]];end;else do if dK~=0X1 then do(zK)[0]=UK[EK[7]];end;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[0]=zK[0][EK[0X6]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not zK[0X0]then nK=EK[0X2];end;else zK[EK[3]]=EK[7];end;end;end;end;end;end;end;until false;end;end;end;else do if SK==57 then _K=function(...)local nK=1;local zK=({});local QK=(0);local CK={[2]=zK,[1]=xK};local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0X1;for EK=0X0,NK do if WK>EK then do zK[EK]=HK[EK+0X0001];end;else break;end;end;if not PK then do HK=nil;end;else if YK then do zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;end;if UK~=pK then _(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[0X1]);nK=nK+1;do if dK<0X6 then if not(dK>=3)then if dK<1 then zK[EK[3]]=UK[EK[0X7]];else do if dK==2 then zK[EK[3]]=#zK[EK[0X2]];else do zK[EK[0X003]]={S({},0X0001,EK[0x2])};end;end;end;end;else if not(dK>=4)then(zK)[EK[0X0003]]=l(zK[EK[0X2]]);else do if dK~=0X00005 then local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=#aK;if gK>0 then MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X00001]~=0 then MK[wK-1]=sK[rK[0X02]];else(MK)[wK-0X00001]={zK,rK[2]};end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else do zK[0X1]=UK[EK[7]];end;nK=nK+0X1;zK[2]=zK[0];EK=eK[nK];do nK=nK+0X001;end;(zK[0X1])[EK[0X7]]=zK[0x002];EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[0X7]];nK=nK+0X1;do QK=0X1;end;(zK[QK])();do QK=QK-1;end;nK=nK+1;do repeat local VK,MK=mK,(zK);local aK={};do for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0X2]>=0)then else local LK=lK[2];if not aK[LK]then do aK[LK]={MK[LK]};end;end;(lK)[0X001]=aK[LK];(lK)[2]=1;end;end;end;end;end;until true;end;do return;end;end;end;end;end;else do if not(dK<0X00009)then if dK>=0XB then do if dK~=12 then nK=EK[2];else do zK[EK[3]]=L(zK[EK[2]],zK[EK[0X005]]);end;end;end;elseif dK==10 then(zK)[EK[0X3]]=zK[EK[0X0002]][zK[EK[0X5]]];else(zK)[EK[3]]=EK[0X2];end;else if dK>=7 then do if dK~=8 then zK[EK[0x3]]=zK[EK[2]]-zK[EK[0X00005]];else(zK)[EK[0X003]]=EK[0X7];end;end;else end;end;end;end;end;until false;end;else _K=function(...)local nK,zK=1,{};local pK=(Q());local NK,HK=vi(...);local CK,UK={[2]=zK,[1]=xK},((pK==z and KK or pK));NK=NK-0X0001;local QK=(0);for EK=0X00,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;do if not PK then do HK=nil;end;else if YK then do(zK)[WK]={n=NK>=WK and NK-WK+0X001 or 0,S(HK,WK+0X1,NK+0X01)};end;end;end;end;if UK==pK then else _(_K,UK);end;while"\0488*\076\101\098"do local EK=eK[nK];local dK=EK[0x0001];nK=nK+1;if not(dK<0X7)then if dK>=0x000a then do if dK<12 then if dK==11 then local VK=EK[0X002];local aK=(VK[0X9]);local MK=(nil);local gK=#aK;if not(gK>0X0)then else MK={};do for wK=0X001,gK do local rK=aK[wK];if rK[0x1]~=0 then MK[wK-1]=sK[rK[0X2]];else(MK)[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;zK[EK[3]]=i[EK[0X5]](MK);else(zK)[0X0001]=UK[EK[0x0007]];nK=nK+1;zK[0x00002]=zK[0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[0X7]]=zK[0x2];local wK=(0X00001);do EK=eK[nK];end;do nK=nK+1;end;local MK=nil;(zK)[1]=UK[EK[7]];nK=nK+0X01;nK=nK+1;nK=nK+1;QK=1;(zK[QK])();do QK=QK-1;end;EK=eK[nK];do nK=nK+0X1;end;zK[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[1]=zK[1][EK[0x0006]];do EK=eK[nK];end;nK=nK+1;local VK=(EK[2]);local aK=(VK[9]);local gK=(#aK);do if gK>0 then MK={};for rK=1,gK do local lK=aK[rK];do if lK[1]==0 then(MK)[rK-1]={zK,lK[0X2]};else(MK)[rK-1]=sK[lK[2]];end;end;end;(K)(mK,MK);end;end;(zK)[2]=Ri(MK,UK,VK);nK=nK+1;(zK[wK])(zK[wK+0x1]);QK=wK-0X00001;nK=nK+0X1;repeat local rK,lK=mK,(zK);local LK={};for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0X1]==lK and OK[0X2]>=0 then local tK=OK[0X02];if not LK[tK]then LK[tK]={lK[tK]};end;(OK)[0X00001]=LK[tK];(OK)[0X2]=0X1;end;end;end;until true;return;end;else do if dK==0Xd then local VK,MK=EK[2],nil;local aK=(VK[0X9]);local gK=(#aK);if not(gK>0)then else MK={};do for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0X00000 then MK[wK-1]={zK,rK[2]};else(MK)[wK-1]=sK[rK[0x00002]];end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);else(zK)[EK[0X3]]=EK[7];end;end;end;end;else do if dK<0X00008 then local VK=(EK[0x2]);local MK=(zK[VK]);for aK=VK+1,EK[0x5]do MK=MK..zK[aK];end;do zK[EK[3]]=MK;end;else if dK~=9 then zK[EK[3]]=UK[EK[0X7]];else zK[EK[0X3]]={S({},0X1,EK[2])};end;end;end;end;else if dK<0X3 then if not(dK>=1)then else if dK~=2 then local VK=EK[3];do for MK=VK,VK+(EK[2]-1)do(zK)[MK]=HK[WK+(MK-VK)+1];end;end;else if zK[EK[0X2]]<zK[EK[5]]then nK=EK[3];end;end;end;else if dK<5 then if dK~=0X04 then do(zK)[EK[0X00003]]=EK[0X2];end;else(zK)[EK[3]]=w(zK[EK[2]],zK[EK[5]]);end;else if dK~=0x6 then nK=EK[2];else zK[EK[3]]=CK[EK[2]];end;end;end;end;end;end;end;end;end;else if SK>=0X35 then if SK~=54 then _K=function(...)local nK,zK=1,({});local CK=({[1]=xK,[2]=zK});local pK=Q();local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X001];end;end;if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+1,NK+1)};end;end;local QK=0;if UK~=pK then _(_K,UK);end;repeat local EK=(eK[nK]);local dK=EK[1];do nK=nK+0X1;end;if dK<9 then if dK>=0X0004 then if dK<0X6 then if dK==0x00005 then do(zK)[EK[0X3]]=zK[EK[2]]+zK[EK[0X5]];end;else do(zK)[EK[0x3]]=not zK[EK[2]];end;end;else do if dK<7 then local MK=EK[2];local VK=(EK[3]);QK=VK+MK-1;repeat local aK,gK=mK,zK;local wK={};for rK,lK in W,aK do do for LK,DK in W,lK do do if DK[0X1]==gK and DK[0x02]>=0x0 then local ZK=(DK[0x02]);if not wK[ZK]then wK[ZK]={gK[ZK]};end;DK[1]=wK[ZK];DK[2]=1;end;end;end;end;end;until true;do return zK[VK](S(zK,VK+0X01,QK));end;else do if dK==0x00008 then do(zK)[EK[0X3]]=-zK[EK[2]];end;else do(zK)[EK[0X3]]=zK[EK[2]]*zK[EK[0X5]];end;end;end;end;end;end;else do if dK>=0X02 then do if dK==0X3 then zK[EK[0X3]]=UK[EK[0X7]];else for VK=EK[0X3],EK[0X2]do(zK)[VK]=nil;end;end;end;else if dK==1 then zK[EK[3]]=true;else repeat local VK,MK,aK=mK,zK,EK[3];local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[0X01]==MK and LK[0X2]>=aK)then else local DK=(LK[2]);if not gK[DK]then(gK)[DK]={MK[DK]};end;do LK[0X00001]=gK[DK];end;(LK)[0x02]=1;end;end;end;until true;end;end;end;end;elseif not(dK>=0X00D)then if dK<0XB then if dK~=0XA then zK[EK[3]]=EK[7];else local VK=(EK[0x002]);local aK,MK=VK[0X9],(nil);local gK=#aK;if not(gK>0)then else do MK={};end;for wK=0X001,gK do local rK=aK[wK];if rK[1]~=0X000 then do MK[wK-0X1]=sK[rK[2]];end;else do(MK)[wK-0X1]={zK,rK[0x2]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else if dK~=0xC then nK=EK[2];else if zK[EK[0X2]]~=zK[EK[0x05]]then nK=EK[0x3];end;end;end;else if not(dK<15)then do if not(dK>=16)then else do if dK==0X000011 then(zK)[0X01]=UK[EK[0x7]];nK=nK+1;zK[2]=zK[0];do EK=eK[nK];end;nK=nK+0X00001;zK[1][EK[7]]=zK[0X2];do EK=eK[nK];end;nK=nK+1;zK[1]=UK[EK[7]];do nK=nK+1;end;do nK=nK+1;end;nK=nK+0X1;QK=1;zK[QK]();QK=QK-0X01;nK=nK+1;nK=nK+0X1;nK=nK+1;repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0X000 then local LK=lK[2];if not aK[LK]then(aK)[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];(lK)[0X2]=0X00001;end;end;end;end;until true;return;else do zK[EK[0X0003]]={S({},0X00001,EK[2])};end;end;end;end;end;else if dK==0X0000E then(zK)[EK[3]]=#zK[EK[0X002]];else local VK=(zK[EK[2]]/zK[EK[0X0005]]);do(zK)[EK[0X3]]=VK-VK%1;end;end;end;end;until false;end;else do _K=function(...)local nK,QK=1,(0);local zK={};local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0X1;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;if not PK then HK=nil;else if YK then do zK[WK]={n=NK>=WK and NK-WK+0x00001 or 0,S(HK,WK+1,NK+0X00001)};end;end;end;if UK==pK then else _(_K,UK);end;while 0.058171903888476484 do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X1;do if dK>=0X000a then if dK<0x0000f then if dK>=0xC then do if dK<13 then(zK)[0]=UK[EK[7]];EK=eK[nK];local VK=0;nK=nK+1;zK[0X1]=EK[7];nK=nK+0x01;zK[VK](zK[VK+0X01]);QK=VK-0x1;nK=nK+0X0001;do nK=nK+0X00001;end;EK=eK[nK];nK=nK+0X1;zK[0X0000]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X1;do zK[0X0001]=EK[7];end;nK=nK+0X1;VK=0;(zK[VK])(zK[VK+0X0001]);do QK=VK-1;end;EK=eK[nK];do nK=nK+0x1;end;do nK=EK[0x2];end;else if dK~=14 then local VK=(EK[3]);local MK,aK=zK[VK]();if MK then do nK=EK[2];end;(zK)[VK+3]=aK;end;else zK[EK[0x00003]]=EK[0X07];end;end;end;else do if dK~=11 then local VK=zK[EK[0X0002]]/zK[EK[0X5]];zK[EK[3]]=VK-VK%0x1;else(zK)[0x0]=UK[EK[7]];EK=eK[nK];nK=nK+0x1;zK[1]=EK[0X7];local VK=0;do nK=nK+1;end;(zK[VK])(zK[VK+1]);QK=VK-1;do EK=eK[nK];end;do nK=nK+1;end;do nK=EK[0X00002];end;end;end;end;else if dK<18 then if not(dK>=16)then do(zK)[0]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X0001;(zK)[0X001]=EK[7];nK=nK+1;local VK=0X0;(zK[VK])(zK[VK+1]);QK=VK-1;EK=eK[nK];nK=nK+1;nK=EK[0x2];else if dK~=0x11 then(UK)[EK[7]]=zK[EK[0x3]];else zK[0x0000]=UK[EK[0X0007]];do EK=eK[nK];end;nK=nK+1;(zK)[0]=zK[0X0][EK[0X6]];do nK=nK+1;end;nK=nK+1;nK=nK+1;QK=0X0000;(zK[QK])();do QK=QK-1;end;do nK=nK+0X1;end;nK=nK+1;nK=nK+1;local VK=(sK[1]);do zK[0]=VK[0x01][VK[2]];end;EK=eK[nK];do nK=nK+1;end;zK[1]=UK[EK[7]];nK=nK+0X00001;nK=nK+1;do EK=eK[nK];end;nK=nK+0x00001;do(zK)[2]=EK[7];end;nK=nK+1;local MK=0;do zK[MK]=zK[MK](zK[MK+0X1],zK[MK+0X02]);end;do QK=MK;end;do nK=nK+1;end;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;if not zK[0X0000]then do nK=EK[2];end;end;end;end;else if not(dK>=19)then repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[0x2]>=0X0000 then local LK=(lK[0X2]);if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];lK[2]=0X1;end;end;end;end;until true;return;else if dK~=0x14 then local VK=EK[3];local aK,MK=zK[VK],((EK[5]-1)*50);for gK=0X1,EK[2]do aK[MK+gK]=zK[VK+gK];end;else zK[EK[0X003]]={S({},1,EK[0X002])};end;end;end;end;else do if dK<0X005 then if not(dK>=0x002)then if dK==1 then do for VK=EK[0X3],EK[0X0002]do zK[VK]=nil;end;end;else if not(not(zK[EK[0X2]]<=zK[EK[0X05]]))then else nK=EK[3];end;end;else if dK<3 then else if dK==4 then local VK=EK[0X02];local MK=nil;local aK=(VK[9]);local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0X00001]==0X0 then MK[wK-1]={zK,rK[2]};else do MK[wK-1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else local VK=sK[0];zK[0x0]=VK[0X1][VK[0X2]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X01;if not zK[0]then do nK=EK[2];end;end;end;end;end;else do if not(dK<0X7)then if not(dK>=0x8)then(zK)[EK[0X3]]=UK[EK[0x7]];elseif dK==0X9 then zK[EK[3]]=w(zK[EK[2]],zK[EK[5]]);else(zK)[EK[3]]=true;end;else do if dK==0X06 then nK=EK[0X2];else(zK)[0X0]=UK[EK[7]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do zK[0]=zK[0X0][EK[0X6]];end;EK=eK[nK];nK=nK+1;do if not(not zK[0])then else nK=EK[0X02];end;end;end;end;end;end;end;end;end;end;end;end;end;end;else _K=function(...)local QK,zK,nK=0,{},1;local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0x1;for EK=0X00000,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+0X1];end;end;end;local UK=((pK==z and KK or pK));if not PK then do HK=nil;end;else if YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0x1,NK+0x1)};end;end;do if UK==pK then else _(_K,UK);end;end;do while-2105904246 do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK<11 then if not(dK>=5)then if dK>=0X2 then if dK<0X03 then(zK)[EK[0X3]]=g(zK[EK[2]],zK[EK[0X5]]);else if dK==4 then(zK)[EK[0X3]]=not zK[EK[2]];else do zK[EK[3]]=UK[EK[7]];end;end;end;else if dK==1 then local VK=sK[0X2];zK[0x003]=VK[0X1][VK[2]];nK=nK+1;nK=nK+0x1;nK=nK+0x0001;zK[0X3]=zK[0x03][zK[1]];EK=eK[nK];nK=nK+1;if zK[0x3]~=EK[6]then else nK=EK[3];end;else do zK[EK[0x3]]=D(zK[EK[2]],zK[EK[5]]);end;end;end;else if not(dK<8)then if dK>=0X009 then do if dK~=10 then nK=EK[0X2];else local VK=EK[0X0003];local MK=(b(function(...)o();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));(MK)(zK[VK],zK[VK+0X0001],zK[VK+0X0002]);QK=VK;(zK)[VK]=MK;nK=EK[2];end;end;else end;else if not(dK>=6)then zK[3]={};EK=eK[nK];do nK=nK+1;end;do zK[0X4]=UK[EK[7]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[5]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0x1;end;do zK[5]=zK[0X005][EK[6]];end;nK=nK+1;do nK=nK+1;end;local MK=2;nK=nK+0X0001;zK[4]=zK[4][zK[5]];EK=eK[nK];nK=nK+1;zK[3][EK[7]]=zK[0X4];nK=nK+1;(zK)[4]={};EK=eK[nK];nK=nK+1;(zK)[5]=UK[EK[0x007]];nK=nK+0X1;(zK)[6]=zK[1];local VK=(0X5);nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+0X1;do zK[4][zK[5]]=zK[0X2];end;EK=eK[nK];nK=nK+1;(zK[3])[EK[7]]=zK[4];EK=eK[nK];nK=nK+1;do zK[0X00004]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X00001;(zK)[5]=EK[0X7];EK=eK[nK];nK=nK+0X1;(zK)[6]=UK[EK[0X07]];nK=nK+1;(zK)[0x7]=zK[0X3];do nK=nK+0X1;end;VK=0x00006;local aK=0X0;if MK==0X0 then else QK=VK+MK-0X0001;end;local gK,wK=nil,nil;do if MK~=1 then do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;else gK,wK=vi(zK[VK]());end;end;do if aK~=1 then if aK==0 then gK=gK+VK-0X1;QK=gK;else gK=VK+aK-0x2;QK=gK+0X1;end;local rK=(0X000);for lK=VK,gK do rK=rK+1;(zK)[lK]=wK[rK];end;else QK=VK-0X1;end;end;nK=nK+1;nK=nK+0x1;nK=nK+1;VK=4;(zK[VK])(S(zK,VK+0X1,QK));QK=VK-0X1;nK=nK+0x0001;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[0X2];else if dK==7 then do(zK)[0X0]=UK[EK[7]];end;nK=nK+0X0001;local VK=sK[1];(zK)[1]=VK[0X1][VK[0X2]];EK=eK[nK];nK=nK+0X00001;zK[0X1]=zK[1][EK[0x00006]];do EK=eK[nK];end;nK=nK+1;(zK)[1]=zK[0x00001][EK[0X6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[1]=zK[1][EK[0X6]];EK=eK[nK];local gK=4;nK=nK+1;zK[1]=zK[0X001][EK[6]];nK=nK+0X1;nK=nK+0X0001;local MK=(0);do nK=nK+0X1;end;local aK=2;do if aK~=0 then QK=MK+aK-1;end;end;local wK,rK=nil,(nil);if aK==1 then do wK,rK=vi(zK[MK]());end;else do wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;end;do if gK~=1 then if gK~=0 then wK=MK+gK-0X2;do QK=wK+0X1;end;else do wK=wK+MK-1;end;QK=wK;end;local LK=0X0000;for DK=MK,wK do LK=LK+1;zK[DK]=rK[LK];end;else do QK=MK-1;end;end;end;nK=nK+0X1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0X1;MK=0;local lK=b(function(...)(o)();for LK,DK in...do(o)(true,LK,DK);end;end);(lK)(zK[MK],zK[MK+1],zK[MK+2]);QK=MK;(zK)[MK]=lK;nK=EK[2];else do if not(not(zK[EK[0X2]]<zK[EK[5]]))then else nK=EK[0X00003];end;end;end;end;end;end;else if dK<17 then do if not(dK<14)then do if dK<15 then local MK=(nil);local VK=EK[0x2];local aK=(VK[0x09]);local gK=#aK;if gK>0X0 then MK={};for wK=1,gK do local rK=aK[wK];if rK[0X1]~=0X0 then MK[wK-0x00001]=sK[rK[2]];else MK[wK-0x1]={zK,rK[2]};end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else if dK~=0X10 then zK[3]=UK[EK[0x007]];nK=nK+1;nK=nK+0x1;EK=eK[nK];local VK=sK[0X00002];nK=nK+0X1;do(zK)[0X3]=zK[0x3][EK[6]];end;do EK=eK[nK];end;nK=nK+0X1;(zK)[4]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X04]=zK[0X4][EK[0X06]];nK=nK+0X1;do(zK)[5]=VK[0X0001][VK[2]];end;nK=nK+1;nK=nK+1;local MK=3;do nK=nK+1;end;zK[5]=zK[5][zK[1]];do nK=nK+0X1;end;do(zK)[MK]=zK[MK](zK[MK+1],zK[MK+0X0002]);end;QK=MK;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0x001;if not zK[3]then nK=EK[2];end;else local VK=(sK[0]);zK[0]=VK[1][VK[2]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0X001;end;do if not zK[0X000]then nK=EK[0X02];end;end;end;end;end;else if dK>=0xc then if dK==13 then(zK)[3]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X3]=zK[3][EK[0X6]];do EK=eK[nK];end;nK=nK+0X1;if zK[0X3]==EK[6]then nK=EK[0X003];end;else local VK=(EK[0X3]);local MK,aK,gK=zK[VK]();do if not(MK)then else(zK)[VK+0X01]=aK;do zK[VK+2]=gK;end;do nK=EK[0X0002];end;end;end;end;else(zK)[EK[0x3]]=zK[EK[0x2]]+zK[EK[0X5]];end;end;end;else do if dK>=20 then do if not(dK>=0x000015)then zK[EK[3]]=EK[7];elseif dK==22 then do zK[0X0]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+1;zK[0]=zK[0][EK[0X0006]];nK=nK+1;nK=nK+0X01;nK=nK+1;do QK=0X00000;end;zK[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+0X1;if not zK[0x0]then do nK=EK[0X2];end;end;else repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[0X1]==MK and lK[0x02]>=0X0)then else local LK=lK[2];do if not(not aK[LK])then else do(aK)[LK]={MK[LK]};end;end;end;lK[0X01]=aK[LK];do(lK)[2]=1;end;end;end;end;end;until true;do return;end;end;end;else if not(dK<18)then do if dK==19 then(zK)[EK[0X3]]={S({},1,EK[2])};else zK[0]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[0X0]=zK[0x000][EK[6]];do EK=eK[nK];end;do nK=nK+1;end;if not zK[0]then nK=EK[2];end;end;end;else for VK=EK[3],EK[2]do do zK[VK]=nil;end;end;end;end;end;end;end;end;end;end;end;end;end;else if SK<64 then if SK<0X3d then do if not(SK>=0X3B)then _K=function(...)local nK,zK=1,({});local pK=(Q());local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local UK=(pK==z and KK or pK);local QK=(0);NK=NK-1;for EK=0,NK do do if WK>EK then(zK)[EK]=HK[EK+0X001];else do break;end;end;end;end;do if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;end;if UK==pK then else(_)(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[0X1]);nK=nK+0x0001;if dK<0xF then do if not(dK>=0x7)then if not(dK>=3)then if not(dK>=0X001)then zK[0X005]=UK[EK[0x007]];nK=nK+0X1;nK=nK+1;nK=nK+0X1;do QK=5;end;(zK)[QK]=zK[QK]();do nK=nK+1;end;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;if zK[0]~=zK[0X5]then else nK=EK[3];end;else if dK~=2 then do repeat local aK={};local VK,MK=mK,zK;for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[2]>=0X0000)then else local LK=lK[0X00002];if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[0X0001]=aK[LK];lK[0x002]=1;end;end;end;end;until true;end;do return;end;else(zK)[EK[0X3]]={S({},0X001,EK[0X2])};end;end;else if not(dK>=5)then if dK==0X4 then if zK[EK[0X2]]<zK[EK[5]]then nK=EK[3];end;else end;else if dK==6 then(zK)[1]=UK[EK[0x00007]];nK=nK+1;QK=1;zK[QK]=zK[QK]();nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if zK[0X0]==zK[0X01]then do nK=EK[3];end;end;else do(zK)[EK[0X03]]=UK[EK[0X007]];end;end;end;end;else do if not(dK<11)then do if dK>=13 then if dK==14 then for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;else local VK=(EK[3]);local MK,aK=zK[VK]();if not(MK)then else nK=EK[0X02];zK[VK+3]=aK;end;end;else if dK==12 then zK[0]=UK[EK[0x7]];nK=nK+0X1;do QK=0X0;end;local MK,VK=2,(sK[0]);do(zK)[QK]=zK[QK]();end;do nK=nK+0X1;end;nK=nK+1;local aK=0X1;EK=eK[nK];nK=nK+0x001;(zK)[0X1]=EK[0x07];EK=eK[nK];nK=nK+0X00001;(zK)[2]=UK[EK[7]];nK=nK+0X01;zK[0X3]=VK[0X01][VK[2]];nK=nK+0X1;nK=nK+1;nK=nK+0x00001;do(zK)[MK]=zK[MK](zK[MK+1]);end;QK=MK;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0X00003]=EK[0X2];do EK=eK[nK];end;do nK=nK+1;end;MK=zK[aK];local wK=zK[aK+2];local gK=(zK[aK+1]);do zK[aK]=b(function()for rK=MK,gK,wK do o(true,rK);end;end);end;nK=EK[2];else do zK[EK[0X3]]=D(zK[EK[0X2]],zK[EK[0X00005]]);end;end;end;end;else if dK<0X9 then do if dK==0X8 then zK[EK[0X03]]=zK[EK[2]]==zK[EK[0X0005]];else zK[0x0]=UK[EK[0X0007]];EK=eK[nK];nK=nK+0X1;do zK[0]=zK[0][EK[0X0006]];end;nK=nK+1;nK=nK+0X01;EK=eK[nK];nK=nK+1;do if not(not zK[0X00000])then else nK=EK[2];end;end;end;end;else do if dK==0Xa then zK[EK[0X003]]=#zK[EK[0X2]];else local VK=(sK[1]);zK[0X0001]=VK[1][VK[0X2]];EK=eK[nK];nK=nK+1;do zK[1][EK[0x7]]=EK[6];end;EK=eK[nK];nK=nK+1;nK=EK[0X2];end;end;end;end;end;end;end;elseif not(dK>=0X17)then if not(dK<0X13)then if not(dK<21)then do if dK==22 then do repeat local VK,MK,aK=mK,zK,(EK[0X0003]);local gK={};for wK,rK in W,VK do for lK,LK in W,rK do do if LK[1]==MK and LK[0X002]>=aK then local DK=LK[0X00002];if not gK[DK]then gK[DK]={MK[DK]};end;(LK)[0X0001]=gK[DK];LK[2]=0x1;end;end;end;end;until true;end;else local VK=(EK[3]);local MK,aK=zK[VK]();if not(MK)then else for gK=1,EK[5]do(zK)[VK+gK]=aK[gK];end;nK=EK[2];end;end;end;else if dK==20 then do(zK)[EK[0X03]]=zK[EK[0X2]];end;else local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=#aK;do if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]==0 then MK[wK-0X1]={zK,rK[2]};else do MK[wK-0x1]=sK[rK[0X00002]];end;end;end;K(mK,MK);end;end;do(zK)[EK[0x00003]]=Ri(MK,UK,VK);end;end;end;else if not(dK<17)then if dK==0x12 then nK=EK[0X002];else(zK)[0]=UK[EK[0x7]];do EK=eK[nK];end;nK=nK+0x0001;zK[0]=zK[0][EK[0X6]];do nK=nK+0X1;end;nK=nK+1;nK=nK+0x00001;do QK=0;end;zK[QK]=zK[QK]();nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;if not(not zK[0X0])then else nK=EK[0X0002];end;end;else if dK~=16 then local VK=(sK[0]);do zK[0X5]=VK[0x0001][VK[2]];end;do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;local MK=6;do(zK)[6]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;nK=nK+0X0001;zK[7]=zK[0X4];do nK=nK+1;end;zK[MK]=zK[MK](zK[MK+0X1]);QK=MK;do nK=nK+0X1;end;(zK)[5]=zK[0X5][zK[0X6]];EK=eK[nK];nK=nK+0X1;do if not zK[5]then nK=EK[2];end;end;else do(zK)[5]=UK[EK[0X7]];end;nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X00001;zK[0X5]=zK[0X5][EK[6]];nK=nK+0X0001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do if not(zK[0X5])then else nK=EK[2];end;end;end;end;end;else if dK<27 then do if not(dK<25)then if dK~=26 then zK[6]=UK[EK[0X7]];EK=eK[nK];do nK=nK+1;end;zK[6]=zK[6][EK[0x6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;if not(not zK[6])then else nK=EK[2];end;else(zK)[0X1]=UK[EK[0x7]];local VK=0x1;EK=eK[nK];local MK=sK[0X1];nK=nK+1;do(zK)[2]=EK[0X7];end;nK=nK+0X1;zK[VK](zK[VK+1]);QK=VK-0x1;nK=nK+0X1;nK=nK+1;do nK=nK+0x1;end;(zK)[1]={};nK=nK+1;MK[1][MK[2]]=zK[1];do EK=eK[nK];end;do nK=nK+0X0001;end;(zK)[0x001]=UK[EK[0x0007]];do EK=eK[nK];end;nK=nK+0x1;zK[0X1]=zK[0X1][EK[0X6]];EK=eK[nK];nK=nK+0X1;do if not(not zK[1])then else do nK=EK[0x2];end;end;end;end;else if dK==0x00018 then(zK)[EK[0X0003]]=zK[EK[0X002]]<=zK[EK[5]];else if zK[EK[3]]then do nK=EK[2];end;end;end;end;end;else do if not(dK<0X001d)then if dK==0x1e then(zK)[0X1]=UK[EK[0X007]];nK=nK+0X01;do nK=nK+1;end;nK=nK+1;QK=0X01;zK[QK]();do QK=QK-1;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X001;zK[1]=UK[EK[7]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;zK[0X1]=zK[1][EK[6]];do nK=nK+0x1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not zK[0X1]then nK=EK[0X0002];end;else(zK)[EK[3]]=EK[0X7];end;else if dK~=0X01c then local VK=(sK[1]);zK[6]=VK[1][VK[2]];EK=eK[nK];do nK=nK+1;end;zK[7]=EK[7];do EK=eK[nK];end;nK=nK+0x00001;do(zK)[0X00008]=UK[EK[0X7]];end;nK=nK+1;QK=8;do zK[QK]=zK[QK]();end;nK=nK+0X00001;nK=nK+1;local MK=(0X7);nK=nK+0X1;do zK[0X007]=zK[MK]..zK[MK+0X00001];end;EK=eK[nK];nK=nK+0X1;zK[0X06][EK[0X7]]=zK[0X007];do nK=nK+1;end;do VK=sK[1];end;(zK)[0X6]=VK[1][VK[2]];EK=eK[nK];nK=nK+0X1;(zK[0X0006])[EK[7]]=EK[0X006];nK=nK+1;do VK=sK[0X01];end;zK[6]=VK[1][VK[0X2]];do nK=nK+1;end;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0x0001;do zK[0x7]=EK[7];end;local aK=(0XA);nK=nK+1;(zK)[8]=zK[0X004];EK=eK[nK];nK=nK+1;zK[9]=EK[7];EK=eK[nK];nK=nK+0X001;(zK)[10]=UK[EK[0X07]];nK=nK+1;do VK=sK[0];end;do zK[11]=VK[1][VK[2]];end;do nK=nK+0X1;end;do(zK)[aK]=zK[aK](zK[aK+0X1]);end;QK=aK;do nK=nK+1;end;do nK=nK+0X1;end;nK=nK+0X1;MK=7;local gK=(zK[MK]);for wK=MK+0x1,0Xa do do gK=gK..zK[wK];end;end;do(zK)[0x7]=gK;end;EK=eK[nK];nK=nK+1;zK[0X00006][EK[7]]=zK[0x00007];nK=nK+1;VK=sK[1];zK[6]=VK[1][VK[0X0002]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0X0007]=EK[7];EK=eK[nK];do nK=nK+0X1;end;(zK)[0X0008]=UK[EK[0X00007]];EK=eK[nK];nK=nK+1;zK[9]=zK[0x5][EK[6]];nK=nK+1;nK=nK+0X01;nK=nK+1;aK=0X8;do zK[aK]=zK[aK](zK[aK+1]);end;QK=aK;do nK=nK+1;end;do nK=nK+0X1;end;nK=nK+1;MK=0X7;zK[7]=zK[MK]..zK[MK+1];do EK=eK[nK];end;nK=nK+1;(zK[6])[EK[0X00007]]=zK[7];nK=nK+0X1;VK=sK[0X1];zK[6]=VK[1][VK[2]];do EK=eK[nK];end;nK=nK+1;zK[0x6][EK[7]]=EK[0X6];EK=eK[nK];nK=nK+1;do(zK)[6]=UK[EK[0X7]];end;nK=nK+0X1;do(zK)[0X0007]=zK[0X004];end;do nK=nK+1;end;aK=6;(zK[aK])(zK[aK+1]);QK=aK-1;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;nK=EK[2];else local VK=sK[0X1];do zK[1]=VK[0X1][VK[0x2]];end;nK=nK+1;nK=nK+1;EK=eK[nK];local MK=4;nK=nK+0X1;zK[2]=UK[EK[0X7]];local gK=(0);nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x00001;zK[2]=zK[2][EK[6]];nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0x1;zK[0X00003]=EK[0X7];EK=eK[nK];nK=nK+1;zK[4]=UK[EK[0x7]];nK=nK+1;do nK=nK+1;end;nK=nK+0X00001;local aK=(1);if aK~=0 then do QK=MK+aK-1;end;end;local wK,rK=nil,(nil);if aK==0x1 then wK,rK=vi(zK[MK]());else do wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;if gK~=0x001 then if gK==0 then wK=wK+MK-1;do QK=wK;end;else wK=MK+gK-2;QK=wK+0X1;end;local lK=0;for LK=MK,wK do do lK=lK+0x1;end;do(zK)[LK]=rK[lK];end;end;else QK=MK-0X1;end;nK=nK+0X1;MK=0X02;(zK)[MK]=zK[MK](S(zK,MK+0X1,QK));QK=MK;nK=nK+0X00001;nK=nK+1;do EK=eK[nK];end;nK=nK+0X00001;(zK[1])[EK[0x7]]=zK[2];EK=eK[nK];nK=nK+1;do nK=EK[2];end;end;end;end;end;end;until false;end;else if SK==60 then _K=function(...)local zK=({});local nK=1;local pK=Q();local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});NK=NK-0X00001;local UK=((pK==z and KK or pK));do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;end;if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0x1)};end;end;local QK=(0X00);if UK==pK then else(_)(_K,UK);end;while'I\110\049\Jl\~b\O'do local EK=eK[nK];local dK=(EK[0X01]);nK=nK+0X1;do if not(dK>=0X0a)then if dK>=5 then if not(dK>=7)then do if dK==0X0006 then do zK[EK[3]]=zK[EK[0x02]]^zK[EK[0X00005]];end;else end;end;else do if dK<0X8 then local VK=sK[EK[0X2]];zK[EK[0x3]]=VK[1][VK[2]];else do if dK~=0X09 then repeat local MK,aK=mK,zK;local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[1]==aK and LK[2]>=0)then else local DK=LK[2];do if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;end;(LK)[0X1]=gK[DK];LK[2]=1;end;end;end;until true;local VK=(EK[3]);do return S(zK,VK,VK+EK[2]-2);end;else local MK=nil;local VK=(EK[0X2]);local aK=(VK[0x09]);local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[0X00001]==0x0 then do MK[wK-0X1]={zK,rK[2]};end;else MK[wK-0X1]=sK[rK[0x00002]];end;end;K(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;end;else if dK>=0X02 then do if not(dK<0X3)then do if dK==0X4 then do zK[EK[0X3]]=zK[EK[2]]~=zK[EK[0X005]];end;else do repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0x01]==MK and lK[2]>=0)then else local LK=lK[0X0002];do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;do lK[0x2]=0X1;end;end;end;end;until true;end;do return;end;end;end;else(zK)[0x0]=UK[EK[7]];nK=nK+0x1;nK=nK+1;do nK=nK+1;end;QK=0;(zK)[QK]=zK[QK]();EK=eK[nK];nK=nK+1;if not zK[0]then nK=EK[2];end;end;end;else if dK~=1 then(zK)[EK[0x03]]={S({},0X1,EK[2])};else UK[EK[7]]=zK[EK[3]];end;end;end;else if dK<0Xf then do if not(dK<0XC)then if not(dK<13)then if dK~=0X00e then do zK[0]=UK[EK[7]];end;EK=eK[nK];do nK=nK+0X1;end;zK[0x0]=zK[0][EK[0X6]];nK=nK+0X01;nK=nK+0X1;nK=nK+0X00001;QK=0;(zK)[QK]=zK[QK]();EK=eK[nK];nK=nK+0X1;if not(not zK[0])then else do nK=EK[0x02];end;end;else zK[EK[3]]=UK[EK[0X007]];end;else for VK=EK[3],EK[0X2]do do(zK)[VK]=nil;end;end;end;else if dK~=0xb then(zK)[EK[0X3]]=zK[EK[0x02]]*zK[EK[0X5]];else nK=EK[2];end;end;end;else if dK>=18 then if not(dK<19)then if dK~=20 then do(zK)[EK[0X3]]=r(zK[EK[0x02]],zK[EK[5]]);end;else do(zK)[0]=UK[EK[0X00007]];end;local MK,VK=0X0,(sK[1]);do nK=nK+0X1;end;nK=nK+1;nK=nK+1;do QK=0X00;end;(zK[QK])();QK=QK-1;nK=nK+0X1;nK=nK+0X1;do nK=nK+1;end;do zK[0]=VK[1][VK[2]];end;do EK=eK[nK];end;nK=nK+1;do(zK)[1]=UK[EK[0X07]];end;EK=eK[nK];do nK=nK+0x1;end;do zK[2]=EK[0X7];end;nK=nK+0X001;(zK[MK])(zK[MK+1],zK[MK+0X2]);QK=MK-0X0001;nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0x000]=UK[EK[7]];nK=nK+0X00001;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[1]=EK[7];nK=nK+0X0001;MK=0;(zK[MK])(zK[MK+0X001]);QK=MK-1;end;else if not zK[EK[3]]then nK=EK[0X02];end;end;else do if dK<16 then(zK)[EK[3]]=EK[7];else do if dK~=17 then local VK=(zK[EK[2]]/zK[EK[5]]);(zK)[EK[0X0003]]=VK-VK%0X1;else zK[0]=UK[EK[0X0007]];EK=eK[nK];nK=nK+0X1;zK[0]=zK[0][EK[6]];do EK=eK[nK];end;nK=nK+1;if zK[0]==EK[6]then else do nK=EK[0X03];end;end;end;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=Q();local CK=({[2]=zK,[1]=xK});local QK=(0);local NK,HK=vi(...);NK=NK-0X001;for EK=0x0,NK do do if not(WK>EK)then do break;end;else zK[EK]=HK[EK+0X1];end;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;else if not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X1)};end;end;end;if UK==pK then else _(_K,UK);end;repeat local EK=(eK[nK]);local dK=EK[1];nK=nK+1;if dK>=0X08 then if not(dK>=12)then if dK>=0xa then do if dK~=0Xb then else do(zK)[EK[0X0003]]=zK[EK[2]]^zK[EK[0X0005]];end;end;end;else do if dK==9 then do(zK[3])[EK[0X7]]=zK[0X4];end;EK=eK[nK];do nK=nK+1;end;zK[3][EK[7]]=EK[0X0006];local VK=sK[0X1];do nK=nK+0X001;end;(zK)[4]=VK[1][VK[2]];nK=nK+0x001;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;do(zK[3])[EK[7]]=zK[0X4];end;local MK=0;do nK=nK+0X1;end;QK=MK+0X4-1;(zK)[MK]=zK[MK](S(zK,MK+0x1,QK));local aK=zK[0];QK=MK;EK=eK[nK];nK=nK+1;MK=0;(zK)[MK+0x1]=aK;zK[MK]=aK[EK[0X6]];EK=eK[nK];local gK=(EK[0x2]);nK=nK+0x0001;local rK,wK=gK[9],nil;local lK=(#rK);if lK>0 then wK={};do for LK=0X0001,lK do local DK=(rK[LK]);if DK[0X0001]~=0 then do(wK)[LK-0x1]=sK[DK[0X0002]];end;else(wK)[LK-1]={zK,DK[0X2]};end;end;end;(K)(mK,wK);end;zK[2]=Ri(wK,UK,gK);do nK=nK+1;end;do MK=0X00;end;zK[MK](zK[MK+1],zK[MK+2]);do QK=MK-0X00001;end;nK=nK+1;nK=nK+0x01;nK=nK+1;repeat local LK,DK,ZK=mK,zK,({});for GK,OK in W,LK do do for tK,AK in W,OK do if not(AK[0X1]==DK and AK[2]>=0X0)then else local jK=AK[2];if not(not ZK[jK])then else ZK[jK]={DK[jK]};end;AK[1]=ZK[jK];(AK)[0X00002]=1;end;end;end;end;until 1066038816;return;else(zK)[EK[3]]=g(zK[EK[0X00002]],zK[EK[0X5]]);end;end;end;else if not(dK>=14)then if dK~=0XD then if zK[EK[2]]==zK[EK[5]]then nK=EK[0X03];end;else zK[EK[3]]=UK[EK[0X00007]];end;else if dK>=0Xf then if dK~=0X010 then local VK=sK[0X0];(zK)[0X0]=VK[1][VK[0x2]];nK=nK+0X1;local MK=0;local gK=0X0002;nK=nK+1;EK=eK[nK];nK=nK+0X1;local aK=(zK[0]);do zK[MK+0X1]=aK;end;do(zK)[MK]=aK[EK[6]];end;EK=eK[nK];nK=nK+0X1;zK[2]=EK[7];nK=nK+1;VK=sK[1];zK[0x03]=VK[0X1][VK[0X02]];nK=nK+1;(zK)[0X2]=zK[gK]..zK[gK+0X0001];do nK=nK+0X01;end;(zK)[3]={};EK=eK[nK];nK=nK+0X00001;zK[4]=UK[EK[7]];nK=nK+0X0001;VK=sK[0X002];zK[5]=VK[1][VK[2]];do nK=nK+1;end;MK=4;zK[MK]=zK[MK](zK[MK+0X01]);QK=MK;EK=eK[nK];nK=nK+1;(zK[0X3])[EK[0X07]]=zK[4];EK=eK[nK];nK=nK+0X1;do zK[4]=UK[EK[7]];end;nK=nK+0x00001;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+1;do zK[0X4]=zK[0X04][EK[0X6]];end;nK=nK+1;nK=nK+1;nK=nK+1;VK=sK[1];(zK)[5]=VK[1][VK[0X02]];nK=nK+1;(zK)[0X4]=zK[0X004][zK[0X005]];EK=eK[nK];nK=nK+1;if zK[4]then do nK=EK[0X02];end;end;else do if zK[EK[3]]then nK=EK[2];end;end;end;else for VK=EK[3],EK[2]do do zK[VK]=nil;end;end;end;end;end;else if not(dK>=4)then if dK<0X2 then if dK~=0x1 then local VK=EK[2];local MK=nil;local aK=(VK[9]);local gK=(#aK);if not(gK>0)then else MK={};for wK=0x1,gK do local rK=(aK[wK]);if rK[0x001]~=0 then(MK)[wK-1]=sK[rK[0X2]];else do MK[wK-1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else(zK)[EK[0X0003]]=zK[EK[0X2]]%zK[EK[5]];end;else if dK~=3 then do zK[EK[0X03]]={S({},0X1,EK[0X2])};end;else zK[EK[0X3]]=zK[EK[0x2]]+zK[EK[5]];end;end;else do if dK>=6 then if dK~=7 then do nK=EK[2];end;else zK[EK[3]]=EK[0x007];end;else if dK~=0x5 then local VK=zK[EK[0X2]]/zK[EK[0X5]];(zK)[EK[0x3]]=VK-VK%0X01;else(UK)[EK[0x00007]]=zK[EK[3]];end;end;end;end;end;until false;end;end;end;end;else if SK>=62 then if SK~=0X3F then do _K=function(...)local nK=(1);local zK=({});local pK=Q();local QK,CK=0X00,{[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-0x01;end;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;local UK=((pK==z and KK or pK));if not PK then do HK=nil;end;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X0001,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;while'\082\051\)0\G'do local EK=(eK[nK]);local dK=(EK[1]);do nK=nK+0X1;end;do if not(dK<0xa)then if not(dK<0Xf)then do if not(dK<0X11)then if not(dK<0X12)then if dK==19 then do for VK=EK[0x3],EK[2]do(zK)[VK]=nil;end;end;else if not(zK[EK[3]])then else nK=EK[0X2];end;end;else zK[EK[3]]=EK[7];end;else if dK==16 then else(zK)[EK[0x3]]=zK[EK[0X00002]]<zK[EK[0x005]];end;end;end;else if dK<0XC then if dK~=0Xb then(zK)[0X00001]=UK[EK[0X7]];local VK=(0X00001);nK=nK+0X1;(zK)[2]=zK[0];nK=nK+0X1;zK[VK]=zK[VK](zK[VK+0X01]);do QK=VK;end;nK=nK+1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+1;if zK[0X001]~=EK[6]then nK=EK[3];end;else local MK=(zK[EK[0X2]]);local VK=(EK[3]);do zK[VK+1]=MK;end;do zK[VK]=MK[EK[0x6]];end;end;elseif dK>=0xd then if dK==0Xe then(zK)[EK[3]]={S({},0X0001,EK[2])};else zK[1]=UK[EK[7]];do nK=nK+0X1;end;(zK)[2]=zK[0x0];EK=eK[nK];nK=nK+0X0001;(zK[1])[EK[0X7]]=zK[2];EK=eK[nK];nK=nK+1;nK=EK[0X2];end;else(zK)[EK[3]]=g(zK[EK[0X2]],zK[EK[0x05]]);end;end;else do if dK>=0x5 then if not(dK>=7)then do if dK~=6 then nK=EK[0X2];else zK[EK[0x03]]=UK[EK[7]];end;end;else if not(dK>=8)then zK[0X1]=UK[EK[7]];nK=nK+1;nK=nK+0x0001;nK=nK+1;QK=0X1;(zK[QK])();QK=QK-1;nK=nK+1;nK=nK+1;do nK=nK+1;end;repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0 then local LK=(lK[2]);if not aK[LK]then aK[LK]={MK[LK]};end;lK[1]=aK[LK];lK[2]=0x0001;end;end;end;until true;do return;end;else if dK~=9 then(CK)[EK[2]]=zK[EK[0X3]];else local VK,MK=EK[0X0003],(EK[2]);if MK==0 then else QK=VK+MK-1;end;local gK,wK,aK=nil,nil,(EK[0x5]);if MK==0X001 then do gK,wK=vi(zK[VK]());end;else gK,wK=vi(zK[VK](S(zK,VK+0X001,QK)));end;if aK==0X1 then QK=VK-1;else if aK~=0X00000 then do gK=VK+aK-0X2;end;QK=gK+1;else do gK=gK+VK-0X1;end;do QK=gK;end;end;local rK=0X00000;do for lK=VK,gK do do rK=rK+0X1;end;(zK)[lK]=wK[rK];end;end;end;end;end;end;else if not(dK>=2)then if dK==0X001 then local MK=(nil);local VK=EK[0X2];local aK=VK[9];local gK=#aK;do if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[0x0001]==0X0 then MK[wK-1]={zK,rK[2]};else(MK)[wK-0X1]=sK[rK[0X2]];end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);else(zK)[0X1]=UK[EK[7]];nK=nK+1;(zK)[2]={};EK=eK[nK];nK=nK+1;zK[1][EK[7]]=zK[0X2];EK=eK[nK];nK=nK+0x0001;nK=EK[0X2];end;elseif dK>=0X03 then if dK==4 then zK[EK[0X3]]=true;else zK[EK[3]]=-zK[EK[0x0002]];end;else local VK=(EK[3]);local MK,aK,gK=zK[VK],zK[VK+1],zK[VK+2];(zK)[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);nK=EK[2];end;end;end;end;end;end;end;end;else _K=function(...)local QK=0X0;local nK,zK=0X001,({});local pK=(Q());local NK,HK=vi(...);local UK,CK=(pK==z and KK or pK),({[1]=xK,[2]=zK});NK=NK-0X1;for EK=0x0,NK do do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;end;do if not PK then HK=nil;else if YK then do zK[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+1,NK+1)};end;end;end;end;if UK~=pK then(_)(_K,UK);end;do repeat local EK=eK[nK];local dK=(EK[0X1]);nK=nK+0x00001;do if dK<0X7 then if dK>=3 then if dK<0X5 then if dK~=4 then else(zK)[EK[3]]={S({},1,EK[0X2])};end;else if dK~=6 then do zK[0X00001]=UK[EK[7]];end;nK=nK+1;do(zK)[2]=zK[0];end;EK=eK[nK];do nK=nK+0X1;end;(zK[1])[EK[7]]=zK[0X2];do EK=eK[nK];end;nK=nK+0X01;do zK[1]=UK[EK[0X7]];end;nK=nK+0X0001;nK=nK+1;nK=nK+0X0001;QK=1;(zK[QK])();QK=QK-0x00001;do EK=eK[nK];end;nK=nK+0x1;zK[1]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;(zK)[0X0001]=zK[1][EK[6]];do EK=eK[nK];end;local VK=(EK[2]);local aK=(VK[9]);nK=nK+1;local gK=(#aK);local MK,wK=nil,(0X1);if gK>0X000 then MK={};for rK=0X001,gK do local lK=(aK[rK]);if lK[1]~=0X0 then MK[rK-1]=sK[lK[2]];else(MK)[rK-1]={zK,lK[0x2]};end;end;K(mK,MK);end;zK[2]=Ri(MK,UK,VK);nK=nK+0X001;zK[wK](zK[wK+1]);QK=wK-0x1;do nK=nK+0X0001;end;repeat local rK,lK=mK,(zK);local LK={};for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[2]>=0X0 then local tK=(OK[0X002]);if not LK[tK]then LK[tK]={lK[tK]};end;do OK[1]=LK[tK];end;OK[2]=1;end;end;end;until"\089\093\<\085\033\O\055\050\081";do return;end;else local VK=EK[2];local aK=VK[9];local MK=(nil);local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0x0 then MK[wK-0x1]={zK,rK[2]};else(MK)[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK<1)then if dK==2 then do(zK)[EK[3]]=zK[EK[0x02]]%zK[EK[0x5]];end;else(zK)[EK[3]]=r(zK[EK[0X02]],zK[EK[0x0005]]);end;else local VK=EK[0X00003];local MK=b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end);MK(zK[VK],zK[VK+0X0001],zK[VK+0X2]);QK=VK;do(zK)[VK]=MK;end;do nK=EK[0X02];end;end;end;else if dK<11 then if dK<9 then do if dK~=8 then zK[EK[0X0003]]=EK[7];else(zK)[EK[0X03]]=D(zK[EK[0x002]],zK[EK[5]]);end;end;elseif dK==10 then zK[EK[0X03]]=UK[EK[7]];else(zK)[EK[0X0003]]=zK[EK[2]]/zK[EK[5]];end;else do if dK<13 then do if dK~=0X0000c then zK[EK[3]]=#zK[EK[0X0002]];else local VK=(EK[3]);local MK=(zK[EK[2]]);zK[VK+0x001]=MK;(zK)[VK]=MK[EK[6]];end;end;else if dK==0xe then nK=EK[0x2];else zK[EK[0X3]][zK[EK[0X2]]]=zK[EK[0X005]];end;end;end;end;end;end;until false;end;end;end;else _K=function(...)local zK={};local nK=(0X001);local pK=Q();local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-1;local UK=((pK==z and KK or pK));for EK=0X000,NK do do if not(WK>EK)then do break;end;else do zK[EK]=HK[EK+0X1];end;end;end;end;local QK=(0);do if not PK then HK=nil;else if not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x1,NK+1)};end;end;end;end;if UK~=pK then(_)(_K,UK);end;repeat local EK=eK[nK];local dK=EK[0X1];do nK=nK+1;end;if dK<0x9 then if dK<4 then if dK<0X2 then do if dK==0X00001 then local VK=(EK[0x00002]);local aK=(VK[0X0009]);local MK=nil;local gK=(#aK);if gK>0X00 then MK={};do for wK=1,gK do local rK=(aK[wK]);if rK[0x01]==0 then(MK)[wK-0X0001]={zK,rK[0X2]};else do MK[wK-0X1]=sK[rK[0X2]];end;end;end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);else(zK)[EK[0X0003]]=zK[EK[0x2]][zK[EK[5]]];end;end;else if dK==3 then(zK)[EK[0X00003]]=EK[7];else local VK=EK[0X3];local aK,MK=zK[VK],(EK[0X05]-0X1)*50;do for gK=1,EK[2]do aK[MK+gK]=zK[VK+gK];end;end;end;end;elseif not(dK<0X00006)then do if dK<7 then else if dK~=8 then if zK[EK[2]]==zK[EK[5]]then do nK=EK[3];end;end;else do zK[0X1]=UK[EK[0x00007]];end;nK=nK+1;(zK)[0X2]=zK[0X0];EK=eK[nK];do nK=nK+1;end;(zK[0X00001])[EK[0X7]]=zK[2];do EK=eK[nK];end;do nK=nK+1;end;(zK)[1]=UK[EK[7]];do nK=nK+0X1;end;QK=0X1;(zK[QK])();QK=QK-1;do nK=nK+0X01;end;repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0x00001]==MK and lK[0x0002]>=0X00000 then local LK=lK[2];do if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;end;lK[1]=aK[LK];(lK)[2]=0X00001;end;end;end;until true;return;end;end;end;else if dK~=5 then zK[EK[3]]={S({},0X1,EK[0X2])};else do zK[EK[3]]=zK[EK[0X00002]]>zK[EK[5]];end;end;end;else if not(dK<0Xd)then if dK<15 then if dK~=14 then if not(zK[EK[2]]<zK[EK[0x5]])then do nK=EK[0X3];end;end;else zK[EK[3]]=zK[EK[2]]-zK[EK[0X5]];end;else if not(dK<0X10)then if dK==0X011 then zK[EK[0X0003]]=CK[EK[0X2]];else if not(zK[EK[2]]<zK[EK[5]])then else nK=EK[3];end;end;else do zK[EK[3]]=-zK[EK[2]];end;end;end;elseif not(dK>=11)then if dK~=10 then(zK)[EK[3]]=UK[EK[0X0007]];else local VK,MK=EK[0X003],(EK[2]);do QK=VK+MK-1;end;repeat local aK,gK,wK=mK,zK,{};for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[1]==gK and DK[0X2]>=0X0)then else local ZK=(DK[2]);if not wK[ZK]then do(wK)[ZK]={gK[ZK]};end;end;(DK)[1]=wK[ZK];do(DK)[0X00002]=0X1;end;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));end;else if dK==12 then local VK=zK[EK[0X2]]/zK[EK[0X5]];zK[EK[0x3]]=VK-VK%1;else nK=EK[0X02];end;end;end;until false;end;end;end;else do if SK<0X43 then if SK>=65 then if SK~=0x42 then _K=function(...)local zK={};local nK=(1);local pK=(Q());local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;local CK,QK={[1]=xK,[2]=zK},(0);for EK=0X0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;if not PK then do HK=nil;end;elseif not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X01];nK=nK+0X1;if dK<0X06 then do if not(dK<3)then do if not(dK>=0X4)then do zK[EK[3]]=l(zK[EK[0x0002]]);end;else do if dK~=5 then do(zK)[EK[0X3]]=UK[EK[7]];end;else zK[0X1]=UK[EK[7]];do nK=nK+0x1;end;(zK)[2]=zK[0];EK=eK[nK];nK=nK+1;do(zK[1])[EK[7]]=zK[2];end;local MK=nil;EK=eK[nK];nK=nK+1;do(zK)[0X1]=UK[EK[0X0007]];end;do nK=nK+1;end;local wK=0X1;do nK=nK+1;end;nK=nK+1;QK=1;(zK[QK])();QK=QK-0X01;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;zK[0X0001]=UK[EK[0X007]];EK=eK[nK];do nK=nK+1;end;zK[0x0001]=zK[0X1][EK[0X0006]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X001;local VK=EK[0x0002];local aK=VK[0X9];local gK=(#aK);do if not(gK>0)then else MK={};for rK=1,gK do local lK=aK[rK];do if lK[1]~=0x0 then do(MK)[rK-1]=sK[lK[0X02]];end;else(MK)[rK-1]={zK,lK[2]};end;end;end;(K)(mK,MK);end;end;(zK)[0X2]=Ri(MK,UK,VK);nK=nK+1;(zK[wK])(zK[wK+0X1]);do QK=wK-0x0001;end;nK=nK+0X001;repeat local rK,lK=mK,zK;local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[1]==lK and OK[2]>=0)then else local tK=OK[2];if not LK[tK]then LK[tK]={lK[tK]};end;(OK)[1]=LK[tK];OK[0X02]=1;end;end;end;until true;return;end;end;end;end;else if not(dK<0X01)then if dK==0X2 then(zK)[EK[3]]=zK[EK[0X02]]<zK[EK[0X5]];else local VK=EK[2];local MK=zK[VK];do for aK=VK+1,EK[5]do do MK=MK..zK[aK];end;end;end;(zK)[EK[0x3]]=MK;end;else local VK,MK=EK[0X2],nil;local aK=VK[0X9];local gK=#aK;if not(gK>0x0)then else do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);if rK[0x1]~=0x00 then MK[wK-0X1]=sK[rK[0X0002]];else MK[wK-1]={zK,rK[2]};end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=0X9)then if dK<7 then do(zK)[EK[0x3]]=L(zK[EK[0X002]],zK[EK[5]]);end;else if dK~=8 then zK[EK[0X03]]={S({},0X00001,EK[0X002])};else local VK=EK[0X00003];local MK=EK[0X002];QK=VK+MK-0x1;repeat local aK,gK=mK,zK;local wK={};for rK,lK in W,aK do do for LK,DK in W,lK do if DK[1]==gK and DK[2]>=0 then local ZK=(DK[0X2]);do if not wK[ZK]then wK[ZK]={gK[ZK]};end;end;DK[1]=wK[ZK];(DK)[2]=0x0001;end;end;end;end;until true;return zK[VK](S(zK,VK+0X00001,QK));end;end;else if not(dK<11)then if dK==0Xc then else do for VK=EK[0X3],EK[0x02]do zK[VK]=nil;end;end;end;else do if dK~=10 then do(zK)[EK[0X3]]=EK[7];end;else nK=EK[2];end;end;end;end;end;end;end;else do _K=function(...)local zK={};local nK=0X01;local pK=(Q());local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-1;do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0x0,S(HK,WK+1,NK+1)};end;local QK=0;local UK=((pK==z and KK or pK));if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+1;if not(dK<8)then if not(dK>=12)then if dK>=0XA then if dK==11 then local VK=(EK[3]);local MK=EK[2];if MK==0 then else QK=VK+MK-0X1;end;local gK,wK=nil,(nil);local aK=EK[5];if MK==0X001 then gK,wK=vi(zK[VK]());else do gK,wK=vi(zK[VK](S(zK,VK+0X01,QK)));end;end;if aK==0X00001 then QK=VK-0X00001;else if aK~=0 then gK=VK+aK-2;QK=gK+0X0001;else do gK=gK+VK-0X1;end;do QK=gK;end;end;local rK=0X000;for lK=VK,gK do rK=rK+0X0001;zK[lK]=wK[rK];end;end;else end;else if dK==0X9 then do if zK[EK[2]]<zK[EK[5]]then nK=EK[0X00003];end;end;else(zK)[0X00001]=UK[EK[7]];nK=nK+1;zK[2]=zK[0];EK=eK[nK];do nK=nK+0X1;end;zK[0X1][EK[0X7]]=zK[0x0002];EK=eK[nK];nK=nK+1;(zK)[0x1]=UK[EK[0X7]];nK=nK+1;do nK=nK+1;end;nK=nK+1;QK=0X0001;(zK[QK])();do QK=QK-0X1;end;EK=eK[nK];nK=nK+0X00001;local MK=(nil);do(zK)[0X0001]=UK[EK[0X00007]];end;local wK=0X1;EK=eK[nK];nK=nK+1;zK[0X1]=zK[0X1][EK[6]];EK=eK[nK];nK=nK+0X1;local VK=(EK[2]);local aK=(VK[9]);local gK=#aK;do if gK>0 then MK={};for rK=0X01,gK do local lK=(aK[rK]);if lK[0x001]~=0X00 then MK[rK-1]=sK[lK[2]];else do MK[rK-1]={zK,lK[0x002]};end;end;end;(K)(mK,MK);end;end;do zK[2]=Ri(MK,UK,VK);end;nK=nK+0X01;zK[wK](zK[wK+0x001]);do QK=wK-1;end;nK=nK+1;repeat local rK,lK=mK,(zK);local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[0x01]==lK and OK[0X2]>=0X0)then else local tK=(OK[0x00002]);if not LK[tK]then do LK[tK]={lK[tK]};end;end;OK[1]=LK[tK];do(OK)[2]=1;end;end;end;end;until true;return;end;end;else if dK>=0XE then do if dK==15 then local VK,MK=EK[0X2],nil;local aK=VK[9];local gK=#aK;if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-0X1]=sK[rK[2]];else MK[wK-1]={zK,rK[2]};end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else do(zK)[EK[0X003]]=EK[7];end;end;end;else if dK~=13 then(zK)[EK[3]]=zK[EK[0X02]]*zK[EK[5]];else(zK)[EK[3]]=UK[EK[7]];end;end;end;else if dK>=4 then do if not(dK>=6)then if dK~=5 then(zK)[EK[0x3]]=-zK[EK[0X2]];else zK[EK[3]]=CK[EK[0X2]];end;else if dK~=7 then(zK)[EK[3]]=true;else(zK)[EK[3]]={S({},1,EK[2])};end;end;end;else do if not(dK>=2)then do if dK~=0X1 then zK[EK[3]]=#zK[EK[0X00002]];else do zK[EK[0X03]]=zK[EK[0x00002]]~=zK[EK[5]];end;end;end;else if dK==3 then zK[EK[0x3]]=zK[EK[0X2]]<=zK[EK[0X00005]];else nK=EK[2];end;end;end;end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK=({});local CK={[1]=xK,[2]=zK};local QK=(0);local pK=(Q());local NK,HK=vi(...);local UK=(pK==z and KK or pK);do NK=NK-1;end;for EK=0,NK do do if WK>EK then do(zK)[EK]=HK[EK+1];end;else break;end;end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;do if UK~=pK then(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];do nK=nK+1;end;if not(dK<7)then if dK>=11 then if not(dK<13)then do if dK==14 then(zK)[EK[0X0003]]=zK[EK[0X2]]*zK[EK[0X005]];else zK[EK[3]]=not zK[EK[2]];end;end;else if dK==0Xc then else zK[EK[3]]=zK[EK[2]];end;end;else if dK<0X0009 then if dK~=8 then nK=EK[0X2];else zK[EK[0x3]]=CK[EK[0x2]];end;else do if dK==10 then(zK)[EK[3]]=EK[0X7];else(zK)[0X1]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X1;nK=nK+0x0001;zK[2]=zK[0x0];do EK=eK[nK];end;nK=nK+0x001;do(zK[1])[EK[7]]=zK[2];end;do EK=eK[nK];end;nK=nK+0x1;zK[0X001]=UK[EK[7]];nK=nK+0X0001;nK=nK+1;nK=nK+1;QK=1;(zK[QK])();local wK=(0X1);QK=QK-0X0001;EK=eK[nK];do nK=nK+1;end;local MK=(nil);(zK)[0X0001]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;do(zK)[1]=zK[1][EK[0X6]];end;do EK=eK[nK];end;nK=nK+0X1;local VK=EK[0x2];local aK=VK[9];local gK=#aK;if gK>0 then MK={};for rK=0X1,gK do local lK=aK[rK];if lK[0X1]~=0X00 then do MK[rK-1]=sK[lK[2]];end;else do MK[rK-1]={zK,lK[2]};end;end;end;K(mK,MK);end;(zK)[0X002]=Ri(MK,UK,VK);nK=nK+1;zK[wK](zK[wK+0X00001]);do QK=wK-0X01;end;nK=nK+0x1;nK=nK+0X0001;nK=nK+1;repeat local rK,lK,LK=mK,zK,{};for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[0x1]==lK and OK[0x2]>=0)then else local tK=OK[2];if not(not LK[tK])then else(LK)[tK]={lK[tK]};end;OK[0X1]=LK[tK];do(OK)[0x2]=0X0001;end;end;end;end;until true;return;end;end;end;end;else if dK>=3 then if not(dK<0X05)then if dK~=0X00006 then local VK=(EK[0X0002]);local MK=nil;local aK=(VK[9]);local gK=(#aK);do if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[0X001]==0 then(MK)[wK-0X00001]={zK,rK[0X0002]};else do MK[wK-1]=sK[rK[0X02]];end;end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);else zK[EK[3]]=-zK[EK[0X02]];end;else if dK==4 then do zK[EK[0X3]]={S({},1,EK[2])};end;else zK[EK[3]]=UK[EK[7]];end;end;else do if not(dK>=0X0001)then do for VK=EK[0x03],EK[2]do zK[VK]=nil;end;end;else if dK~=2 then do zK[EK[0X03]]=l(zK[EK[2]]);end;else do zK[EK[0x003]]=zK[EK[2]]>=zK[EK[0X5]];end;end;end;end;end;end;end;end;end;else if not(SK<0X44)then if SK~=0X000045 then _K=function(...)local nK,zK=1,({});local pK=Q();local QK=(0);local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-0X001;local UK=(pK==z and KK or pK);do for EK=0X0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;end;if not PK then do HK=nil;end;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;if UK~=pK then(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0x1;do if dK<0x6 then if not(dK<0X0003)then if dK>=4 then if dK~=5 then zK[EK[3]]=zK[EK[0X002]]^zK[EK[0X5]];else(zK)[EK[0X03]]=zK[EK[0X0002]]+zK[EK[0X5]];end;else zK[EK[0X3]]=EK[0X7];end;else if not(dK<0x1)then if dK==0X2 then nK=EK[0X00002];else if not(zK[EK[2]]<zK[EK[0X5]])then else nK=EK[0X3];end;end;else(zK)[EK[0X3]]={S({},1,EK[0x2])};end;end;else if dK>=0X9 then if not(dK<11)then if dK~=0X0c then zK[0X00001]=UK[EK[7]];nK=nK+0X01;nK=nK+0x1;nK=nK+0x0001;do zK[0X2]=zK[0x0];end;EK=eK[nK];nK=nK+0X001;zK[1][EK[0X7]]=zK[2];EK=eK[nK];nK=nK+0X1;(zK)[1]=UK[EK[7]];nK=nK+1;do QK=0x1;end;(zK[QK])();QK=QK-0x001;do nK=nK+0X1;end;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=lK[0x2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[0X001]=aK[LK];lK[0x2]=0X1;end;end;end;until true;return;else local MK=nil;local VK=(EK[0X2]);local aK=VK[0X0009];local gK=(#aK);if not(gK>0)then else MK={};do for wK=0x0001,gK do local rK=(aK[wK]);if rK[1]==0X00000 then(MK)[wK-1]={zK,rK[2]};else do(MK)[wK-1]=sK[rK[2]];end;end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else if dK==0Xa then local VK=(EK[0X3]);local aK,gK=zK[VK+1],zK[VK+2];local MK=(zK[VK]);zK[VK]=b(function()do for wK=MK,aK,gK do o(true,wK);end;end;end);nK=EK[2];else do(zK)[EK[0X003]]=zK[EK[0X2]]%zK[EK[5]];end;end;end;else if dK>=0X07 then if dK==0x008 then if not(not zK[EK[0X3]])then else nK=EK[2];end;else zK[EK[0X3]]=UK[EK[0X7]];end;else end;end;end;end;end;end;else do _K=function(...)local nK=(1);local zK={};local pK=(Q());local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local QK,UK=0,(pK==z and KK or pK);do NK=NK-0X1;end;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+1)};end;if UK~=pK then(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK<8 then do if dK>=4 then if dK<6 then if dK~=0x005 then zK[0x1]=UK[EK[0X7]];nK=nK+1;(zK)[2]={};do EK=eK[nK];end;nK=nK+0X01;(zK[0X1])[EK[0x07]]=zK[0x0002];EK=eK[nK];nK=nK+0X1;nK=EK[0X2];else if not(zK[EK[0x00002]]<=zK[EK[0X5]])then else do nK=EK[0X0003];end;end;end;else if dK~=0X7 then(zK)[1]=UK[EK[0X07]];do nK=nK+0x1;end;zK[0X00002]=zK[0];EK=eK[nK];do nK=nK+1;end;do zK[0x001][EK[7]]=zK[0x2];end;else do(zK)[EK[3]]=zK[EK[0X02]]==zK[EK[0X005]];end;end;end;else if dK>=2 then if dK~=3 then do zK[EK[0x3]]=zK[EK[2]]<zK[EK[0x5]];end;else zK[EK[3]]=UK[EK[7]];end;else if dK==0X001 then do zK[EK[3]]=zK[EK[0X2]]-zK[EK[0X05]];end;else zK[EK[0X00003]]={S({},1,EK[2])};end;end;end;end;else if not(dK<0xC)then if not(dK<0xE)then if not(dK<0XF)then if dK==16 then do zK[0X1]=UK[EK[7]];end;nK=nK+0X001;nK=nK+0X0001;local VK=(0X00001);nK=nK+1;(zK)[2]=zK[0X0000];nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];do nK=nK+1;end;if zK[0X1]~=EK[0x6]then do nK=EK[3];end;end;else do nK=EK[2];end;end;else local VK=EK[0X02];local MK=nil;local aK=(VK[9]);local gK=(#aK);do if not(gK>0)then else MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X1]~=0X0 then(MK)[wK-0X1]=sK[rK[2]];else(MK)[wK-0X1]={zK,rK[0X2]};end;end;end;K(mK,MK);end;end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else if dK~=13 then do zK[EK[3]]=EK[7];end;else local VK=(EK[0X0003]);local MK,aK=zK[VK]();if not(MK)then else do nK=EK[2];end;zK[VK+3]=aK;end;end;end;else if not(dK<10)then do if dK==0Xb then zK[0X0001]=UK[EK[0X0007]];do nK=nK+0X00001;end;do QK=0X1;end;(zK[QK])();do QK=QK-1;end;nK=nK+0X1;do repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do do for rK,lK in W,wK do do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[0X02]);do if not aK[LK]then aK[LK]={MK[LK]};end;end;do(lK)[1]=aK[LK];end;(lK)[0X02]=1;end;end;end;end;end;until true;end;return;else do(zK)[EK[3]]=zK[EK[0X02]]>zK[EK[5]];end;end;end;else if dK~=0X9 then if zK[EK[0X2]]==zK[EK[5]]then nK=EK[3];end;else end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0x00001,({});local pK=(Q());local UK=(pK==z and KK or pK);local NK,HK=vi(...);do NK=NK-0X1;end;local QK=0X0;local CK=({[1]=xK,[2]=zK});for EK=0X0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+1)};end;if UK~=pK then(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[0X1];do nK=nK+1;end;if not(dK>=10)then do if dK>=5 then if dK>=7 then do if dK>=0X8 then do if dK~=9 then(zK)[EK[0x003]]=#zK[EK[0X02]];else local VK=(EK[0X2]);local aK=VK[0X9];local MK=nil;local gK=#aK;if not(gK>0X000)then else MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0X0 then MK[wK-0X1]=sK[rK[0X2]];else(MK)[wK-1]={zK,rK[0x00002]};end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else local VK=EK[3];local MK,aK,gK=zK[VK]();do if not(MK)then else(zK)[VK+1]=aK;do zK[VK+0X2]=gK;end;nK=EK[0x2];end;end;end;end;else if dK==6 then do zK[0X7]=UK[EK[0x7]];end;EK=eK[nK];do nK=nK+0X1;end;zK[0x7]=zK[7][EK[6]];EK=eK[nK];nK=nK+1;do zK[0X008]=UK[EK[0X7]];end;nK=nK+0X1;do nK=nK+0X0001;end;EK=eK[nK];nK=nK+1;local VK=0x0007;do zK[0X0009]=zK[0X006][EK[0X0006]];end;nK=nK+0X1;nK=nK+0X1;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+0X00001],zK[VK+0x2]);QK=VK;do EK=eK[nK];end;nK=nK+1;if not(zK[7])then else nK=EK[0X2];end;else(zK)[EK[0X00003]]=zK[EK[2]];end;end;else if not(dK<0X0002)then do if dK<3 then zK[4]=zK[0X00003][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;zK[5]=UK[EK[0X07]];do nK=nK+0X1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0x05]=zK[5][EK[6]];EK=eK[nK];nK=nK+1;if zK[0X04]==zK[5]then else do nK=EK[0X3];end;end;else do if dK==0x004 then zK[1]=UK[EK[7]];do nK=nK+0X1;end;do nK=nK+0X1;end;do EK=eK[nK];end;local VK=(1);nK=nK+1;zK[2]=UK[EK[7]];nK=nK+0X1;zK[VK](zK[VK+1]);QK=VK-0X00001;nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;zK[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;zK[1]=zK[0X1][EK[0X06]];do EK=eK[nK];end;nK=nK+0X00001;local MK=zK[1];VK=0X01;(zK)[VK+1]=MK;(zK)[VK]=MK[EK[0x0006]];EK=eK[nK];nK=nK+1;(zK)[3]=UK[EK[7]];do nK=nK+0x01;end;nK=nK+0x001;nK=nK+1;do VK=1;end;(zK[VK])(zK[VK+1],zK[VK+0X2]);QK=VK-0x1;EK=eK[nK];do nK=nK+1;end;nK=EK[0X2];else do zK[EK[3]]=EK[7];end;end;end;end;end;else if dK==0X001 then for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;else zK[4]=UK[EK[7]];EK=eK[nK];nK=nK+0X00001;(zK)[5]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+1;end;local VK=0X4;nK=nK+0X1;local MK,aK=2,(4);do if MK==0X0 then else do QK=VK+MK-0X1;end;end;end;local gK,wK=nil,nil;do if MK==0X1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK==1 then QK=VK-0x01;else if aK~=0 then do gK=VK+aK-0X2;end;QK=gK+1;else do gK=gK+VK-0X1;end;QK=gK;end;local lK=0X0000;for LK=VK,gK do do lK=lK+0X1;end;zK[LK]=wK[lK];end;end;do nK=nK+0X1;end;nK=nK+0x1;EK=eK[nK];do nK=nK+0x01;end;VK=4;local rK=b(function(...)o();for lK,LK in...do(o)(true,lK,LK);end;end);(rK)(zK[VK],zK[VK+0X1],zK[VK+0X02]);do QK=VK;end;(zK)[VK]=rK;nK=EK[2];end;end;end;end;else if not(dK<15)then if not(dK>=0X11)then if dK~=0X10 then zK[0x7]=zK[0X6][EK[0X6]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X8]=UK[EK[0X7]];local VK=8;nK=nK+1;zK[0X9]=zK[0X2];nK=nK+1;zK[VK]=zK[VK](zK[VK+0x1]);do QK=VK;end;EK=eK[nK];nK=nK+1;if zK[7]==zK[0X0008]then else nK=EK[3];end;else(zK)[0X1]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;zK[0X1]=zK[0X1][EK[0X6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;if zK[1]~=EK[6]then else do nK=EK[0x3];end;end;end;else if not(dK>=18)then nK=EK[2];else if dK~=0x00013 then zK[EK[0X3]]=not zK[EK[0X2]];else zK[EK[3]]={S({},0X1,EK[0x2])};end;end;end;else do if not(dK>=12)then do if dK==0Xb then do repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[0x2]>=0)then else local LK=(lK[0X2]);if not aK[LK]then aK[LK]={MK[LK]};end;lK[0X1]=aK[LK];do(lK)[2]=1;end;end;end;end;until true;end;return;else do(zK)[0X1]=UK[EK[0X7]];end;nK=nK+0X001;nK=nK+1;do nK=nK+1;end;(zK)[0X00002]=zK[0x00000];EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[2];EK=eK[nK];nK=nK+1;zK[0X001]=UK[EK[7]];do nK=nK+1;end;QK=0x1;(zK[QK])();local VK=(1);QK=QK-1;nK=nK+0X0001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do zK[1]=UK[EK[0X7]];end;EK=eK[nK];do nK=nK+1;end;local aK=2;zK[1]=zK[0X00001][EK[0X06]];EK=eK[nK];nK=nK+1;do zK[2]=UK[EK[7]];end;nK=nK+1;(zK[VK])(zK[VK+0x1]);do QK=VK-0x0001;end;local MK=sK[0X00];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do zK[1]=UK[EK[7]];end;nK=nK+0x1;zK[0x002]=MK[0x001][MK[2]];nK=nK+0X0001;VK=1;local gK=(4);if aK~=0 then QK=VK+aK-1;end;local wK,rK=nil,(nil);if aK==1 then wK,rK=vi(zK[VK]());else wK,rK=vi(zK[VK](S(zK,VK+1,QK)));end;if gK~=0X1 then if gK~=0X0 then wK=VK+gK-2;QK=wK+1;else do wK=wK+VK-1;end;QK=wK;end;local LK=(0);for DK=VK,wK do LK=LK+0X1;do zK[DK]=rK[LK];end;end;else QK=VK-0x0001;end;nK=nK+0x00001;nK=nK+1;EK=eK[nK];nK=nK+1;VK=0x1;local lK=b(function(...)(o)();for LK,DK in...do(o)(true,LK,DK);end;end);(lK)(zK[VK],zK[VK+0X1],zK[VK+0X2]);QK=VK;zK[VK]=lK;nK=EK[2];end;end;else do if not(dK>=0Xd)then(zK)[0X07]=UK[EK[7]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;zK[7]=zK[7][EK[0x6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[8]=UK[EK[0X7]];end;EK=eK[nK];do nK=nK+0X00001;end;(zK)[9]=zK[6][EK[6]];do nK=nK+1;end;nK=nK+1;local VK=(7);nK=nK+0X001;zK[VK](zK[VK+0x1],zK[VK+0X00002]);QK=VK-0X1;do EK=eK[nK];end;nK=nK+0X01;nK=EK[0x00002];else do if dK~=14 then(zK)[EK[3]]=UK[EK[7]];else end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK<0X0052)then if not(SK>=88)then if not(SK>=0X55)then if not(SK>=0X53)then _K=function(...)local nK=0X001;local zK=({});local CK={[2]=zK,[1]=xK};local pK=(Q());local NK,HK=vi(...);do NK=NK-1;end;local QK=0x0;local UK=(pK==z and KK or pK);do for EK=0X00000,NK do if WK>EK then do(zK)[EK]=HK[EK+1];end;else break;end;end;end;if not PK then HK=nil;else if YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X0001,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;repeat local EK=(eK[nK]);local dK=(EK[0x001]);nK=nK+0X1;do if dK<58 then if not(dK<29)then if not(dK>=43)then do if dK<0X0024 then if not(dK<0X00020)then if not(dK<0x22)then if dK~=35 then(zK)[EK[0X3]]=zK[EK[0x002]]==zK[EK[5]];else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if not(MK)then else do(zK)[VK+1]=aK;end;(zK)[VK+0x2]=gK;nK=EK[0X0002];end;end;else do if dK==0X021 then(zK)[EK[3]]=zK[EK[0X2]]*EK[0x0006];else local VK=(EK[2]);zK[EK[0X3]]=zK[VK]..zK[VK+0X0001];end;end;end;else if dK>=30 then do if dK==0X1F then if not(zK[EK[0X2]]<zK[EK[0X5]])then else nK=EK[0X3];end;else zK[EK[0X003]]=zK[EK[2]]>EK[6];end;end;else(zK)[EK[0X3]]=L(zK[EK[2]],zK[EK[0X00005]]);end;end;elseif not(dK>=39)then if dK>=0X25 then do if dK~=38 then zK[EK[0X3]]=zK[EK[2]]-EK[0X006];else if EK[0X5]==0X00CE then nK=nK-0X1;eK[nK]={[0X2]=(EK[2]-26),[0X1]=0X5f,[0X0003]=(EK[0X03]-26)};else(zK)[EK[3]]=-zK[EK[2]];end;end;end;else local VK=EK[3];local MK,aK=zK[VK]();if MK then nK=EK[2];zK[VK+0x003]=aK;end;end;else if dK<41 then if dK~=40 then(zK)[EK[0X3]]=zK[EK[0X0002]]>=zK[EK[0X5]];else zK[EK[0x3]]=EK[0X7]>EK[0X0006];end;else do if dK==42 then if EK[0X5]==136 then nK=nK-1;(eK)[nK]={[2]=(EK[2]-198),[0X1]=59,[3]=(EK[0X3]-198)};else local VK,MK=EK[3],NK-WK;if not(MK<0)then else MK=-1;end;for aK=VK,VK+MK do(zK)[aK]=HK[WK+(aK-VK)+0X001];end;QK=VK+MK;end;else repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X00001]==MK and lK[2]>=0X0)then else local LK=lK[0x2];do if not aK[LK]then aK[LK]={MK[LK]};end;end;lK[1]=aK[LK];(lK)[0X2]=1;end;end;end;until true;do return zK[EK[3]]();end;end;end;end;end;end;else if not(dK>=50)then do if dK<46 then if dK<0X02c then zK[EK[3]]=w(zK[EK[2]],zK[EK[5]]);else if dK==45 then(zK)[EK[3]]=zK[EK[2]]<zK[EK[5]];else if not(not(zK[EK[0X2]]<zK[EK[0X005]]))then else nK=EK[0X003];end;end;end;else do if dK>=0X30 then if dK==0X00031 then do zK[EK[3]]={S({},1,EK[0x2])};end;else zK[EK[3]]=EK[0x007]~=zK[EK[5]];end;else if dK==0X2F then zK[EK[0X3]]=zK[EK[0X0002]]/EK[0X0006];else(zK)[EK[3]]=zK[EK[2]]%zK[EK[5]];end;end;end;end;end;elseif not(dK<54)then if dK<0X38 then if dK~=0X037 then do zK[EK[3]]=zK[EK[2]][EK[6]];end;else local VK=(EK[3]);local MK=b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end);MK(zK[VK],zK[VK+0X01],zK[VK+2]);QK=VK;(zK)[VK]=MK;nK=EK[2];end;else do if dK~=0X000039 then local VK=(EK[0x00003]);do QK=VK+EK[0X2]-1;end;(zK[VK])(S(zK,VK+1,QK));QK=VK-0X1;else zK[EK[3]]=true;end;end;end;else if dK>=0X34 then if dK~=53 then local MK=(EK[2]);local VK=(EK[0x3]);if MK~=0 then do QK=VK+MK-0X1;end;end;local gK,wK,aK=nil,nil,(EK[0x5]);if MK==1 then gK,wK=vi(zK[VK]());else do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK~=1 then do if aK~=0X0000 then gK=VK+aK-2;QK=gK+0X1;else gK=gK+VK-1;do QK=gK;end;end;end;local rK=(0);for lK=VK,gK do rK=rK+0x1;(zK)[lK]=wK[rK];end;else QK=VK-0x0001;end;else if EK[5]~=152 then local VK=EK[0x003];for MK=VK,VK+(EK[2]-1)do do zK[MK]=HK[WK+(MK-VK)+0x1];end;end;else nK=nK-0X1;(eK)[nK]={[1]=38,[2]=(EK[0X002]-0X7E),[0x003]=(EK[3]-0X7E)};end;end;else if dK==0x033 then if EK[0X5]==166 then nK=nK-0X01;(eK)[nK]={[3]=(EK[3]-0X30),[0X0002]=(EK[2]-48),[1]=0X35};else zK[EK[3]]=not zK[EK[0X2]];end;else local VK=EK[3];local MK=(b(function(...)(o)();do for aK in...do o(true,aK);end;end;end));(MK)(zK[VK],zK[VK+1],zK[VK+0X2]);QK=VK;zK[VK]=MK;nK=EK[2];end;end;end;end;else if not(dK<14)then if not(dK>=0X15)then if dK>=17 then if not(dK>=0X00013)then do if dK~=0X12 then local VK=EK[0X3];QK=VK+EK[2]-1;(zK)[VK]=zK[VK](S(zK,VK+1,QK));QK=VK;else if not(not zK[EK[3]])then else nK=EK[2];end;end;end;else if dK==0X14 then CK[EK[2]]=zK[EK[3]];else local VK=(EK[3]);zK[VK](zK[VK+0X00001]);QK=VK-0X1;end;end;else if not(dK<0XF)then if dK==16 then zK[EK[3]]=EK[0x7]>=EK[0X6];else local VK=EK[3];local MK,aK=zK[VK],zK[VK+0x00001];local gK=(zK[VK+2]);zK[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);nK=EK[0X2];end;else do(UK)[EK[0X007]]=zK[EK[3]];end;end;end;else if dK>=25 then if not(dK<0X1B)then do if dK==28 then zK[EK[0X03]]=l(zK[EK[2]]);else(zK)[EK[0X3]]=zK[EK[2]];end;end;else do if dK==26 then do(zK)[EK[0X00003]]=CK[EK[2]];end;else local VK=zK[EK[0x002]];(zK)[EK[3]]=VK..VK;end;end;end;else if dK<23 then if dK~=0x16 then local VK=EK[3];local MK,aK=zK[VK]();if MK then do for gK=1,EK[5]do(zK)[VK+gK]=aK[gK];end;end;do nK=EK[0X0002];end;end;else(zK)[EK[0X3]]=zK[EK[0X2]]~=EK[6];end;else if dK==0x18 then(zK)[EK[0X3]]=zK[EK[0X00002]]*zK[EK[5]];else(zK)[EK[0X3]]=zK[EK[0x02]]^zK[EK[5]];end;end;end;end;else if not(dK<7)then do if not(dK>=10)then if not(dK<0X8)then if dK~=9 then local VK=EK[3];do zK[VK]=zK[VK](S(zK,VK+1,QK));end;QK=VK;else do zK[EK[3]][EK[0X7]]=EK[6];end;end;else do if EK[5]~=0x16 then for VK=EK[3],EK[0X2]do(zK)[VK]=nil;end;else nK=nK-1;do(eK)[nK]={[3]=(EK[3]-0X0dF),[0X1]=0X4b,[2]=(EK[0X02]-0xDF)};end;end;end;end;else if dK>=0X0000c then if dK~=0Xd then nK=EK[0X2];else(zK)[EK[3]]=zK[EK[2]]<EK[0X6];end;else if dK==11 then do if zK[EK[2]]<=zK[EK[0x5]]then nK=EK[0X3];end;end;else zK[EK[3]]=zK[EK[0X00002]]>=EK[0X0006];end;end;end;end;else if not(dK>=0X00003)then do if dK>=1 then if dK==0X2 then do repeat local gK={};local MK,aK=mK,zK;do for wK,rK in W,MK do for lK,LK in W,rK do do if LK[1]==aK and LK[0X2]>=0X0 then local DK=LK[2];if not gK[DK]then(gK)[DK]={aK[DK]};end;(LK)[0X1]=gK[DK];(LK)[2]=1;end;end;end;end;end;until true;end;local VK=(EK[3]);return zK[VK](zK[VK+0X1]);else do(zK)[EK[0X03]]=r(zK[EK[2]],zK[EK[0X5]]);end;end;else do zK[EK[0X3]]=EK[7]-EK[0X6];end;end;end;else if not(dK>=5)then if dK~=0X4 then zK[EK[0X00003]]=EK[0X0007]^zK[EK[0x00005]];else do(zK)[EK[3]]=zK[EK[0X2]]%EK[0x006];end;end;else if dK==0X6 then(zK)[EK[3]]=UK[EK[0x7]];else zK[EK[0X3]]=zK[EK[0x2]]<=EK[0X6];end;end;end;end;end;end;else do if dK>=0X0057 then if dK>=0x000066 then if not(dK>=109)then if not(dK<0x69)then if dK>=107 then if dK~=0x06C then local VK=EK[0X3];zK[VK](zK[VK+1],zK[VK+2]);QK=VK-0x1;else zK[EK[3]][zK[EK[2]]]=EK[0x6];end;else do if dK~=106 then zK[EK[0X00003]]=zK[EK[2]]>zK[EK[0X0005]];else(Ji)[EK[2]]=zK[EK[3]];end;end;end;else if dK<0x67 then do if EK[7]<=zK[EK[0X0005]]then nK=EK[3];end;end;else if dK~=104 then local VK=(EK[3]);local aK,MK=zK[VK],((EK[5]-0X1)*0X0032);for gK=0x1,QK-VK do do aK[MK+gK]=zK[VK+gK];end;end;else(zK[EK[0X03]])[EK[7]]=zK[EK[5]];end;end;end;else if dK>=0X71 then if not(dK>=115)then if dK==114 then zK[EK[3]]=EK[0X7];else if not(not(zK[EK[2]]<=EK[0X6]))then else nK=EK[3];end;end;else if dK==116 then if zK[EK[2]]~=EK[6]then nK=EK[0X3];end;else do if EK[5]==0x00cD then nK=nK-0X1;do(eK)[nK]={[0X1]=0X00002a,[0X0002]=(EK[2]-0X0b6),[0X0003]=(EK[3]-182)};end;elseif EK[5]~=59 then do repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0 then local LK=(lK[2]);if not aK[LK]then do(aK)[LK]={MK[LK]};end;end;do(lK)[0x1]=aK[LK];end;lK[0X002]=1;end;end;end;end;until true;end;return zK[EK[3]];else nK=nK-1;eK[nK]={[1]=61,[0x0003]=(EK[3]-0X0009B),[2]=(EK[2]-0X9B)};end;end;end;end;else if not(dK>=0X6f)then if dK==110 then do QK=EK[0X3];end;zK[QK]();do QK=QK-0X1;end;else zK[EK[0X3]]=EK[2];end;else if dK==112 then do(zK)[EK[0X003]]=zK[EK[2]]<=zK[EK[0x5]];end;else repeat local MK,aK=mK,zK;local gK={};for wK,rK in W,MK do for lK,LK in W,rK do do if LK[0X1]==aK and LK[0X00002]>=0 then local DK=(LK[0x02]);if not gK[DK]then gK[DK]={aK[DK]};end;LK[1]=gK[DK];(LK)[2]=1;end;end;end;end;until true;local VK=EK[3];return zK[VK](S(zK,VK+1,QK));end;end;end;end;elseif not(dK>=94)then if dK>=0X0005A then if not(dK<92)then do if dK==93 then do zK[EK[3]]=zK[EK[2]]/zK[EK[0x00005]];end;else if not(not(EK[7]<=zK[EK[5]]))then else nK=EK[3];end;end;end;else do if dK==0x05B then do(zK[EK[0X0003]])[zK[EK[0X2]]]=zK[EK[0X00005]];end;else(zK)[EK[0x00003]]=EK[7]>zK[EK[0X5]];end;end;end;else if dK>=0X58 then if dK==0X059 then(zK)[EK[0X00003]]=zK[EK[0x2]][zK[EK[0x5]]];else local VK=(EK[0X2]);local MK=(zK[VK]);do for aK=VK+0X01,EK[5]do MK=MK..zK[aK];end;end;(zK)[EK[0X003]]=MK;end;else if zK[EK[2]]==zK[EK[5]]then do nK=EK[3];end;end;end;end;else if not(dK<0X62)then if dK<100 then if dK==99 then local VK=EK[3];(zK[VK])(S(zK,VK+1,QK));QK=VK-1;else do zK[EK[3]]=D(zK[EK[2]],zK[EK[0X5]]);end;end;else if dK~=0X0065 then local VK=EK[0X0003];local MK,aK=zK[VK]();if not(MK)then else(zK)[VK+0X1]=aK;nK=EK[0X2];end;else zK[EK[3]]=zK[EK[2]]~=zK[EK[0X5]];end;end;else if dK>=96 then if dK~=0X61 then local VK,MK=EK[2],nil;local aK=VK[0X9];local gK=(#aK);do if gK>0 then do MK={};end;do for wK=1,gK do local rK=(aK[wK]);do if rK[1]~=0x0 then do MK[wK-0x1]=sK[rK[2]];end;else MK[wK-0X0001]={zK,rK[0X02]};end;end;end;end;K(mK,MK);end;end;zK[EK[3]]=i[EK[5]](MK);else if not(zK[EK[0X2]]<EK[6])then do nK=EK[0X0003];end;end;end;else if dK~=95 then if EK[5]==0X00007D then do nK=nK-1;end;do(eK)[nK]={[1]=61,[0X0003]=(EK[3]-120),[2]=(EK[2]-0X78)};end;else do repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0x1]==MK and lK[2]>=0)then else local LK=lK[2];do if not aK[LK]then aK[LK]={MK[LK]};end;end;lK[1]=aK[LK];lK[2]=0X00001;end;end;end;until true;end;return S(zK,EK[0X0003],QK);end;else if EK[5]~=0x10 then do repeat local gK={};local VK,MK,aK=mK,zK,EK[0X00003];for wK,rK in W,VK do do for lK,LK in W,rK do do if LK[0X1]==MK and LK[0X2]>=aK then local DK=(LK[0X2]);if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;(LK)[1]=gK[DK];LK[0X2]=1;end;end;end;end;end;until true;end;else do nK=nK-0X01;end;eK[nK]={[0x1]=0x00073,[2]=(EK[2]-176),[0X3]=(EK[3]-176)};end;end;end;end;end;else if not(dK>=0X48)then do if not(dK>=0X41)then if not(dK>=61)then do if not(dK>=0X3B)then(zK)[EK[3]]=zK[EK[0X00002]]-zK[EK[5]];else if dK~=60 then do if EK[5]==0Xf then do nK=nK-1;end;(eK)[nK]={[0X1]=51,[3]=(EK[3]-0X84),[0x02]=(EK[2]-132)};elseif EK[5]~=25 then zK[EK[0x3]]=#zK[EK[0x00002]];else nK=nK-0X1;do(eK)[nK]={[0X02]=(EK[2]-71),[3]=(EK[3]-71),[0x01]=0X026};end;end;end;else local MK=((EK[0X005]-1)*50);local VK=EK[0X3];local aK=zK[VK];for gK=0x0001,EK[2]do aK[MK+gK]=zK[VK+gK];end;end;end;end;else if not(dK<0x3f)then if dK~=64 then if not(not(zK[EK[0X00002]]<=zK[EK[0X5]]))then else nK=EK[3];end;else local VK=EK[0X3];zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;end;else if dK~=62 then if EK[0X5]==0X000b then nK=nK-0x00001;eK[nK]={[1]=0X2a,[2]=(EK[0X002]-0xA4),[0x3]=(EK[0X3]-0Xa4)};elseif EK[5]==113 then nK=nK-1;eK[nK]={[0x00001]=0x73,[2]=(EK[2]-141),[3]=(EK[0x3]-0X8D)};else do zK[EK[0X00003]]=nil;end;end;else if not(EK[7]<zK[EK[5]])then nK=EK[0x003];end;end;end;end;else if dK>=68 then do if dK<70 then if dK==69 then local VK,MK=EK[0X3],EK[0x2];do QK=VK+MK-1;end;repeat local aK,gK=mK,(zK);local wK={};for rK,lK in W,aK do for LK,DK in W,lK do do if DK[0X00001]==gK and DK[0X2]>=0 then local ZK=DK[0X00002];if not(not wK[ZK])then else(wK)[ZK]={gK[ZK]};end;DK[0x01]=wK[ZK];DK[0x0002]=1;end;end;end;end;until true;do return zK[VK](S(zK,VK+0x1,QK));end;else local VK=EK[0x2];local aK,MK=VK[0x0009],(nil);local gK=#aK;do if gK>0 then MK={};for wK=0X01,gK do local rK=aK[wK];do if rK[1]==0x0 then do MK[wK-0X001]={zK,rK[2]};end;else(MK)[wK-0x1]=sK[rK[2]];end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else if dK~=0X047 then do if zK[EK[2]]==zK[EK[0x05]]then else nK=EK[0x0003];end;end;else local VK=(EK[0X3]);zK[VK]=zK[VK](zK[VK+1]);do QK=VK;end;end;end;end;else if not(dK>=0X0042)then local VK=(zK[EK[2]]/zK[EK[0x5]]);zK[EK[3]]=VK-VK%1;else if dK~=0x43 then do(zK)[EK[0X3]]=EK[0X0007]*zK[EK[0X5]];end;else zK[EK[3]]=Ji[EK[2]];end;end;end;end;end;else if dK>=0X4f then do if not(dK<0X00053)then if not(dK>=0x55)then if dK~=84 then(zK)[EK[0X03]]=zK[EK[2]]==EK[6];else do QK=EK[3];end;zK[QK]=zK[QK]();end;else do if dK==0x56 then(zK)[EK[3]]=g(zK[EK[0X02]],zK[EK[0X00005]]);else local VK=(sK[EK[2]]);zK[EK[0X3]]=VK[1][VK[2]];end;end;end;else if not(dK>=0x000051)then if dK~=0X50 then local VK=(EK[0x3]);local MK=b(function(...)(o)();for aK,gK in...do(o)(true,aK,gK);end;end);(MK)(zK[VK],zK[VK+1],zK[VK+2]);QK=VK;(zK)[VK]=MK;nK=EK[2];else if EK[5]==0xc9 then nK=nK-1;(eK)[nK]={[0X3]=(EK[3]-0X000057),[2]=(EK[2]-87),[0X001]=0X3b};else repeat local gK=({});local MK,aK=mK,zK;for wK,rK in W,MK do for lK,LK in W,rK do if LK[1]==aK and LK[2]>=0 then local DK=LK[0x2];if not gK[DK]then(gK)[DK]={aK[DK]};end;LK[1]=gK[DK];(LK)[2]=1;end;end;end;until true;local VK=EK[0X003];do return S(zK,VK,VK+EK[0X2]-2);end;end;end;else if dK~=82 then if EK[0X0005]==226 then nK=nK-1;eK[nK]={[0X2]=(EK[2]-141),[3]=(EK[0X3]-141),[0x1]=42};elseif EK[5]==35 then nK=nK-1;eK[nK]={[2]=(EK[0X2]-88),[3]=(EK[0X003]-88),[1]=115};elseif EK[0x5]~=0x52 then if not(zK[EK[3]])then else nK=EK[2];end;else do nK=nK-1;end;(eK)[nK]={[0X3]=(EK[3]-0x70),[1]=0X03D,[2]=(EK[0X2]-0x70)};end;else local MK=(zK[EK[0x00002]]);local VK=EK[0X3];zK[VK+1]=MK;zK[VK]=MK[EK[0X6]];end;end;end;end;else if not(dK>=0X04B)then if dK>=0X0049 then if dK==74 then local VK=(sK[EK[2]]);VK[0x00001][VK[2]]=zK[EK[0X003]];else(zK)[EK[3]]={};end;else do(zK)[EK[0X3]]=zK[EK[0X2]]+EK[0X0006];end;end;else do if dK<0x004d then if dK==0X0004c then do if zK[EK[0x2]]~=EK[6]then else nK=EK[3];end;end;else if EK[0X5]==172 then nK=nK-1;do(eK)[nK]={[2]=(EK[2]-35),[0X0003]=(EK[3]-0x00023),[1]=0x001B};end;elseif EK[0X5]~=188 then repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if lK[0x1]==MK and lK[0x2]>=0X0 then local LK=lK[0X02];if not aK[LK]then aK[LK]={MK[LK]};end;do lK[1]=aK[LK];end;do(lK)[0X002]=0X1;end;end;end;end;until true;return;else do nK=nK-0x1;end;do eK[nK]={[2]=(EK[0X2]-0x10),[1]=42,[3]=(EK[0X0003]-16)};end;end;end;else if dK~=78 then(zK)[EK[3]]=zK[EK[0X2]]+zK[EK[5]];else zK[EK[0X3]]=EK[7]-zK[EK[5]];end;end;end;end;end;end;end;end;end;end;until false;end;else if SK==0X00054 then _K=function(...)local nK,zK=0X001,({});local pK=Q();local CK=({[1]=xK,[2]=zK});local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X00001;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else do break;end;end;end;end;local QK=0X0;if not PK then do HK=nil;end;else if YK then zK[WK]={n=NK>=WK and NK-WK+0X00001 or 0x00000,S(HK,WK+0x001,NK+1)};end;end;if UK~=pK then _(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[0X1]);nK=nK+1;if dK>=0x07 then if not(dK<10)then if not(dK<0X000C)then do if dK~=13 then zK[EK[3]]=D(zK[EK[2]],zK[EK[5]]);else for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;end;else if dK~=0XB then zK[EK[0X3]]={S({},1,EK[0X2])};else end;end;else if dK>=0X8 then if dK~=9 then(zK)[EK[0x3]]=EK[0X7];else local VK,MK=EK[0X00003],EK[0X2];if MK~=0 then QK=VK+MK-1;end;local gK,wK,aK=nil,nil,(EK[0X005]);if MK==0X1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;if aK~=1 then do if aK~=0X0 then do gK=VK+aK-2;end;QK=gK+1;else do gK=gK+VK-0x1;end;QK=gK;end;end;local rK=0;for lK=VK,gK do rK=rK+1;do zK[lK]=wK[rK];end;end;else QK=VK-1;end;end;else do(zK)[EK[0X3]]=UK[EK[7]];end;end;end;else do if not(dK<0X0003)then do if not(dK>=5)then do if dK~=0X00004 then local VK=(EK[0X0002]);local aK=(VK[0X0009]);local gK,MK=#aK,(nil);if not(gK>0)then else MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X1]==0 then MK[wK-1]={zK,rK[0X0002]};else do(MK)[wK-0X00001]=sK[rK[2]];end;end;end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=i[EK[0X5]](MK);else do(zK)[EK[0X3]]=zK[EK[0X0002]]%zK[EK[0X5]];end;end;end;else if dK~=0x6 then if not(zK[EK[3]])then else do nK=EK[0X2];end;end;else(zK)[0X1]=UK[EK[0X0007]];nK=nK+1;nK=nK+0x001;nK=nK+1;local VK=(sK[0X0000]);(zK)[2]=zK[0X00];EK=eK[nK];local MK=(1);nK=nK+0X1;zK[1][EK[7]]=zK[0X00002];EK=eK[nK];do nK=nK+0x00001;end;(zK)[0X00001]=UK[EK[7]];nK=nK+1;QK=0X00001;(zK[QK])();QK=QK-1;do nK=nK+0X1;end;nK=nK+1;nK=nK+0X1;zK[1]=VK[0X01][VK[2]];EK=eK[nK];nK=nK+0X1;local aK=zK[1];(zK)[MK+0X01]=aK;(zK)[MK]=aK[EK[6]];do nK=nK+1;end;(zK)[0X3]=not zK[0];nK=nK+1;MK=0X1;(zK[MK])(zK[MK+0X001],zK[MK+2]);QK=MK-1;nK=nK+1;do repeat local gK,wK,rK=mK,zK,({});for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[1]==wK and ZK[0X2]>=0X0 then local GK=(ZK[2]);if not(not rK[GK])then else rK[GK]={wK[GK]};end;do ZK[0X001]=rK[GK];end;ZK[2]=0X001;end;end;end;until 1087688068;end;return;end;end;end;else do if dK>=0X1 then if dK~=0X02 then local VK=(EK[2]);local aK,MK=VK[9],(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[1]==0 then MK[wK-1]={zK,rK[2]};else(MK)[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;do(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else zK[EK[3]]=zK[EK[2]]*zK[EK[5]];end;else nK=EK[0x2];end;end;end;end;end;until false;end;else do _K=function(...)local zK={};local QK=(0X0);local pK=(Q());local UK=((pK==z and KK or pK));local NK,HK=vi(...);do NK=NK-0x1;end;local nK=1;local CK=({[1]=xK,[2]=zK});for EK=0X0,NK do if WK>EK then do zK[EK]=HK[EK+1];end;else break;end;end;if not PK then HK=nil;else if not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X001 or 0,S(HK,WK+0x1,NK+0X1)};end;end;do if UK~=pK then(_)(_K,UK);end;end;repeat local EK=eK[nK];local dK=(EK[0X0001]);nK=nK+1;if dK<0xB then do if not(dK<0X005)then if dK<8 then if dK>=6 then if dK~=0X00007 then zK[EK[3]]=EK[7];else do for VK=EK[3],EK[0X2]do(zK)[VK]=nil;end;end;end;else(zK)[EK[0X00003]]=zK[EK[0X2]]%zK[EK[5]];end;else if not(dK>=0X0009)then local VK=EK[3];local MK,aK=zK[VK]();if MK then do nK=EK[2];end;(zK)[VK+3]=aK;end;else do if dK==0XA then repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0 then local LK=lK[0X002];if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[0X1]=aK[LK];(lK)[0X2]=0X1;end;end;end;end;until true;return;else local VK=EK[0X2];local aK=VK[9];local MK=(nil);local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[1]==0 then(MK)[wK-0X1]={zK,rK[2]};else(MK)[wK-0X1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;elseif not(dK<2)then if not(dK>=3)then(zK)[EK[0X3]]=true;else do if dK~=4 then if zK[EK[2]]~=zK[EK[5]]then else nK=EK[0X0003];end;else end;end;end;else do if dK~=1 then nK=EK[0x2];else local VK=sK[0];(zK)[0X004]=VK[0X00001][VK[0X2]];nK=nK+0X1;local gK=(0X6);local MK=(0X4);nK=nK+0X1;do EK=eK[nK];end;local wK=3;nK=nK+0X00001;local aK=(zK[4]);do(zK)[MK+0x001]=aK;end;zK[MK]=aK[EK[0X00006]];do EK=eK[nK];end;nK=nK+1;(zK)[6]=EK[0X00007];nK=nK+0x1;(zK)[7]=zK[0X03];nK=nK+1;(zK)[0X00006]=zK[gK]..zK[gK+0X001];nK=nK+0X1;MK=0X004;do QK=MK+wK-1;end;do repeat local rK,lK=mK,(zK);local LK={};for DK,ZK in W,rK do do for GK,OK in W,ZK do if not(OK[1]==lK and OK[0X2]>=0)then else local tK=(OK[0X2]);if not(not LK[tK])then else LK[tK]={lK[tK]};end;(OK)[1]=LK[tK];do(OK)[2]=1;end;end;end;end;end;until true;end;return zK[MK](S(zK,MK+1,QK));end;end;end;end;else do if dK<17 then if not(dK<14)then if dK<0Xf then do zK[0x00001]=zK[0X000];end;local VK=2;EK=eK[nK];nK=nK+1;local MK=zK[0X1];(zK)[VK+1]=MK;zK[VK]=MK[EK[0x00006]];EK=eK[nK];nK=nK+1;do zK[0X004]=EK[7];end;do EK=eK[nK];end;nK=nK+1;do zK[5]=EK[7];end;do nK=nK+0X1;end;do VK=0x2;end;do QK=VK+4-0x1;end;(zK)[VK]=zK[VK](S(zK,VK+1,QK));QK=VK;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;if zK[2]==EK[6]then else nK=EK[0X3];end;else if dK~=0X10 then local VK=(EK[3]);for MK=VK,VK+(EK[2]-0X001)do do(zK)[MK]=HK[WK+(MK-VK)+1];end;end;else(zK)[EK[3]]=UK[EK[0x7]];end;end;else if not(dK<12)then do if dK~=0X000d then do if zK[EK[2]]==EK[6]then else nK=EK[0X00003];end;end;else local VK=sK[0];(zK)[2]=VK[0x1][VK[2]];nK=nK+1;nK=nK+1;local MK=0X2;EK=eK[nK];nK=nK+1;local aK=zK[2];(zK)[MK+1]=aK;do(zK)[MK]=aK[EK[6]];end;local gK=(4);EK=eK[nK];nK=nK+0X00001;zK[0x4]=EK[7];EK=eK[nK];do nK=nK+0X001;end;zK[5]=EK[7];do nK=nK+1;end;MK=0x002;do QK=MK+gK-1;end;do repeat local wK,rK=mK,(zK);local lK={};for LK,DK in W,wK do for ZK,GK in W,DK do if not(GK[0X00001]==rK and GK[2]>=0X00)then else local OK=(GK[0X0002]);if not lK[OK]then lK[OK]={rK[OK]};end;(GK)[0X01]=lK[OK];GK[0X2]=0X1;end;end;end;until true;end;do return zK[MK](S(zK,MK+0x1,QK));end;end;end;else repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[0x0001]==MK and lK[2]>=0X00000)then else local LK=lK[0X0002];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;do(lK)[0X1]=aK[LK];end;do lK[0X2]=1;end;end;end;end;end;until true;do return S(zK,EK[0x3],QK);end;end;end;else if dK<0X14 then if not(dK<0X00012)then if dK~=19 then zK[EK[0x3]]={S({},1,EK[0X2])};else do repeat local VK,MK,aK=mK,zK,(EK[0X3]);local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[1]==MK and LK[0X00002]>=aK)then else local DK=(LK[0X2]);do if not(not gK[DK])then else gK[DK]={MK[DK]};end;end;do LK[1]=gK[DK];end;do(LK)[2]=1;end;end;end;end;until true;end;end;else local VK,MK=sK[0],4;(zK)[4]=VK[0X1][VK[2]];EK=eK[nK];nK=nK+1;local aK=zK[4];(zK)[MK+0X1]=aK;zK[MK]=aK[EK[0X00006]];EK=eK[nK];do nK=nK+1;end;zK[0X6]=UK[EK[0X7]];nK=nK+0X001;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;zK[0X6]=zK[0X6][EK[6]];EK=eK[nK];nK=nK+1;zK[0X7]=EK[0X7];nK=nK+1;zK[8]=zK[1];local gK=3;nK=nK+1;MK=6;local wK=(0x00000);do if gK~=0X00000 then QK=MK+gK-1;end;end;local rK,lK=nil,(nil);do if gK==0X1 then do rK,lK=vi(zK[MK]());end;else rK,lK=vi(zK[MK](S(zK,MK+1,QK)));end;end;if wK==0X1 then QK=MK-0X00001;else do if wK==0 then do rK=rK+MK-1;end;QK=rK;else rK=MK+wK-0X2;QK=rK+1;end;end;local LK=0;for DK=MK,rK do LK=LK+0x001;(zK)[DK]=lK[LK];end;end;nK=nK+1;do MK=4;end;zK[MK](S(zK,MK+0X1,QK));QK=MK-1;nK=nK+0X1;nK=nK+0X01;EK=eK[nK];nK=nK+0x1;(zK)[4]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;nK=nK+0x0001;QK=0X0004;(zK[QK])();QK=QK-1;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0X4]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;(zK)[4]=zK[0X04][EK[0X6]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;MK=0X004;aK=zK[4];do(zK)[MK+1]=aK;end;zK[MK]=aK[EK[6]];nK=nK+1;zK[0X6]=zK[0X001];nK=nK+0X1;MK=4;(zK[MK])(zK[MK+0X1],zK[MK+0X02]);QK=MK-0X1;EK=eK[nK];nK=nK+1;do nK=EK[2];end;end;else do if not(dK<0X15)then if dK~=0X0016 then local VK=2;local aK=0x2;local MK=zK[0X0001];(zK)[VK+0X1]=MK;zK[VK]=MK[EK[0x0006]];do EK=eK[nK];end;do nK=nK+0X0001;end;do(zK)[4]=EK[0X007];end;EK=eK[nK];nK=nK+1;do(zK)[0X5]=EK[7];end;nK=nK+1;VK=0X02;QK=VK+0X4-1;do(zK)[VK]=zK[VK](S(zK,VK+0X01,QK));end;QK=VK;nK=nK+1;do nK=nK+0x1;end;nK=nK+0x0001;(zK)[0X1]=zK[2];EK=eK[nK];nK=nK+1;(zK)[0X02]=UK[EK[0X0007]];nK=nK+0X1;do nK=nK+1;end;nK=nK+0X1;(zK)[0x3]=zK[1];nK=nK+1;do VK=2;end;local gK=0X0003;if aK~=0x0 then QK=VK+aK-1;end;local wK,rK=nil,(nil);do if aK==0X1 then wK,rK=vi(zK[VK]());else wK,rK=vi(zK[VK](S(zK,VK+0x0001,QK)));end;end;do if gK~=0X1 then if gK==0 then do wK=wK+VK-1;end;QK=wK;else wK=VK+gK-0X2;QK=wK+1;end;local lK=0X0;for LK=VK,wK do do lK=lK+1;end;do(zK)[LK]=rK[lK];end;end;else QK=VK-1;end;end;do nK=nK+0X01;end;nK=nK+0x1;EK=eK[nK];nK=nK+0X01;if zK[0X2]then nK=EK[0X0002];end;else if not(zK[EK[0x2]]<zK[EK[5]])then nK=EK[3];end;end;else zK[EK[0X3]]=zK[EK[2]]>zK[EK[5]];end;end;end;end;end;end;until false;end;end;end;end;else do if SK>=86 then if SK~=87 then _K=function(...)local nK,zK=0x01,({});local pK=Q();local UK=(pK==z and KK or pK);local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-1;for EK=0x0,NK do do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x00001 or 0,S(HK,WK+0X0001,NK+1)};end;end;local QK=0X00000;if UK==pK then else(_)(_K,UK);end;repeat local EK=eK[nK];local dK=EK[0X0001];nK=nK+0X0001;if dK>=12 then if not(dK>=18)then do if dK>=15 then if dK<0x000010 then nK=EK[0X2];else if dK~=0X11 then(zK)[0X4]=UK[EK[7]];EK=eK[nK];do nK=nK+0X1;end;zK[4]=zK[0X4][EK[6]];do EK=eK[nK];end;do nK=nK+1;end;if not(not zK[0X04])then else nK=EK[0X2];end;else if not(not zK[EK[3]])then else do nK=EK[2];end;end;end;end;else do if not(dK>=0xD)then for VK=EK[3],EK[0X0002]do do(zK)[VK]=nil;end;end;else do if dK~=14 then do(zK)[EK[0X00003]]=UK[EK[0X7]];end;else local VK=(EK[2]);local aK,MK=VK[9],(nil);local gK=(#aK);if not(gK>0X0)then else MK={};for wK=0X01,gK do local rK=(aK[wK]);if rK[0x1]==0X0 then do MK[wK-1]={zK,rK[0X00002]};end;else do MK[wK-0X01]=sK[rK[0X2]];end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;end;else if not(dK<0X0015)then if not(dK>=0x000016)then(zK)[EK[0X03]]=EK[0X2];elseif dK~=23 then(zK)[0x0]=UK[EK[0X00007]];do EK=eK[nK];end;nK=nK+1;(zK)[0]=zK[0X000][EK[6]];do EK=eK[nK];end;do nK=nK+1;end;do if not(not zK[0X0])then else nK=EK[0x2];end;end;else do zK[EK[0X3]]=EK[7];end;end;else do if dK<0x13 then zK[0x0]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X000]=zK[0X0][EK[0X6]];do nK=nK+1;end;do QK=0X0000;end;do(zK)[QK]=zK[QK]();end;do nK=nK+0X01;end;nK=nK+0X00001;EK=eK[nK];do nK=nK+1;end;do if not(not zK[0X0])then else nK=EK[2];end;end;else if dK~=20 then(UK)[EK[7]]=zK[EK[3]];else zK[4]=UK[EK[7]];nK=nK+1;nK=nK+0x1;EK=eK[nK];nK=nK+0X1;zK[0X4]=zK[4][EK[0x6]];nK=nK+0X1;nK=nK+0X01;EK=eK[nK];nK=nK+0X1;if not zK[4]then nK=EK[2];end;end;end;end;end;end;else if dK>=6 then if not(dK>=0X9)then if not(dK<7)then if dK~=8 then if zK[EK[0X2]]==zK[EK[0x0005]]then else nK=EK[0X3];end;else zK[EK[0X3]]={S({},0X001,EK[2])};end;else zK[4]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;zK[4]=zK[0X4][EK[0x06]];EK=eK[nK];nK=nK+0x001;zK[5]=UK[EK[0X7]];nK=nK+0X1;local VK=(sK[3]);zK[6]=VK[1][VK[2]];EK=eK[nK];nK=nK+0X1;(zK)[0X006]=zK[0X006][EK[0x6]];EK=eK[nK];nK=nK+1;do zK[0x006]=zK[6][EK[0X00006]];end;local MK=0x005;nK=nK+0x0001;nK=nK+1;EK=eK[nK];nK=nK+1;zK[6]=zK[6][EK[6]];EK=eK[nK];nK=nK+0x1;(zK)[0X6]=zK[6][EK[0X6]];nK=nK+0X1;nK=nK+0x1;nK=nK+0X1;(zK)[MK]=zK[MK](zK[MK+0x00001]);QK=MK;nK=nK+0X0001;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+1;if zK[0X00004]~=zK[0x5]then else nK=EK[0X3];end;end;elseif not(dK<0Xa)then if dK==11 then else zK[EK[3]]=zK[EK[2]][zK[EK[5]]];end;else local VK=(sK[EK[0x00002]]);(zK)[EK[3]]=VK[0x1][VK[2]];end;else do if dK<3 then if not(dK>=1)then local VK=sK[1];do zK[0]=VK[1][VK[0x002]];end;nK=nK+0X0001;local MK=(0);do nK=nK+1;end;EK=eK[nK];nK=nK+1;do(zK)[1]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0X00001;(zK)[0X2]=EK[0X0007];do nK=nK+1;end;local gK,aK=5,0X0003;if aK~=0X00000 then QK=MK+aK-0X1;end;local wK,rK=nil,nil;do if aK==1 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;end;if gK==1 then QK=MK-1;else if gK==0X0 then wK=wK+MK-1;do QK=wK;end;else wK=MK+gK-0X2;do QK=wK+0X1;end;end;local lK=0X00000;for LK=MK,wK do lK=lK+1;zK[LK]=rK[lK];end;end;EK=eK[nK];nK=nK+0x01;if not zK[0]then nK=EK[2];end;else if dK==2 then local VK=(sK[2]);(zK)[4]=VK[0X1][VK[2]];EK=eK[nK];nK=nK+1;(zK)[0X4]=zK[0X4][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X001;do zK[4]=zK[0X4][EK[0X0006]];end;EK=eK[nK];nK=nK+1;if zK[4]then nK=EK[2];end;else do zK[4]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X1;do zK[5]=EK[7];end;do EK=eK[nK];end;do nK=nK+1;end;local VK=0X4;do zK[6]=UK[EK[7]];end;do EK=eK[nK];end;do nK=nK+1;end;zK[0X6]=zK[0X00006][EK[0x06]];do nK=nK+1;end;(zK[VK])(zK[VK+1],zK[VK+2]);QK=VK-0X00001;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;else if dK>=0X04 then if dK==0X05 then local VK=sK[2];(zK)[4]=VK[1][VK[0x00002]];nK=nK+0X1;nK=nK+0x0001;EK=eK[nK];nK=nK+0X001;zK[0X00004]=zK[4][EK[6]];EK=eK[nK];nK=nK+1;do(zK)[4]=zK[0X004][EK[0x0006]];end;do EK=eK[nK];end;nK=nK+0x1;if not(zK[4])then else do nK=EK[2];end;end;else local VK=sK[0X4];(zK)[0X0004]=VK[1][VK[2]];local MK=(0X0004);EK=eK[nK];nK=nK+1;local aK=zK[0X4];zK[MK+1]=aK;do(zK)[MK]=aK[EK[0x0006]];end;EK=eK[nK];nK=nK+0X1;zK[0X006]=EK[7];do nK=nK+0X1;end;zK[7]=zK[0X00002];EK=eK[nK];nK=nK+0x0001;zK[0X8]=EK[0x00007];nK=nK+0X1;local gK=(6);do zK[9]=zK[0X3];end;do nK=nK+0x0001;end;local wK=(zK[gK]);do for rK=gK+0X01,9 do wK=wK..zK[rK];end;end;(zK)[0X6]=wK;EK=eK[nK];nK=nK+0x1;(zK)[0X0007]=EK[7];nK=nK+0X1;MK=4;do QK=MK+0X4-1;end;(zK[MK])(S(zK,MK+1,QK));QK=MK-0X1;nK=nK+0X01;nK=nK+0x00001;EK=eK[nK];nK=nK+0x001;zK[4]=UK[EK[0X00007]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[5]=EK[7];EK=eK[nK];nK=nK+1;do zK[6]=zK[1][EK[6]];end;do nK=nK+1;end;nK=nK+0X1;nK=nK+1;MK=0X4;(zK[MK])(zK[MK+0x1],zK[MK+0X002]);do QK=MK-0X001;end;EK=eK[nK];do nK=nK+0x1;end;nK=EK[2];end;else repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[2]>=0)then else local LK=(lK[2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;do(lK)[0X1]=aK[LK];end;(lK)[0X2]=0x1;end;end;end;end;until true;do return;end;end;end;end;end;end;until false;end;else _K=function(...)local nK,QK=1,(0x00);local zK={};local pK=Q();local UK,CK=(pK==z and KK or pK),({[1]=xK,[2]=zK});local NK,HK=vi(...);NK=NK-0X1;for EK=0x0,NK do do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X1];end;end;end;if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0x1,NK+0X1)};end;end;if UK~=pK then _(_K,UK);end;do repeat local EK=eK[nK];local dK=(EK[1]);nK=nK+1;do if dK>=0X008 then if not(dK<12)then if dK<14 then if dK==0Xd then(zK)[EK[0x003]]=#zK[EK[2]];else for VK=EK[0X3],EK[0X2]do do zK[VK]=nil;end;end;end;else if dK==15 then zK[EK[0X003]]=EK[0X7];else zK[EK[0X00003]]=UK[EK[7]];end;end;elseif dK>=10 then do if dK~=11 then(zK)[1]=UK[EK[7]];nK=nK+0X0001;nK=nK+0X0001;do nK=nK+0x001;end;zK[0X2]=zK[0x0];EK=eK[nK];nK=nK+0X1;(zK[1])[EK[0X7]]=zK[2];EK=eK[nK];nK=nK+0X1;nK=EK[0X02];else end;end;else if dK==9 then local VK,MK=EK[2],(nil);local aK=VK[9];local gK=(#aK);do if not(gK>0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[1]==0x00 then MK[wK-1]={zK,rK[2]};else(MK)[wK-0X00001]=sK[rK[2]];end;end;(K)(mK,MK);end;end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;else(zK)[EK[3]]={S({},0X01,EK[2])};end;end;else if not(dK<4)then if dK>=6 then if dK==7 then nK=EK[2];else local VK,MK=EK[3],((EK[5]-1)*0x032);local aK=(zK[VK]);for gK=0x001,EK[2]do aK[MK+gK]=zK[VK+gK];end;end;elseif dK==5 then(zK)[EK[0X3]]=zK[EK[2]]+zK[EK[5]];else(zK)[0X00001]=UK[EK[0X0007]];nK=nK+1;zK[2]={};EK=eK[nK];nK=nK+0X1;(zK[1])[EK[7]]=zK[2];do EK=eK[nK];end;nK=nK+0X00001;nK=EK[2];end;else do if not(dK<2)then if dK==3 then if zK[EK[0x2]]~=zK[EK[5]]then nK=EK[3];end;else(zK)[1]=UK[EK[0X7]];nK=nK+0X01;nK=nK+1;do nK=nK+0X01;end;QK=1;zK[QK]();QK=QK-0x1;do nK=nK+1;end;nK=nK+1;do nK=nK+1;end;do repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[2];do if not aK[LK]then aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[2]=1;end;end;end;until true;end;do return;end;end;else if dK~=1 then(zK)[EK[0x003]]=zK[EK[0X02]]<=zK[EK[0X05]];else(zK)[1]=UK[EK[0x0007]];do nK=nK+0X1;end;do(zK)[0X2]=zK[0X0];end;local VK=1;nK=nK+1;zK[VK]=zK[VK](zK[VK+0X0001]);do QK=VK;end;EK=eK[nK];nK=nK+1;if zK[1]==EK[0x6]then else do nK=EK[0x3];end;end;end;end;end;end;end;end;until false;end;end;end;else _K=function(...)local nK,zK=1,{};local QK=0X000;local pK=(Q());local NK,HK=vi(...);local CK={[2]=zK,[1]=xK};NK=NK-0X1;do for EK=0,NK do do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;end;local UK=((pK==z and KK or pK));do if not PK then HK=nil;else if not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x1,NK+1)};end;end;end;end;if UK==pK then else(_)(_K,UK);end;repeat local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+0x1;if dK>=0X8 then if not(dK>=12)then if not(dK>=10)then if dK==9 then zK[EK[3]]=zK[EK[2]]>=zK[EK[0X5]];else nK=EK[0X2];end;else if dK~=11 then(zK)[0X001]=UK[EK[7]];nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+0x1;zK[0x002]=UK[EK[7]];nK=nK+1;local VK=0X002;nK=nK+1;nK=nK+0x1;do zK[3]=zK[0];end;nK=nK+1;zK[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[0X1][EK[7]]=zK[2];EK=eK[nK];nK=nK+1;(zK)[0X1]=UK[EK[7]];nK=nK+0X1;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+0X0001;end;(zK)[0X0001]=zK[0X001][EK[6]];nK=nK+0X0001;nK=nK+0X1;EK=eK[nK];nK=nK+1;do if zK[1]~=EK[0x6]then do nK=EK[0X3];end;end;end;else(zK)[EK[3]]={S({},1,EK[2])};end;end;else if not(dK>=14)then if dK==13 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else do zK[0X1]=UK[EK[7]];end;nK=nK+1;nK=nK+1;nK=nK+1;QK=0X0001;zK[QK]();QK=QK-1;do nK=nK+0x01;end;repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X01]==MK and lK[2]>=0x00 then local LK=lK[2];do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;lK[1]=aK[LK];(lK)[2]=0x1;end;end;end;until 0.23213251300501547;return;end;else if dK>=15 then if dK==0x10 then do zK[EK[0X3]]=EK[0X7];end;else repeat local VK,MK,aK=mK,zK,(EK[0X00003]);local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do do if not(LK[0X1]==MK and LK[2]>=aK)then else local DK=LK[2];do if not(not gK[DK])then else gK[DK]={MK[DK]};end;end;do(LK)[0X1]=gK[DK];end;(LK)[0x0002]=0X1;end;end;end;end;until-661387269;end;else(zK)[EK[0x3]]=zK[EK[2]]+zK[EK[5]];end;end;end;else do if not(dK>=0X4)then if not(dK<2)then do if dK~=3 then else zK[EK[3]]=zK[EK[0X2]][zK[EK[0X005]]];end;end;else do if dK~=1 then do if not(zK[EK[3]])then else nK=EK[2];end;end;else local VK=(EK[3]);local MK=EK[2];QK=VK+MK-1;repeat local aK,gK,wK=mK,zK,{};for rK,lK in W,aK do for LK,DK in W,lK do do if DK[1]==gK and DK[2]>=0 then local ZK=(DK[0X0002]);if not(not wK[ZK])then else do(wK)[ZK]={gK[ZK]};end;end;(DK)[0X1]=wK[ZK];(DK)[0X2]=1;end;end;end;end;until 0.2874049899386071;return zK[VK](S(zK,VK+0X1,QK));end;end;end;else do if not(dK>=6)then if dK==5 then local VK=(EK[2]);local MK=nil;local aK=VK[0X9];local gK=#aK;if gK>0 then do MK={};end;for wK=1,gK do local rK=(aK[wK]);do if rK[0X1]~=0 then(MK)[wK-1]=sK[rK[2]];else MK[wK-0X1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;(zK)[EK[0x3]]=Ri(MK,UK,VK);else do(zK)[1]=UK[EK[7]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X1][EK[7]]=EK[6];do EK=eK[nK];end;nK=nK+1;do(zK)[1]=UK[EK[0X7]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X01;do zK[1]=zK[1][EK[6]];end;nK=nK+1;do nK=nK+1;end;local VK=1;EK=eK[nK];nK=nK+0X001;local MK=zK[0x00001];(zK)[VK+0x1]=MK;zK[VK]=MK[EK[0x00006]];EK=eK[nK];nK=nK+1;do(zK)[0X0003]=UK[EK[7]];end;EK=eK[nK];nK=nK+0x1;do zK[3]=zK[3][EK[0X6]];end;nK=nK+0X1;nK=nK+0X001;nK=nK+0x001;VK=0X1;(zK[VK])(zK[VK+1],zK[VK+2]);QK=VK-1;nK=nK+1;nK=nK+1;end;else do if dK==7 then zK[EK[3]]=UK[EK[0x007]];elseif not(not zK[EK[3]])then else nK=EK[0X2];end;end;end;end;end;end;end;until false;end;end;end;end;else do if not(SK<0x5b)then if SK>=92 then if SK==93 then _K=function(...)local nK,zK=1,({});local CK={[1]=xK,[2]=zK};local pK=(Q());local NK,HK=vi(...);local QK,UK=0,((pK==z and KK or pK));NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+1];end;end;end;do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0x01 or 0x0,S(HK,WK+0x1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[0x1];nK=nK+0X01;if dK<21 then if not(dK<10)then if dK>=15 then if dK<0x12 then do if dK>=16 then if dK==17 then repeat local VK,MK,aK=mK,zK,(EK[3]);local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do if LK[0X1]==MK and LK[0X0002]>=aK then local DK=LK[2];if not gK[DK]then do gK[DK]={MK[DK]};end;end;LK[1]=gK[DK];do LK[0X2]=0X1;end;end;end;end;until true;else if not(not(zK[EK[2]]<zK[EK[5]]))then else do nK=EK[3];end;end;end;else(zK)[EK[0x00003]]=r(zK[EK[0X00002]],zK[EK[0X0005]]);end;end;else do if not(dK<0x13)then do if dK~=0X0014 then if zK[EK[2]]==EK[0X06]then else nK=EK[3];end;else local VK=EK[0x002];local aK,MK=VK[0x00009],(nil);local gK=#aK;if not(gK>0X0)then else do MK={};end;do for wK=1,gK do local rK=(aK[wK]);do if rK[0X1]==0 then do MK[wK-0x1]={zK,rK[2]};end;else MK[wK-1]=sK[rK[2]];end;end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if MK then zK[VK+0X1]=aK;zK[VK+0X2]=gK;nK=EK[2];end;end;end;end;else if not(dK<0x0C)then do if dK<13 then do(zK)[8]=UK[EK[7]];end;local VK=(8);do nK=nK+1;end;do zK[0x9]=zK[7];end;nK=nK+0X1;local aK=(4);local MK=(2);if MK~=0 then QK=VK+MK-1;end;local gK,wK=nil,nil;do if MK==0X0001 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK~=1 then if aK~=0 then do gK=VK+aK-0X2;end;do QK=gK+1;end;else do gK=gK+VK-0x1;end;QK=gK;end;local lK=(0X0);for LK=VK,gK do lK=lK+0x1;do(zK)[LK]=wK[lK];end;end;else QK=VK-0X1;end;EK=eK[nK];nK=nK+0x0001;VK=0x8;local rK=(b(function(...)o();for lK,LK in...do o(true,lK,LK);end;end));(rK)(zK[VK],zK[VK+1],zK[VK+0x00002]);QK=VK;zK[VK]=rK;do nK=EK[0X2];end;else if dK~=0XE then(zK)[11]=UK[EK[0X7]];EK=eK[nK];do nK=nK+0x1;end;local VK=11;zK[12]=EK[0X07];do nK=nK+1;end;zK[13]=zK[10];nK=nK+0x1;(zK[VK])(zK[VK+1],zK[VK+0X02]);QK=VK-0X0001;nK=nK+0X1;nK=nK+0X1;EK=eK[nK];do nK=nK+0x01;end;zK[11]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;do(zK)[12]=EK[7];end;nK=nK+1;VK=0xB;zK[VK](zK[VK+0X1]);QK=VK-0x00001;nK=nK+0X001;do nK=nK+0x1;end;do EK=eK[nK];end;do nK=nK+0X1;end;do nK=EK[2];end;else(zK)[0X006]=EK[7];nK=nK+0X1;local aK=0X02;local VK=1;local MK=(zK[VK]);for LK=VK+1,0X0006 do MK=MK..zK[LK];end;zK[0X001]=MK;EK=eK[nK];nK=nK+1;do(zK)[0X2]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;do zK[0X03]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+1;nK=nK+1;do zK[4]=zK[0X00001];end;do nK=nK+0X1;end;local gK=(3);if gK~=0 then QK=aK+gK-0X00001;end;local rK,lK=nil,nil;local wK=3;if gK==1 then rK,lK=vi(zK[aK]());else rK,lK=vi(zK[aK](S(zK,aK+0X1,QK)));end;if wK==1 then QK=aK-1;else do if wK~=0X0 then rK=aK+wK-0X00002;QK=rK+0X001;else rK=rK+aK-0X1;QK=rK;end;end;local LK=(0X0);for DK=aK,rK do LK=LK+0X1;(zK)[DK]=lK[LK];end;end;do nK=nK+0x1;end;nK=nK+1;nK=nK+0X1;for LK=0X4,5 do zK[LK]=nil;end;EK=eK[nK];nK=nK+1;if not zK[2]then nK=EK[0X00002];end;end;end;end;else if dK~=11 then local VK=sK[0X00002];zK[1]=VK[0X1][VK[0X2]];EK=eK[nK];do nK=nK+0X01;end;(zK)[0x02]=EK[7];do nK=nK+0X1;end;do VK=sK[3];end;do zK[3]=VK[0X1][VK[2]];end;EK=eK[nK];nK=nK+1;zK[0X00004]=EK[7];EK=eK[nK];nK=nK+1;zK[0X005]=UK[EK[0X7]];do nK=nK+1;end;do nK=nK+0x0001;end;EK=eK[nK];nK=nK+0x1;zK[0X0005]=zK[0X5][EK[6]];EK=eK[nK];nK=nK+0X001;if not(zK[5])then else do nK=EK[2];end;end;else if zK[EK[0x2]]==EK[6]then do nK=EK[0X3];end;end;end;end;end;else if dK>=5 then do if not(dK>=7)then if dK~=6 then zK[EK[0X03]]=zK[EK[0X2]][zK[EK[0X0005]]];else(zK)[0X6]=UK[EK[0x7]];local MK=0x6;local VK=(sK[4]);nK=nK+1;(zK)[0x7]=VK[0X1][VK[2]];nK=nK+1;local gK=(3);nK=nK+1;EK=eK[nK];nK=nK+0X001;do zK[7]=zK[7][EK[0X00006]];end;nK=nK+0X001;VK=sK[4];do(zK)[0X8]=VK[1][VK[0X2]];end;nK=nK+0X1;(zK)[9]=zK[0X003];nK=nK+1;local aK=(0X4);if aK~=0X0 then QK=MK+aK-1;end;local wK,rK=nil,nil;if aK==1 then wK,rK=vi(zK[MK]());else do wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;end;if gK~=1 then do if gK==0x00000 then wK=wK+MK-0X0001;do QK=wK;end;else wK=MK+gK-2;QK=wK+1;end;end;local lK=(0);for LK=MK,wK do lK=lK+1;zK[LK]=rK[lK];end;else QK=MK-0X01;end;nK=nK+1;do(zK)[5]=zK[7];end;nK=nK+0x1;(zK)[4]=zK[0X00006];do EK=eK[nK];end;nK=nK+0x1;nK=EK[0X2];end;else if not(dK<8)then if dK==0x0009 then local VK=(sK[0X000]);zK[0X01]=VK[1][VK[0X2]];nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;do if zK[1]==EK[0X6]then else nK=EK[0X0003];end;end;else local VK=sK[1];do(zK)[0X1]=VK[0X0001][VK[2]];end;EK=eK[nK];nK=nK+1;local MK,aK=1,zK[0x1];do zK[MK+0x1]=aK;end;zK[MK]=aK[EK[0X6]];EK=eK[nK];do nK=nK+1;end;(zK)[3]=EK[0x007];nK=nK+1;MK=1;zK[MK](zK[MK+0X1],zK[MK+0X002]);QK=MK-0X1;nK=nK+1;do nK=nK+0X1;end;nK=nK+0x1;repeat local gK,wK=mK,(zK);local rK={};do for lK,LK in W,gK do for DK,ZK in W,LK do if not(ZK[1]==wK and ZK[2]>=0)then else local GK=(ZK[0X00002]);do if not rK[GK]then rK[GK]={wK[GK]};end;end;ZK[1]=rK[GK];(ZK)[2]=0X1;end;end;end;end;until true;return;end;else local VK=sK[0X00001];(zK)[6]=VK[1][VK[0X2]];local MK=0X0006;do EK=eK[nK];end;nK=nK+1;local aK=zK[0X6];zK[MK+1]=aK;zK[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+1;zK[0X08]=EK[0X7];nK=nK+0X00001;MK=0X6;zK[MK](zK[MK+1],zK[MK+0x2]);QK=MK-1;nK=nK+0X001;nK=nK+0X1;nK=nK+0X1;repeat local gK,wK=mK,zK;local rK={};for lK,LK in W,gK do do for DK,ZK in W,LK do if ZK[0x1]==wK and ZK[0X2]>=0 then local GK=ZK[0X0002];if not rK[GK]then rK[GK]={wK[GK]};end;do ZK[0x0001]=rK[GK];end;(ZK)[2]=1;end;end;end;end;until true;return;end;end;end;else if not(dK>=2)then if dK==1 then else do zK[0X01]=UK[EK[0X0007]];end;do EK=eK[nK];end;nK=nK+0x1;zK[1]=zK[1][EK[6]];EK=eK[nK];do nK=nK+1;end;if zK[0X1]~=EK[6]then else nK=EK[0X3];end;end;else do if dK<3 then(zK)[11]=UK[EK[0X00007]];EK=eK[nK];nK=nK+0X1;zK[11]=zK[11][EK[6]];nK=nK+0X01;do(zK)[12]=zK[6];end;do EK=eK[nK];end;nK=nK+0X1;(zK)[0XD]=UK[EK[7]];EK=eK[nK];local VK=(sK[5]);do nK=nK+1;end;zK[13]=zK[0X0000D][EK[6]];nK=nK+0X1;do zK[14]=zK[0x6];end;do nK=nK+1;end;zK[0Xf]=VK[1][VK[2]];nK=nK+1;nK=nK+0X1;local MK=13;nK=nK+0x1;zK[15]=zK[0X0F][zK[0X0009]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];do nK=nK+0x001;end;zK[15]=zK[0Xf][EK[0X00006]];do nK=nK+0X1;end;local aK=3;if aK==0X000 then else QK=MK+aK-1;end;local wK,rK=nil,nil;local gK=0X000;do if aK==1 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;if gK==0X1 then QK=MK-1;else do if gK==0 then do wK=wK+MK-1;end;QK=wK;else wK=MK+gK-2;QK=wK+1;end;end;local LK=(0);for DK=MK,wK do LK=LK+0X1;do(zK)[DK]=rK[LK];end;end;end;nK=nK+1;nK=nK+1;nK=nK+0x1;local lK=(0X000D);MK=0XB;zK[MK](S(zK,MK+1,QK));do QK=MK-0X1;end;EK=eK[nK];do nK=nK+1;end;zK[11]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X1;zK[0Xb]=zK[0XB][EK[0x6]];nK=nK+1;zK[0X0C]=zK[0X6];nK=nK+1;VK=sK[5];zK[0xd]=VK[0X1][VK[2]];do nK=nK+0X1;end;(zK)[0XD]=zK[13][zK[0x9]];EK=eK[nK];do nK=nK+0X1;end;(zK)[13]=zK[0XD][EK[0x06]];EK=eK[nK];nK=nK+0X001;zK[14]=EK[0X7];nK=nK+1;zK[13]=zK[lK]..zK[lK+1];nK=nK+0X1;MK=11;(zK[MK])(zK[MK+0X1],zK[MK+2]);QK=MK-1;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;nK=EK[2];else if dK==4 then(zK)[EK[3]]=zK[EK[2]][EK[0X6]];else(zK)[0X0b]=zK[0Xa][EK[6]];do nK=nK+0X0001;end;(zK)[0x00B]=zK[0X7][zK[11]];EK=eK[nK];nK=nK+0X1;if zK[11]~=EK[0x006]then else nK=EK[3];end;end;end;end;end;end;end;else if not(dK<0X20)then if dK>=37 then do if not(dK>=40)then if dK>=0X26 then if dK~=0X27 then for VK=EK[3],EK[0X002]do(zK)[VK]=nil;end;else local VK=(sK[0X1]);do(zK)[0X8]=VK[0X1][VK[0X0002]];end;nK=nK+0x1;nK=nK+1;local gK=0X0000A;do EK=eK[nK];end;local MK=0X0008;nK=nK+0X00001;local aK=(zK[8]);zK[MK+1]=aK;zK[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+1;zK[0X0000a]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;do zK[0X000A]=zK[0Xa][EK[6]];end;EK=eK[nK];do nK=nK+0X1;end;zK[11]=EK[0X07];EK=eK[nK];nK=nK+1;do(zK)[12]=UK[EK[0X0007]];end;EK=eK[nK];nK=nK+1;zK[12]=zK[12][EK[0X6]];nK=nK+1;do MK=10;end;do zK[MK]=zK[MK](zK[MK+1],zK[MK+0x00002]);end;QK=MK;EK=eK[nK];nK=nK+0x1;local wK=(0x2);(zK)[11]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0X0B]=zK[0xB][EK[6]];do nK=nK+1;end;zK[12]=zK[0x6];EK=eK[nK];do nK=nK+1;end;zK[0x000D]=EK[7];nK=nK+0X1;MK=0XB;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;nK=nK+0x0001;nK=nK+0X01;nK=nK+1;do zK[10]=zK[gK]..zK[gK+1];end;EK=eK[nK];do nK=nK+0X01;end;zK[11]=EK[7];nK=nK+1;MK=0X8;QK=MK+0X4-0X1;zK[MK](S(zK,MK+1,QK));QK=MK-1;nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X01;(zK)[0x08]=UK[EK[0X00007]];nK=nK+0X1;nK=nK+0X001;EK=eK[nK];nK=nK+1;zK[0x9]=EK[0X007];nK=nK+1;MK=0X008;(zK[MK])(zK[MK+1]);do QK=MK-0X00001;end;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK)[0X8]=UK[EK[7]];nK=nK+0x1;(zK)[9]=zK[7];nK=nK+0X1;MK=0X8;local rK=(0x00004);if wK~=0X0 then QK=MK+wK-1;end;local lK,LK=nil,nil;if wK~=0X1 then lK,LK=vi(zK[MK](S(zK,MK+1,QK)));else lK,LK=vi(zK[MK]());end;do if rK==1 then QK=MK-0X1;else if rK~=0X0000 then lK=MK+rK-2;QK=lK+0X001;else lK=lK+MK-1;QK=lK;end;local ZK=0X0;for GK=MK,lK do ZK=ZK+1;zK[GK]=LK[ZK];end;end;end;do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;MK=8;local DK=(b(function(...)(o)();for ZK,GK in...do o(true,ZK,GK);end;end));(DK)(zK[MK],zK[MK+1],zK[MK+0X2]);do QK=MK;end;do zK[MK]=DK;end;do nK=EK[2];end;end;else local VK=sK[0x0001];zK[8]=VK[1][VK[0X0002]];do EK=eK[nK];end;local MK=0X8;nK=nK+0x1;local aK=(zK[0x8]);(zK)[MK+0X00001]=aK;zK[MK]=aK[EK[6]];do EK=eK[nK];end;nK=nK+0x1;(zK)[10]=EK[0X07];nK=nK+1;MK=0X0008;(zK[MK])(zK[MK+1],zK[MK+2]);QK=MK-1;nK=nK+0x01;nK=nK+1;nK=nK+0X001;repeat local rK={};local gK,wK=mK,zK;for lK,LK in W,gK do for DK,ZK in W,LK do if not(ZK[0x1]==wK and ZK[0X2]>=0X0)then else local GK=ZK[2];if not rK[GK]then rK[GK]={wK[GK]};end;(ZK)[0X1]=rK[GK];do(ZK)[0X02]=1;end;end;end;end;until true;return;end;else if not(dK<41)then if dK==42 then do(zK)[EK[0X3]]=UK[EK[0x7]];end;else if zK[EK[0x3]]then nK=EK[2];end;end;else zK[EK[0X3]]=zK[EK[0x0002]];end;end;end;else if not(dK>=0X22)then if dK==0X00021 then do(zK)[0x8]=EK[7];end;do nK=nK+0X1;end;local VK=sK[0];(VK[1])[VK[2]]=zK[0X08];nK=nK+1;repeat local MK,aK=mK,(zK);local gK={};do for wK,rK in W,MK do do for lK,LK in W,rK do if not(LK[0X1]==aK and LK[0x02]>=0)then else local DK=(LK[2]);if not gK[DK]then gK[DK]={aK[DK]};end;do(LK)[1]=gK[DK];end;do LK[0x2]=0X1;end;end;end;end;end;end;until true;return;else zK[0XB]=zK[10][EK[0x6]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X00C]=zK[0X00A][EK[0x6]];nK=nK+0x01;nK=nK+1;nK=nK+0X1;(zK[7])[zK[0xb]]=zK[0Xc];EK=eK[nK];nK=nK+0x0001;nK=EK[2];end;else if dK<35 then local VK=(sK[1]);(zK)[1]=VK[0X00001][VK[2]];EK=eK[nK];local MK=1;nK=nK+1;local aK=(zK[1]);(zK)[MK+1]=aK;do(zK)[MK]=aK[EK[0X6]];end;EK=eK[nK];do nK=nK+0X1;end;(zK)[0x3]=EK[7];nK=nK+1;MK=1;(zK[MK])(zK[MK+1],zK[MK+0X2]);do QK=MK-0X0001;end;nK=nK+1;repeat local gK,wK=mK,(zK);local rK={};for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[0x1]==wK and ZK[2]>=0 then local GK=ZK[2];if not rK[GK]then rK[GK]={wK[GK]};end;ZK[1]=rK[GK];ZK[2]=1;end;end;end;until true;return;else do if dK~=36 then(zK)[2]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0X0002]=zK[2][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;if zK[2]==EK[6]then else nK=EK[0X003];end;else do(zK)[11]=UK[EK[0X7]];end;local MK=(11);EK=eK[nK];do nK=nK+0x1;end;zK[0XB]=zK[11][EK[6]];nK=nK+0X1;nK=nK+0x1;do nK=nK+0x1;end;(zK)[12]=zK[6];nK=nK+1;local VK=(sK[5]);do(zK)[0Xd]=VK[0X1][VK[2]];end;nK=nK+0X01;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0xE]=zK[0XA][EK[6]];nK=nK+1;nK=nK+1;nK=nK+1;zK[0xD]=zK[0XD][zK[0X0000e]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do(zK)[0XD]=zK[0XD][EK[0x06]];end;nK=nK+0X1;nK=nK+1;do nK=nK+1;end;(zK[MK])(zK[MK+0X01],zK[MK+2]);QK=MK-0X1;do EK=eK[nK];end;nK=nK+1;do zK[11]=zK[10][EK[0x6]];end;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;do zK[7][zK[11]]=EK[0X0006];end;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;end;end;end;else if dK>=26 then if not(dK<0X1d)then if not(dK<30)then if dK==0x1F then do nK=EK[2];end;else local MK=(6);local VK=sK[0x01];zK[0X0006]=VK[1][VK[2]];nK=nK+1;nK=nK+0X001;EK=eK[nK];nK=nK+1;local aK=zK[0X0006];zK[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];do EK=eK[nK];end;do nK=nK+0x1;end;zK[8]=EK[0X0007];do nK=nK+0x1;end;do MK=0X006;end;zK[MK](zK[MK+1],zK[MK+0x2]);QK=MK-0X01;do EK=eK[nK];end;nK=nK+0X1;do nK=EK[0X2];end;end;else(zK)[EK[3]]=D(zK[EK[2]],zK[EK[5]]);end;else do if not(dK>=27)then do(zK)[8]=EK[0x7];end;nK=nK+1;local VK=(sK[0X0]);VK[1][VK[0X2]]=zK[0X008];EK=eK[nK];nK=nK+0X1;do(zK)[8]=UK[EK[0x07]];end;nK=nK+0X1;local MK=0x8;nK=nK+1;do nK=nK+0x1;end;VK=sK[0X06];do(zK)[0x9]=VK[1][VK[2]];end;EK=eK[nK];nK=nK+1;do zK[9]=zK[9][EK[0X00006]];end;do nK=nK+1;end;nK=nK+0X001;EK=eK[nK];nK=nK+0X00001;local gK=0X00004;zK[9]=zK[0X009][EK[6]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X001;zK[9]=zK[9][EK[6]];do EK=eK[nK];end;nK=nK+0X1;do zK[0X009]=zK[9][EK[0X6]];end;do nK=nK+0X001;end;local aK=2;do if aK==0 then else do QK=MK+aK-0X1;end;end;end;local wK,rK=nil,nil;if aK==0X1 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+0x1,QK)));end;do if gK~=1 then do if gK~=0X0 then do wK=MK+gK-2;end;QK=wK+1;else wK=wK+MK-0x1;QK=wK;end;end;local LK=0;for DK=MK,wK do LK=LK+1;(zK)[DK]=rK[LK];end;else QK=MK-0X1;end;end;do EK=eK[nK];end;do nK=nK+1;end;do MK=0X0008;end;local lK=b(function(...)o();for LK,DK in...do o(true,LK,DK);end;end);lK(zK[MK],zK[MK+1],zK[MK+2]);QK=MK;(zK)[MK]=lK;nK=EK[0x02];else if dK~=0X1C then if not(not(zK[EK[2]]<EK[0X6]))then else do nK=EK[0X3];end;end;else(zK)[0x0000B]=UK[EK[0X7]];local VK=sK[0X5];EK=eK[nK];nK=nK+1;zK[11]=zK[0Xb][EK[0X6]];nK=nK+1;zK[12]=zK[6];nK=nK+1;zK[13]=VK[1][VK[2]];do EK=eK[nK];end;nK=nK+0X1;zK[14]=zK[0XA][EK[0X6]];nK=nK+1;nK=nK+1;local MK=0x0000b;nK=nK+1;zK[13]=zK[0XD][zK[0xe]];do nK=nK+0X01;end;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X01;end;(zK)[0Xd]=zK[0X00d][EK[6]];nK=nK+0X1;zK[MK]=zK[MK](zK[MK+0X001],zK[MK+2]);QK=MK;do EK=eK[nK];end;nK=nK+1;if zK[11]then nK=EK[0X02];end;end;end;end;end;else if not(dK<23)then if not(dK<24)then if dK~=0x19 then do(zK)[EK[3]]=EK[0X7];end;else zK[EK[0X3]]=g(zK[EK[2]],zK[EK[5]]);end;else zK[EK[3]]=#zK[EK[0X002]];end;else if dK~=0X016 then(zK)[0X006]={};do nK=nK+0x1;end;(zK)[7]={};do EK=eK[nK];end;nK=nK+1;do(zK)[8]=UK[EK[0X007]];end;nK=nK+1;do nK=nK+0X1;end;nK=nK+1;local VK=(8);zK[0X0009]=zK[0X005];nK=nK+1;local aK,MK=0X0004,2;do if MK==0 then else do QK=VK+MK-1;end;end;end;local gK,wK=nil,(nil);do if MK~=0X01 then do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;else gK,wK=vi(zK[VK]());end;end;if aK==0x1 then QK=VK-1;else do if aK==0 then gK=gK+VK-1;QK=gK;else gK=VK+aK-2;do QK=gK+1;end;end;end;local lK=0X0;for LK=VK,gK do lK=lK+1;(zK)[LK]=wK[lK];end;end;EK=eK[nK];nK=nK+1;VK=8;local rK=(b(function(...)(o)();for lK,LK in...do o(true,lK,LK);end;end));(rK)(zK[VK],zK[VK+1],zK[VK+0X00002]);QK=VK;(zK)[VK]=rK;nK=EK[2];else zK[EK[3]]={S({},1,EK[0X2])};end;end;end;end;end;end;end;else _K=function(...)local nK,zK,QK=1,{},(0);local pK=Q();local UK=(pK==z and KK or pK);local NK,HK=vi(...);local CK=({[2]=zK,[1]=xK});NK=NK-0X00001;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0X00,S(HK,WK+0X1,NK+0X1)};end;end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0X1;if dK>=9 then if dK<0X0D then if not(dK<11)then if dK==0XC then for VK=EK[0x3],EK[0x002]do do zK[VK]=nil;end;end;else if not(not(zK[EK[0X2]]<=zK[EK[5]]))then else nK=EK[3];end;end;else do if dK==0XA then(zK)[0]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0X0]=zK[0X000][EK[0X6]];do nK=nK+0X1;end;nK=nK+0X00001;do EK=eK[nK];end;nK=nK+1;if not(not zK[0])then else nK=EK[0x02];end;else nK=EK[2];end;end;end;else if not(dK<15)then do if dK>=0x000010 then if dK~=0X000011 then do zK[EK[0X3]]=EK[7];end;else zK[EK[3]]=zK[EK[2]][zK[EK[5]]];end;else(CK)[EK[0x002]]=zK[EK[0X3]];end;end;else if dK==14 then local VK=zK[EK[2]]/zK[EK[0x5]];do(zK)[EK[3]]=VK-VK%1;end;else end;end;end;else if dK>=4 then if not(dK>=0X6)then if dK==0x05 then do zK[EK[0x003]]=UK[EK[7]];end;else zK[EK[3]]={S({},1,EK[0x2])};end;else if not(dK<7)then do if dK~=0X00008 then local VK=sK[EK[2]];(zK)[EK[3]]=VK[0X1][VK[0X2]];else do(zK)[2]=UK[EK[0X00007]];end;nK=nK+1;nK=nK+1;local VK=0X2;EK=eK[nK];do nK=nK+0X1;end;zK[3]=EK[7];do nK=nK+1;end;do zK[0X4]=zK[1];end;nK=nK+0X00001;zK[VK](zK[VK+0X0001],zK[VK+2]);QK=VK-1;nK=nK+1;nK=nK+0X00001;do EK=eK[nK];end;do nK=nK+1;end;zK[2]=UK[EK[0X07]];do EK=eK[nK];end;nK=nK+1;do(zK)[0X3]=EK[0X7];end;nK=nK+0X00001;VK=0x0002;zK[VK](zK[VK+0X1]);QK=VK-1;EK=eK[nK];nK=nK+0X1;nK=EK[0X00002];end;end;else repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0X00000 then local LK=(lK[2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[1]=aK[LK];do lK[2]=0X1;end;end;end;end;until true;return;end;end;else if not(dK>=2)then if dK==1 then if not zK[EK[3]]then nK=EK[2];end;else local VK=(EK[2]);local aK=VK[9];local MK=(nil);local gK=(#aK);if gK>0X000 then MK={};for wK=0X01,gK do local rK=aK[wK];if rK[0x1]==0 then MK[wK-1]={zK,rK[0X0002]};else MK[wK-1]=sK[rK[2]];end;end;K(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else if dK==0X3 then zK[0x0]=UK[EK[0X007]];nK=nK+0X1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X1;(zK)[0x0]=zK[0][EK[6]];nK=nK+1;QK=0;zK[QK]=zK[QK]();EK=eK[nK];do nK=nK+1;end;do if not(not zK[0X0])then else nK=EK[2];end;end;else local VK,MK=sK[0X0001],0X0;do(zK)[0X0]=VK[0X1][VK[2]];end;local gK=(3);EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[7]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[2]=EK[0X7];end;nK=nK+0X1;local aK=3;do if aK==0X0 then else QK=MK+aK-0X1;end;end;local wK,rK=nil,(nil);if aK==0x01 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+0X0001,QK)));end;if gK==0x1 then QK=MK-1;else if gK==0 then wK=wK+MK-1;QK=wK;else wK=MK+gK-2;QK=wK+1;end;local lK=0X000;for LK=MK,wK do lK=lK+0x01;zK[LK]=rK[lK];end;end;do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;if not zK[0]then nK=EK[2];end;end;end;end;end;end;end;end;else _K=function(...)local zK=({});local nK=(0X001);local pK=Q();local CK,UK={[1]=xK,[2]=zK},(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;for EK=0x00,NK do if not(WK>EK)then do break;end;else zK[EK]=HK[EK+1];end;end;local QK=(0);if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X00001 or 0x0,S(HK,WK+0x1,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X00001;if not(dK>=7)then if not(dK<3)then if not(dK>=0X05)then if dK~=0X4 then do zK[EK[0x3]]={S({},1,EK[0X2])};end;else zK[0X00001]=UK[EK[0x7]];nK=nK+0x1;nK=nK+1;nK=nK+0X001;(zK)[2]=zK[0X0];EK=eK[nK];nK=nK+0X001;(zK[0x1])[EK[0X7]]=zK[2];EK=eK[nK];nK=nK+1;zK[0X0001]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0X1;QK=0X1;zK[QK]();QK=QK-0x00001;EK=eK[nK];nK=nK+1;zK[0x1]=UK[EK[0X7]];nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;local wK=(0X001);zK[0X1]=zK[0X1][EK[0x6]];nK=nK+1;nK=nK+1;EK=eK[nK];local VK=EK[0X2];local aK=VK[9];nK=nK+0X1;local gK=#aK;local MK=nil;if not(gK>0x0)then else MK={};for rK=1,gK do local lK=(aK[rK]);if lK[0X1]==0 then(MK)[rK-0X00001]={zK,lK[2]};else MK[rK-0X1]=sK[lK[0X02]];end;end;(K)(mK,MK);end;(zK)[2]=Ri(MK,UK,VK);nK=nK+0x1;(zK[wK])(zK[wK+0X001]);QK=wK-1;nK=nK+1;do repeat local rK,lK,LK=mK,zK,({});for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0X1]==lK and OK[2]>=0 then local tK=OK[0X2];do if not(not LK[tK])then else do LK[tK]={lK[tK]};end;end;end;do OK[0X01]=LK[tK];end;do(OK)[2]=0X00001;end;end;end;end;until true;end;return;end;else if dK~=6 then zK[EK[0X3]]=EK[7];else zK[EK[3]]=zK[EK[2]]%zK[EK[5]];end;end;else if not(dK>=1)then zK[EK[0X03]]=zK[EK[0X2]]^zK[EK[5]];else do if dK==2 then zK[EK[3]]=CK[EK[2]];else do zK[EK[0x3]]=EK[0X2];end;end;end;end;end;else if dK<0XB then do if dK>=9 then if dK==0XA then do if zK[EK[0X2]]~=zK[EK[0X5]]then else nK=EK[0x3];end;end;else end;else do if dK~=8 then if not(not zK[EK[0x3]])then else nK=EK[0X00002];end;else local VK,MK=EK[0X3],EK[0X2];if MK==0 then else QK=VK+MK-1;end;local gK,wK,aK=nil,nil,EK[0x5];if MK==0X1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));end;if aK==0X001 then QK=VK-0X1;else if aK==0 then gK=gK+VK-0x1;do QK=gK;end;else do gK=VK+aK-2;end;do QK=gK+1;end;end;local rK=(0x00);for lK=VK,gK do rK=rK+1;do zK[lK]=wK[rK];end;end;end;end;end;end;end;else do if dK<0X000D then if dK==12 then(zK)[EK[0X3]]=UK[EK[0X07]];else local VK=(EK[0X00002]);local aK,MK=VK[9],(nil);local gK=#aK;if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);do if rK[1]~=0X0 then do(MK)[wK-0X1]=sK[rK[0X02]];end;else(MK)[wK-0X1]={zK,rK[0X002]};end;end;end;K(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else if dK==14 then nK=EK[0X2];else if not(zK[EK[3]])then else do nK=EK[0X2];end;end;end;end;end;end;end;end;end;end;elseif not(SK>=0x59)then _K=function(...)local nK,zK=1,{};local pK=(Q());local QK=0X0000;local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};local UK=((pK==z and KK or pK));NK=NK-1;do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0X0,S(HK,WK+0X1,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;do while true do local EK=eK[nK];local dK=EK[0X1];nK=nK+0X1;if not(dK>=7)then if not(dK>=3)then if dK<1 then(zK)[EK[0x3]]=r(zK[EK[0X002]],zK[EK[0X5]]);else do if dK~=0X2 then zK[EK[3]]={S({},1,EK[0X0002])};else(zK)[EK[3]]=zK[EK[2]]+zK[EK[0x0005]];end;end;end;else if dK>=5 then do if dK==0X6 then do zK[EK[3]]=EK[0X007];end;else(zK)[EK[0X3]]=w(zK[EK[0X2]],zK[EK[5]]);end;end;else do if dK==4 then else local VK=EK[2];local aK=VK[0x9];local MK=nil;local gK=(#aK);do if gK>0 then MK={};for wK=0X1,gK do local rK=aK[wK];do if rK[1]==0X0 then MK[wK-0X1]={zK,rK[0x2]};else(MK)[wK-1]=sK[rK[0X02]];end;end;end;K(mK,MK);end;end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;else if not(dK<0X0000a)then do if not(dK<0XC)then if dK==13 then zK[EK[0x00003]]=true;else local VK=EK[3];local MK=(zK[VK]);local aK,gK=zK[VK+0X001],(zK[VK+0x002]);do zK[VK]=b(function()do for wK=MK,aK,gK do o(true,wK);end;end;end);end;nK=EK[2];end;else if dK~=11 then for VK=EK[3],EK[0X0002]do zK[VK]=nil;end;else(zK)[0X1]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X001;nK=nK+1;do zK[2]=zK[0X0];end;EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[2];EK=eK[nK];local wK=1;nK=nK+1;(zK)[1]=UK[EK[7]];nK=nK+1;QK=0X1;zK[QK]();QK=QK-1;EK=eK[nK];nK=nK+0X1;zK[0X001]=UK[EK[7]];nK=nK+0X001;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;do zK[1]=zK[0X1][EK[6]];end;nK=nK+1;nK=nK+1;do EK=eK[nK];end;local VK=(EK[2]);do nK=nK+1;end;local aK,MK=VK[9],(nil);local gK=#aK;do if gK>0x0 then MK={};do for rK=0X001,gK do local lK=(aK[rK]);if lK[1]==0X0 then(MK)[rK-1]={zK,lK[2]};else(MK)[rK-0x1]=sK[lK[2]];end;end;end;K(mK,MK);end;end;do(zK)[0x00002]=Ri(MK,UK,VK);end;do nK=nK+1;end;zK[wK](zK[wK+1]);QK=wK-1;do nK=nK+0X1;end;do nK=nK+0X1;end;nK=nK+1;repeat local rK,lK=mK,(zK);local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[0X1]==lK and OK[2]>=0)then else local tK=OK[2];if not LK[tK]then(LK)[tK]={lK[tK]};end;(OK)[0X1]=LK[tK];OK[2]=1;end;end;end;until true;do return;end;end;end;end;else do if not(dK<8)then do if dK==9 then zK[EK[0X003]]=UK[EK[7]];else do zK[EK[3]]=zK[EK[2]]>zK[EK[5]];end;end;end;else nK=EK[2];end;end;end;end;end;end;end;else do if SK~=90 then _K=function(...)local QK=0X000;local nK,zK=1,{};local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);NK=NK-1;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0x0000,S(HK,WK+0X01,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[0X1]);do nK=nK+0x1;end;if dK>=0x9 then if dK>=13 then if not(dK>=15)then do if dK==14 then(zK)[EK[3]]=zK[EK[2]]%zK[EK[5]];else(zK)[0x1]=UK[EK[7]];nK=nK+0X1;(zK)[2]=zK[0X000];EK=eK[nK];nK=nK+0X1;zK[0X1][EK[0X0007]]=zK[2];EK=eK[nK];do nK=nK+1;end;zK[0X1]=UK[EK[0X007]];nK=nK+1;nK=nK+0X01;nK=nK+1;QK=0X1;zK[QK]();do QK=QK-1;end;nK=nK+1;nK=nK+1;do nK=nK+0X001;end;repeat local VK,MK,aK=mK,zK,{};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X01]==MK and lK[2]>=0X00)then else local LK=lK[0x02];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[1]=aK[LK];lK[2]=1;end;end;end;end;until true;return;end;end;else if dK<0X10 then for VK=EK[3],EK[0X00002]do(zK)[VK]=nil;end;else if dK~=0X11 then zK[EK[3]]=EK[2];else do(zK)[EK[3]]={S({},0X1,EK[2])};end;end;end;end;else if dK>=11 then do if dK~=0X00C then zK[EK[3]]=zK[EK[2]]/zK[EK[0X005]];else do(zK)[EK[3]]=UK[EK[0X7]];end;end;end;else if dK~=0Xa then do if not(not(zK[EK[0X0002]]<=zK[EK[0x5]]))then else nK=EK[0x3];end;end;else do nK=EK[2];end;end;end;end;else if dK>=4 then if dK<0x6 then if dK==5 then(zK)[EK[0X0003]]=zK[EK[2]]^zK[EK[0X5]];else local VK=EK[0X2];local aK,MK=VK[0x9],(nil);local gK=(#aK);if gK>0X0 then MK={};for wK=0X1,gK do local rK=aK[wK];do if rK[1]==0X0 then do(MK)[wK-1]={zK,rK[0X2]};end;else do(MK)[wK-1]=sK[rK[2]];end;end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else do if not(dK>=0x00007)then CK[EK[0X2]]=zK[EK[3]];else if dK==8 then(zK)[EK[0x0003]]=zK[EK[2]]<zK[EK[5]];else(zK)[EK[0x00003]]=#zK[EK[2]];end;end;end;end;else do if not(dK>=2)then if dK~=1 then(UK)[EK[0X7]]=zK[EK[0x3]];else end;else if dK==3 then do zK[EK[3]]=zK[EK[0X2]]~=zK[EK[0X005]];end;else zK[EK[3]]=EK[0X7];end;end;end;end;end;end;end;else do _K=function(...)local nK=0x001;local zK={};local pK=Q();local QK=0;local UK=(pK==z and KK or pK);local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-1;for EK=0X0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X00001];end;end;do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+1,NK+1)};end;end;if UK==pK then else(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=(EK[0X01]);nK=nK+1;do if dK<12 then if not(dK<6)then if not(dK>=0X9)then if not(dK>=7)then nK=EK[0x00002];else do if dK~=0x8 then local VK=EK[3];local MK,aK,gK=zK[VK]();if MK then zK[VK+1]=aK;(zK)[VK+2]=gK;nK=EK[2];end;else zK[0X6]=UK[EK[0X007]];EK=eK[nK];do nK=nK+1;end;do(zK)[7]=zK[0x3][EK[6]];end;do EK=eK[nK];end;do nK=nK+1;end;zK[7]=zK[7][EK[6]];do nK=nK+0X1;end;local VK=(0X006);zK[VK]=zK[VK](zK[VK+0X1]);do QK=VK;end;EK=eK[nK];do nK=nK+1;end;if not(not zK[6])then else do nK=EK[0X02];end;end;end;end;end;else if not(dK>=0X00a)then(zK)[EK[3]]={S({},1,EK[0X2])};else do if dK~=0xB then zK[EK[3]]=EK[7];else(zK)[EK[3]]=UK[EK[0X7]];end;end;end;end;else if dK<3 then if not(dK<1)then do if dK~=0X002 then do(zK)[0]=UK[EK[7]];end;nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;do zK[0x0]=zK[0x0000][EK[6]];end;EK=eK[nK];nK=nK+1;do if not zK[0X0000]then nK=EK[0x02];end;end;else do(zK)[0]=UK[EK[7]];end;EK=eK[nK];do nK=nK+1;end;(zK)[1]=EK[7];EK=eK[nK];do nK=nK+1;end;local VK=0x0;zK[0X00002]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do zK[2]=zK[2][EK[0X6]];end;nK=nK+0X1;nK=nK+1;nK=nK+1;do(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0X002]);end;do QK=VK;end;do EK=eK[nK];end;nK=nK+1;do if not zK[0X0]then do nK=EK[0X2];end;end;end;end;end;else local VK=(sK[0X1]);(zK)[0X000]=VK[0X001][VK[0x2]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0x1;local MK=0;do(zK)[1]=UK[EK[0X7]];end;nK=nK+0X1;nK=nK+0x0001;EK=eK[nK];nK=nK+1;do zK[2]=EK[7];end;nK=nK+0X1;zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);QK=MK;nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X01;do if zK[0x0]then nK=EK[2];end;end;end;else if not(dK>=4)then else do if dK~=0X5 then(zK)[0X0]=UK[EK[0x7]];do nK=nK+0X0001;end;local VK,MK=sK[0x0002],1;nK=nK+0X1;local gK=(0X2);nK=nK+1;(zK)[1]=VK[1][VK[2]];do nK=nK+0X1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;local aK=(zK[0X01]);zK[MK+1]=aK;zK[MK]=aK[EK[0X006]];EK=eK[nK];nK=nK+1;(zK)[0X03]=EK[0X7];nK=nK+0x00001;MK=0X1;do zK[MK]=zK[MK](zK[MK+1],zK[MK+2]);end;QK=MK;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X01;do MK=0X1;end;do aK=zK[1];end;(zK)[MK+0x1]=aK;do(zK)[MK]=aK[EK[6]];end;nK=nK+1;MK=0X1;local wK=0;if gK==0 then else QK=MK+gK-0X1;end;local rK,lK=nil,nil;do if gK==0X0001 then rK,lK=vi(zK[MK]());else rK,lK=vi(zK[MK](S(zK,MK+0X001,QK)));end;end;do if wK==0x00001 then do QK=MK-1;end;else if wK==0 then do rK=rK+MK-0X001;end;QK=rK;else do rK=MK+wK-2;end;QK=rK+0X1;end;local DK=0;for ZK=MK,rK do DK=DK+1;(zK)[ZK]=lK[DK];end;end;end;nK=nK+0x01;MK=0X00000;gK=0;wK=0X4;if gK~=0x0 then do QK=MK+gK-0X1;end;end;rK,lK=nil;if gK~=0X1 then rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));else rK,lK=vi(zK[MK]());end;if wK~=0x00001 then if wK~=0X0 then rK=MK+wK-0x2;QK=rK+0X1;else rK=rK+MK-0X1;do QK=rK;end;end;local DK=(0);for ZK=MK,rK do do DK=DK+1;end;zK[ZK]=lK[DK];end;else QK=MK-0X01;end;EK=eK[nK];nK=nK+1;MK=0;local LK=b(function(...)o();for DK,ZK in...do o(true,DK,ZK);end;end);LK(zK[MK],zK[MK+1],zK[MK+0X002]);QK=MK;(zK)[MK]=LK;nK=EK[0x2];else local VK=EK[0x2];local aK=(VK[0X09]);local MK=(nil);local gK=#aK;if gK>0X0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]==0 then(MK)[wK-1]={zK,rK[2]};else(MK)[wK-1]=sK[rK[2]];end;end;K(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;end;else do if dK>=0X12 then if dK>=21 then if dK<23 then if dK==0x0016 then local VK,MK=0x3,(zK[0X2]);do zK[VK+0X1]=MK;end;zK[VK]=MK[EK[6]];do EK=eK[nK];end;do nK=nK+1;end;zK[5]=EK[0X7];do nK=nK+1;end;VK=3;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;nK=nK+0X01;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if not(not zK[0x3])then else nK=EK[0x002];end;else if zK[EK[0X2]]~=zK[EK[0X5]]then else nK=EK[0X3];end;end;else if dK==0x18 then(zK)[0x0]=UK[EK[7]];EK=eK[nK];do nK=nK+0X1;end;zK[0]=zK[0X0][EK[0X6]];nK=nK+0X0001;do QK=0;end;zK[QK]=zK[QK]();nK=nK+0X0001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X1;do if not(not zK[0X0])then else nK=EK[0x2];end;end;else do zK[4]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;local MK=(sK[0X3]);local VK=(4);(zK)[5]=zK[3][EK[0X00006]];nK=nK+0x001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[5]=zK[0x005][EK[0X6]];nK=nK+1;zK[VK]=zK[VK](zK[VK+0x1]);do QK=VK;end;do nK=nK+1;end;(zK)[0X05]=MK[1][MK[0x2]];EK=eK[nK];do nK=nK+0X1;end;(zK)[0X00005]=zK[5][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0x0001;end;if zK[0X4]~=zK[0X5]then nK=EK[0X03];end;end;end;else if dK>=19 then do if dK==20 then do for VK=EK[0X03],EK[0X2]do zK[VK]=nil;end;end;else do zK[EK[0X03]]=zK[EK[0X2]]-zK[EK[5]];end;end;end;else(zK)[6]=UK[EK[7]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X01;do zK[0x07]=zK[0X00003][EK[6]];end;nK=nK+0X001;nK=nK+0X1;EK=eK[nK];local VK=6;nK=nK+1;do zK[0x07]=zK[0X007][EK[0X00006]];end;nK=nK+0X00001;(zK)[VK]=zK[VK](zK[VK+0X1]);do QK=VK;end;nK=nK+1;nK=nK+0X0001;EK=eK[nK];do nK=nK+1;end;if not(zK[6])then else do nK=EK[0X2];end;end;end;end;else if dK<15 then if dK<0Xd then local VK,MK=4,(zK[3]);(zK)[VK+0x0001]=MK;(zK)[VK]=MK[EK[0X006]];EK=eK[nK];nK=nK+1;(zK)[0x00006]=EK[7];nK=nK+0X1;VK=4;(zK)[VK]=zK[VK](zK[VK+0x1],zK[VK+2]);QK=VK;EK=eK[nK];nK=nK+0x1;if not(not zK[0X4])then else nK=EK[2];end;else do if dK~=0X000E then zK[EK[0X3]]=zK[EK[2]]/zK[EK[5]];else local VK,MK=4,(zK[0x003]);zK[VK+0X00001]=MK;do(zK)[VK]=MK[EK[6]];end;EK=eK[nK];nK=nK+1;zK[0X06]=EK[7];nK=nK+1;do VK=0x4;end;(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0X2]);QK=VK;do EK=eK[nK];end;nK=nK+1;if not zK[0X004]then nK=EK[2];end;end;end;end;else if dK<0X10 then repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do do if lK[0X1]==MK and lK[2]>=0X00000 then local LK=(lK[2]);if not(not aK[LK])then else do(aK)[LK]={MK[LK]};end;end;(lK)[0X0001]=aK[LK];lK[2]=1;end;end;end;end;until true;return;else do if dK==0x11 then local VK=(sK[0]);(zK)[0X0]=VK[0X1][VK[0x0002]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0x00001;if not(not zK[0X0])then else nK=EK[0x002];end;else(zK)[4]=UK[EK[7]];nK=nK+1;nK=nK+1;local VK=4;do EK=eK[nK];end;nK=nK+0X00001;(zK)[5]=EK[7];nK=nK+0X1;(zK)[6]=zK[0X02];nK=nK+1;zK[VK](zK[VK+1],zK[VK+2]);QK=VK-0X00001;EK=eK[nK];nK=nK+1;do nK=EK[0x2];end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else do if SK>=76 then if not(SK>=0X4f)then if SK<77 then _K=function(...)local nK=1;local zK=({});local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0X0001;for EK=0x0,NK do if not(WK>EK)then break;else do zK[EK]=HK[EK+1];end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x001,NK+1)};end;end;local QK=0;if UK~=pK then _(_K,UK);end;do repeat local EK=eK[nK];local dK=EK[0X001];nK=nK+0X1;if not(dK>=16)then if not(dK>=0X8)then if dK<0X4 then do if not(dK>=2)then if dK~=1 then do(zK)[0X2]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X1;(zK)[0x2]=zK[0x2][EK[0x06]];nK=nK+0X1;nK=nK+0X1;do nK=nK+1;end;do QK=0X2;end;zK[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+1;do if not(not zK[2])then else nK=EK[2];end;end;else end;else do if dK==3 then zK[0x8]=UK[EK[0X07]];nK=nK+0X1;do nK=nK+0X1;end;local VK=8;EK=eK[nK];nK=nK+0X1;zK[0X9]=EK[0X7];EK=eK[nK];nK=nK+0X0001;zK[0X00a]=UK[EK[0x007]];EK=eK[nK];do nK=nK+1;end;zK[10]=zK[0X0000a][EK[0X006]];nK=nK+0x1;(zK[VK])(zK[VK+1],zK[VK+0X2]);QK=VK-1;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x0001;do nK=EK[2];end;else(zK)[EK[3]]={S({},0X001,EK[0X2])};end;end;end;end;else if dK>=0X6 then if dK~=0X7 then local VK=sK[EK[0X02]];do zK[EK[0x003]]=VK[0X1][VK[2]];end;else(zK)[EK[0X3]]=UK[EK[7]];end;else if dK==0X0005 then do zK[5]=UK[EK[0x0007]];end;nK=nK+1;local VK=sK[3];zK[0x6]=VK[1][VK[2]];do EK=eK[nK];end;local MK=(6);nK=nK+0X1;(zK)[6]=zK[0x0006][EK[0X6]];nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X00001;zK[0X006]=zK[0x0006][EK[6]];do nK=nK+0X1;end;nK=nK+0x001;EK=eK[nK];nK=nK+0X0001;local aK=zK[6];zK[MK+0X1]=aK;(zK)[MK]=aK[EK[6]];nK=nK+0X1;local gK=2;MK=0x6;local wK=0x0;if gK~=0X0 then QK=MK+gK-0X0001;end;local rK,lK=nil,nil;if gK==0X1 then do rK,lK=vi(zK[MK]());end;else do rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;do if wK==1 then do QK=MK-0X1;end;else do if wK==0 then rK=rK+MK-1;do QK=rK;end;else rK=MK+wK-0x00002;do QK=rK+1;end;end;end;local DK=0X0;for ZK=MK,rK do do DK=DK+0x00001;end;(zK)[ZK]=lK[DK];end;end;end;do nK=nK+1;end;nK=nK+1;nK=nK+1;MK=0x005;gK=0X00000;wK=4;do if gK~=0x0 then QK=MK+gK-1;end;end;do rK,lK=nil;end;if gK==1 then do rK,lK=vi(zK[MK]());end;else do rK,lK=vi(zK[MK](S(zK,MK+0x1,QK)));end;end;if wK==0X1 then QK=MK-1;else if wK~=0X0 then rK=MK+wK-2;QK=rK+0x00001;else rK=rK+MK-0X001;do QK=rK;end;end;local DK=0x0;for ZK=MK,rK do DK=DK+1;(zK)[ZK]=lK[DK];end;end;do nK=nK+0x1;end;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;MK=5;local LK=(b(function(...)(o)();for DK,ZK in...do o(true,DK,ZK);end;end));(LK)(zK[MK],zK[MK+1],zK[MK+0X2]);QK=MK;(zK)[MK]=LK;do nK=EK[2];end;else(zK)[EK[0X003]]=EK[0X007];end;end;end;else if not(dK>=12)then do if dK<10 then do if dK~=9 then zK[EK[3]]=w(zK[EK[0X2]],zK[EK[5]]);else do zK[EK[0X3]]=zK[EK[2]][EK[6]];end;end;end;else if dK==0X0000B then local VK=EK[0X2];local MK=zK[VK];for aK=VK+1,EK[5]do MK=MK..zK[aK];end;(zK)[EK[3]]=MK;else if not zK[EK[0X3]]then do nK=EK[2];end;end;end;end;end;else do if dK>=14 then if dK~=0X0f then if zK[EK[0x2]]~=EK[0X0006]then nK=EK[3];end;else local VK=(EK[0X2]);local aK=(VK[9]);local gK,MK=#aK,nil;do if not(gK>0X0000)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[0X01]==0 then do MK[wK-0X001]={zK,rK[2]};end;else MK[wK-1]=sK[rK[0X2]];end;end;(K)(mK,MK);end;end;do(zK)[EK[0X3]]=Ri(MK,UK,VK);end;end;else if dK==13 then(zK)[9]=zK[0x0007][EK[6]];nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+1;do if zK[9]==EK[6]then else do nK=EK[0X3];end;end;end;else local VK=(sK[2]);do(zK)[0X6]=VK[1][VK[2]];end;EK=eK[nK];do nK=nK+0x01;end;zK[0X6]=zK[0X006][EK[6]];nK=nK+1;nK=nK+0X01;EK=eK[nK];do nK=nK+1;end;(zK)[6]=zK[0X0006][EK[6]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X01;do if zK[0X0006]~=EK[0X6]then nK=EK[0x0003];end;end;end;end;end;end;end;else do if not(dK>=0X18)then if not(dK<0X14)then if not(dK>=22)then if dK==0X0015 then(zK)[10]=zK[7][EK[6]];do nK=nK+1;end;local VK=0xA;nK=nK+0X1;EK=eK[nK];nK=nK+0x1;(zK)[0XA]=zK[10][EK[6]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+1;local MK=zK[10];(zK)[VK+0X01]=MK;(zK)[VK]=MK[EK[0X06]];EK=eK[nK];nK=nK+0X1;zK[0X0000C]=EK[7];nK=nK+1;VK=10;zK[VK]=zK[VK](zK[VK+0x001],zK[VK+2]);QK=VK;EK=eK[nK];do nK=nK+0X00001;end;do if not(zK[10])then else do nK=EK[0X2];end;end;end;else local VK=sK[2];zK[5]=VK[1][VK[0x2]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X5]=zK[5][EK[0x6]];EK=eK[nK];nK=nK+0x00001;(zK)[0X5]=zK[0X005][EK[6]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;if zK[5]==EK[6]then else nK=EK[0X03];end;end;else if dK==0X17 then local VK=EK[3];local MK,aK,gK=zK[VK]();if MK then zK[VK+1]=aK;(zK)[VK+0X2]=gK;nK=EK[2];end;else local VK=sK[0x002];do(zK)[0X00005]=VK[0X1][VK[2]];end;EK=eK[nK];nK=nK+0X1;zK[5]=zK[5][EK[6]];EK=eK[nK];nK=nK+1;(zK)[0X00005]=zK[0x5][EK[6]];nK=nK+0x0001;nK=nK+1;local MK=(9);do EK=eK[nK];end;do nK=nK+0x1;end;(zK)[0x5]=zK[5][EK[6]];nK=nK+0X00001;(zK)[0X6]={};EK=eK[nK];nK=nK+0X1;zK[6][EK[0X007]]=zK[0X0];EK=eK[nK];nK=nK+0X01;do zK[0X00007]=UK[EK[0x7]];end;EK=eK[nK];nK=nK+0X01;zK[8]=EK[0X007];EK=eK[nK];nK=nK+0x1;do(zK)[9]=UK[EK[7]];end;nK=nK+1;do zK[10]=zK[0X06];end;nK=nK+1;local gK=0;local aK=2;if aK==0 then else QK=MK+aK-1;end;local wK,rK=nil,(nil);if aK==0X00001 then do wK,rK=vi(zK[MK]());end;else wK,rK=vi(zK[MK](S(zK,MK+0X001,QK)));end;if gK~=0X1 then if gK~=0x0 then wK=MK+gK-2;QK=wK+0X0001;else wK=wK+MK-0X1;QK=wK;end;local DK=0X0;do for ZK=MK,wK do DK=DK+1;zK[ZK]=rK[DK];end;end;else QK=MK-1;end;do nK=nK+0X0001;end;nK=nK+1;do nK=nK+0x1;end;do MK=7;end;zK[MK](S(zK,MK+0X1,QK));QK=MK-1;nK=nK+1;nK=nK+0X1;nK=nK+1;zK[0X0007]={};EK=eK[nK];do nK=nK+0x1;end;zK[7][EK[0X7]]=zK[0x0000];EK=eK[nK];nK=nK+1;zK[0X00007][EK[0X07]]=zK[0x03];EK=eK[nK];do nK=nK+1;end;do(zK[0X7])[EK[0X7]]=EK[6];end;EK=eK[nK];nK=nK+0X00001;zK[0X0007][EK[0x7]]=EK[6];do EK=eK[nK];end;nK=nK+0X0001;(zK)[8]=UK[EK[7]];nK=nK+1;do nK=nK+0x1;end;EK=eK[nK];nK=nK+1;(zK)[0X009]=EK[0X007];EK=eK[nK];nK=nK+0X1;zK[10]=UK[EK[0X7]];do nK=nK+0X01;end;(zK)[0X0B]=zK[0X7];nK=nK+1;MK=0X0A;aK=2;gK=0X0;if aK~=0X0 then QK=MK+aK-1;end;wK,rK=nil;if aK==1 then wK,rK=vi(zK[MK]());else do wK,rK=vi(zK[MK](S(zK,MK+0X00001,QK)));end;end;do if gK==0X01 then do QK=MK-1;end;else do if gK==0 then wK=wK+MK-1;QK=wK;else wK=MK+gK-0X002;do QK=wK+0X1;end;end;end;local DK=(0);do for ZK=MK,wK do DK=DK+1;(zK)[ZK]=rK[DK];end;end;end;end;do nK=nK+0X1;end;do MK=0X0008;end;zK[MK](S(zK,MK+1,QK));do QK=MK-1;end;nK=nK+0x01;do nK=nK+0X1;end;nK=nK+0x001;VK=sK[2];(zK)[0x0008]=VK[1][VK[0X00002]];EK=eK[nK];nK=nK+1;zK[0X008]=zK[0x0008][EK[6]];do nK=nK+1;end;nK=nK+0X0001;EK=eK[nK];nK=nK+0x1;(zK)[8]=zK[0X8][EK[0X06]];nK=nK+0X1;nK=nK+0X1;nK=nK+1;(zK)[9]=zK[5];EK=eK[nK];do nK=nK+1;end;(zK[0X00008])[EK[0x7]]=zK[9];EK=eK[nK];nK=nK+1;zK[0x00008]=UK[EK[0X00007]];nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;zK[9]=EK[7];nK=nK+0x00001;(zK)[0X00A]=zK[0X0];do nK=nK+0X0001;end;MK=0X8;zK[MK](zK[MK+0X00001],zK[MK+0X2]);do QK=MK-1;end;nK=nK+0X1;VK=sK[0X4];zK[8]=VK[0X1][VK[0X2]];EK=eK[nK];do nK=nK+0x1;end;local lK=(zK[0X8]);MK=8;zK[MK+1]=lK;(zK)[MK]=lK[EK[0X6]];do EK=eK[nK];end;nK=nK+1;zK[10]=EK[7];do EK=eK[nK];end;nK=nK+0x1;MK=0XB;lK=zK[4];(zK)[MK+1]=lK;do zK[MK]=lK[EK[6]];end;EK=eK[nK];do nK=nK+1;end;zK[13]=EK[7];EK=eK[nK];nK=nK+0X1;(zK)[0X00E]=EK[0X7];do nK=nK+1;end;do MK=0X000B;end;QK=MK+0x4-0X1;(zK)[MK]=zK[MK](S(zK,MK+1,QK));QK=MK;nK=nK+0X01;nK=nK+1;local LK=(0X000A);nK=nK+1;zK[10]=zK[LK]..zK[LK+1];EK=eK[nK];nK=nK+0X1;do zK[11]=EK[7];end;nK=nK+1;MK=8;QK=MK+4-0X1;(zK[MK])(S(zK,MK+0x1,QK));do QK=MK-0x1;end;do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[0X8]=UK[EK[7]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;do(zK)[8]=zK[0X8][EK[0X6]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;if zK[8]==EK[6]then else do nK=EK[0X03];end;end;end;end;else if not(dK>=0x12)then do if dK==17 then if not(zK[EK[0X00002]]<zK[EK[5]])then nK=EK[3];end;else(zK)[EK[0x3]]=zK[EK[2]]/zK[EK[0X005]];end;end;else if dK~=19 then repeat local VK,MK=mK,(zK);local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0x000 then local LK=lK[0x2];if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;do(lK)[0X1]=aK[LK];end;lK[0X0002]=0x001;end;end;end;until true;return;else local VK=EK[3];local MK,aK,gK=zK[VK],zK[VK+0X0001],zK[VK+0X2];zK[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);do nK=EK[2];end;end;end;end;else do if not(dK<0X1c)then do if not(dK>=30)then do if dK==0x00001d then zK[0X009]=UK[EK[7]];EK=eK[nK];do nK=nK+1;end;(zK)[0x00009]=zK[9][EK[0X6]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;if zK[9]==EK[0X06]then nK=EK[0X003];end;else for VK=EK[0X3],EK[0X0002]do(zK)[VK]=nil;end;end;end;else if dK~=31 then(zK)[0X02]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0X002]=zK[2][EK[0x6]];EK=eK[nK];nK=nK+1;if not zK[0x2]then nK=EK[0x0002];end;else do zK[0x8]=zK[0X007][EK[0X0006]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[8]=zK[8][EK[6]];nK=nK+0x1;nK=nK+1;nK=nK+1;(zK)[0]=zK[8];EK=eK[nK];do nK=nK+0X1;end;(zK)[0X8]=zK[0x7][EK[0X006]];nK=nK+1;nK=nK+0X1;do nK=nK+1;end;zK[1]=zK[0X00008];EK=eK[nK];nK=nK+0x1;nK=EK[0x00002];end;end;end;elseif dK>=0X0001a then if dK==0X1B then nK=EK[0X2];else local VK,gK=sK[1],0X4;do(zK)[2]=VK[1][VK[2]];end;EK=eK[nK];do nK=nK+0X1;end;do zK[3]=UK[EK[7]];end;do nK=nK+1;end;local MK=(0X2);nK=nK+1;EK=eK[nK];nK=nK+1;do zK[0X4]=EK[7];end;nK=nK+1;local aK=(0X3);if aK~=0 then QK=MK+aK-0X1;end;local wK,rK=nil,(nil);do if aK==0X01 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;if gK==0X00001 then QK=MK-0X01;else if gK==0x0 then wK=wK+MK-1;QK=wK;else wK=MK+gK-2;QK=wK+1;end;local lK=0X0;for LK=MK,wK do lK=lK+1;(zK)[LK]=rK[lK];end;end;do EK=eK[nK];end;do nK=nK+0x01;end;if not zK[2]then nK=EK[2];end;end;else if dK~=0X0019 then if zK[EK[0X0002]]==zK[EK[0X5]]then nK=EK[3];end;else(zK)[10]=UK[EK[7]];EK=eK[nK];local VK=sK[5];nK=nK+0x1;(zK)[0xA]=zK[0Xa][EK[0X6]];EK=eK[nK];nK=nK+1;do(zK)[11]=UK[EK[7]];end;nK=nK+0X1;nK=nK+0X1;local MK=0Xb;nK=nK+1;(zK)[0Xc]=VK[1][VK[2]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0x000c]=zK[12][EK[0x6]];EK=eK[nK];nK=nK+1;zK[12]=zK[12][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X01;zK[12]=zK[12][EK[6]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0X00001;do(zK)[0XC]=zK[0x00c][EK[0X6]];end;do nK=nK+0x1;end;(zK)[MK]=zK[MK](zK[MK+1]);QK=MK;nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do if zK[0x00a]~=zK[0XB]then else nK=EK[3];end;end;end;end;end;end;end;end;until false;end;end;else do if SK==78 then _K=function(...)local zK={};local nK=1;local CK,QK={[2]=zK,[1]=xK},(0X00000);local pK=(Q());local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0x00001;for EK=0x0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;if not PK then HK=nil;else if not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0,S(HK,WK+0X1,NK+0X1)};end;end;end;if UK==pK then else(_)(_K,UK);end;repeat local EK=eK[nK];local dK=EK[1];nK=nK+1;if dK>=0XC then if dK<18 then if dK<0X0F then if dK<13 then(zK)[EK[0X00003]]=true;else do if dK~=14 then do(zK)[EK[3]]=l(zK[EK[0x2]]);end;else nK=EK[2];end;end;end;else if dK<16 then for VK=EK[3],EK[0X02]do do(zK)[VK]=nil;end;end;else if dK==17 then(zK)[0X0]=UK[EK[0x07]];do EK=eK[nK];end;nK=nK+1;(zK)[0]=zK[0][EK[0X06]];nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0x1;end;if not(not zK[0X0])then else do nK=EK[2];end;end;else(zK)[0]=UK[EK[0x7]];EK=eK[nK];do nK=nK+0X0001;end;zK[0x0]=zK[0][EK[6]];do nK=nK+1;end;nK=nK+0X0001;nK=nK+1;QK=0;zK[QK]=zK[QK]();nK=nK+0X00001;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;if not(not zK[0])then else nK=EK[2];end;end;end;end;else if not(dK<21)then if dK>=0X0017 then do if dK~=0x18 then local VK=(sK[0X0000]);(zK)[0X0]=VK[0X1][VK[2]];EK=eK[nK];nK=nK+0x1;do zK[1]=UK[EK[0x7]];end;nK=nK+1;local aK=3;do nK=nK+0X01;end;EK=eK[nK];nK=nK+0x0001;zK[2]=EK[0X007];nK=nK+1;local MK,gK=0,0X003;if aK==0 then else QK=MK+aK-0X1;end;local wK,rK=nil,(nil);if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+0x1,QK)));else wK,rK=vi(zK[MK]());end;if gK==1 then QK=MK-1;else do if gK~=0X0 then wK=MK+gK-0X02;do QK=wK+1;end;else wK=wK+MK-0X00001;QK=wK;end;end;local lK=0X0;for LK=MK,wK do do lK=lK+0X1;end;zK[LK]=rK[lK];end;end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not zK[0X0]then nK=EK[2];end;end;else if zK[EK[2]]==zK[EK[5]]then else nK=EK[0X3];end;end;end;else if dK==22 then if zK[EK[2]]<zK[EK[0X5]]then nK=EK[3];end;else do zK[EK[0x3]]=-zK[EK[2]];end;end;end;else if not(dK>=19)then zK[EK[3]]={S({},0X01,EK[0x00002])};else do if dK~=0X14 then else(zK)[EK[3]]=zK[EK[2]]-zK[EK[0x0005]];end;end;end;end;end;else if not(dK<0X06)then if not(dK<0X9)then if not(dK<0xA)then if dK~=11 then(zK)[0X2]=UK[EK[0X007]];nK=nK+0x1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+1;end;zK[3]=EK[0X07];nK=nK+1;local VK=2;zK[VK](zK[VK+0x1]);do QK=VK-0X001;end;nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[0x2];else do(zK)[EK[3]]=#zK[EK[0X0002]];end;end;else zK[EK[0X3]]=EK[0X00007];end;else if dK>=7 then if dK==8 then(zK)[0x00002]=UK[EK[7]];do nK=nK+0x1;end;nK=nK+0X0001;do EK=eK[nK];end;do nK=nK+0X1;end;local VK=(0X2);(zK)[0X3]=EK[7];nK=nK+0x0001;(zK[VK])(zK[VK+1]);QK=VK-1;EK=eK[nK];do nK=nK+1;end;if zK[0X1]~=EK[0x6]then nK=EK[3];end;else zK[2]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;local VK=(2);do zK[3]=EK[0X007];end;nK=nK+0X1;zK[VK](zK[VK+1]);do QK=VK-0x1;end;do nK=nK+1;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;nK=EK[2];end;else local VK=EK[3];local MK,aK=zK[VK]();if not(MK)then else for gK=0x1,EK[5]do zK[VK+gK]=aK[gK];end;nK=EK[0x2];end;end;end;else do if dK>=0X3 then do if not(dK>=0X4)then local MK=nil;local VK=EK[0x2];local aK=VK[0X0009];local gK=(#aK);if gK>0 then do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[1]~=0X0 then MK[wK-1]=sK[rK[2]];else MK[wK-0X1]={zK,rK[2]};end;end;K(mK,MK);end;do zK[EK[0X3]]=Ri(MK,UK,VK);end;else if dK==5 then do zK[EK[0x0003]]=UK[EK[7]];end;else do if not(zK[EK[0x2]]<=zK[EK[5]])then else nK=EK[3];end;end;end;end;end;else if not(dK<1)then if dK==0X2 then repeat local VK,MK=mK,zK;local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[0X01]==MK and lK[0X02]>=0)then else local LK=lK[0X2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];(lK)[0x2]=0X1;end;end;end;end;end;until true;return;else do(zK)[0x2]=UK[EK[7]];end;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x1;(zK)[3]=EK[7];EK=eK[nK];do nK=nK+0X1;end;local VK=0X002;zK[0x4]=EK[7];nK=nK+0X001;zK[VK](zK[VK+0X0001],zK[VK+2]);do QK=VK-0X00001;end;nK=nK+0X1;do nK=nK+0X00001;end;EK=eK[nK];nK=nK+0X00001;nK=EK[2];end;else if zK[EK[2]]~=EK[0X6]then nK=EK[0X0003];end;end;end;end;end;end;until false;end;else do _K=function(...)local nK,zK,QK=1,{},(0x000);local CK=({[1]=xK,[2]=zK});local pK=(Q());local NK,HK=vi(...);local UK=((pK==z and KK or pK));do NK=NK-1;end;for EK=0X0,NK do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;do if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+1)};end;end;end;do if UK==pK then else(_)(_K,UK);end;end;while'\.\118\114\s\N2y'do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+1;do if not(dK>=0X007)then if not(dK>=0X3)then do if not(dK<0X1)then do if dK~=2 then zK[EK[0x0003]]={S({},0X1,EK[2])};else(zK)[1]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;(zK)[2]=UK[EK[7]];do nK=nK+0X1;end;local VK=(0x2);nK=nK+0X1;nK=nK+1;(zK)[0X3]=zK[0];nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+0x1;zK[1][EK[7]]=zK[0x2];EK=eK[nK];nK=nK+0X00001;(zK)[1]=UK[EK[0X07]];nK=nK+1;do QK=0X1;end;(zK[QK])();QK=QK-0X001;nK=nK+1;do repeat local MK,aK=mK,(zK);local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if LK[0x0001]==aK and LK[2]>=0 then local DK=LK[2];if not gK[DK]then do(gK)[DK]={aK[DK]};end;end;(LK)[1]=gK[DK];LK[0X2]=1;end;end;end;until true;end;do return;end;end;end;else do(zK)[EK[0X03]]=UK[EK[0X7]];end;end;end;else if not(dK<5)then if dK==0X6 then local VK=(zK[EK[0X02]]/zK[EK[5]]);do(zK)[EK[0x0003]]=VK-VK%0X1;end;else(zK)[EK[0X3]]=zK[EK[0x00002]]/zK[EK[5]];end;else if dK==4 then local VK=EK[0X2];local aK=(VK[9]);local MK=(nil);local gK=(#aK);if not(gK>0x000)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[0X001]~=0X00000 then do MK[wK-0X001]=sK[rK[0X2]];end;else(MK)[wK-1]={zK,rK[2]};end;end;K(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);else end;end;end;else if dK<0X0000b then if not(dK>=9)then if dK~=0X00008 then nK=EK[0X2];else(zK)[EK[0X003]]=zK[EK[0x2]]%zK[EK[5]];end;else if dK==0X0000A then local VK=EK[0X3];for MK=VK,VK+(EK[2]-0X0001)do(zK)[MK]=HK[WK+(MK-VK)+0X1];end;else zK[EK[3]]=g(zK[EK[2]],zK[EK[0X05]]);end;end;else do if dK>=13 then if dK==0Xe then do(zK)[EK[0X00003]]=L(zK[EK[2]],zK[EK[5]]);end;else zK[EK[0x3]]=#zK[EK[0X2]];end;elseif dK~=12 then zK[EK[0X3]]=EK[0x7];else do zK[EK[3]]=zK[EK[2]]<=zK[EK[0X05]];end;end;end;end;end;end;end;end;end;end;end;end;else if SK<80 then _K=function(...)local QK=(0X00000);local zK={};local pK=(Q());local CK,nK={[1]=xK,[2]=zK},0X001;local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X00001;for EK=0,NK do do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+0x1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then(_)(_K,UK);end;repeat local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if dK>=0X0A then if not(dK<0XF)then if not(dK<0X000011)then if dK<18 then zK[0X0001]=UK[EK[0X7]];do nK=nK+0x00001;end;nK=nK+0X00001;local VK=(0X001);EK=eK[nK];nK=nK+0x001;do(zK)[2]=EK[7];end;nK=nK+0X1;(zK[VK])(zK[VK+1]);do QK=VK-0X1;end;EK=eK[nK];nK=nK+1;nK=EK[2];else do if dK==19 then local VK=(EK[3]);for MK=VK,VK+(EK[2]-0X1)do zK[MK]=HK[WK+(MK-VK)+1];end;else(zK)[EK[0X003]]=UK[EK[0X7]];end;end;end;elseif dK~=16 then do(zK[EK[3]])[zK[EK[2]]]=zK[EK[5]];end;else zK[EK[3]]={S({},0X1,EK[0X00002])};end;else if dK>=0XC then if not(dK<0XD)then if dK==0Xe then zK[EK[0X3]]=CK[EK[0x2]];else(zK)[1]=UK[EK[7]];nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0x1]=zK[1][EK[0x6]];nK=nK+1;nK=nK+1;nK=nK+0X1;local VK=sK[0];(zK)[2]=VK[0x01][VK[0X2]];nK=nK+0X1;do nK=nK+1;end;nK=nK+1;do zK[3]=zK[0];end;EK=eK[nK];nK=nK+1;if not(zK[0X0003])then else do nK=EK[2];end;end;end;else local VK,MK=EK[0X2],(nil);local aK=VK[9];local gK=(#aK);do if gK>0 then do MK={};end;for wK=0X0001,gK do local rK=(aK[wK]);if rK[0X001]==0X000 then do MK[wK-0X001]={zK,rK[0X2]};end;else MK[wK-1]=sK[rK[2]];end;end;K(mK,MK);end;end;zK[EK[0x3]]=Ri(MK,UK,VK);end;elseif dK~=11 then(zK)[EK[0X03]]=zK[EK[0X2]]>=zK[EK[5]];else(zK)[0X1]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;if zK[0X1]~=EK[0X6]then nK=EK[0X3];end;end;end;else if dK>=0X5 then if not(dK>=7)then if dK~=6 then else zK[1]=UK[EK[7]];nK=nK+0X1;local VK=(0X1);do(zK)[0X2]=zK[0X0];end;do nK=nK+1;end;zK[VK]=zK[VK](zK[VK+0x0001]);QK=VK;EK=eK[nK];nK=nK+0X1;if zK[0x1]~=EK[0x06]then do nK=EK[0X00003];end;end;end;else do if dK>=8 then if dK~=0X0009 then local VK=(EK[3]);local MK=zK[EK[2]];zK[VK+1]=MK;(zK)[VK]=MK[EK[0X6]];else(zK)[0X1]=UK[EK[7]];do nK=nK+0X1;end;nK=nK+1;nK=nK+0X001;QK=0x001;(zK[QK])();QK=QK-1;do nK=nK+1;end;nK=nK+0X1;nK=nK+1;do repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[2]>=0x00000)then else local LK=lK[2];if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;lK[0X1]=aK[LK];do(lK)[0X2]=0X1;end;end;end;end;until true;end;return;end;else(zK)[EK[0X003]]=EK[7];end;end;end;elseif dK<2 then if dK~=0X1 then for VK=EK[0X3],EK[2]do do zK[VK]=nil;end;end;else nK=EK[2];end;else if dK<3 then(zK)[1]=UK[EK[0x7]];EK=eK[nK];local VK=(sK[0X0000]);nK=nK+1;(zK)[0X1]=zK[0X01][EK[6]];do nK=nK+0X1;end;do nK=nK+0X00001;end;do nK=nK+0x1;end;(zK)[2]=VK[1][VK[0X2]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;(zK[1])[zK[2]]=EK[0X006];do EK=eK[nK];end;do nK=nK+1;end;nK=EK[0X2];else if dK==4 then(zK)[EK[0X00003]]=zK[EK[0X2]]<zK[EK[0x00005]];else zK[EK[3]]=zK[EK[0x2]]~=zK[EK[0X0005]];end;end;end;end;until false;end;else do if SK==0X51 then _K=function(...)local nK=1;local zK={};local pK=(Q());local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-0X01;end;local UK,QK=(pK==z and KK or pK),(0X0);do for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;do if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0X01)};end;end;end;if UK==pK then else(_)(_K,UK);end;do while 0.3955164403040754 do local EK=eK[nK];local dK=(EK[1]);nK=nK+0X1;if dK<0X08 then if dK>=0X4 then if not(dK<6)then if dK~=7 then do(zK)[1]=UK[EK[0x7]];end;do nK=nK+1;end;do zK[2]={};end;EK=eK[nK];nK=nK+0x0001;zK[1][EK[7]]=zK[0X2];EK=eK[nK];nK=nK+1;nK=EK[0X0002];else(zK)[EK[0X3]]=EK[7];end;else if dK==5 then do if not(not(zK[EK[0X2]]<=zK[EK[0X5]]))then else nK=EK[0X3];end;end;else zK[EK[0X00003]]=zK[EK[2]]<=zK[EK[5]];end;end;else do if dK>=0X2 then if dK==3 then zK[EK[3]]=UK[EK[7]];else(zK)[EK[3]]={S({},1,EK[0x2])};end;else if dK~=0X00001 then local VK=EK[2];local MK=zK[VK];for aK=VK+0X1,EK[5]do MK=MK..zK[aK];end;do zK[EK[0X3]]=MK;end;else local VK=(zK[EK[2]]/zK[EK[5]]);(zK)[EK[3]]=VK-VK%0x1;end;end;end;end;else do if dK>=12 then do if not(dK<0XE)then do if dK==15 then(zK)[1]=UK[EK[7]];nK=nK+1;zK[2]=zK[0];EK=eK[nK];nK=nK+1;zK[1][EK[0X07]]=zK[2];do EK=eK[nK];end;nK=nK+1;nK=EK[2];else zK[EK[0X3]]=w(zK[EK[0x00002]],zK[EK[5]]);end;end;else do if dK==13 then nK=EK[0X2];else(zK)[EK[3]]=zK[EK[2]]+zK[EK[0x5]];end;end;end;end;else if not(dK<0xA)then if dK~=0XB then do(zK)[1]=UK[EK[7]];end;nK=nK+0X1;QK=0X1;(zK[QK])();QK=QK-0X0001;nK=nK+0X01;repeat local VK,MK=mK,(zK);local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0x1]==MK and lK[0X2]>=0X0 then local LK=(lK[2]);do if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;end;(lK)[0x1]=aK[LK];(lK)[0X02]=0X01;end;end;end;end;until true;return;else end;else if dK==0x9 then(zK)[1]=UK[EK[0X7]];nK=nK+1;local VK=(0X1);nK=nK+0X1;nK=nK+1;do zK[2]=zK[0];end;do nK=nK+1;end;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];do nK=nK+0X1;end;do if zK[0x0001]==EK[6]then else nK=EK[3];end;end;else local VK=EK[0x2];local aK=VK[9];local gK,MK=#aK,nil;if not(gK>0)then else MK={};for wK=1,gK do local rK=aK[wK];do if rK[0X1]~=0X0 then MK[wK-0X1]=sK[rK[0X2]];else(MK)[wK-1]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X01,{};local CK={[2]=zK,[1]=xK};local pK=(Q());local QK=0X0;local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while'6\068p\#\110'do local EK=eK[nK];local dK=EK[0X1];nK=nK+0X1;if not(dK>=0X08)then if not(dK>=4)then if not(dK>=0X2)then if dK==1 then else for VK=EK[3],EK[2]do zK[VK]=nil;end;end;else if dK==3 then nK=EK[0x00002];else zK[1]=UK[EK[0x007]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;nK=nK+0x001;(zK[0X0001])[EK[0X7]]=EK[6];EK=eK[nK];do nK=nK+1;end;zK[0X01]=UK[EK[0X7]];local VK=0X0001;do nK=nK+0x1;end;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;(zK)[0X01]=zK[1][EK[0X06]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0x001;local MK=(zK[0x1]);(zK)[VK+1]=MK;(zK)[VK]=MK[EK[0X06]];EK=eK[nK];nK=nK+0x1;(zK)[3]=UK[EK[0X0007]];EK=eK[nK];nK=nK+0x00001;do zK[0X3]=zK[0X003][EK[0X6]];end;nK=nK+0X1;nK=nK+1;nK=nK+1;do VK=0x001;end;(zK[VK])(zK[VK+0X001],zK[VK+0X2]);QK=VK-0X00001;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;else if dK<6 then if dK==5 then(zK)[EK[0X3]]={S({},0x1,EK[0X2])};else do(zK)[EK[0X003]]=EK[7];end;end;else if dK~=0X7 then zK[1]=UK[EK[0X0007]];EK=eK[nK];nK=nK+0X1;(zK)[2]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;nK=nK+0X01;local VK=(2);do zK[0X3]=zK[0];end;do nK=nK+0X1;end;do zK[VK]=zK[VK](zK[VK+1]);end;QK=VK;nK=nK+0x1;nK=nK+0X1;EK=eK[nK];nK=nK+1;(zK[0X1])[EK[7]]=zK[0X2];EK=eK[nK];do nK=nK+0X1;end;zK[0X001]=UK[EK[0x7]];EK=eK[nK];nK=nK+0X01;zK[0x1]=zK[0x1][EK[6]];EK=eK[nK];nK=nK+1;if zK[0X1]==EK[0X06]then else nK=EK[3];end;else do(zK)[EK[0X3]]=L(zK[EK[2]],zK[EK[0X5]]);end;end;end;end;elseif not(dK<0xc)then if not(dK>=0x00e)then if dK==13 then(zK)[EK[0x00003]]=UK[EK[7]];else repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0X000 then local LK=lK[2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;do lK[1]=aK[LK];end;(lK)[2]=1;end;end;end;until true;do return;end;end;else if not(dK<0XF)then do if dK~=16 then local VK=EK[2];local aK,MK=VK[9],nil;local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[0X1]~=0X0 then(MK)[wK-1]=sK[rK[2]];else(MK)[wK-0x1]={zK,rK[0X0002]};end;end;end;K(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);else local VK,MK=sK[0X0001],1;zK[0x1]=VK[1][VK[2]];nK=nK+0x00001;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;local aK=zK[1];do(zK)[MK+1]=aK;end;(zK)[MK]=aK[EK[6]];EK=eK[nK];nK=nK+1;zK[3]=EK[7];nK=nK+1;MK=0X01;zK[MK]=zK[MK](zK[MK+1],zK[MK+0X2]);QK=MK;nK=nK+0x01;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+1;end;nK=EK[0X2];end;end;else do(zK)[EK[0X3]]=zK[EK[0X2]]+zK[EK[0X5]];end;end;end;else if dK>=10 then do if dK~=0X0000B then local VK=EK[0x00003];local MK=((EK[5]-0X1)*0X32);local aK=(zK[VK]);for gK=0X1,EK[0X02]do aK[MK+gK]=zK[VK+gK];end;else do(zK)[EK[0x3]]=zK[EK[0x2]]-zK[EK[5]];end;end;end;else if dK==0X9 then zK[EK[3]]=zK[EK[0x002]]==zK[EK[0x005]];else do(zK)[1]=UK[EK[0X00007]];end;local VK=(sK[0]);nK=nK+1;do QK=1;end;(zK[QK])();QK=QK-0X0001;nK=nK+0x1;zK[0X1]=VK[0x1][VK[0X2]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;if not(not zK[1])then else nK=EK[0X02];end;end;end;end;end;end;end;end;end;end;else if not(SK<73)then if SK<0X4a then _K=function(...)local nK,zK=1,({});local pK=Q();local CK=({[1]=xK,[2]=zK});local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;for EK=0X00,NK do do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;if not PK then do HK=nil;end;else if YK then do(zK)[WK]={n=NK>=WK and NK-WK+0X00001 or 0x0,S(HK,WK+0X00001,NK+0X1)};end;end;end;local QK=0;if UK==pK then else(_)(_K,UK);end;while-1719927809 do local EK=eK[nK];local dK=EK[1];nK=nK+1;if dK>=0x0006 then if dK>=0x9 then if not(dK>=10)then local VK=EK[2];local MK=(nil);local aK=(VK[9]);local gK=(#aK);do if not(gK>0X000)then else MK={};for wK=0x1,gK do local rK=aK[wK];if rK[1]==0 then(MK)[wK-1]={zK,rK[2]};else do(MK)[wK-0x1]=sK[rK[0X002]];end;end;end;K(mK,MK);end;end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;else if dK==0Xb then local VK=EK[3];for MK=VK,VK+(EK[0x2]-1)do(zK)[MK]=HK[WK+(MK-VK)+1];end;else do(zK)[EK[0X003]]=UK[EK[7]];end;end;end;else if dK<7 then do(UK)[EK[0X07]]=zK[EK[3]];end;elseif dK==8 then do for VK=EK[0x3],EK[2]do zK[VK]=nil;end;end;else do(zK)[1]=UK[EK[7]];end;nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0x01;(zK)[2]=EK[7];local VK=(0x1);nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+0x0001;EK=eK[nK];local aK=(0X3);nK=nK+0X0001;(zK)[2]=UK[EK[7]];local MK=(sK[0]);nK=nK+0x001;nK=nK+0X001;EK=eK[nK];nK=nK+1;(zK)[2]=zK[2][EK[0X6]];EK=eK[nK];nK=nK+1;(zK)[3]=UK[EK[7]];nK=nK+1;(zK)[0X2]=zK[0x2][zK[3]];EK=eK[nK];nK=nK+1;do(zK)[3]=EK[7];end;nK=nK+0x1;(zK)[4]=MK[1][MK[2]];do nK=nK+1;end;(zK)[3]=zK[aK]..zK[aK+0X1];nK=nK+1;do zK[2]=zK[0X2][zK[3]];end;nK=nK+0X1;nK=nK+0X00001;nK=nK+0X1;MK=sK[0];(zK)[0x3]=MK[0X0001][MK[2]];nK=nK+0X0001;nK=nK+1;do nK=nK+0X1;end;zK[0x03]=zK[1][zK[3]];EK=eK[nK];do nK=nK+1;end;do(zK)[3]=zK[3][EK[6]];end;nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;zK[3]=zK[0x3][EK[6]];EK=eK[nK];do nK=nK+1;end;(zK[0X2])[EK[7]]=zK[0X03];EK=eK[nK];nK=nK+1;(zK)[0X2]=UK[EK[0X00007]];EK=eK[nK];nK=nK+0X1;zK[2]=zK[0X2][EK[6]];EK=eK[nK];do nK=nK+1;end;zK[0X03]=UK[EK[7]];do nK=nK+0X1;end;zK[2]=zK[0X0002][zK[3]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[3]=EK[7];nK=nK+0x1;do MK=sK[0];end;(zK)[4]=MK[0x00001][MK[2]];do nK=nK+0x1;end;nK=nK+1;nK=nK+1;aK=0X3;(zK)[0X3]=zK[aK]..zK[aK+1];nK=nK+0X0001;(zK)[0X0002]=zK[0x2][zK[3]];do nK=nK+0X1;end;MK=sK[0X0];(zK)[0X3]=MK[1][MK[0X0002]];nK=nK+1;nK=nK+1;nK=nK+0x1;zK[0x00003]=zK[1][zK[3]];EK=eK[nK];do nK=nK+1;end;zK[0x003]=zK[3][EK[0X0006]];EK=eK[nK];nK=nK+1;do(zK)[0X0003]=zK[0X3][EK[0X06]];end;do EK=eK[nK];end;nK=nK+1;zK[0x2][EK[7]]=zK[3];do EK=eK[nK];end;do nK=nK+1;end;(zK)[2]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;(zK)[2]=zK[2][EK[6]];do EK=eK[nK];end;nK=nK+1;(zK)[3]=UK[EK[0x7]];nK=nK+1;zK[0X2]=zK[0X2][zK[3]];nK=nK+0X01;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[0X03]=EK[0X007];nK=nK+0X001;MK=sK[0x0];do(zK)[4]=MK[0X1][MK[2]];end;nK=nK+1;nK=nK+0x1;nK=nK+1;aK=3;zK[3]=zK[aK]..zK[aK+0X1];nK=nK+1;do(zK)[0X2]=zK[2][zK[3]];end;nK=nK+0X00001;MK=sK[0X0];(zK)[3]=MK[1][MK[2]];do nK=nK+0X1;end;nK=nK+0X001;do nK=nK+0X01;end;zK[3]=zK[0x1][zK[3]];EK=eK[nK];nK=nK+1;do zK[3]=zK[0X00003][EK[6]];end;nK=nK+0X1;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+0X1;(zK)[0X3]=zK[3][EK[0x6]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+1;zK[2][EK[7]]=zK[3];EK=eK[nK];nK=nK+0X1;(zK)[2]=UK[EK[7]];nK=nK+0X00001;nK=nK+0X001;nK=nK+1;QK=2;zK[QK]();QK=QK-0X01;nK=nK+1;do repeat local gK,wK=mK,(zK);local rK=({});do for lK,LK in W,gK do for DK,ZK in W,LK do if ZK[1]==wK and ZK[0X2]>=0 then local GK=ZK[2];if not(not rK[GK])then else rK[GK]={wK[GK]};end;ZK[1]=rK[GK];ZK[2]=0X00001;end;end;end;end;until true;end;return;end;end;else if dK<0X003 then if not(dK>=1)then nK=EK[0X0002];else if dK~=2 then else do zK[EK[0x3]]={S({},1,EK[0X2])};end;end;end;else do if dK<4 then(zK)[EK[3]]=EK[0X7];elseif dK~=0x5 then do(zK)[EK[0X3]]=zK[EK[0x2]]+zK[EK[5]];end;else zK[EK[0X3]]=w(zK[EK[2]],zK[EK[0X0005]]);end;end;end;end;end;end;else if SK==75 then _K=function(...)local zK=({});local nK=0X01;local pK=(Q());local CK=({[2]=zK,[1]=xK});local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;if not PK then HK=nil;else if not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X000,S(HK,WK+0X01,NK+0X0001)};end;end;do if UK==pK then else(_)(_K,UK);end;end;local QK=0;repeat local EK=eK[nK];local dK=(EK[0X1]);do nK=nK+1;end;if not(dK>=6)then if not(dK<0X0003)then if not(dK>=4)then else do if dK==0x5 then(zK)[EK[3]]=zK[EK[0x2]]/zK[EK[5]];else do(zK)[EK[0X3]]={S({},1,EK[2])};end;end;end;end;else if not(dK>=0X1)then zK[EK[3]]=EK[0X7];else if dK==2 then zK[1]=UK[EK[7]];do nK=nK+0X001;end;nK=nK+1;nK=nK+1;(zK)[2]=zK[0X0];EK=eK[nK];nK=nK+0X01;do(zK[1])[EK[0X7]]=zK[2];end;EK=eK[nK];nK=nK+1;(zK)[0X1]=UK[EK[7]];do nK=nK+1;end;QK=0X01;zK[QK]();QK=QK-1;do nK=nK+0X1;end;do repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[2]>=0x0)then else local LK=(lK[2]);if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[1]=aK[LK];do(lK)[0X002]=0X001;end;end;end;end;until true;end;return;else zK[EK[0X3]]=r(zK[EK[2]],zK[EK[0X0005]]);end;end;end;else if not(dK>=9)then if dK<7 then if not(zK[EK[2]]<zK[EK[0X5]])then do nK=EK[3];end;end;else do if dK==0X8 then nK=EK[0X00002];else zK[EK[0X3]]=EK[0X2];end;end;end;else do if not(dK<10)then if dK~=11 then local VK=EK[0X002];local aK=VK[9];local MK=(nil);local gK=#aK;if gK>0x0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0x1]~=0X0 then do MK[wK-0X1]=sK[rK[0X2]];end;else MK[wK-0X0001]={zK,rK[2]};end;end;K(mK,MK);end;(zK)[EK[0X03]]=Ri(MK,UK,VK);else local MK=EK[2];local VK=(EK[3]);QK=VK+MK-1;repeat local aK,gK=mK,(zK);local wK=({});for rK,lK in W,aK do for LK,DK in W,lK do do if DK[0x1]==gK and DK[0X2]>=0X0 then local ZK=DK[2];do if not wK[ZK]then do(wK)[ZK]={gK[ZK]};end;end;end;(DK)[0X1]=wK[ZK];do(DK)[0X2]=1;end;end;end;end;end;until'';return zK[VK](S(zK,VK+0x001,QK));end;else zK[EK[3]]=UK[EK[7]];end;end;end;end;until false;end;else _K=function(...)local nK,QK,zK=0X1,0,{};local pK=(Q());local CK,UK={[2]=zK,[1]=xK},(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X01];else do break;end;end;end;do if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0x1)};end;end;end;if UK==pK then else(_)(_K,UK);end;repeat local EK=(eK[nK]);local dK=(EK[1]);do nK=nK+0X1;end;if not(dK<20)then do if not(dK<0X0001e)then if dK>=0x23 then if not(dK<37)then if not(dK<38)then if dK~=39 then local VK=(0x00004);local MK=(zK[3]);do zK[VK+1]=MK;end;do zK[VK]=MK[EK[6]];end;EK=eK[nK];nK=nK+1;zK[0X6]=EK[7];do nK=nK+1;end;VK=0X4;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not(zK[4])then else nK=EK[2];end;end;else local VK,MK=0X5,zK[4];zK[VK+0X1]=MK;do(zK)[VK]=MK[EK[0X6]];end;EK=eK[nK];nK=nK+0X1;zK[7]=EK[7];nK=nK+1;VK=5;(zK)[VK]=zK[VK](zK[VK+0x1],zK[VK+2]);do QK=VK;end;do EK=eK[nK];end;do nK=nK+1;end;if zK[0X00005]then nK=EK[0x002];end;end;else do(zK)[0]=UK[EK[7]];end;local aK=0X02;EK=eK[nK];nK=nK+0X1;do zK[0x1]=UK[EK[0X0007]];end;EK=eK[nK];nK=nK+0x1;zK[1]=zK[0X1][EK[0x6]];do nK=nK+0X00001;end;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+0X1;zK[1]=zK[1][EK[6]];EK=eK[nK];nK=nK+1;zK[0X0001]=zK[0X001][EK[0X0006]];do nK=nK+0X00001;end;nK=nK+0X1;EK=eK[nK];local VK=(1);nK=nK+1;local MK=(zK[1]);zK[VK+1]=MK;zK[VK]=MK[EK[0X6]];nK=nK+1;VK=1;local gK=0;if aK==0x0 then else QK=VK+aK-1;end;local wK,rK=nil,nil;if aK==1 then wK,rK=vi(zK[VK]());else wK,rK=vi(zK[VK](S(zK,VK+1,QK)));end;if gK~=0X00001 then do if gK==0X0 then wK=wK+VK-1;QK=wK;else wK=VK+gK-2;QK=wK+0X1;end;end;local LK=(0);for DK=VK,wK do do LK=LK+0X1;end;do zK[DK]=rK[LK];end;end;else do QK=VK-0X01;end;end;nK=nK+1;nK=nK+0X00001;do nK=nK+1;end;VK=0X00;aK=0X0000;do gK=0X04;end;if aK==0 then else QK=VK+aK-1;end;wK,rK=nil;if aK~=0X001 then wK,rK=vi(zK[VK](S(zK,VK+1,QK)));else wK,rK=vi(zK[VK]());end;if gK==1 then QK=VK-0x1;else if gK==0 then wK=wK+VK-1;QK=wK;else wK=VK+gK-0X0002;QK=wK+1;end;local LK=0X0;for DK=VK,wK do do LK=LK+0X1;end;do zK[DK]=rK[LK];end;end;end;do EK=eK[nK];end;nK=nK+1;VK=0x0;local lK=b(function(...)(o)();do for LK,DK in...do(o)(true,LK,DK);end;end;end);(lK)(zK[VK],zK[VK+0X1],zK[VK+0x2]);do QK=VK;end;do(zK)[VK]=lK;end;nK=EK[2];end;else if dK==36 then do(zK)[EK[0X03]]=zK[EK[2]]*zK[EK[5]];end;else local VK=(EK[0x002]);local MK=(nil);local aK=VK[9];local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0x1]==0X0 then(MK)[wK-0x1]={zK,rK[2]};else MK[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;(zK)[EK[0X003]]=Ri(MK,UK,VK);end;end;else if not(dK<32)then if dK>=0X000021 then if dK~=34 then(zK)[0x001]=UK[EK[0X07]];EK=eK[nK];local aK,VK=2,(0X2);nK=nK+1;local MK=zK[0X00000];(zK)[VK+1]=MK;do zK[VK]=MK[EK[6]];end;nK=nK+1;VK=0x2;local gK=(0X00);if aK==0 then else do QK=VK+aK-1;end;end;local wK,rK=nil,nil;do if aK~=1 then wK,rK=vi(zK[VK](S(zK,VK+1,QK)));else wK,rK=vi(zK[VK]());end;end;if gK==1 then QK=VK-1;else if gK~=0 then wK=VK+gK-2;do QK=wK+0X01;end;else do wK=wK+VK-1;end;do QK=wK;end;end;local LK=(0x00);for DK=VK,wK do LK=LK+0X001;(zK)[DK]=rK[LK];end;end;nK=nK+0X1;do nK=nK+1;end;nK=nK+0x0001;VK=1;aK=0;gK=4;if aK~=0 then QK=VK+aK-1;end;do wK,rK=nil;end;if aK==0x1 then wK,rK=vi(zK[VK]());else wK,rK=vi(zK[VK](S(zK,VK+1,QK)));end;if gK==0X001 then QK=VK-1;else if gK==0 then wK=wK+VK-1;do QK=wK;end;else wK=VK+gK-2;QK=wK+0X1;end;local LK=(0X000);for DK=VK,wK do do LK=LK+0x1;end;do(zK)[DK]=rK[LK];end;end;end;EK=eK[nK];nK=nK+1;VK=1;local lK=b(function(...)o();for LK,DK in...do(o)(true,LK,DK);end;end);lK(zK[VK],zK[VK+1],zK[VK+0x2]);QK=VK;zK[VK]=lK;nK=EK[0X0002];else if not(not zK[EK[0X3]])then else nK=EK[0X2];end;end;else do(zK)[EK[0x003]]=zK[EK[2]]+zK[EK[5]];end;end;else if dK~=0X1f then zK[0X00]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;local VK=0;do EK=eK[nK];end;nK=nK+1;zK[0x0]=zK[0X0][EK[0X6]];do EK=eK[nK];end;nK=nK+1;local MK=zK[0];(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+1;zK[0X2]=EK[0X7];nK=nK+0X1;VK=0;do zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);end;QK=VK;nK=nK+0X1;nK=nK+0X00001;EK=eK[nK];nK=nK+0X1;do if not(not zK[0x0])then else nK=EK[0X002];end;end;else zK[EK[3]]={S({},0X1,EK[2])};end;end;end;elseif not(dK<0X019)then if not(dK>=27)then if dK~=26 then zK[2]=UK[EK[7]];nK=nK+0x0001;nK=nK+0x0001;do EK=eK[nK];end;nK=nK+0X1;local VK=(2);zK[2]=zK[0X2][EK[0X6]];do EK=eK[nK];end;do nK=nK+0X1;end;do zK[2]=zK[2][EK[6]];end;nK=nK+0x1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+1;local MK=zK[2];zK[VK+0X001]=MK;do(zK)[VK]=MK[EK[0x6]];end;EK=eK[nK];nK=nK+1;(zK)[0x4]=EK[0X7];nK=nK+0X1;VK=0x2;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);QK=VK;EK=eK[nK];nK=nK+1;nK=EK[0X2];else(zK)[EK[0X3]]=zK[EK[2]]/zK[EK[5]];end;else if not(dK>=28)then local VK=EK[0x3];local MK,aK,gK=zK[VK]();if not(MK)then else(zK)[VK+0x1]=aK;zK[VK+0X00002]=gK;nK=EK[0x2];end;else if dK==0X1D then repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[0X00001]==MK and lK[0x0002]>=0)then else local LK=lK[2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0X01]=aK[LK];lK[2]=0X1;end;end;end;end;until true;return;else local VK,MK=3,(zK[0x2]);(zK)[VK+0x00001]=MK;zK[VK]=MK[EK[0x006]];nK=nK+0X001;VK=3;(zK[VK])(zK[VK+0X1]);QK=VK-0x1;nK=nK+0x00001;do nK=nK+0x1;end;EK=eK[nK];do nK=nK+1;end;nK=EK[0x2];end;end;end;else if not(dK<22)then if not(dK<23)then if dK==24 then else local VK,MK=0X5,zK[0X4];zK[VK+1]=MK;zK[VK]=MK[EK[0X6]];do nK=nK+0X0001;end;VK=0X05;zK[VK](zK[VK+1]);do QK=VK-1;end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X00001;end;nK=EK[2];end;else do(zK)[EK[3]]=w(zK[EK[2]],zK[EK[0X5]]);end;end;else do if dK~=21 then(UK)[EK[0x0007]]=zK[EK[3]];else local VK=(EK[2]);local aK,MK=VK[9],(nil);local gK=(#aK);if not(gK>0)then else MK={};do for wK=0x01,gK do local rK=(aK[wK]);if rK[0X01]==0X0000 then do MK[wK-0x1]={zK,rK[0X2]};end;else MK[wK-0X1]=sK[rK[0x2]];end;end;end;K(mK,MK);end;(zK)[EK[3]]=i[EK[0X05]](MK);end;end;end;end;end;else if dK>=0X0000a then if not(dK>=0XF)then if not(dK>=12)then if dK~=11 then do zK[0X3]=UK[EK[7]];end;nK=nK+1;nK=nK+1;local VK=0x4;EK=eK[nK];do nK=nK+0X1;end;local MK=zK[0X2];(zK)[VK+1]=MK;(zK)[VK]=MK[EK[0X0006]];local aK=(2);nK=nK+1;VK=0X04;local gK=0x0000;if aK==0 then else QK=VK+aK-0X1;end;local wK,rK=nil,nil;do if aK==0X1 then wK,rK=vi(zK[VK]());else wK,rK=vi(zK[VK](S(zK,VK+0X01,QK)));end;end;if gK==0X1 then QK=VK-1;else do if gK==0 then wK=wK+VK-0X001;QK=wK;else wK=VK+gK-2;do QK=wK+1;end;end;end;local LK=(0X000);for DK=VK,wK do LK=LK+1;(zK)[DK]=rK[LK];end;end;nK=nK+1;nK=nK+0X1;nK=nK+0X0001;VK=0X0003;aK=0;gK=0X4;do if aK~=0X00 then do QK=VK+aK-0X1;end;end;end;wK,rK=nil;do if aK==0x0001 then wK,rK=vi(zK[VK]());else wK,rK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if gK==0x0001 then QK=VK-1;else if gK~=0X00000 then wK=VK+gK-0X2;QK=wK+1;else wK=wK+VK-0X1;do QK=wK;end;end;local LK=(0);do for DK=VK,wK do do LK=LK+1;end;zK[DK]=rK[LK];end;end;end;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x1;do VK=0X003;end;local lK=b(function(...)(o)();for LK,DK in...do(o)(true,LK,DK);end;end);lK(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;(zK)[VK]=lK;nK=EK[0x2];else(zK)[0]=UK[EK[0X7]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do zK[0X0]=zK[0][EK[0X06]];end;EK=eK[nK];do nK=nK+1;end;do if not zK[0X00000]then nK=EK[2];end;end;end;elseif dK>=13 then if dK==0X0e then zK[2]=UK[EK[7]];EK=eK[nK];nK=nK+0X0001;local VK=0X002;zK[0X002]=zK[0x00002][EK[6]];nK=nK+0x1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;local MK=zK[0x2];(zK)[VK+1]=MK;(zK)[VK]=MK[EK[6]];do EK=eK[nK];end;nK=nK+1;zK[4]=EK[0X007];nK=nK+1;VK=0x2;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;nK=nK+1;nK=nK+0X01;do EK=eK[nK];end;nK=nK+0X1;if zK[2]then do nK=EK[0x2];end;end;else(zK)[EK[3]]=EK[7];end;else local VK,MK=6,zK[5];(zK)[VK+1]=MK;(zK)[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+0x001;zK[8]=EK[0x7];do nK=nK+1;end;VK=0X6;(zK)[VK]=zK[VK](zK[VK+0X00001],zK[VK+0X00002]);QK=VK;nK=nK+0x1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;if zK[6]then do nK=EK[2];end;end;end;else if dK>=17 then if not(dK>=18)then(zK)[1]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;local VK=1;(zK)[0X01]=zK[0X01][EK[0X6]];EK=eK[nK];nK=nK+1;local MK=(zK[1]);do zK[VK+1]=MK;end;(zK)[VK]=MK[EK[6]];EK=eK[nK];nK=nK+0X0001;(zK)[3]=EK[0X07];nK=nK+1;VK=1;(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0X2]);QK=VK;EK=eK[nK];do nK=nK+1;end;if not(not zK[1])then else nK=EK[2];end;else if dK~=19 then local VK=(0x6);local MK=(zK[5]);do(zK)[VK+0X1]=MK;end;zK[VK]=MK[EK[6]];EK=eK[nK];nK=nK+0X001;zK[8]=EK[0X7];do nK=nK+0X1;end;VK=0x06;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);do QK=VK;end;EK=eK[nK];do nK=nK+0x1;end;if zK[0X006]then nK=EK[2];end;else do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;else if dK==16 then local MK=zK[0x00003];local VK=(0x0004);do zK[VK+1]=MK;end;(zK)[VK]=MK[EK[6]];nK=nK+1;VK=4;(zK[VK])(zK[VK+1]);QK=VK-1;EK=eK[nK];do nK=nK+1;end;nK=EK[0X0002];else local MK=zK[0X5];local VK=(6);zK[VK+1]=MK;do(zK)[VK]=MK[EK[0x6]];end;EK=eK[nK];nK=nK+1;do zK[8]=EK[0X07];end;nK=nK+0X1;VK=0X6;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0x2]);QK=VK;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X01;if not zK[6]then do nK=EK[0X2];end;end;end;end;end;else do if not(dK>=0X5)then if not(dK<2)then if not(dK<0x00003)then if dK==4 then local VK,MK=0X4,zK[3];(zK)[VK+1]=MK;do(zK)[VK]=MK[EK[0X00006]];end;do EK=eK[nK];end;do nK=nK+1;end;(zK)[6]=EK[0x7];do nK=nK+0x1;end;VK=0X4;(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0X2]);QK=VK;nK=nK+0X0001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if not zK[0X00004]then nK=EK[2];end;else local VK=sK[EK[2]];(zK)[EK[0X3]]=VK[0X1][VK[0X02]];end;else do zK[3]=UK[EK[0X7]];end;local VK=3;do EK=eK[nK];end;nK=nK+0X1;(zK)[0X04]=EK[7];nK=nK+0X1;(zK[VK])(zK[VK+1]);QK=VK-0X1;nK=nK+0X001;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;nK=EK[0X2];end;else if dK~=1 then local VK,MK=5,(zK[0x4]);(zK)[VK+1]=MK;(zK)[VK]=MK[EK[0x6]];EK=eK[nK];nK=nK+0x1;zK[0X007]=EK[0X7];nK=nK+1;do VK=0X5;end;zK[VK]=zK[VK](zK[VK+0x001],zK[VK+2]);QK=VK;do nK=nK+0X1;end;do nK=nK+0X00001;end;EK=eK[nK];do nK=nK+1;end;if not zK[5]then nK=EK[2];end;else local VK,MK=0x5,(zK[4]);zK[VK+1]=MK;zK[VK]=MK[EK[0X006]];EK=eK[nK];nK=nK+0X1;(zK)[7]=EK[0X0007];nK=nK+0X0001;VK=5;(zK)[VK]=zK[VK](zK[VK+0X0001],zK[VK+0X2]);QK=VK;EK=eK[nK];do nK=nK+0X1;end;do if zK[0x5]then nK=EK[2];end;end;end;end;elseif not(dK>=7)then if dK==6 then local VK,MK=0x6,(zK[0x5]);(zK)[VK+1]=MK;do(zK)[VK]=MK[EK[6]];end;nK=nK+1;do VK=6;end;zK[VK](zK[VK+0X001]);QK=VK-0X1;do EK=eK[nK];end;do nK=nK+0X1;end;do nK=EK[0X02];end;else(zK)[EK[0x003]]=UK[EK[7]];end;else if not(dK<0X8)then if dK~=0x009 then do(zK)[2]=UK[EK[7]];end;EK=eK[nK];local aK=(0X2);local MK=(zK[1]);nK=nK+1;local VK=3;(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];nK=nK+0X00001;VK=3;local gK=(0);if aK==0 then else do QK=VK+aK-1;end;end;local wK,rK=nil,nil;if aK==1 then wK,rK=vi(zK[VK]());else do wK,rK=vi(zK[VK](S(zK,VK+0x1,QK)));end;end;if gK~=1 then if gK==0 then wK=wK+VK-0X001;do QK=wK;end;else wK=VK+gK-2;do QK=wK+0X001;end;end;local LK=0X00000;do for DK=VK,wK do LK=LK+1;zK[DK]=rK[LK];end;end;else do QK=VK-0X0001;end;end;do nK=nK+1;end;VK=2;aK=0;gK=0X0004;do if aK~=0X0 then QK=VK+aK-0x1;end;end;wK,rK=nil;if aK==0X00001 then wK,rK=vi(zK[VK]());else do wK,rK=vi(zK[VK](S(zK,VK+0X1,QK)));end;end;if gK==1 then do QK=VK-0X1;end;else if gK~=0X00000 then wK=VK+gK-2;QK=wK+1;else do wK=wK+VK-1;end;QK=wK;end;local LK=(0);do for DK=VK,wK do LK=LK+0X1;(zK)[DK]=rK[LK];end;end;end;EK=eK[nK];nK=nK+1;do VK=2;end;local lK=(b(function(...)(o)();for LK,DK in...do o(true,LK,DK);end;end));(lK)(zK[VK],zK[VK+1],zK[VK+2]);QK=VK;(zK)[VK]=lK;nK=EK[0X0002];else nK=EK[2];end;else local VK=4;local MK=zK[0X003];(zK)[VK+0X1]=MK;(zK)[VK]=MK[EK[6]];EK=eK[nK];nK=nK+0X00001;(zK)[6]=EK[7];nK=nK+0X1;do VK=0X4;end;zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;do EK=eK[nK];end;nK=nK+0x01;if zK[4]then do nK=EK[0x02];end;end;end;end;end;end;end;until false;end;end;end;else do if SK<71 then _K=function(...)local nK,zK=0X1,({});local pK=Q();local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);NK=NK-1;local UK,QK=(pK==z and KK or pK),(0);for EK=0x0,NK do do if WK>EK then(zK)[EK]=HK[EK+0X01];else break;end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;do while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+0X1;if not(dK>=0x12)then if not(dK<0x9)then do if dK<0xd then if not(dK<0XB)then if dK==12 then zK[0Xa]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+1;local VK=10;zK[0XB]=zK[3];nK=nK+0X01;zK[VK]=zK[VK](zK[VK+1]);QK=VK;do nK=nK+0X1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;if not zK[10]then nK=EK[2];end;else for VK=EK[0X3],EK[0X0002]do do zK[VK]=nil;end;end;end;else if dK~=10 then if not(zK[EK[3]])then else do nK=EK[2];end;end;else zK[0X0000a]=UK[EK[0X7]];EK=eK[nK];nK=nK+0x1;zK[0xB]=EK[7];do EK=eK[nK];end;nK=nK+0X00001;zK[12]=UK[EK[0X7]];nK=nK+1;nK=nK+0X01;local VK=10;do EK=eK[nK];end;nK=nK+0X1;zK[12]=zK[12][EK[0X6]];nK=nK+1;do nK=nK+1;end;nK=nK+0X00001;(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0X2]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not zK[10]then nK=EK[2];end;end;end;end;else if not(dK<0x000f)then if dK>=16 then do if dK~=17 then zK[EK[0X3]]=zK[EK[0X00002]];else(zK)[0X3]=UK[EK[7]];do nK=nK+0x001;end;do QK=3;end;zK[QK]();QK=QK-0X1;EK=eK[nK];nK=nK+1;local VK=(3);do(zK)[3]=UK[EK[0X7]];end;nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do(zK)[4]=EK[7];end;EK=eK[nK];nK=nK+1;(zK)[5]=UK[EK[0X07]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+1;do(zK)[5]=zK[0X005][EK[0X6]];end;do nK=nK+1;end;do(zK)[VK]=zK[VK](zK[VK+0x1],zK[VK+2]);end;QK=VK;EK=eK[nK];do nK=nK+1;end;if not(not zK[3])then else nK=EK[2];end;end;end;else(zK)[16]=zK[0X00002][EK[0X00006]];do nK=nK+0X1;end;do nK=nK+0x001;end;EK=eK[nK];local MK=4;nK=nK+0X1;(zK)[0X11]=UK[EK[0X7]];EK=eK[nK];nK=nK+0X1;(zK)[0X00011]=zK[17][EK[0X6]];nK=nK+0X0001;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[0x12]=UK[EK[0X7]];nK=nK+1;nK=nK+0x00001;local VK=0X15;do EK=eK[nK];end;do nK=nK+0X0001;end;(zK)[18]=zK[18][EK[0x6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[19]=zK[0X9]-EK[6];do EK=eK[nK];end;nK=nK+0X1;(zK)[0X13]=zK[19]%EK[0x6];nK=nK+1;(zK)[19]=zK[0x13]*zK[0Xf];do nK=nK+0X0001;end;zK[0X13]=zK[0xb]+zK[0X000013];nK=nK+1;do(zK)[20]=zK[12];end;EK=eK[nK];nK=nK+0x1;(zK)[21]=UK[EK[0x07]];do nK=nK+0X1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;(zK)[0x15]=zK[0X0015][EK[6]];nK=nK+0X1;do nK=nK+0X00001;end;EK=eK[nK];nK=nK+0X1;(zK)[22]=zK[9]-EK[0X006];do EK=eK[nK];end;do nK=nK+1;end;do(zK)[22]=zK[0X016]/EK[6];end;nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+0X1;nK=nK+0X1;zK[21]=zK[21]*zK[15];nK=nK+0x1;(zK)[0X15]=zK[0X00D]+zK[0X15];nK=nK+1;VK=0X012;local aK=0X0;do if MK==0 then else QK=VK+MK-1;end;end;local gK,wK=nil,(nil);do if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;end;if aK~=0x1 then if aK==0X00 then gK=gK+VK-0X1;QK=gK;else gK=VK+aK-2;do QK=gK+0X01;end;end;local ZK=0X0000;for GK=VK,gK do do ZK=ZK+0X1;end;do zK[GK]=wK[ZK];end;end;else QK=VK-0X1;end;nK=nK+1;nK=nK+1;nK=nK+0X1;VK=0x11;(zK)[VK]=zK[VK](S(zK,VK+0X1,QK));QK=VK;do EK=eK[nK];end;nK=nK+1;local lK=nil;do zK[18]=UK[EK[7]];end;EK=eK[nK];nK=nK+0X1;local rK=EK[2];local LK=rK[0X9];local DK=#LK;do if DK>0 then lK={};for ZK=1,DK do local GK=(LK[ZK]);if GK[1]==0 then lK[ZK-1]={zK,GK[2]};else(lK)[ZK-0x1]=sK[GK[0X0002]];end;end;(K)(mK,lK);end;end;(zK)[0X13]=Ri(lK,UK,rK);do nK=nK+0X01;end;VK=0x12;zK[VK](zK[VK+1]);QK=VK-0X1;do nK=nK+1;end;nK=nK+0x00001;EK=eK[nK];nK=nK+1;do(zK)[18]=UK[EK[0X7]];end;nK=nK+0X00001;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;(zK)[0x13]=EK[0X00007];nK=nK+0x1;zK[20]=zK[16];nK=nK+1;(zK)[21]=zK[17];nK=nK+0x1;VK=0X12;QK=VK+0X0004-0x001;(zK[VK])(S(zK,VK+0X00001,QK));do QK=VK-0x1;end;do nK=nK+1;end;nK=nK+0x1;do EK=eK[nK];end;nK=nK+1;zK[18]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X001;end;rK=EK[2];do lK=nil;end;LK=rK[0X00009];DK=#LK;do if not(DK>0)then else lK={};for ZK=1,DK do local GK=LK[ZK];if GK[1]==0 then do lK[ZK-1]={zK,GK[0x2]};end;else lK[ZK-0X1]=sK[GK[0X02]];end;end;K(mK,lK);end;end;zK[0x13]=Ri(lK,UK,rK);nK=nK+1;do VK=18;end;(zK[VK])(zK[VK+1]);QK=VK-1;nK=nK+0x1;nK=nK+0X001;EK=eK[nK];nK=nK+0X1;(zK)[0X0012]=UK[EK[7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[19]=EK[0X07];nK=nK+1;VK=0X12;(zK[VK])(zK[VK+1]);do QK=VK-1;end;nK=nK+1;repeat local ZK,GK=mK,(zK);local OK={};for tK,AK in W,ZK do for jK,FQ in W,AK do do if not(FQ[1]==GK and FQ[0x02]>=10)then else local iQ=(FQ[2]);if not OK[iQ]then OK[iQ]={GK[iQ]};end;(FQ)[1]=OK[iQ];do(FQ)[0X2]=1;end;end;end;end;end;until true;EK=eK[nK];do nK=nK+1;end;nK=EK[0x2];end;else if dK==0X0E then(zK)[0xa]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0xA]=zK[0X0a][EK[0X0006]];nK=nK+0X001;do nK=nK+0x001;end;EK=eK[nK];nK=nK+0X1;if zK[0xa]then nK=EK[2];end;else do(zK)[10]=UK[EK[7]];end;nK=nK+0X1;nK=nK+0X1;nK=nK+1;local VK=0xA;(zK)[11]=zK[0x3];nK=nK+0X0001;(zK)[VK]=zK[VK](zK[VK+0X1]);QK=VK;do nK=nK+1;end;do nK=nK+0x00001;end;EK=eK[nK];do nK=nK+1;end;if not(zK[0Xa])then else nK=EK[0X2];end;end;end;end;end;else if not(dK>=4)then do if dK>=2 then if dK~=0x3 then(zK)[EK[0x00003]]=nil;else zK[EK[0X3]]=zK[EK[2]][EK[0X06]];end;else if dK~=0X1 then do zK[EK[0X00003]]=UK[EK[0X7]];end;else do zK[EK[0X0003]]={S({},1,EK[0X2])};end;end;end;end;else if dK>=0X6 then do if dK<0x00007 then(zK)[0x0]=UK[EK[0X00007]];nK=nK+1;do nK=nK+0x1;end;do EK=eK[nK];end;nK=nK+1;zK[0X000]=zK[0X0][EK[6]];EK=eK[nK];nK=nK+1;if not(not zK[0])then else nK=EK[0X2];end;else if dK~=8 then local VK=EK[3];local MK,aK=zK[VK]();if MK then nK=EK[0X2];zK[VK+3]=aK;end;else nK=EK[2];end;end;end;else do if dK==0X05 then do(zK)[10]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;(zK)[10]=zK[10][EK[0x06]];nK=nK+1;local MK=(sK[2]);nK=nK+1;do EK=eK[nK];end;nK=nK+1;(zK)[11]=UK[EK[0X7]];nK=nK+1;zK[0X000A]=zK[0X00a][zK[0XB]];do EK=eK[nK];end;nK=nK+1;do zK[0Xb]=EK[0X7];end;local aK=(0X00f);nK=nK+0X1;local VK=(0X000B);(zK)[0X000c]=zK[0x00001];nK=nK+0x01;zK[0Xb]=zK[VK]..zK[VK+0X01];nK=nK+1;zK[10]=zK[0xA][zK[0X000B]];EK=eK[nK];nK=nK+1;(zK)[0X0b]=zK[0xa][EK[6]];EK=eK[nK];nK=nK+1;zK[0XC]=zK[0xA][EK[0X6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;do zK[0X0d]=zK[0Xa][EK[0X6]];end;nK=nK+0X00001;nK=nK+1;nK=nK+1;zK[14]=MK[0X1][MK[2]];nK=nK+1;(zK)[14]=zK[14][zK[0X3]];EK=eK[nK];do nK=nK+0X1;end;(zK)[0Xf]=UK[EK[0x7]];nK=nK+0X0001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[16]=zK[0x0e][EK[0X6]];nK=nK+1;(zK)[aK]=zK[aK](zK[aK+1]);QK=aK;EK=eK[nK];nK=nK+1;do if zK[0X0000F]then nK=EK[2];end;end;else do zK[10]=UK[EK[7]];end;nK=nK+0X1;local VK=0X0000A;QK=0x0a;zK[QK]();QK=QK-0X1;nK=nK+0X00001;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;zK[0Xa]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+1;end;do nK=nK+0X1;end;zK[0xB]=zK[0X003];nK=nK+0X1;zK[VK]=zK[VK](zK[VK+1]);QK=VK;do EK=eK[nK];end;do nK=nK+1;end;if not(zK[0Xa])then else do nK=EK[2];end;end;end;end;end;end;end;else if dK>=27 then if dK>=0X1F then if dK<0X00021 then if dK~=32 then(zK)[15]=zK[14][EK[6]];EK=eK[nK];nK=nK+0X0001;do zK[0Xf]=zK[15][EK[6]];end;EK=eK[nK];nK=nK+1;nK=EK[2];else(zK)[0xa]=UK[EK[0X0007]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X0001;end;zK[10]=zK[10][EK[6]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;if not zK[10]then do nK=EK[2];end;end;end;else if not(dK<34)then if dK~=0x23 then do zK[EK[0x3]]=EK[7];end;else local VK=EK[0X2];local aK=(VK[9]);local MK=(nil);local gK=#aK;do if gK>0X00000 then MK={};do for wK=0X1,gK do local rK=aK[wK];if rK[1]==0X0 then do MK[wK-0X1]={zK,rK[0X00002]};end;else MK[wK-0X1]=sK[rK[0X2]];end;end;end;(K)(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else zK[0Xa]=UK[EK[0X7]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;(zK)[11]=EK[7];do EK=eK[nK];end;nK=nK+1;zK[0X000c]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;do(zK)[12]=zK[0x000c][EK[6]];end;local VK=(10);nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;nK=nK+1;do nK=nK+0X00001;end;EK=eK[nK];nK=nK+0X1;if zK[10]then nK=EK[0X02];end;end;end;else if not(dK<0x1D)then do if dK~=30 then if not(not zK[EK[0X3]])then else nK=EK[0X2];end;else local VK=(sK[EK[0x00002]]);(zK)[EK[3]]=VK[0X1][VK[2]];end;end;else if dK~=0X1c then(zK)[0X0000a]=UK[EK[7]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X001;do(zK)[10]=zK[10][EK[0X006]];end;EK=eK[nK];nK=nK+1;if not zK[10]then do nK=EK[2];end;end;else(zK)[EK[0X3]]=zK[EK[2]]>=zK[EK[5]];end;end;end;else if dK>=0X00016 then if not(dK<0x18)then if dK<0x19 then do(zK)[0X00003]=zK[2][EK[6]];end;EK=eK[nK];nK=nK+0X1;local VK=5;do zK[4]=zK[0X02][EK[6]];end;EK=eK[nK];nK=nK+0X1;(zK)[5]=UK[EK[0X7]];nK=nK+1;nK=nK+1;local MK=(6);nK=nK+1;do(zK)[6]=zK[0X3];end;nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;(zK)[0X006]=EK[7];do nK=nK+0X0001;end;zK[7]=zK[5];do EK=eK[nK];end;do nK=nK+0X1;end;do zK[8]=EK[0X2];end;EK=eK[nK];nK=nK+1;do VK=zK[MK];end;local aK=(zK[MK+0x1]);local gK=zK[MK+2];zK[MK]=b(function()for wK=VK,aK,gK do(o)(true,wK);end;end);do nK=EK[2];end;else if dK~=0X00001A then local VK=(EK[0X00003]);local MK,aK,gK=zK[VK]();if not(MK)then else(zK)[VK+0X1]=aK;(zK)[VK+0x00002]=gK;nK=EK[2];end;else(zK)[EK[0X3]]=w(zK[EK[2]],zK[EK[0X5]]);end;end;else if dK~=23 then else(zK)[EK[0X03]]=zK[EK[0x00002]]<=zK[EK[5]];end;end;else if not(dK>=0X0014)then if dK==0x13 then zK[0]=UK[EK[7]];nK=nK+1;local VK=(sK[0x1]);do zK[0x1]=VK[1][VK[2]];end;nK=nK+0x01;nK=nK+1;local MK=0;nK=nK+0X1;local aK,gK=0X2,(0x0004);do if aK==0 then else QK=MK+aK-0x1;end;end;local wK,rK=nil,nil;if aK==1 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;if gK~=0X001 then if gK~=0X00 then wK=MK+gK-2;QK=wK+1;else wK=wK+MK-1;QK=wK;end;local LK=(0X00000);for DK=MK,wK do do LK=LK+0X00001;end;(zK)[DK]=rK[LK];end;else do QK=MK-0X0001;end;end;do nK=nK+1;end;nK=nK+0x1;do EK=eK[nK];end;nK=nK+0X1;MK=0;local lK=(b(function(...)o();do for LK,DK in...do o(true,LK,DK);end;end;end));lK(zK[MK],zK[MK+0X1],zK[MK+0X02]);do QK=MK;end;zK[MK]=lK;nK=EK[0X02];else zK[15]=zK[14][EK[0X006]];nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;(zK)[15]=zK[15][EK[0X6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;nK=EK[2];end;else if dK~=21 then(zK)[0]=UK[EK[7]];nK=nK+1;do nK=nK+0X0001;end;EK=eK[nK];nK=nK+1;do(zK)[0X0]=zK[0X0][EK[0X6]];end;nK=nK+1;nK=nK+1;nK=nK+0X00001;QK=0;zK[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+1;do if not(not zK[0])then else nK=EK[0X2];end;end;else repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[0x1]==MK and lK[2]>=0X000)then else local LK=(lK[0x2]);if not aK[LK]then aK[LK]={MK[LK]};end;lK[1]=aK[LK];(lK)[0X2]=1;end;end;end;end;until true;return;end;end;end;end;end;end;end;end;else if SK==72 then _K=function(...)local nK,zK=0X1,{};local pK=Q();local UK,CK=(pK==z and KK or pK),({[1]=xK,[2]=zK});local QK=(0);local NK,HK=vi(...);NK=NK-1;for EK=0X0,NK do if WK>EK then do(zK)[EK]=HK[EK+1];end;else break;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0X1)};end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[0X01];nK=nK+1;if dK<0X7 then if dK<0X3 then if dK<0x01 then(zK)[EK[3]]=zK[EK[2]]^zK[EK[5]];else if dK==2 then do(zK)[EK[3]]=zK[EK[2]]%zK[EK[0x5]];end;else zK[EK[3]]=EK[7];end;end;else if dK<5 then do if dK==0X04 then do for VK=EK[3],EK[0x2]do zK[VK]=nil;end;end;else zK[EK[0X03]]=-zK[EK[0X00002]];end;end;else do if dK==0X00006 then(zK)[EK[3]]={S({},1,EK[0X00002])};else zK[0X01]=UK[EK[0x7]];nK=nK+1;do zK[2]=zK[0];end;EK=eK[nK];nK=nK+0X001;zK[0x001][EK[7]]=zK[2];EK=eK[nK];nK=nK+0x1;(zK)[0X1]=UK[EK[0X0007]];nK=nK+1;nK=nK+0X1;do nK=nK+1;end;QK=0X01;zK[QK]();do QK=QK-1;end;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;local MK=(nil);zK[0x00001]=UK[EK[7]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+0X1;zK[1]=zK[1][EK[6]];do EK=eK[nK];end;do nK=nK+0x001;end;local VK,wK=EK[2],1;local aK=(VK[0x09]);local gK=(#aK);do if gK>0 then do MK={};end;for rK=1,gK do local lK=(aK[rK]);if lK[0X01]==0X0000 then MK[rK-0X001]={zK,lK[2]};else MK[rK-1]=sK[lK[0X2]];end;end;K(mK,MK);end;end;(zK)[0X0002]=Ri(MK,UK,VK);nK=nK+1;zK[wK](zK[wK+0X0001]);QK=wK-0x1;do nK=nK+1;end;do nK=nK+1;end;do nK=nK+0x1;end;do repeat local rK,lK,LK=mK,zK,({});for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[1]==lK and OK[2]>=0x0)then else local tK=OK[2];if not(not LK[tK])then else LK[tK]={lK[tK]};end;(OK)[0X00001]=LK[tK];(OK)[2]=1;end;end;end;until true;end;return;end;end;end;end;else if dK>=10 then do if dK<0X00C then do if dK==0xb then local VK=(EK[0x002]);local aK=(VK[9]);local MK=(nil);local gK=(#aK);do if gK>0 then MK={};do for wK=0x01,gK do local rK=aK[wK];do if rK[1]~=0X000 then(MK)[wK-0X1]=sK[rK[2]];else do MK[wK-0X00001]={zK,rK[2]};end;end;end;end;end;K(mK,MK);end;end;do(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else zK[EK[3]]=UK[EK[0X07]];end;end;else if dK==13 then if not(zK[EK[0X2]]<zK[EK[5]])then else nK=EK[0X03];end;else if not(zK[EK[0X2]]<=zK[EK[0X05]])then else nK=EK[0x00003];end;end;end;end;else if not(dK>=8)then else do if dK==9 then if not(zK[EK[2]]<=zK[EK[5]])then nK=EK[3];end;else nK=EK[0x2];end;end;end;end;end;end;end;else do _K=function(...)local nK=(0x01);local zK={};local pK=(Q());local QK,CK=0,({[2]=zK,[1]=xK});local NK,HK=vi(...);do NK=NK-0X00001;end;local UK=((pK==z and KK or pK));for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X0001];else break;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x1 or 0,S(HK,WK+1,NK+0X1)};end;if UK~=pK then(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[1];do nK=nK+0X1;end;if not(dK<8)then if dK<0x0C then do if not(dK<10)then if dK==0Xb then zK[EK[0X003]]=zK[EK[2]]==zK[EK[5]];else(zK)[EK[0X3]]=UK[EK[7]];end;else if dK==9 then for VK=EK[3],EK[2]do zK[VK]=nil;end;else if not(zK[EK[2]]<zK[EK[5]])then nK=EK[0X00003];end;end;end;end;else if dK>=0X0e then if dK==0X0f then nK=EK[2];else end;else do if dK==0X00d then zK[EK[3]]={S({},1,EK[0x002])};else do zK[EK[3]]=zK[EK[2]]>=zK[EK[0X00005]];end;end;end;end;end;else if not(dK<4)then if dK<0x0006 then do if dK~=0X5 then local VK=(EK[2]);local MK=nil;local aK=(VK[0x9]);local gK=#aK;do if gK>0 then MK={};do for wK=0X1,gK do local rK=(aK[wK]);do if rK[0X1]~=0X0 then MK[wK-1]=sK[rK[2]];else do(MK)[wK-0X1]={zK,rK[0X2]};end;end;end;end;end;(K)(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);else local VK=EK[3];for MK=VK,VK+(EK[0X002]-1)do zK[MK]=HK[WK+(MK-VK)+0X1];end;end;end;else if dK==7 then(zK)[1]=UK[EK[0X7]];nK=nK+0X001;zK[0X2]=zK[0];EK=eK[nK];nK=nK+1;do(zK[0X001])[EK[0x7]]=zK[2];end;EK=eK[nK];nK=nK+0x1;zK[1]=UK[EK[0X7]];local wK=(0X1);nK=nK+1;QK=0X001;local MK=(nil);(zK[QK])();QK=QK-0x1;EK=eK[nK];do nK=nK+1;end;(zK)[1]=UK[EK[0X0007]];EK=eK[nK];nK=nK+0X0001;do(zK)[0X01]=zK[0X1][EK[0x00006]];end;nK=nK+0X001;nK=nK+0x1;EK=eK[nK];nK=nK+1;local VK=EK[2];local aK=VK[9];local gK=(#aK);if not(gK>0)then else MK={};for rK=0X1,gK do local lK=aK[rK];if lK[1]==0X0 then(MK)[rK-0X1]={zK,lK[2]};else do(MK)[rK-0x1]=sK[lK[2]];end;end;end;(K)(mK,MK);end;zK[2]=Ri(MK,UK,VK);nK=nK+0x001;zK[wK](zK[wK+1]);QK=wK-1;do nK=nK+1;end;nK=nK+0X1;do nK=nK+0x1;end;repeat local LK=({});local rK,lK=mK,zK;do for DK,ZK in W,rK do do for GK,OK in W,ZK do do if not(OK[1]==lK and OK[0X2]>=0)then else local tK=(OK[0X2]);if not LK[tK]then(LK)[tK]={lK[tK]};end;(OK)[1]=LK[tK];do(OK)[0x02]=0x00001;end;end;end;end;end;end;end;until true;do return;end;else(zK)[EK[0X3]]=not zK[EK[2]];end;end;else if not(dK<0X2)then if dK==0X0003 then zK[EK[0x3]]=D(zK[EK[0x00002]],zK[EK[5]]);else do zK[EK[3]]=EK[7];end;end;else if dK==1 then(zK)[EK[3]]=zK[EK[2]][zK[EK[5]]];else local VK,MK=EK[0X3],(EK[2]);if MK==0 then else do QK=VK+MK-0X1;end;end;local gK,wK,aK=nil,nil,(EK[5]);if MK==0X1 then gK,wK=vi(zK[VK]());else do gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;end;if aK~=0x01 then if aK~=0 then gK=VK+aK-2;do QK=gK+0X00001;end;else do gK=gK+VK-0x1;end;QK=gK;end;local rK=(0);do for lK=VK,gK do rK=rK+0X01;(zK)[lK]=wK[rK];end;end;else QK=VK-0X0001;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK<23)then do if not(SK>=35)then if SK<0x1D then if not(SK<26)then do if SK>=0X1b then if SK~=28 then _K=function(...)local nK,zK=1,({});local CK=({[1]=xK,[2]=zK});local pK=(Q());local QK=0x0;local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+1];end;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X1)};end;if UK==pK then else(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X1;do if not(dK<0Xc)then if not(dK>=18)then if not(dK>=15)then if dK<13 then if zK[EK[2]]<=zK[EK[5]]then do nK=EK[3];end;end;else if dK~=14 then(zK)[3]=UK[EK[7]];EK=eK[nK];nK=nK+0X001;local VK=0X003;zK[0x04]=zK[0x00002][EK[0X6]];nK=nK+1;do nK=nK+0X0001;end;nK=nK+1;(zK[VK])(zK[VK+1]);QK=VK-1;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;do nK=EK[2];end;else local VK=(EK[0X2]);local aK=VK[9];local MK=(nil);local gK=(#aK);if not(gK>0X0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X1]~=0 then do MK[wK-1]=sK[rK[0X02]];end;else MK[wK-0X1]={zK,rK[2]};end;end;(K)(mK,MK);end;do zK[EK[0X003]]=Ri(MK,UK,VK);end;end;end;else if not(dK<16)then if dK~=0X11 then if not zK[EK[3]]then nK=EK[0X002];end;else do(zK)[EK[0x3]]=zK[EK[0x2]]<zK[EK[0x5]];end;end;else zK[0X0000]=UK[EK[0X7]];do nK=nK+0x01;end;nK=nK+0x1;do EK=eK[nK];end;nK=nK+1;local VK=(0);(zK)[0X001]=EK[7];nK=nK+0X1;zK[VK](zK[VK+1]);do QK=VK-1;end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0x0001;do nK=EK[2];end;end;end;else if dK>=0X15 then if not(dK>=22)then do(zK)[EK[0x3]]=zK[EK[2]][zK[EK[5]]];end;else if dK~=0X17 then else zK[EK[3]]=EK[0X00007];end;end;else if not(dK<19)then do if dK~=0X14 then do if zK[EK[0X2]]~=EK[0X6]then nK=EK[3];end;end;else zK[0X0000]=UK[EK[0X7]];nK=nK+1;nK=nK+1;local VK=sK[1];nK=nK+0x01;(zK)[1]=VK[0x1][VK[0X00002]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;(zK)[1]=zK[0X0001][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];local gK=2;nK=nK+1;(zK)[1]=zK[1][EK[6]];nK=nK+0X01;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;(zK)[1]=zK[1][EK[0X6]];EK=eK[nK];nK=nK+0x00001;zK[0X001]=zK[1][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X001;do zK[1]=zK[0X00001][EK[6]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[0X1]=zK[0x00001][EK[0x006]];end;local MK=(1);do EK=eK[nK];end;nK=nK+0x1;(zK)[0X001]=zK[0X1][EK[6]];EK=eK[nK];nK=nK+0X1;local aK=zK[0x1];(zK)[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];nK=nK+0X00001;do MK=0X01;end;local wK=0;do if gK==0X0 then else QK=MK+gK-0X1;end;end;local rK,lK=nil,nil;do if gK~=0X00001 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else do rK,lK=vi(zK[MK]());end;end;end;do if wK~=1 then if wK~=0X0 then rK=MK+wK-2;do QK=rK+0X0001;end;else do rK=rK+MK-0X001;end;QK=rK;end;local DK=(0);do for ZK=MK,rK do DK=DK+1;zK[ZK]=lK[DK];end;end;else QK=MK-1;end;end;nK=nK+0x1;do MK=0X0;end;gK=0;wK=0X4;do if gK~=0x000 then QK=MK+gK-0X1;end;end;rK,lK=nil;if gK==1 then rK,lK=vi(zK[MK]());else rK,lK=vi(zK[MK](S(zK,MK+0X01,QK)));end;do if wK==1 then do QK=MK-1;end;else do if wK~=0x000 then rK=MK+wK-0X2;do QK=rK+0x001;end;else rK=rK+MK-0X1;QK=rK;end;end;local DK=(0);do for ZK=MK,rK do do DK=DK+0x01;end;(zK)[ZK]=lK[DK];end;end;end;end;EK=eK[nK];nK=nK+0x1;do MK=0;end;local LK=b(function(...)o();for DK,ZK in...do o(true,DK,ZK);end;end);LK(zK[MK],zK[MK+1],zK[MK+0x002]);QK=MK;do zK[MK]=LK;end;nK=EK[0X02];end;end;else repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0x1]==MK and lK[0X2]>=0 then local LK=lK[2];if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];(lK)[0X0002]=0X1;end;end;end;end;until true;do return;end;end;end;end;else do if dK<6 then if not(dK>=3)then if dK>=1 then if dK~=2 then(zK)[EK[0X3]]={S({},1,EK[2])};else local VK=4;local MK=(zK[2]);(zK)[VK+1]=MK;(zK)[VK]=MK[EK[0X0006]];do EK=eK[nK];end;nK=nK+1;zK[6]=EK[7];do nK=nK+1;end;do VK=0X4;end;zK[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);do QK=VK;end;EK=eK[nK];nK=nK+1;do if not(not zK[0X4])then else nK=EK[2];end;end;end;else do(zK)[0]=UK[EK[0x0007]];end;EK=eK[nK];nK=nK+0X1;(zK)[0X0]=zK[0][EK[0x06]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not zK[0]then do nK=EK[0X00002];end;end;end;else if dK<0X00004 then(zK)[EK[0X3]]=zK[EK[2]]+zK[EK[5]];else if dK==5 then local VK=EK[0X0003];local MK,aK,gK=zK[VK]();do if MK then do zK[VK+1]=aK;end;zK[VK+2]=gK;nK=EK[2];end;end;else do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;end;end;else if dK>=0X9 then if dK>=0xA then do if dK==11 then(zK)[EK[3]]=UK[EK[7]];else nK=EK[2];end;end;else zK[0X0]=UK[EK[0X00007]];EK=eK[nK];nK=nK+1;do zK[0X0]=zK[0X00000][EK[0X6]];end;nK=nK+1;QK=0;(zK)[QK]=zK[QK]();nK=nK+1;nK=nK+0x01;EK=eK[nK];nK=nK+1;if not(not zK[0X0000])then else nK=EK[2];end;end;else if not(dK>=0X00007)then(zK)[EK[3]]=zK[EK[0x2]]%zK[EK[5]];else if dK~=8 then local VK=(sK[EK[2]]);(zK)[EK[3]]=VK[1][VK[2]];else zK[EK[0x3]]=zK[EK[0X2]][EK[0X006]];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X01,({});local QK=(0);local CK=({[1]=xK,[2]=zK});local pK=Q();local NK,HK=vi(...);do NK=NK-0X1;end;local UK=(pK==z and KK or pK);for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;if not PK then do HK=nil;end;elseif not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+0x0001 or 0x0,S(HK,WK+0X1,NK+1)};end;end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];do nK=nK+0x001;end;if dK<0X08 then do if not(dK>=0X00004)then if not(dK<0x2)then do if dK==3 then nK=EK[2];else(zK)[EK[0x3]]=EK[0X7];end;end;else if dK~=0x001 then(zK)[EK[3]]=w(zK[EK[2]],zK[EK[0X5]]);else if zK[EK[0X002]]<zK[EK[5]]then nK=EK[3];end;end;end;else if dK<0X6 then if dK==0x5 then zK[EK[0X3]]=zK[EK[2]]>zK[EK[0x5]];else do(zK)[EK[3]]=CK[EK[0X2]];end;end;else if dK~=7 then(zK)[EK[3]]=g(zK[EK[0X2]],zK[EK[0x5]]);else zK[EK[3]]={S({},1,EK[0X2])};end;end;end;end;else if dK>=12 then if dK>=14 then do if dK<0xf then do zK[EK[0x3]]=UK[EK[0X7]];end;else if dK==0X010 then zK[EK[0X3]]=zK[EK[2]]*zK[EK[5]];else local VK=(EK[0X3]);for MK=VK,VK+(EK[0X02]-0X01)do zK[MK]=HK[WK+(MK-VK)+0X1];end;end;end;end;else if dK==0Xd then do for VK=EK[0X3],EK[2]do zK[VK]=nil;end;end;else local VK=(EK[0x2]);local aK,MK=VK[0x9],(nil);local gK=(#aK);if gK>0X0 then do MK={};end;do for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0x0 then(MK)[wK-0X01]={zK,rK[2]};else do MK[wK-0X0001]=sK[rK[2]];end;end;end;end;(K)(mK,MK);end;do(zK)[EK[0X0003]]=Ri(MK,UK,VK);end;end;end;else do if dK>=0XA then do if dK==11 then do(zK)[EK[0X003]]=zK[EK[2]]==zK[EK[0X05]];end;else zK[1]=UK[EK[7]];EK=eK[nK];local VK=0X2;nK=nK+1;(zK)[0x2]=UK[EK[7]];nK=nK+1;(zK)[0x00003]=zK[0];nK=nK+1;(zK)[VK]=zK[VK](zK[VK+0X1]);QK=VK;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X00001][EK[0X7]]=zK[2];EK=eK[nK];nK=nK+0x1;zK[1]=UK[EK[7]];nK=nK+0X1;QK=0X1;(zK[QK])();QK=QK-1;nK=nK+1;repeat local gK={};local MK,aK=mK,zK;for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[0X0001]==aK and LK[2]>=0X0)then else local DK=(LK[2]);if not(not gK[DK])then else gK[DK]={aK[DK]};end;(LK)[0X1]=gK[DK];do LK[0x00002]=1;end;end;end;end;until true;return;end;end;else if dK~=0X9 then else zK[EK[3]]=r(zK[EK[0X02]],zK[EK[5]]);end;end;end;end;end;end;end;end;else do _K=function(...)local QK=(0);local nK,zK=0X1,{};local CK=({[1]=xK,[2]=zK});local pK=(Q());local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-1;for EK=0X0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X1];end;end;do if not PK then HK=nil;elseif not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X001,NK+0X1)};end;end;end;if UK~=pK then(_)(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+0x0001;if dK>=6 then if dK<9 then do if not(dK<7)then if dK~=0x8 then zK[EK[0x3]]=UK[EK[0X00007]];else(zK)[EK[3]]=EK[0X7];end;else local VK=EK[0x03];local MK,aK=zK[VK]();if MK then for gK=1,EK[0X5]do(zK)[VK+gK]=aK[gK];end;nK=EK[0X02];end;end;end;else if dK<11 then if dK~=0x00A then local VK=(EK[0X3]);local MK,aK=zK[VK]();if MK then nK=EK[2];zK[VK+0X3]=aK;end;else zK[EK[3]]=zK[EK[2]]<=zK[EK[0X5]];end;else if dK==0X0c then zK[EK[0X00003]]={S({},0X1,EK[2])};else do for VK=EK[0X3],EK[0X02]do(zK)[VK]=nil;end;end;end;end;end;else do if dK<0x3 then if not(dK<1)then if dK==0X2 then zK[EK[0X0003]]=-zK[EK[0x2]];else if not(not(zK[EK[0x2]]<zK[EK[0x5]]))then else nK=EK[0X3];end;end;else end;else do if not(dK>=0X00004)then zK[0x00001]=UK[EK[7]];nK=nK+1;do zK[2]=zK[0X0];end;do EK=eK[nK];end;nK=nK+1;(zK[0X01])[EK[7]]=zK[2];EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[7]];do nK=nK+1;end;QK=0x0001;zK[QK]();QK=QK-0X001;nK=nK+0X1;nK=nK+0X01;do nK=nK+1;end;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0x2]>=0X00000 then local LK=(lK[2]);if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[1]=aK[LK];lK[2]=0X1;end;end;end;end;until true;return;else do if dK~=5 then do nK=EK[2];end;else local VK=(EK[0x2]);local aK=(VK[9]);local MK=(nil);local gK=(#aK);do if gK>0 then do MK={};end;do for wK=0x1,gK do local rK=aK[wK];do if rK[0X1]==0X0 then do MK[wK-1]={zK,rK[2]};end;else MK[wK-0X01]=sK[rK[0x00002]];end;end;end;end;(K)(mK,MK);end;end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK<24)then if SK==25 then do _K=function(...)local zK,nK={},(0x1);local QK=0;local pK=(Q());local UK,CK=(pK==z and KK or pK),({[1]=xK,[2]=zK});local NK,HK=vi(...);NK=NK-0x1;for EK=0X0000,NK do if WK>EK then(zK)[EK]=HK[EK+1];else do break;end;end;end;do if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0x0,S(HK,WK+1,NK+1)};end;end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+1;do if dK>=6 then if dK<9 then if dK>=0x0007 then if dK==8 then zK[0x1]=UK[EK[7]];nK=nK+1;zK[0X2]=zK[0];local wK=(0X1);EK=eK[nK];nK=nK+1;zK[0X1][EK[7]]=zK[2];EK=eK[nK];do nK=nK+1;end;(zK)[0X1]=UK[EK[0X7]];do nK=nK+1;end;do QK=1;end;(zK[QK])();QK=QK-0X1;nK=nK+0X00001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0X1]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X0001;end;(zK)[0X00001]=zK[0X1][EK[0x006]];do EK=eK[nK];end;local VK=(EK[0X00002]);nK=nK+1;local MK=(nil);local aK=(VK[0x009]);local gK=#aK;if not(gK>0)then else MK={};for rK=1,gK do local lK=aK[rK];do if lK[1]~=0x0 then(MK)[rK-1]=sK[lK[0X2]];else do(MK)[rK-1]={zK,lK[2]};end;end;end;end;(K)(mK,MK);end;(zK)[0x2]=Ri(MK,UK,VK);nK=nK+0x00001;zK[wK](zK[wK+1]);do QK=wK-1;end;nK=nK+0X1;nK=nK+1;nK=nK+1;repeat local rK,lK=mK,(zK);local LK={};for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0x1]==lK and OK[0X2]>=0x0 then local tK=OK[0X2];if not LK[tK]then LK[tK]={lK[tK]};end;(OK)[1]=LK[tK];OK[0X2]=1;end;end;end;until true;return;else zK[EK[3]]=EK[7];end;else(zK)[EK[0X3]]=#zK[EK[2]];end;else if not(dK<11)then if dK~=12 then do for VK=EK[0X0003],EK[2]do(zK)[VK]=nil;end;end;else(zK)[EK[0x00003]]=EK[2];end;else if dK~=10 then(zK)[EK[3]]=UK[EK[0X0007]];else local VK=(zK[EK[2]]/zK[EK[5]]);(zK)[EK[0X3]]=VK-VK%0X0001;end;end;end;else if not(dK<0X3)then if dK>=4 then if dK==0X5 then local VK=EK[0X2];local MK=(nil);local aK=(VK[0X00009]);local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[1]==0 then(MK)[wK-1]={zK,rK[2]};else MK[wK-0x1]=sK[rK[2]];end;end;(K)(mK,MK);end;(zK)[EK[0X03]]=Ri(MK,UK,VK);else zK[EK[3]]={S({},1,EK[0X02])};end;else local VK=(EK[3]);local MK=b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end);MK(zK[VK],zK[VK+0x1],zK[VK+2]);do QK=VK;end;(zK)[VK]=MK;nK=EK[0x0002];end;else if not(dK>=0x0001)then else if dK==2 then do nK=EK[2];end;else if zK[EK[2]]~=zK[EK[0X00005]]then nK=EK[3];end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=1,({});local pK=(Q());local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-0X1;local QK=0;do for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;do if UK==pK then else _(_K,UK);end;end;do while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X001;do if dK<6 then do if not(dK>=3)then do if dK>=0X1 then if dK~=0X2 then if not(zK[EK[2]]<zK[EK[0X005]])then nK=EK[3];end;else local VK=(EK[0X2]);local aK=(VK[0X09]);local gK,MK=#aK,nil;do if gK>0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[0X0001]~=0X0 then do(MK)[wK-1]=sK[rK[2]];end;else do MK[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;end;(zK)[EK[0x3]]=Ri(MK,UK,VK);end;else(zK)[EK[0X0003]]=CK[EK[0X2]];end;end;else if not(dK>=0X00004)then else if dK==0X05 then do(zK)[EK[0x3]]=zK[EK[2]]==zK[EK[5]];end;else zK[EK[0X3]]=UK[EK[0X7]];end;end;end;end;else if not(dK>=9)then if not(dK>=7)then zK[0X01]=UK[EK[7]];nK=nK+1;zK[0x0002]=zK[0];local wK=1;EK=eK[nK];nK=nK+0x1;do(zK[0x1])[EK[0x00007]]=zK[0X2];end;EK=eK[nK];do nK=nK+1;end;zK[0x1]=UK[EK[0X7]];do nK=nK+1;end;QK=0X01;local MK=nil;(zK[QK])();QK=QK-1;do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X0001;zK[0x1]=UK[EK[7]];nK=nK+0X0001;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[0X001]=zK[1][EK[0x0006]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;local VK=(EK[0X00002]);local aK=VK[0X0009];local gK=(#aK);if gK>0 then MK={};for rK=1,gK do local lK=(aK[rK]);if lK[1]~=0X0 then do(MK)[rK-1]=sK[lK[2]];end;else do MK[rK-0X1]={zK,lK[0X2]};end;end;end;(K)(mK,MK);end;(zK)[0x2]=Ri(MK,UK,VK);do nK=nK+0X1;end;zK[wK](zK[wK+0X1]);do QK=wK-1;end;do nK=nK+0x1;end;repeat local rK,lK,LK=mK,zK,{};for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[0X1]==lK and OK[0X0002]>=0 then local tK=OK[2];if not(not LK[tK])then else(LK)[tK]={lK[tK]};end;OK[0X1]=LK[tK];(OK)[0X02]=1;end;end;end;until true;return;else if dK~=0X8 then local VK=(EK[3]);for MK=VK,VK+(EK[0X2]-1)do(zK)[MK]=HK[WK+(MK-VK)+1];end;else nK=EK[2];end;end;else if not(dK<0X00b)then do if dK==0xC then(zK)[EK[0X3]]=EK[7];else do if not zK[EK[0x003]]then nK=EK[2];end;end;end;end;else if dK==10 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else zK[EK[3]]={S({},0X0001,EK[0X2])};end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=1,({});local pK=(Q());local CK,QK={[2]=zK,[1]=xK},(0x0);local NK,HK=vi(...);do NK=NK-1;end;for EK=0,NK do if WK>EK then do zK[EK]=HK[EK+0x01];end;else do break;end;end;end;local UK=((pK==z and KK or pK));do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0,S(HK,WK+0x0001,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+0x1;if not(dK<7)then do if not(dK<10)then do if not(dK>=0XC)then if dK==11 then zK[EK[3]]=D(zK[EK[2]],zK[EK[0X5]]);else local VK=(EK[0X3]);local MK,aK=zK[VK]();do if MK then nK=EK[0X2];zK[VK+3]=aK;end;end;end;else do if dK~=13 then do zK[EK[3]]=EK[0X07];end;else local VK=(EK[0X0003]);local aK=zK[VK+1];local MK=(zK[VK]);local gK=(zK[VK+0X2]);zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[2];end;end;end;end;else do if dK<8 then for VK=EK[0x3],EK[2]do(zK)[VK]=nil;end;else if dK~=9 then nK=EK[0x2];else(zK)[EK[3]]=zK[EK[0X00002]]<=zK[EK[5]];end;end;end;end;end;else if dK>=3 then if not(dK<0X5)then if dK==6 then local VK=EK[2];local MK=(nil);local aK=(VK[0x9]);local gK=(#aK);if gK>0x0 then do MK={};end;for wK=0x1,gK do local rK=aK[wK];if rK[1]~=0X0 then(MK)[wK-1]=sK[rK[0X2]];else do(MK)[wK-0X1]={zK,rK[0X00002]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else end;else if dK==4 then local VK=(EK[3]);local MK=(EK[5]-1)*50;local aK=(zK[VK]);do for gK=1,EK[0X2]do(aK)[MK+gK]=zK[VK+gK];end;end;else zK[EK[3]]={S({},1,EK[2])};end;end;else do if dK<0X1 then(zK)[EK[3]]=UK[EK[7]];else if dK==2 then do zK[1]=UK[EK[0x7]];end;do nK=nK+1;end;zK[2]=zK[0X00000];do EK=eK[nK];end;nK=nK+1;(zK[0X00001])[EK[7]]=zK[0X2];EK=eK[nK];nK=nK+0x001;(zK)[0x01]=UK[EK[7]];do nK=nK+0X00001;end;QK=0X0001;(zK[QK])();QK=QK-1;nK=nK+1;do nK=nK+0X1;end;nK=nK+0X1;do repeat local VK,MK,aK=mK,zK,({});do for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[2];if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];lK[0X2]=0X1;end;end;end;end;until true;end;return;else if zK[EK[0X00002]]<zK[EK[5]]then nK=EK[3];end;end;end;end;end;end;end;end;end;end;end;else if SK<32 then if SK<30 then do _K=function(...)local nK,zK,QK=0x1,{},(0);local CK=({[1]=xK,[2]=zK});local pK=(Q());local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0000,S(HK,WK+1,NK+0x00001)};end;if UK==pK then else _(_K,UK);end;do while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK<12 then if dK<0X6 then if not(dK>=0X3)then if not(dK>=0X00001)then do(zK)[0X1]=UK[EK[7]];end;nK=nK+1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X1;(zK)[2]=UK[EK[7]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+0X1;zK[1][EK[0X0007]]=zK[0x2];EK=eK[nK];nK=nK+0X1;nK=EK[2];else do if dK==2 then if zK[EK[2]]~=EK[0X6]then nK=EK[0x03];end;else zK[EK[3]]=-zK[EK[0x002]];end;end;end;else do if not(dK>=4)then zK[EK[3]]=EK[0x7];else do if dK==5 then else zK[0x1]=UK[EK[7]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do(zK)[2]=UK[EK[7]];end;nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;(zK[0X1])[EK[0X7]]=zK[2];do EK=eK[nK];end;do nK=nK+0X1;end;nK=EK[0X2];end;end;end;end;end;else if dK<0X9 then if dK>=0X0007 then if dK==8 then zK[EK[0X03]]=zK[EK[2]]*zK[EK[0X5]];else(zK)[1]=UK[EK[0X7]];do nK=nK+0x1;end;do nK=nK+0x1;end;EK=eK[nK];nK=nK+1;zK[2]=UK[EK[7]];do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];nK=nK+0X0001;(zK[1])[EK[0X7]]=zK[2];do EK=eK[nK];end;nK=nK+1;nK=EK[2];end;else zK[EK[0X003]]=D(zK[EK[2]],zK[EK[5]]);end;else if not(dK<0X0000A)then if dK~=0X00B then do zK[0X1]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0X1;(zK)[0X1]=zK[1][EK[6]];nK=nK+0X01;nK=nK+1;EK=eK[nK];nK=nK+1;do if zK[0x1]~=EK[0X0006]then else nK=EK[0x3];end;end;else zK[1]=UK[EK[7]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[2]=UK[EK[7]];EK=eK[nK];do nK=nK+0x1;end;zK[1][EK[0X7]]=zK[2];EK=eK[nK];nK=nK+1;nK=EK[0X2];end;else local VK=EK[0X2];local aK,MK=VK[9],nil;local gK=#aK;if gK>0X0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0 then(MK)[wK-0X1]=sK[rK[0x2]];else MK[wK-1]={zK,rK[0X002]};end;end;(K)(mK,MK);end;zK[EK[0X03]]=Ri(MK,UK,VK);end;end;end;else do if not(dK>=0X00012)then do if dK<15 then if not(dK<13)then if dK~=14 then local VK=EK[0x2];local MK=(zK[VK]);do for aK=VK+0X01,EK[5]do MK=MK..zK[aK];end;end;(zK)[EK[3]]=MK;else if not(not(zK[EK[0X2]]<zK[EK[0X00005]]))then else nK=EK[0X03];end;end;else(zK)[EK[0X3]]=zK[EK[2]];end;else if dK<0X10 then(zK)[1]=UK[EK[7]];nK=nK+1;QK=1;(zK[QK])();QK=QK-0x00001;nK=nK+1;nK=nK+1;do nK=nK+1;end;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=lK[0x0002];if not aK[LK]then do aK[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;lK[0X2]=1;end;end;end;until true;do return;end;else if dK==0X11 then do(zK)[1]=UK[EK[0X7]];end;nK=nK+0x1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do(zK)[0X002]=UK[EK[0X7]];end;nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+0X1;end;do zK[0X001][EK[7]]=zK[2];end;EK=eK[nK];nK=nK+1;nK=EK[0X2];else do(zK)[EK[3]]=zK[EK[2]][zK[EK[0X00005]]];end;end;end;end;end;else do if dK<21 then if dK<19 then(zK)[1]=UK[EK[0X00007]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X00001;end;(zK)[1]=zK[0X00001][EK[0X6]];local aK=0X001;nK=nK+0X1;local VK=1;nK=nK+0X0001;EK=eK[nK];nK=nK+0X1;local MK=zK[0x1];zK[VK+1]=MK;zK[VK]=MK[EK[0x6]];EK=eK[nK];nK=nK+1;(zK)[3]=UK[EK[0X7]];nK=nK+1;VK=0X003;local gK=(0x0000);do if aK==0x0 then else QK=VK+aK-1;end;end;local wK,rK=nil,nil;if aK~=1 then wK,rK=vi(zK[VK](S(zK,VK+0X1,QK)));else wK,rK=vi(zK[VK]());end;if gK==1 then QK=VK-1;else if gK~=0X0000 then wK=VK+gK-0X2;QK=wK+0X001;else wK=wK+VK-0X1;QK=wK;end;local lK=0X0;for LK=VK,wK do do lK=lK+0x1;end;(zK)[LK]=rK[lK];end;end;nK=nK+1;nK=nK+0x0001;nK=nK+1;VK=1;(zK[VK])(S(zK,VK+0X1,QK));QK=VK-1;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0x001;end;nK=EK[2];else if dK==20 then do nK=EK[0X2];end;else zK[EK[0X3]]=UK[EK[0x7]];end;end;else do if not(dK<0X16)then if dK~=0x17 then do zK[EK[3]]={S({},0X1,EK[0x002])};end;else for VK=EK[0X0003],EK[2]do(zK)[VK]=nil;end;end;else zK[1]=UK[EK[0X007]];do EK=eK[nK];end;nK=nK+0x1;(zK)[0X2]=UK[EK[7]];nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+1;end;(zK[1])[EK[7]]=zK[2];do EK=eK[nK];end;nK=nK+0X001;do nK=EK[2];end;end;end;end;end;end;end;end;end;end;end;end;else if SK==31 then _K=function(...)local QK,zK=0x0,{};local nK=(0X01);local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-1;end;local UK=((pK==z and KK or pK));do for EK=0X000,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;do if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0x1 or 0X0,S(HK,WK+0x1,NK+0X001)};end;end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if not(dK>=7)then if not(dK>=3)then if dK>=0X1 then do if dK~=0x2 then zK[1]=UK[EK[0X00007]];nK=nK+1;do nK=nK+0x1;end;nK=nK+1;QK=1;(zK[QK])();do QK=QK-0X00001;end;nK=nK+0x0001;nK=nK+0x01;do EK=eK[nK];end;nK=nK+1;nK=EK[2];else zK[EK[0X3]]=CK[EK[2]];end;end;else(CK)[EK[0X0002]]=zK[EK[3]];end;else if not(dK<5)then if dK~=0X00006 then else nK=EK[2];end;else if dK~=4 then(zK)[EK[0X003]]={S({},1,EK[2])};else do zK[EK[3]]=EK[0x7];end;end;end;end;else if not(dK>=0X0000a)then if not(dK<8)then if dK~=0X09 then(zK)[0X001]=UK[EK[0X7]];nK=nK+0X1;nK=nK+0X1;do nK=nK+0X1;end;do zK[2]=zK[0];end;EK=eK[nK];do nK=nK+1;end;(zK[0X001])[EK[0X7]]=zK[2];EK=eK[nK];nK=nK+0X01;zK[0x1]=UK[EK[7]];nK=nK+0x1;QK=0X00001;(zK[QK])();local VK=(sK[0x0]);do QK=QK-0X01;end;do nK=nK+1;end;(zK)[1]=VK[0X1][VK[2]];EK=eK[nK];nK=nK+1;if not zK[0x1]then do nK=EK[2];end;end;else local VK=(EK[2]);local aK,MK=VK[9],nil;local gK=#aK;if gK>0X0 then MK={};for wK=1,gK do local rK=aK[wK];do if rK[0X0001]==0 then(MK)[wK-0X1]={zK,rK[2]};else do(MK)[wK-1]=sK[rK[0X002]];end;end;end;end;(K)(mK,MK);end;(zK)[EK[0x3]]=Ri(MK,UK,VK);end;else local VK=(EK[2]);local aK=VK[0X9];local MK=(nil);local gK=#aK;if not(gK>0)then else do MK={};end;for wK=0x01,gK do local rK=aK[wK];do if rK[1]~=0X00 then(MK)[wK-0X1]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X02]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=i[EK[5]](MK);end;else if not(dK<12)then do if dK~=0xD then zK[EK[3]]=UK[EK[0X0007]];else for VK=EK[3],EK[0x2]do zK[VK]=nil;end;end;end;else if dK~=11 then if not(not(zK[EK[0X2]]<zK[EK[0X5]]))then else nK=EK[3];end;else repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0X000)then else local LK=(lK[0X02]);if not aK[LK]then aK[LK]={MK[LK]};end;lK[1]=aK[LK];do lK[2]=1;end;end;end;end;until true;do return;end;end;end;end;end;end;end;else _K=function(...)local QK,zK=0X00,({});local pK=(Q());local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-1;do for EK=0X00,NK do if WK>EK then(zK)[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X00001,NK+0X1)};end;if UK==pK then else _(_K,UK);end;local nK=(1);while true do local EK=eK[nK];local dK=EK[1];nK=nK+1;if not(dK<0X9)then if not(dK<14)then if not(dK>=16)then if dK~=15 then zK[0]=UK[EK[0X7]];EK=eK[nK];do nK=nK+1;end;local MK=(0X2);do(zK)[1]=UK[EK[0X07]];end;nK=nK+0X1;nK=nK+0x1;EK=eK[nK];nK=nK+0X0001;zK[1]=zK[0X1][EK[6]];nK=nK+0X1;local aK=(0X004);local VK=(0X0000);if MK~=0X0 then QK=VK+MK-1;end;local gK,wK=nil,(nil);if MK==0X1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK~=0X1 then do if aK~=0 then gK=VK+aK-2;do QK=gK+1;end;else gK=gK+VK-1;QK=gK;end;end;local lK=0;for LK=VK,gK do do lK=lK+0X01;end;do zK[LK]=wK[lK];end;end;else QK=VK-0X1;end;do nK=nK+0x1;end;nK=nK+0X01;do EK=eK[nK];end;nK=nK+0X0001;VK=0;local rK=(b(function(...)o();for lK,LK in...do o(true,lK,LK);end;end));(rK)(zK[VK],zK[VK+1],zK[VK+0X00002]);QK=VK;zK[VK]=rK;do nK=EK[2];end;else repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0 then local LK=lK[0x00002];if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[0X0001]=aK[LK];lK[2]=0X001;end;end;end;end;until true;return;end;else if dK<0X11 then local VK=EK[0x03];local MK,aK,gK=zK[VK],zK[VK+0X1],(zK[VK+2]);zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);do nK=EK[2];end;else if dK~=0X12 then local VK=(EK[2]);local aK=VK[0X9];local gK,MK=#aK,nil;if gK>0 then MK={};for wK=0X1,gK do local rK=aK[wK];if rK[1]~=0 then do(MK)[wK-1]=sK[rK[2]];end;else(MK)[wK-1]={zK,rK[0X2]};end;end;K(mK,MK);end;zK[EK[3]]=i[EK[0X005]](MK);else for VK=EK[0x3],EK[0X2]do zK[VK]=nil;end;end;end;end;else if not(dK>=0X00b)then if dK~=10 then else zK[EK[3]]=EK[0X07];end;else if not(dK<0Xc)then do if dK==13 then local VK=(EK[0X3]);local MK,aK,gK=zK[VK]();do if not(MK)then else zK[VK+1]=aK;do(zK)[VK+2]=gK;end;do nK=EK[0X2];end;end;end;else(zK)[EK[0x003]]=UK[EK[7]];end;end;else local VK=EK[2];local aK=VK[0X00009];local MK=(nil);local gK=#aK;if gK>0X0 then do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[0X00001]==0x0 then(MK)[wK-1]={zK,rK[2]};else(MK)[wK-0X1]=sK[rK[0X2]];end;end;K(mK,MK);end;(zK)[EK[0x3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=0x4)then do if not(dK>=0X2)then if dK~=1 then(zK)[0X03]=UK[EK[7]];nK=nK+0x01;do nK=nK+0x1;end;nK=nK+0X1;QK=0X3;(zK[QK])();local wK=0X004;QK=QK-1;nK=nK+0X0001;nK=nK+1;EK=eK[nK];nK=nK+0X01;do(zK)[3]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;do(zK)[0X0003]=zK[0X3][EK[0x6]];end;do EK=eK[nK];end;nK=nK+0X1;zK[4]=UK[EK[0x0007]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[4]=zK[0X4][EK[6]];nK=nK+1;nK=nK+1;local lK=(0);EK=eK[nK];local VK=EK[0X2];do nK=nK+1;end;local MK,aK=nil,VK[9];local gK=(#aK);do if not(gK>0X0)then else MK={};for ZK=0x1,gK do local GK=(aK[ZK]);if GK[0X001]==0 then MK[ZK-1]={zK,GK[2]};else MK[ZK-0X01]=sK[GK[0X2]];end;end;(K)(mK,MK);end;end;(zK)[0X05]=Ri(MK,UK,VK);nK=nK+1;local rK=(2);do if rK~=0X0 then QK=wK+rK-1;end;end;local LK,DK=nil,(nil);if rK~=1 then LK,DK=vi(zK[wK](S(zK,wK+1,QK)));else do LK,DK=vi(zK[wK]());end;end;if lK==1 then QK=wK-1;else if lK==0X0 then do LK=LK+wK-1;end;QK=LK;else LK=wK+lK-2;QK=LK+1;end;local ZK=(0);for GK=wK,LK do ZK=ZK+0X01;(zK)[GK]=DK[ZK];end;end;nK=nK+0X001;wK=3;zK[wK](S(zK,wK+1,QK));QK=wK-1;nK=nK+0X0001;do nK=nK+1;end;nK=nK+0X1;repeat local ZK,GK,OK=mK,zK,({});for tK,AK in W,ZK do for jK,FQ in W,AK do if not(FQ[0x0001]==GK and FQ[2]>=0x0)then else local iQ=(FQ[2]);if not OK[iQ]then do(OK)[iQ]={GK[iQ]};end;end;do FQ[1]=OK[iQ];end;do FQ[0X02]=1;end;end;end;end;until true;do EK=eK[nK];end;nK=nK+1;nK=EK[0X2];else(zK)[0X0000]=UK[EK[7]];EK=eK[nK];do nK=nK+0X1;end;do zK[0X1]=UK[EK[0X07]];end;EK=eK[nK];local MK=2;nK=nK+0X1;(zK)[0X0001]=zK[0X0001][EK[0x06]];nK=nK+0X1;local aK=(0x004);local VK=(0);if MK==0x0000 then else do QK=VK+MK-1;end;end;local gK,wK=nil,(nil);if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK==1 then do QK=VK-1;end;else if aK==0 then gK=gK+VK-0X1;QK=gK;else gK=VK+aK-2;do QK=gK+0x1;end;end;local lK=(0);for LK=VK,gK do lK=lK+0X1;(zK)[LK]=wK[lK];end;end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;VK=0;local rK=b(function(...)o();do for lK,LK in...do o(true,lK,LK);end;end;end);(rK)(zK[VK],zK[VK+0x01],zK[VK+2]);do QK=VK;end;(zK)[VK]=rK;nK=EK[2];end;else do if dK~=0X03 then do zK[EK[3]]=zK[EK[0X02]]%zK[EK[5]];end;else(zK)[3]=UK[EK[7]];nK=nK+0X1;nK=nK+1;nK=nK+0X1;do QK=3;end;(zK[QK])();do QK=QK-1;end;do nK=nK+1;end;do nK=nK+0X001;end;EK=eK[nK];nK=nK+1;do(zK)[3]=UK[EK[0x007]];end;do nK=nK+1;end;do nK=nK+1;end;local MK=(nil);EK=eK[nK];nK=nK+1;(zK)[0X3]=zK[0X0003][EK[6]];nK=nK+1;nK=nK+0X01;local lK,wK=0X00,0X4;EK=eK[nK];nK=nK+1;(zK)[0x4]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;do(zK)[4]=zK[4][EK[0x0006]];end;do EK=eK[nK];end;do nK=nK+0x1;end;local VK=(EK[0X0002]);local aK=(VK[0X9]);local gK=(#aK);if gK>0 then MK={};for ZK=0X1,gK do local GK=aK[ZK];if GK[0X001]~=0X0 then(MK)[ZK-0x001]=sK[GK[0X2]];else do MK[ZK-0X00001]={zK,GK[0X2]};end;end;end;(K)(mK,MK);end;zK[0X05]=Ri(MK,UK,VK);nK=nK+1;local rK=(2);if rK~=0 then do QK=wK+rK-0X00001;end;end;local LK,DK=nil,nil;if rK==0X1 then LK,DK=vi(zK[wK]());else LK,DK=vi(zK[wK](S(zK,wK+1,QK)));end;do if lK==1 then QK=wK-0X00001;else if lK~=0 then LK=wK+lK-2;QK=LK+1;else LK=LK+wK-1;QK=LK;end;local ZK=(0X000);for GK=wK,LK do ZK=ZK+1;zK[GK]=DK[ZK];end;end;end;do nK=nK+0x1;end;wK=0X00003;(zK[wK])(S(zK,wK+1,QK));QK=wK-0X1;do nK=nK+1;end;nK=nK+0X0001;nK=nK+0X00001;repeat local ZK,GK=mK,(zK);local OK=({});do for tK,AK in W,ZK do for jK,FQ in W,AK do if FQ[0x1]==GK and FQ[0X2]>=0 then local iQ=FQ[0x2];do if not(not OK[iQ])then else OK[iQ]={GK[iQ]};end;end;FQ[0X1]=OK[iQ];(FQ)[2]=0X1;end;end;end;end;until true;do EK=eK[nK];end;do nK=nK+1;end;do nK=EK[0X2];end;end;end;end;end;else do if dK<0X0006 then do if dK==5 then do nK=EK[2];end;else(zK)[EK[3]]={S({},0x1,EK[2])};end;end;else do if dK>=7 then do if dK==0X8 then do zK[EK[3]]=#zK[EK[2]];end;else zK[EK[3]]=CK[EK[2]];end;end;else if not(zK[EK[0x2]]<=zK[EK[5]])then nK=EK[0X3];end;end;end;end;end;end;end;end;end;end;end;else if SK>=0x21 then if SK~=0X022 then _K=function(...)local nK,zK=0X001,{};local pK=(Q());local CK={[2]=zK,[1]=xK};local QK=0;local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0x01;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;do if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0X01)};end;end;if UK==pK then else _(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[0X001];do nK=nK+0X1;end;if not(dK>=14)then if dK<7 then if dK<3 then if dK<1 then do(zK)[EK[3]]=EK[7];end;else if dK~=0X002 then(zK)[0x3]=UK[EK[0X00007]];local VK=(0X4);EK=eK[nK];nK=nK+0x1;zK[0x4]=UK[EK[0X007]];nK=nK+1;zK[0X005]=zK[1];do nK=nK+0X1;end;local MK=2;do if MK==0 then else QK=VK+MK-0x1;end;end;local aK=0X0;local gK,wK=nil,(nil);if MK~=0x1 then do gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;else gK,wK=vi(zK[VK]());end;if aK~=1 then if aK~=0X0000 then gK=VK+aK-2;QK=gK+1;else gK=gK+VK-1;QK=gK;end;local lK=(0X0);do for LK=VK,gK do lK=lK+0X1;do zK[LK]=wK[lK];end;end;end;else do QK=VK-1;end;end;nK=nK+0x001;VK=0x003;(zK)[VK]=zK[VK](S(zK,VK+0X1,QK));QK=VK;EK=eK[nK];nK=nK+1;zK[4]=UK[EK[0X0007]];do nK=nK+0x01;end;do nK=nK+0x1;end;EK=eK[nK];nK=nK+1;zK[4]=zK[4][EK[0x6]];do EK=eK[nK];end;nK=nK+1;(zK)[0X5]=UK[EK[7]];nK=nK+0x01;do nK=nK+1;end;EK=eK[nK];nK=nK+0X1;(zK)[0x5]=zK[5][EK[6]];nK=nK+0x1;local rK=sK[0X00002];nK=nK+0X00001;nK=nK+0X0001;(zK)[0X00006]=rK[1][rK[2]];do EK=eK[nK];end;nK=nK+0X01;zK[0X007]=zK[0X002][EK[6]];nK=nK+0X1;nK=nK+0X1;nK=nK+0X001;(zK)[6]=zK[6][zK[0X00007]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];do nK=nK+1;end;do zK[6]=zK[0X00006][EK[0X6]];end;nK=nK+0X1;do VK=0X04;end;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0x002]);do QK=VK;end;EK=eK[nK];nK=nK+0x1;if not zK[0X4]then do nK=EK[0X2];end;end;else repeat local gK={};local MK,aK=mK,zK;for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[0X1]==aK and LK[2]>=0X00000)then else local DK=LK[0X2];if not(not gK[DK])then else gK[DK]={aK[DK]};end;do(LK)[1]=gK[DK];end;LK[2]=1;end;end;end;until true;local VK=EK[3];do return S(zK,VK,VK+EK[0X2]-0x2);end;end;end;else if dK>=5 then do if dK~=0x0006 then zK[0]=UK[EK[0X7]];local VK=sK[1];nK=nK+0X1;do nK=nK+0x1;end;do nK=nK+1;end;do zK[1]=VK[1][VK[2]];end;do nK=nK+1;end;local gK=(4);nK=nK+0X1;EK=eK[nK];nK=nK+1;local MK=(0X0);zK[1]=zK[0X1][EK[0x00006]];do nK=nK+0X1;end;nK=nK+1;nK=nK+0X01;local aK=(0X02);if aK~=0X0 then do QK=MK+aK-1;end;end;local wK,rK=nil,(nil);if aK==0X00001 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));end;if gK==0X1 then QK=MK-0x001;else if gK==0X0 then wK=wK+MK-0X1;QK=wK;else wK=MK+gK-0X00002;QK=wK+1;end;local LK=(0);for DK=MK,wK do LK=LK+0X1;zK[DK]=rK[LK];end;end;EK=eK[nK];do nK=nK+1;end;MK=0X0;local lK=(b(function(...)(o)();do for LK,DK in...do(o)(true,LK,DK);end;end;end));lK(zK[MK],zK[MK+0X01],zK[MK+2]);QK=MK;zK[MK]=lK;do nK=EK[2];end;else zK[4]=UK[EK[0x7]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;(zK)[5]=zK[0X2][EK[6]];nK=nK+1;nK=nK+0x0001;local VK=0X4;do nK=nK+1;end;do zK[VK]=zK[VK](zK[VK+0x1]);end;QK=VK;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X0001;if not(not zK[0x4])then else do nK=EK[2];end;end;end;end;else do if dK==4 then else local VK=EK[3];local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;zK[VK]=MK;nK=EK[2];end;end;end;end;else if dK<0xA then if dK<0X8 then zK[EK[3]]=zK[EK[0x0002]]~=zK[EK[5]];else if dK==0X009 then(zK)[EK[3]]=D(zK[EK[0X2]],zK[EK[0x5]]);else do(zK)[7]=UK[EK[7]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;(zK)[7]=zK[0x07][EK[6]];EK=eK[nK];nK=nK+1;do if zK[7]==EK[0X6]then else nK=EK[3];end;end;end;end;else if dK>=12 then if dK==0xd then local VK=(sK[0X3]);zK[5]=VK[1][VK[2]];nK=nK+0X01;nK=nK+1;EK=eK[nK];do nK=nK+1;end;zK[0X5]=zK[0X5][EK[0X06]];nK=nK+0X00001;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;zK[0X05]=zK[5][EK[6]];EK=eK[nK];nK=nK+0x1;(zK)[5]=zK[0X5][EK[0X0006]];EK=eK[nK];nK=nK+0X1;zK[0X00006]=UK[EK[7]];nK=nK+0x0001;nK=nK+0X00001;local MK=6;EK=eK[nK];nK=nK+0X01;(zK)[0X007]=zK[0X2][EK[6]];nK=nK+0x1;(zK)[MK]=zK[MK](zK[MK+1]);QK=MK;do EK=eK[nK];end;nK=nK+1;if not(zK[5]<zK[6])then else nK=EK[3];end;else if zK[EK[2]]~=zK[EK[0x005]]then nK=EK[0X0003];end;end;else if dK==0Xb then zK[0x00]=UK[EK[0X7]];nK=nK+1;do nK=nK+0x00001;end;EK=eK[nK];nK=nK+1;zK[0]=zK[0X0][EK[6]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X001;if not(not zK[0])then else nK=EK[2];end;else repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[0x1]==MK and lK[2]>=0)then else local LK=lK[2];if not(not aK[LK])then else do(aK)[LK]={MK[LK]};end;end;lK[1]=aK[LK];lK[2]=0X01;end;end;end;end;until true;do return;end;end;end;end;end;else if not(dK<21)then if dK>=0X19 then if not(dK>=27)then do if dK==0X001A then if not(EK[7]<=zK[EK[0X5]])then nK=EK[3];end;else for VK=EK[0X3],EK[2]do(zK)[VK]=nil;end;end;end;else if dK~=0x1c then zK[0X4]=UK[EK[7]];EK=eK[nK];nK=nK+0X001;local VK=(4);(zK)[0X5]=zK[2][EK[6]];nK=nK+1;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;do EK=eK[nK];end;nK=nK+0X1;if not(zK[0x004])then else nK=EK[0X2];end;else nK=EK[2];end;end;else do if dK<0X17 then if dK~=0X16 then local VK=EK[0X003];local gK=zK[VK+2];local MK,aK=zK[VK],(zK[VK+1]);zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);do nK=EK[2];end;else local VK=(sK[3]);zK[4]=VK[1][VK[0X2]];EK=eK[nK];nK=nK+1;zK[0X04]=zK[0X4][EK[6]];EK=eK[nK];nK=nK+1;zK[4]=zK[4][EK[0X6]];nK=nK+0x00001;do nK=nK+0x001;end;EK=eK[nK];nK=nK+0X00001;zK[0x04]=zK[0x4][EK[6]];local MK=5;nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;zK[5]=UK[EK[7]];EK=eK[nK];do nK=nK+0X01;end;zK[6]=zK[0x2][EK[6]];do nK=nK+0X1;end;zK[MK]=zK[MK](zK[MK+0X01]);QK=MK;EK=eK[nK];nK=nK+1;if not(not(zK[0x005]<=zK[0X4]))then else nK=EK[0X3];end;end;else if dK~=24 then local VK=EK[3];local MK,aK,gK=zK[VK]();do if not(MK)then else zK[VK+1]=aK;(zK)[VK+2]=gK;do nK=EK[2];end;end;end;else(zK)[EK[0X0003]]=zK[EK[0X00002]]/zK[EK[0X00005]];end;end;end;end;else if dK>=0X00011 then do if dK<0x13 then if dK~=0X012 then zK[4]=UK[EK[0X7]];nK=nK+1;nK=nK+1;nK=nK+1;QK=0X4;(zK[QK])();do QK=QK-1;end;EK=eK[nK];nK=nK+1;local VK=(0X5);(zK)[4]=zK[0X2][EK[0X6]];do nK=nK+0X1;end;nK=nK+1;local MK=2;do EK=eK[nK];end;nK=nK+0X001;do(zK)[5]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;(zK)[6]=EK[0X7];nK=nK+0X1;(zK)[7]=zK[4];nK=nK+1;(zK[VK])(zK[VK+1],zK[VK+2]);QK=VK-0X00001;nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0x001;end;zK[0X5]=UK[EK[0x007]];EK=eK[nK];nK=nK+0x001;zK[6]=UK[EK[0x7]];nK=nK+1;nK=nK+0X1;do nK=nK+0x001;end;zK[0X7]=zK[1];nK=nK+0x0001;do VK=0x6;end;local aK=0;if MK~=0 then do QK=VK+MK-0x1;end;end;local gK,wK=nil,(nil);if MK~=1 then do gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;else gK,wK=vi(zK[VK]());end;if aK~=1 then do if aK~=0X0 then gK=VK+aK-0X2;QK=gK+1;else gK=gK+VK-1;QK=gK;end;end;local rK=0;for lK=VK,gK do rK=rK+0X1;zK[lK]=wK[rK];end;else do QK=VK-0x1;end;end;do nK=nK+1;end;nK=nK+1;nK=nK+1;do VK=0X5;end;do zK[VK]=zK[VK](S(zK,VK+1,QK));end;QK=VK;nK=nK+1;nK=nK+1;nK=nK+0X1;zK[3]=zK[5];EK=eK[nK];nK=nK+0X00001;if zK[0X3]==EK[6]then do nK=EK[0X003];end;end;else local VK=(sK[0]);zK[0]=VK[1][VK[2]];nK=nK+1;nK=nK+0x1;EK=eK[nK];do nK=nK+1;end;if not zK[0X0000]then do nK=EK[0x00002];end;end;end;else do if dK~=0X014 then(zK)[EK[3]]=UK[EK[7]];else zK[EK[3]]={S({},1,EK[2])};end;end;end;end;else do if dK>=0XF then if dK~=16 then local VK=sK[1];zK[0]=VK[0x0001][VK[0x2]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0x0]=zK[0X00][EK[6]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;if zK[0]==EK[6]then nK=EK[3];end;else do zK[0X000]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0X1;(zK)[0x00]=zK[0][EK[6]];nK=nK+0X1;QK=0x0;zK[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+0x01;if not zK[0X0000]then nK=EK[2];end;end;else local VK=(EK[0X2]);local MK=nil;local aK=(VK[9]);local gK=(#aK);if not(gK>0x0)then else MK={};for wK=1,gK do local rK=aK[wK];if rK[0X1]~=0 then MK[wK-0X0001]=sK[rK[0X02]];else(MK)[wK-1]={zK,rK[0X2]};end;end;(K)(mK,MK);end;zK[EK[0x3]]=Ri(MK,UK,VK);end;end;end;end;end;end;end;end;else _K=function(...)local nK,QK,zK=0X0001,0,({});local CK=({[2]=zK,[1]=xK});local pK=Q();local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-1;for EK=0X0,NK do do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X0001];end;end;end;if not PK then do HK=nil;end;elseif YK then do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X1)};end;end;do if UK~=pK then(_)(_K,UK);end;end;do while true do local EK=eK[nK];local dK=EK[1];nK=nK+1;if dK<11 then if dK>=0X005 then if not(dK>=8)then do if dK>=6 then do if dK~=0x7 then local VK=zK[EK[0X2]]/zK[EK[5]];do(zK)[EK[0X3]]=VK-VK%0X1;end;else zK[EK[3]]=UK[EK[0x7]];end;end;else local VK=(sK[0]);zK[0]=VK[1][VK[0X2]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;if not zK[0]then nK=EK[0X2];end;end;end;else if dK<0x9 then(zK)[EK[3]]=EK[0X7];else do if dK==0XA then nK=EK[2];else if zK[EK[0X2]]==zK[EK[5]]then do nK=EK[0X003];end;end;end;end;end;end;else if dK>=0X2 then do if dK<3 then do if zK[EK[0X002]]~=zK[EK[5]]then nK=EK[3];end;end;else if dK==4 then(zK)[EK[3]]=L(zK[EK[2]],zK[EK[0x5]]);else if not(zK[EK[2]]<=zK[EK[5]])then else nK=EK[3];end;end;end;end;else if dK==1 then local VK=(sK[0X1]);(zK)[0]=VK[1][VK[2]];EK=eK[nK];nK=nK+0X1;(zK)[0x0]=zK[0x0][EK[6]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X00001;(zK)[0X00000]=zK[0][EK[6]];nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0X1;if zK[0X0]==EK[6]then else do nK=EK[0X3];end;end;else end;end;end;else if not(dK<16)then if not(dK<0X13)then if dK>=0X014 then do if dK==0X15 then do zK[0]=UK[EK[0X07]];end;nK=nK+0x1;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X0]=zK[0][EK[6]];EK=eK[nK];nK=nK+1;if not(not zK[0])then else nK=EK[2];end;else local VK=EK[0x2];local MK=nil;local aK=VK[9];local gK=#aK;if gK>0X0 then MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-0X1]=sK[rK[0X02]];else do MK[wK-0X1]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;else zK[EK[3]]=EK[0X00002];end;else do if dK>=0X11 then if dK~=0X12 then(zK)[EK[3]]={S({},0X1,EK[0X2])};else do repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[0X1]==MK and lK[2]>=0)then else local LK=(lK[0X02]);if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[2]=0x01;end;end;end;until true;end;return;end;else(zK)[0]=UK[EK[7]];nK=nK+1;do nK=nK+0x001;end;do EK=eK[nK];end;nK=nK+1;zK[0x0]=zK[0][EK[6]];nK=nK+1;QK=0X0;zK[QK]=zK[QK]();nK=nK+0X1;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;if not zK[0X00000]then nK=EK[2];end;end;end;end;else if dK>=13 then do if not(dK<14)then if dK==15 then local VK=EK[3];local MK=b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end);(MK)(zK[VK],zK[VK+0X1],zK[VK+0X2]);QK=VK;do zK[VK]=MK;end;do nK=EK[0x2];end;else for VK=EK[0X0003],EK[0X2]do do(zK)[VK]=nil;end;end;end;else zK[0]=UK[EK[0X7]];local VK=0;do nK=nK+0x00001;end;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+1;end;zK[0x1]=EK[7];nK=nK+0x1;zK[VK](zK[VK+1]);do QK=VK-0X0001;end;do nK=nK+1;end;do nK=nK+0X01;end;EK=eK[nK];nK=nK+0X1;(zK)[0X0]=UK[EK[0X7]];do EK=eK[nK];end;do nK=nK+0X1;end;zK[1]=EK[0X007];nK=nK+1;do VK=0X0;end;zK[VK](zK[VK+0X1]);QK=VK-0X001;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0x1;nK=EK[2];end;end;else if dK==12 then do repeat local MK,aK,gK=mK,zK,{};for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[1]==aK and LK[0x2]>=0)then else local DK=(LK[2]);do if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;end;do LK[0x01]=gK[DK];end;do LK[2]=0X1;end;end;end;end;until true;end;local VK=(EK[0x3]);return S(zK,VK,VK+EK[2]-2);else(zK)[EK[3]]=zK[EK[0X2]]<=zK[EK[5]];end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local CK={[2]=zK,[1]=xK};local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0x00001;local QK=(0x0);for EK=0X000,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X01];end;end;if not PK then HK=nil;elseif not(YK)then else do(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0X1)};end;end;if UK==pK then else _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X1;if not(dK<6)then do if not(dK<9)then if not(dK<10)then if dK==0Xb then else do(zK)[EK[0X3]]=UK[EK[7]];end;end;else zK[EK[3]]=EK[0X7];end;else if dK<7 then do zK[EK[3]]=not zK[EK[0X00002]];end;else do if dK~=8 then nK=EK[0X002];else do(zK)[0]=UK[EK[0x07]];end;EK=eK[nK];nK=nK+1;zK[1]=EK[7];do EK=eK[nK];end;nK=nK+0X1;zK[0X002]=EK[7];EK=eK[nK];nK=nK+0x00001;(zK)[3]=UK[EK[0x7]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[0X4]=UK[EK[0x7]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[5]=UK[EK[7]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;local aK=0;zK[5]=zK[5][EK[0X6]];local VK=(0x3);nK=nK+1;zK[4]=zK[4][zK[0x00005]];nK=nK+1;local MK=(0X002);do if MK==0 then else do QK=VK+MK-1;end;end;end;local gK,wK=nil,nil;do if MK~=0x1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;end;if aK==0X1 then QK=VK-0X001;else if aK~=0 then do gK=VK+aK-2;end;QK=gK+1;else gK=gK+VK-0X1;do QK=gK;end;end;local rK=0;for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;end;nK=nK+1;VK=0X00;(zK[VK])(S(zK,VK+1,QK));do QK=VK-0X00001;end;nK=nK+1;repeat local LK=({});local rK,lK=mK,zK;for DK,ZK in W,rK do do for GK,OK in W,ZK do if not(OK[0X1]==lK and OK[2]>=0X0)then else local tK=OK[0x2];do if not(not LK[tK])then else do(LK)[tK]={lK[tK]};end;end;end;OK[1]=LK[tK];OK[0x02]=0X1;end;end;end;end;until true;do return;end;end;end;end;end;end;else if not(dK>=3)then if dK>=0X1 then if dK~=0X2 then do(zK)[EK[3]]=zK[EK[2]]%zK[EK[0X5]];end;else(zK)[EK[3]]=zK[EK[0X2]]>zK[EK[0X5]];end;else do(zK)[EK[0x00003]]=CK[EK[2]];end;end;else if not(dK<0x4)then if dK~=0x5 then(zK)[EK[0X3]]=zK[EK[0X00002]]-zK[EK[0X5]];else local VK,MK=EK[0X2],(nil);local aK=VK[0X09];local gK=(#aK);if not(gK>0X0)then else MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[1]~=0 then(MK)[wK-1]=sK[rK[2]];else MK[wK-1]={zK,rK[0X00002]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);end;else do(zK)[EK[0X3]]={S({},0X1,EK[0X2])};end;end;end;end;end;end;end;end;end;else if SK<41 then if SK>=38 then if SK<39 then _K=function(...)local nK,zK=1,({});local pK=(Q());local QK,UK,CK=0X0,(pK==z and KK or pK),{[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if WK>EK then do(zK)[EK]=HK[EK+1];end;else do break;end;end;end;if not PK then HK=nil;else if YK then zK[WK]={n=NK>=WK and NK-WK+0x001 or 0X0,S(HK,WK+1,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;while-48660915 do local EK=(eK[nK]);local dK=(EK[0x00001]);nK=nK+1;do if not(dK<17)then if not(dK>=0X1a)then do if not(dK>=0x15)then if dK>=19 then if dK==20 then local VK,MK=4,(zK[3]);do zK[VK+1]=MK;end;do zK[VK]=MK[EK[0X6]];end;EK=eK[nK];nK=nK+1;do(zK)[6]=EK[0X007];end;do nK=nK+0X1;end;do VK=0x4;end;do zK[VK]=zK[VK](zK[VK+1],zK[VK+0x2]);end;QK=VK;do EK=eK[nK];end;nK=nK+1;do if not zK[0X04]then nK=EK[0X02];end;end;else do zK[EK[3]][zK[EK[0X2]]]=zK[EK[5]];end;end;else if dK~=18 then local VK=EK[3];local MK,aK,gK=zK[VK]();if MK then do zK[VK+0X1]=aK;end;(zK)[VK+0X2]=gK;nK=EK[2];end;else repeat local VK,MK=mK,(zK);local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X00001]==MK and lK[0x002]>=0 then local LK=lK[0x2];do if not aK[LK]then aK[LK]={MK[LK]};end;end;(lK)[1]=aK[LK];(lK)[0x2]=0X1;end;end;end;end;until true;do return;end;end;end;else if not(dK<0X17)then if dK>=24 then do if dK==0X19 then zK[0X004]=UK[EK[7]];EK=eK[nK];nK=nK+0X0001;zK[5]=EK[0x0007];nK=nK+1;local VK=(4);zK[6]=zK[0X2];nK=nK+1;zK[VK](zK[VK+1],zK[VK+0x2]);QK=VK-1;EK=eK[nK];do nK=nK+1;end;nK=EK[2];else zK[0X0]=UK[EK[0X0007]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;(zK)[0X0]=zK[0][EK[0X006]];nK=nK+0X0001;nK=nK+1;nK=nK+1;QK=0x0;(zK)[QK]=zK[QK]();do EK=eK[nK];end;nK=nK+1;do if not zK[0]then nK=EK[0x0002];end;end;end;end;else local VK=(sK[0]);do(zK)[0]=VK[0X1][VK[0X2]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not zK[0x00000]then do nK=EK[2];end;end;end;else do if dK==0X0016 then local VK,MK=0X003,zK[0X2];(zK)[VK+1]=MK;do zK[VK]=MK[EK[6]];end;EK=eK[nK];nK=nK+0X1;zK[5]=EK[0X0007];do nK=nK+0x1;end;VK=3;zK[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);QK=VK;EK=eK[nK];nK=nK+1;if not(not zK[3])then else nK=EK[0X0002];end;else local MK=(zK[0X00003]);local VK=(6);do(zK)[VK+0X01]=MK;end;zK[VK]=MK[EK[0x6]];EK=eK[nK];nK=nK+0X01;(zK)[8]=EK[0X7];do nK=nK+0X1;end;VK=0X6;(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+2]);do QK=VK;end;nK=nK+1;do nK=nK+0x01;end;EK=eK[nK];nK=nK+0X001;do if not(not zK[6])then else nK=EK[2];end;end;end;end;end;end;end;else do if not(dK<0X01e)then do if not(dK>=0x20)then if dK~=31 then(zK)[4]=UK[EK[0X7]];do nK=nK+0X1;end;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;zK[5]=zK[3][EK[0X006]];do EK=eK[nK];end;nK=nK+0X0001;do(zK)[5]=zK[5][EK[6]];end;nK=nK+0X1;nK=nK+0X001;local VK=0X0004;EK=eK[nK];nK=nK+1;do(zK)[6]=zK[0X3][EK[0x6]];end;EK=eK[nK];nK=nK+0X01;zK[6]=zK[6][EK[0X6]];do nK=nK+0x00001;end;do(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);end;do QK=VK;end;EK=eK[nK];nK=nK+1;do if zK[0X004]then do nK=EK[2];end;end;end;else do zK[0X0]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;zK[0X001]=UK[EK[0x7]];do EK=eK[nK];end;local VK=(0);do nK=nK+1;end;zK[0X1]=zK[0X1][EK[6]];nK=nK+0X1;do(zK)[VK]=zK[VK](zK[VK+0X1]);end;QK=VK;EK=eK[nK];nK=nK+1;if zK[0]==EK[0x6]then nK=EK[3];end;end;else if dK>=33 then if dK==34 then(zK)[0X4]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0x5]=zK[3][EK[0X006]];do nK=nK+1;end;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+0X1;end;(zK)[5]=zK[0x5][EK[0X0006]];nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X1;end;do zK[0X6]=zK[0X3][EK[6]];end;local VK=4;do EK=eK[nK];end;nK=nK+0X1;zK[6]=zK[6][EK[6]];nK=nK+0X1;nK=nK+0X1;nK=nK+0X0001;do(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0x2]);end;QK=VK;do EK=eK[nK];end;nK=nK+1;if zK[4]then nK=EK[0X02];end;else local VK=EK[0x2];local aK,MK=VK[0X09],(nil);local gK=(#aK);do if not(gK>0)then else MK={};for wK=0X00001,gK do local rK=aK[wK];do if rK[0X1]==0 then MK[wK-0X0001]={zK,rK[0X2]};else do(MK)[wK-1]=sK[rK[0X2]];end;end;end;end;K(mK,MK);end;end;(zK)[EK[3]]=i[EK[0X0005]](MK);end;else nK=EK[2];end;end;end;else if dK<0X1c then if dK==0X0001B then local MK=(zK[3]);local VK=(6);(zK)[VK+0x001]=MK;zK[VK]=MK[EK[0X6]];EK=eK[nK];nK=nK+1;do(zK)[8]=EK[7];end;do nK=nK+0X01;end;do VK=6;end;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;do nK=nK+1;end;nK=nK+0x1;EK=eK[nK];nK=nK+1;if not zK[6]then nK=EK[0X00002];end;else if zK[EK[2]]<zK[EK[5]]then nK=EK[0X003];end;end;else if dK==29 then(zK)[EK[3]]=-zK[EK[0X00002]];else local VK,MK=EK[3],EK[2];QK=VK+MK-0X00001;repeat local aK,gK=mK,zK;local wK=({});for rK,lK in W,aK do for LK,DK in W,lK do if not(DK[0x1]==gK and DK[0x00002]>=0x0)then else local ZK=(DK[0x2]);if not wK[ZK]then wK[ZK]={gK[ZK]};end;do DK[1]=wK[ZK];end;(DK)[2]=0x0001;end;end;end;until true;return zK[VK](S(zK,VK+1,QK));end;end;end;end;end;elseif not(dK<0X8)then if not(dK>=12)then if not(dK<0X000a)then if dK~=11 then zK[EK[0x00003]]=zK[EK[0x2]]-zK[EK[5]];else(zK)[EK[3]]={S({},0X01,EK[2])};end;else do if dK~=0X0009 then zK[EK[0x3]]=EK[7];else do zK[EK[0x003]]=w(zK[EK[0X2]],zK[EK[5]]);end;end;end;end;else if not(dK<0xe)then if dK<15 then do(zK)[EK[0X003]]=CK[EK[2]];end;else if dK~=16 then zK[4]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X00001;(zK)[5]=zK[0X3][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[5]=zK[5][EK[0x00006]];end;EK=eK[nK];do nK=nK+1;end;do zK[6]=zK[3][EK[6]];end;nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;local VK=0x004;nK=nK+1;do zK[0X00006]=zK[6][EK[6]];end;EK=eK[nK];nK=nK+0X1;zK[6]=zK[6]+EK[0X6];nK=nK+1;do zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);end;do QK=VK;end;do EK=eK[nK];end;nK=nK+0X01;do if not(not zK[4])then else nK=EK[0X0002];end;end;else(zK)[0X00]=UK[EK[7]];EK=eK[nK];nK=nK+1;zK[0]=zK[0][EK[6]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;if not(not zK[0x0])then else nK=EK[0X2];end;end;end;else if dK==13 then(zK)[0X0]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X1;nK=nK+0X1;do QK=0;end;(zK[QK])();QK=QK-1;EK=eK[nK];nK=nK+0X1;zK[0]=UK[EK[0X0007]];do EK=eK[nK];end;nK=nK+0X1;(zK)[1]=EK[0X7];EK=eK[nK];nK=nK+0x1;(zK)[0x2]=UK[EK[7]];do nK=nK+0x0001;end;local VK=0x000;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;(zK)[2]=zK[0x002][EK[6]];nK=nK+0x1;(zK)[VK]=zK[VK](zK[VK+1],zK[VK+0X00002]);QK=VK;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;do if not(not zK[0X00000])then else nK=EK[0X002];end;end;else zK[0X0]=UK[EK[7]];local VK=sK[0X0001];do nK=nK+0X1;end;local MK=(1);zK[1]=VK[1][VK[2]];do EK=eK[nK];end;nK=nK+1;local aK=(zK[1]);do(zK)[MK+0x01]=aK;end;(zK)[MK]=aK[EK[6]];EK=eK[nK];do nK=nK+0X001;end;zK[0x0003]=EK[7];nK=nK+1;MK=1;do(zK)[MK]=zK[MK](zK[MK+1],zK[MK+0X2]);end;do QK=MK;end;nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;do MK=0X1;end;aK=zK[0X1];do zK[MK+0x1]=aK;end;(zK)[MK]=aK[EK[6]];nK=nK+0x1;MK=1;local gK=2;if gK~=0 then QK=MK+gK-1;end;local rK,lK=nil,nil;local wK=(0);if gK==0X1 then rK,lK=vi(zK[MK]());else rK,lK=vi(zK[MK](S(zK,MK+0X1,QK)));end;do if wK~=1 then do if wK~=0X0 then rK=MK+wK-2;QK=rK+1;else rK=rK+MK-1;QK=rK;end;end;local DK=0;for ZK=MK,rK do DK=DK+1;do(zK)[ZK]=lK[DK];end;end;else QK=MK-0X00001;end;end;nK=nK+1;MK=0X0;gK=0X0;do wK=4;end;if gK~=0 then QK=MK+gK-0X1;end;rK,lK=nil;do if gK~=0X0001 then rK,lK=vi(zK[MK](S(zK,MK+0X01,QK)));else do rK,lK=vi(zK[MK]());end;end;end;do if wK==1 then do QK=MK-1;end;else if wK~=0X0 then do rK=MK+wK-0X2;end;QK=rK+0x1;else rK=rK+MK-1;QK=rK;end;local DK=(0);do for ZK=MK,rK do do DK=DK+1;end;(zK)[ZK]=lK[DK];end;end;end;end;EK=eK[nK];nK=nK+0X1;do MK=0X0;end;local LK=(b(function(...)o();for DK,ZK in...do o(true,DK,ZK);end;end));(LK)(zK[MK],zK[MK+0X1],zK[MK+2]);QK=MK;zK[MK]=LK;nK=EK[0X2];end;end;end;else do if not(dK>=0X04)then do if dK<2 then if dK~=1 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else zK[EK[3]]=UK[EK[7]];end;else if dK~=3 then do zK[EK[3]]=zK[EK[2]]/zK[EK[0X00005]];end;else end;end;end;else if dK>=0X006 then if dK==0X7 then local VK=EK[2];local aK=VK[9];local MK=nil;local gK=#aK;if gK>0X000 then MK={};for wK=1,gK do local rK=aK[wK];if rK[1]~=0X00 then do MK[wK-0X1]=sK[rK[0X2]];end;else(MK)[wK-1]={zK,rK[0X2]};end;end;(K)(mK,MK);end;do zK[EK[0X03]]=Ri(MK,UK,VK);end;else zK[0X0]=UK[EK[7]];EK=eK[nK];nK=nK+0X1;(zK)[0]=zK[0][EK[0X6]];nK=nK+1;QK=0;(zK[QK])();local MK=(0);QK=QK-0x1;nK=nK+1;nK=nK+1;nK=nK+0X1;local VK=sK[1];do zK[0X0]=VK[1][VK[0x2]];end;do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+0X01;local aK=zK[0];zK[MK+0x1]=aK;zK[MK]=aK[EK[0X6]];do EK=eK[nK];end;nK=nK+1;(zK)[0X2]=EK[7];nK=nK+0X1;MK=0;zK[MK]=zK[MK](zK[MK+1],zK[MK+0X2]);QK=MK;EK=eK[nK];do nK=nK+0X1;end;if not zK[0X0]then nK=EK[0x2];end;end;else if dK==0X5 then local VK=4;local MK=zK[0X2];zK[VK+0x1]=MK;zK[VK]=MK[EK[0X6]];EK=eK[nK];do nK=nK+0X1;end;(zK)[0x6]=EK[0x00007];nK=nK+0X1;VK=4;do(zK)[VK]=zK[VK](zK[VK+0X1],zK[VK+0x0002]);end;do QK=VK;end;do EK=eK[nK];end;nK=nK+1;if not zK[4]then nK=EK[2];end;else(zK)[0x00004]=UK[EK[7]];nK=nK+1;local VK=(0X5);nK=nK+1;do EK=eK[nK];end;nK=nK+1;local MK=(zK[0X3]);do(zK)[VK+0X0001]=MK;end;do zK[VK]=MK[EK[6]];end;EK=eK[nK];nK=nK+1;zK[7]=EK[7];nK=nK+0X1;VK=5;local aK=(sK[2]);zK[VK]=zK[VK](zK[VK+1],zK[VK+2]);QK=VK;nK=nK+0X1;nK=nK+0x01;EK=eK[nK];nK=nK+0X1;zK[5]=zK[5][EK[6]];nK=nK+0X1;do nK=nK+1;end;do nK=nK+0X01;end;VK=4;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;do nK=nK+0X1;end;do(zK)[0x5]=aK[0X1][aK[0X2]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do zK[0X00005]=zK[0x5][EK[0x6]];end;EK=eK[nK];do nK=nK+1;end;if zK[0X4]==zK[0X5]then else do nK=EK[3];end;end;end;end;end;end;end;end;end;end;else do if SK==40 then _K=function(...)local nK=(1);local zK=({});local QK=(0);local pK=Q();local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});NK=NK-0X0001;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;local UK=((pK==z and KK or pK));if not PK then do HK=nil;end;else if not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+1 or 0X00000,S(HK,WK+1,NK+1)};end;end;end;do if UK~=pK then _(_K,UK);end;end;while 0.1889675129180921 do local EK=eK[nK];local dK=(EK[0X1]);nK=nK+1;do if dK>=14 then if not(dK<21)then if not(dK<0X000018)then if not(dK<0X001a)then if dK~=0x00001B then local VK=(EK[2]);local MK=nil;local aK=VK[9];local gK=#aK;if gK>0X000 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0x001]==0x0 then do MK[wK-0X01]={zK,rK[2]};end;else MK[wK-0X00001]=sK[rK[2]];end;end;K(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;else do(zK)[3]=UK[EK[7]];end;local MK,VK=sK[1],0x3;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0X4]=EK[7];nK=nK+1;zK[VK]=zK[VK](zK[VK+0X00001]);QK=VK;nK=nK+1;nK=nK+1;nK=nK+0x0001;zK[4]=MK[0X1][MK[2]];do nK=nK+1;end;nK=nK+0X001;nK=nK+0X1;zK[0X04]=zK[0X4][zK[2]];EK=eK[nK];do nK=nK+1;end;zK[0X04]=zK[0X4][EK[6]];nK=nK+0X1;do nK=nK+1;end;do EK=eK[nK];end;do nK=nK+1;end;if not(not(zK[4]<=zK[0X3]))then else nK=EK[3];end;end;else if dK~=0x019 then zK[EK[0X3]]={S({},0X1,EK[2])};else zK[EK[0x3]]=zK[EK[0X02]]>=zK[EK[5]];end;end;else if dK>=0X016 then if dK~=0X17 then do if zK[EK[2]]<zK[EK[0x005]]then nK=EK[0X3];end;end;else local VK=sK[0x001];zK[4]=VK[1][VK[2]];nK=nK+1;nK=nK+1;nK=nK+0X1;do(zK)[4]=zK[4][zK[0x00002]];end;nK=nK+0X1;nK=nK+0X1;EK=eK[nK];nK=nK+1;zK[4]=zK[0X004][EK[0X6]];EK=eK[nK];nK=nK+0X1;(zK)[0X5]=EK[7];EK=eK[nK];nK=nK+0x1;(zK)[0X6]=UK[EK[7]];EK=eK[nK];do nK=nK+0X0001;end;zK[7]=EK[0x007];nK=nK+1;(zK)[0x8]=zK[4];do nK=nK+0X1;end;(zK)[0X9]=zK[0X5];local MK=6;nK=nK+1;QK=MK+0x04-0X1;(zK[MK])(S(zK,MK+0X0001,QK));do QK=MK-0X1;end;nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+1;nK=EK[0X02];end;else nK=EK[2];end;end;else if dK>=17 then do if not(dK>=19)then if dK~=0x12 then else do(zK)[0X007]=EK[0X0007];end;nK=nK+0X1;(zK)[3]=zK[0X007];EK=eK[nK];nK=nK+1;nK=EK[2];end;else if dK==0x14 then for VK=EK[0X00003],EK[2]do(zK)[VK]=nil;end;else zK[0]=UK[EK[0X00007]];local VK=(0x0);EK=eK[nK];nK=nK+1;(zK)[1]=UK[EK[0x7]];EK=eK[nK];nK=nK+1;do(zK)[0X1]=zK[0X1][EK[0X6]];end;nK=nK+1;local MK=(0x2);if MK~=0 then do QK=VK+MK-0X0001;end;end;local aK,gK,wK=0X4,nil,(nil);if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+0X0001,QK)));else gK,wK=vi(zK[VK]());end;if aK~=0x1 then if aK==0X0 then do gK=gK+VK-1;end;QK=gK;else gK=VK+aK-0X02;QK=gK+1;end;local lK=0x0;for LK=VK,gK do lK=lK+0X01;(zK)[LK]=wK[lK];end;else QK=VK-0X1;end;EK=eK[nK];nK=nK+0X1;do VK=0;end;local rK=(b(function(...)o();do for lK,LK in...do o(true,lK,LK);end;end;end));(rK)(zK[VK],zK[VK+1],zK[VK+0x2]);QK=VK;zK[VK]=rK;nK=EK[2];end;end;end;else do if not(dK>=15)then do(zK)[EK[0X0003]]=zK[EK[2]]*zK[EK[0X5]];end;else if dK~=0X10 then do if not(not zK[EK[3]])then else nK=EK[2];end;end;else(zK)[EK[0X3]]=g(zK[EK[2]],zK[EK[0X5]]);end;end;end;end;end;else if not(dK>=0X7)then do if dK>=3 then if not(dK>=0X5)then if dK~=0X4 then zK[3]=EK[0X0007];local VK=sK[0x1];EK=eK[nK];do nK=nK+1;end;local MK=(4);do(zK)[0X4]=UK[EK[7]];end;nK=nK+0X01;zK[0x5]=VK[1][VK[2]];nK=nK+0X001;do nK=nK+0X1;end;nK=nK+0X0001;(zK)[5]=zK[5][zK[0X0002]];EK=eK[nK];local gK=4;nK=nK+1;zK[0X5]=zK[0X5][EK[0X6]];nK=nK+0X1;local aK=0X2;if aK~=0X00 then QK=MK+aK-0x01;end;local wK,rK=nil,(nil);if aK==1 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;if gK~=1 then if gK==0X000 then wK=wK+MK-1;QK=wK;else do wK=MK+gK-0X2;end;do QK=wK+1;end;end;local LK=0;do for DK=MK,wK do do LK=LK+0x1;end;(zK)[DK]=rK[LK];end;end;else QK=MK-0X1;end;EK=eK[nK];nK=nK+1;MK=4;local lK=(b(function(...)o();for LK,DK in...do(o)(true,LK,DK);end;end));lK(zK[MK],zK[MK+1],zK[MK+2]);QK=MK;zK[MK]=lK;nK=EK[2];else do repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[0X2]);do if not aK[LK]then do(aK)[LK]={MK[LK]};end;end;end;do(lK)[0X1]=aK[LK];end;lK[2]=1;end;end;end;end;until true;end;return;end;else if dK==6 then local VK=(EK[3]);local MK,aK,gK=zK[VK]();if MK then do zK[VK+0X01]=aK;end;(zK)[VK+2]=gK;nK=EK[0x2];end;else(zK)[EK[3]]=EK[0x7];end;end;else if dK>=1 then do if dK~=0X0002 then zK[7]=UK[EK[7]];local VK=(0x7);do nK=nK+0X00001;end;nK=nK+1;nK=nK+0X01;zK[0X8]=zK[5];do nK=nK+0X0001;end;do(zK)[VK]=zK[VK](zK[VK+0X00001]);end;QK=VK;EK=eK[nK];nK=nK+0X1;do if not(zK[7]<zK[6])then nK=EK[3];end;end;else zK[0]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;do(zK)[0]=zK[0][EK[6]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X00001;end;if not zK[0X0000]then nK=EK[2];end;end;end;else(zK)[EK[3]]=UK[EK[7]];end;end;end;else do if not(dK<10)then do if not(dK>=0Xc)then if dK==0X000b then local VK=zK[EK[0X002]]/zK[EK[5]];do(zK)[EK[0X03]]=VK-VK%0X0001;end;else(zK)[0]=UK[EK[0x7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;do zK[0X0]=zK[0X000][EK[6]];end;nK=nK+1;(zK)[0X0000]=#zK[0x0];do EK=eK[nK];end;nK=nK+0X00001;if not(EK[7]<=zK[0])then nK=EK[0x03];end;end;else if dK~=0Xd then local VK=sK[EK[2]];zK[EK[0X3]]=VK[1][VK[2]];else local VK=(EK[3]);local MK=(zK[VK]);local gK=(zK[VK+2]);local aK=zK[VK+0x1];(zK)[VK]=b(function()for wK=MK,aK,gK do(o)(true,wK);end;end);nK=EK[2];end;end;end;else if not(dK>=0X8)then local VK=(EK[3]);for MK=VK,VK+(EK[2]-1)do do(zK)[MK]=HK[WK+(MK-VK)+0X001];end;end;else if dK==9 then do zK[EK[0x3]]=zK[EK[2]]-zK[EK[5]];end;else(zK)[EK[3]]=true;end;end;end;end;end;end;end;end;end;else do _K=function(...)local QK=(0X0);local nK,zK=0X1,({});local CK={[2]=zK,[1]=xK};local pK=Q();local NK,HK=vi(...);local UK=((pK==z and KK or pK));do NK=NK-1;end;do for EK=0X0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;end;if not PK then HK=nil;else if not(YK)then else do zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+1)};end;end;end;do if UK==pK then else _(_K,UK);end;end;while 0.2470624970922055 do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if not(dK<8)then if not(dK<0x0c)then if not(dK<0Xe)then do if dK==15 then(zK)[EK[0X0003]]={S({},0X00001,EK[2])};else do zK[EK[3]]=not zK[EK[2]];end;end;end;else if dK~=13 then zK[EK[0X0003]]=l(zK[EK[2]]);else if zK[EK[0x2]]==zK[EK[5]]then else nK=EK[3];end;end;end;else if dK<0X00A then if dK~=0x09 then if not(zK[EK[2]]<zK[EK[5]])then nK=EK[3];end;else(zK)[EK[3]]=zK[EK[2]]~=zK[EK[5]];end;else if dK~=0X0000B then else(zK)[0x1]=UK[EK[7]];do nK=nK+1;end;(zK)[0X2]=zK[0X0];do EK=eK[nK];end;do nK=nK+0X1;end;(zK[0x001])[EK[0X7]]=zK[0x2];nK=nK+0X1;repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0 then local LK=lK[0x2];do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;lK[1]=aK[LK];do lK[0X002]=0X001;end;end;end;end;until true;return;end;end;end;else if dK<0X4 then if not(dK>=2)then if dK==0X1 then repeat local VK,MK,aK=mK,zK,EK[0X003];local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if LK[1]==MK and LK[0X2]>=aK then local DK=LK[0X2];if not gK[DK]then gK[DK]={MK[DK]};end;(LK)[0X1]=gK[DK];(LK)[0X0002]=1;end;end;end;until true;else nK=EK[0x2];end;else do if dK==0X3 then do(zK)[EK[0x0003]]=w(zK[EK[0X2]],zK[EK[5]]);end;else zK[EK[3]]=-zK[EK[2]];end;end;end;else if dK>=6 then if dK==7 then if not(zK[EK[0X002]]<=zK[EK[0x5]])then nK=EK[0X3];end;else(zK)[EK[0X3]]=EK[7];end;else if dK~=0X05 then local VK=EK[2];local aK,MK=VK[0x9],(nil);local gK=#aK;if not(gK>0X0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[1]==0x0 then do(MK)[wK-0x001]={zK,rK[0x2]};end;else MK[wK-0X00001]=sK[rK[0X00002]];end;end;(K)(mK,MK);end;do(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else zK[EK[3]]=UK[EK[7]];end;end;end;end;end;end;end;end;end;end;else do if SK<0X24 then _K=function(...)local nK,zK=1,{};local pK=(Q());local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);do NK=NK-0x1;end;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;local QK,UK=0,(pK==z and KK or pK);if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0x001,NK+0X1)};end;end;do if UK==pK then else(_)(_K,UK);end;end;while'\040\VN'do local EK=(eK[nK]);local dK=EK[0X1];nK=nK+1;do if not(dK>=9)then if dK<0X004 then if dK<2 then do if dK~=0x1 then local VK,MK=EK[0X00003],EK[2];QK=VK+MK-1;repeat local aK,gK=mK,(zK);local wK={};do for rK,lK in W,aK do for LK,DK in W,lK do if DK[0X0001]==gK and DK[0X2]>=0X000 then local ZK=(DK[0X002]);do if not(not wK[ZK])then else wK[ZK]={gK[ZK]};end;end;DK[1]=wK[ZK];do(DK)[0X00002]=1;end;end;end;end;end;until true;return zK[VK](S(zK,VK+0X00001,QK));else(zK)[1]=UK[EK[7]];nK=nK+0x00001;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;if zK[0X0001]==EK[0X6]then else nK=EK[0X3];end;end;end;elseif dK==0x0003 then do(zK)[0X0001]=UK[EK[0x00007]];end;EK=eK[nK];nK=nK+0X001;zK[1]=zK[0X001][EK[0X6]];local VK=(sK[0X0000]);nK=nK+0X1;zK[2]=VK[1][VK[0X2]];EK=eK[nK];nK=nK+0X0001;do zK[0X1][zK[0X2]]=EK[6];end;EK=eK[nK];do nK=nK+0X1;end;nK=EK[0X002];else local VK=(EK[0X002]);local MK=nil;local aK=(VK[9]);local gK=(#aK);if gK>0x0 then MK={};for wK=1,gK do local rK=aK[wK];do if rK[1]==0X00 then MK[wK-1]={zK,rK[2]};else(MK)[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;do zK[EK[0X3]]=Ri(MK,UK,VK);end;end;else do if not(dK<0x6)then if dK>=7 then if dK~=0X8 then(zK)[EK[0X3]]=UK[EK[0X7]];else(zK)[EK[0x3]]=EK[0X007];end;else(zK)[1]=UK[EK[7]];local VK=(0X1);do EK=eK[nK];end;nK=nK+0X001;do zK[0X2]=EK[0x7];end;do nK=nK+0X1;end;zK[VK](zK[VK+0x1]);QK=VK-1;do EK=eK[nK];end;do nK=nK+0X01;end;nK=EK[0X0002];end;else do if dK==5 then(zK)[EK[3]]=zK[EK[2]]*zK[EK[5]];else nK=EK[2];end;end;end;end;end;else if dK>=14 then do if dK<16 then do if dK~=0xF then local VK=(EK[0X0003]);local MK,aK=zK[VK]();do if not(MK)then else for gK=1,EK[0x5]do zK[VK+gK]=aK[gK];end;nK=EK[2];end;end;else(zK)[1]=UK[EK[7]];EK=eK[nK];local VK=(sK[0x0]);nK=nK+1;zK[1]=zK[1][EK[6]];nK=nK+1;(zK)[2]=VK[0X1][VK[0x2]];nK=nK+1;nK=nK+1;nK=nK+0X0001;(zK)[0x3]=zK[0X00000];EK=eK[nK];do nK=nK+1;end;if zK[0X3]then nK=EK[2];end;end;end;else if dK<0X0011 then local VK=(EK[3]);local MK=((EK[5]-1)*0x0032);local aK=(zK[VK]);do for gK=1,EK[0x2]do aK[MK+gK]=zK[VK+gK];end;end;else if dK==0X12 then local MK=(zK[EK[0X2]]);local VK=EK[3];zK[VK+0X1]=MK;do zK[VK]=MK[EK[0X6]];end;else for VK=EK[3],EK[0X002]do do(zK)[VK]=nil;end;end;end;end;end;end;elseif dK>=0XB then if not(dK>=12)then(zK)[1]=UK[EK[0X007]];local VK=(1);nK=nK+1;(zK)[2]=zK[0];nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;nK=nK+1;nK=nK+0x00001;EK=eK[nK];do nK=nK+0X1;end;if zK[0X1]~=EK[6]then nK=EK[3];end;else if dK==13 then do zK[EK[0x0003]]={S({},0X1,EK[0X2])};end;else zK[EK[0x3]][zK[EK[0X2]]]=zK[EK[5]];end;end;else if dK~=0Xa then else(zK)[1]=UK[EK[7]];nK=nK+0X1;nK=nK+0X1;nK=nK+0X0001;do QK=0X1;end;(zK[QK])();QK=QK-0x0001;nK=nK+0x00001;nK=nK+0X1;nK=nK+0X00001;repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[0x2]>=0X0000 then local LK=lK[0x0002];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[1]=aK[LK];lK[2]=1;end;end;end;until true;return;end;end;end;end;end;end;else do if SK~=0X00025 then _K=function(...)local zK=({});local nK=1;local pK=(Q());local CK=({[2]=zK,[1]=xK});local UK=(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;do for EK=0x00,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;end;if not PK then HK=nil;else if YK then do zK[WK]={n=NK>=WK and NK-WK+0X1 or 0x00000,S(HK,WK+1,NK+0X1)};end;end;end;if UK==pK then else(_)(_K,UK);end;local QK=0;repeat local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0x1;if not(dK>=6)then if dK>=3 then if dK>=0X4 then do if dK==0X5 then do nK=EK[2];end;else zK[EK[0X3]]=UK[EK[0X7]];end;end;else do if zK[EK[3]]then nK=EK[0X2];end;end;end;else if not(dK<1)then if dK~=0X02 then if zK[EK[2]]~=zK[EK[0X0005]]then nK=EK[0X3];end;else end;else do if not(zK[EK[0X002]]<=zK[EK[0X0005]])then else nK=EK[3];end;end;end;end;else if not(dK>=0X09)then if not(dK>=7)then zK[1]=zK[0X00];EK=eK[nK];do nK=nK+0x1;end;UK[EK[0X007]]=zK[1];do nK=nK+1;end;repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[0X0002]>=0x0 then local LK=lK[2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[1]=aK[LK];lK[0x002]=1;end;end;end;until'\033+}\071Y\*~\111';return;else do if dK==0X008 then local VK=EK[2];local aK,MK=VK[0x9],nil;local gK=#aK;if gK>0 then MK={};for wK=0X01,gK do local rK=aK[wK];if rK[1]==0X0 then do MK[wK-1]={zK,rK[0X2]};end;else do MK[wK-1]=sK[rK[0X2]];end;end;end;(K)(mK,MK);end;(zK)[EK[0X00003]]=Ri(MK,UK,VK);else do(zK)[EK[0X3]]=zK[EK[0X2]]^zK[EK[0X5]];end;end;end;end;else do if dK>=0Xb then do if dK~=0XC then(zK)[EK[3]]={S({},0X001,EK[0X2])};else(zK)[EK[3]]=EK[7];end;end;elseif dK~=0X0a then local VK=(zK[EK[0X00002]]/zK[EK[5]]);(zK)[EK[3]]=VK-VK%1;else zK[EK[0X3]]=zK[EK[2]]>zK[EK[5]];end;end;end;end;until false;end;else do _K=function(...)local nK,zK,QK=1,{},0X0;local CK=({[2]=zK,[1]=xK});local pK=Q();local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;else if not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X000,S(HK,WK+0X1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while 0.4858761444356815 do local EK=(eK[nK]);local dK=EK[1];nK=nK+1;do if dK>=6 then if not(dK<9)then if dK>=10 then if dK~=11 then zK[EK[3]]=UK[EK[7]];else do for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;end;end;else nK=EK[2];end;else if not(dK<7)then do if dK~=8 then do zK[EK[0x3]]=r(zK[EK[0X2]],zK[EK[0X5]]);end;else do zK[EK[0X03]]=zK[EK[2]]-zK[EK[0X5]];end;end;end;else(zK)[EK[0X3]]=EK[0X7];end;end;else do if not(dK>=0x003)then do if not(dK>=0X01)then local MK=(EK[0X002]);local VK=EK[0X3];if MK==0 then else do QK=VK+MK-1;end;end;local aK,gK,wK=EK[0X5],nil,nil;if MK~=0x00001 then gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));else do gK,wK=vi(zK[VK]());end;end;if aK~=0X1 then if aK==0X0 then gK=gK+VK-0X1;QK=gK;else do gK=VK+aK-2;end;QK=gK+1;end;local rK=(0);for lK=VK,gK do rK=rK+1;zK[lK]=wK[rK];end;else do QK=VK-1;end;end;else if dK==0x002 then(zK)[0X0]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[1]=EK[0X07];nK=nK+0X1;local VK=(sK[0]);do zK[0X002]=VK[1][VK[0X2]];end;do nK=nK+0X0001;end;local MK=(0X0);(zK[MK])(zK[MK+1],zK[MK+0x002]);QK=MK-1;nK=nK+1;nK=nK+0X01;nK=nK+0X1;repeat local aK,gK=mK,(zK);local wK={};for rK,lK in W,aK do for LK,DK in W,lK do if DK[0X01]==gK and DK[2]>=0 then local ZK=(DK[2]);if not wK[ZK]then wK[ZK]={gK[ZK]};end;DK[1]=wK[ZK];DK[0X2]=1;end;end;end;until true;do return;end;else local VK=(EK[2]);local aK,MK=VK[0x9],(nil);local gK=#aK;if not(gK>0)then else MK={};for wK=1,gK do local rK=(aK[wK]);if rK[1]==0 then do(MK)[wK-0X00001]={zK,rK[2]};end;else MK[wK-0X1]=sK[rK[2]];end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=4)then repeat local MK,aK=mK,(zK);local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[1]==aK and LK[0X00002]>=0)then else local DK=(LK[0X0002]);do if not(not gK[DK])then else gK[DK]={aK[DK]};end;end;LK[1]=gK[DK];do LK[0X2]=0X1;end;end;end;end;until true;local VK=EK[0X3];return S(zK,VK,VK+EK[2]-2);else do if dK==0X5 then zK[EK[3]]={S({},1,EK[0X2])};else end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else do if not(SK>=44)then if not(SK>=42)then _K=function(...)local zK={};local nK=(1);local pK=Q();local UK=(pK==z and KK or pK);local QK=(0x00);local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else break;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;if UK==pK then else _(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK<0X7)then if dK<0xb then do if dK>=9 then if dK~=0Xa then zK[EK[0x0003]]=UK[EK[7]];else local VK=EK[0x003];for MK=VK,VK+(EK[2]-0X1)do zK[MK]=HK[WK+(MK-VK)+0X1];end;end;else if dK==8 then repeat local MK,aK=mK,zK;local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do do if not(LK[0X1]==aK and LK[2]>=0X00)then else local DK=(LK[0x2]);do if not gK[DK]then gK[DK]={aK[DK]};end;end;do(LK)[0x01]=gK[DK];end;do(LK)[2]=1;end;end;end;end;end;until true;local VK=(EK[3]);return S(zK,VK,VK+EK[0X02]-2);else(zK)[0X001]=UK[EK[7]];do nK=nK+1;end;(zK)[2]=zK[0];do EK=eK[nK];end;nK=nK+1;zK[1][EK[0x7]]=zK[2];local wK=(1);EK=eK[nK];do nK=nK+1;end;zK[1]=UK[EK[7]];nK=nK+0X1;do nK=nK+0x01;end;nK=nK+0X01;QK=0X01;(zK[QK])();do QK=QK-0x0001;end;EK=eK[nK];do nK=nK+1;end;(zK)[1]=UK[EK[7]];nK=nK+0X1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+0x00001;(zK)[1]=zK[0X1][EK[6]];do EK=eK[nK];end;local VK=(EK[2]);nK=nK+0X01;local MK=(nil);local aK=VK[0X09];local gK=#aK;do if gK>0 then MK={};for rK=1,gK do local lK=(aK[rK]);if lK[0X1]~=0 then(MK)[rK-1]=sK[lK[0X2]];else MK[rK-0X0001]={zK,lK[0X2]};end;end;K(mK,MK);end;end;(zK)[2]=Ri(MK,UK,VK);nK=nK+0x001;(zK[wK])(zK[wK+1]);QK=wK-0X1;nK=nK+1;repeat local rK,lK=mK,zK;local LK=({});for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[2]>=0 then local tK=OK[0x2];if not(not LK[tK])then else LK[tK]={lK[tK]};end;OK[1]=LK[tK];OK[2]=1;end;end;end;until true;return;end;end;end;else if not(dK<0X0000d)then do if dK~=0XE then do(zK)[EK[3]]=zK[EK[2]]+zK[EK[0X05]];end;else local VK=(zK[EK[2]]/zK[EK[0X0005]]);(zK)[EK[0X3]]=VK-VK%1;end;end;else if dK==12 then zK[EK[0X0003]]=EK[0x7];else zK[EK[3]]={S({},0X1,EK[0X2])};end;end;end;else if not(dK<0X3)then do if dK<5 then if dK~=0x04 then if not(zK[EK[2]]<zK[EK[0X5]])then else nK=EK[0X3];end;else zK[EK[3]]=zK[EK[2]]<zK[EK[5]];end;else if dK~=6 then local VK=EK[3];local MK=zK[EK[2]];zK[VK+1]=MK;zK[VK]=MK[EK[0X6]];else end;end;end;else do if dK>=1 then if dK~=2 then nK=EK[0X0002];else zK[EK[3]]=zK[EK[2]]==zK[EK[5]];end;else local VK=EK[2];local aK=(VK[9]);local gK,MK=#aK,(nil);if not(gK>0x0)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[1]==0 then MK[wK-0X1]={zK,rK[0X00002]};else do MK[wK-1]=sK[rK[0X002]];end;end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;end;end;end;end;else if SK~=0X00002B then _K=function(...)local nK=(1);local zK=({});local pK=(Q());local UK=(pK==z and KK or pK);local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});local QK=0X0000;do NK=NK-1;end;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X1];else do break;end;end;end;end;if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X00001 or 0,S(HK,WK+0X1,NK+1)};end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=EK[0X1];do nK=nK+1;end;do if dK<9 then do if dK>=4 then if not(dK>=6)then if dK==0X5 then(zK)[1]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0x1;QK=0X0001;(zK[QK])();QK=QK-0X1;nK=nK+1;nK=nK+1;nK=nK+0X00001;repeat local VK,MK,aK=mK,zK,{};do for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[0X2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[1]=aK[LK];do(lK)[0x2]=1;end;end;end;end;end;until true;return;else end;else if not(dK<0X7)then if dK==8 then if not(zK[EK[3]])then else nK=EK[2];end;else do(zK)[EK[3]]=zK[EK[0x2]]/zK[EK[5]];end;end;else nK=EK[2];end;end;else if not(dK>=2)then if dK~=1 then zK[EK[3]]={S({},1,EK[2])};else local VK=EK[0X00002];local MK=nil;local aK=VK[9];local gK=(#aK);if gK>0 then do MK={};end;for wK=0X0001,gK do local rK=(aK[wK]);if rK[1]==0X00000 then MK[wK-0X1]={zK,rK[0X0002]};else MK[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;else if dK==0X3 then zK[1]=UK[EK[7]];nK=nK+0X01;zK[0X2]=zK[0X0];do EK=eK[nK];end;do nK=nK+0x1;end;zK[0x1][EK[7]]=zK[0X2];EK=eK[nK];nK=nK+1;nK=EK[0x02];else(zK[EK[0X3]])[zK[EK[2]]]=zK[EK[5]];end;end;end;end;else do if not(dK>=0Xd)then if not(dK<11)then if dK==12 then do zK[0X0001]=UK[EK[0X7]];end;do nK=nK+1;end;nK=nK+0x1;nK=nK+1;(zK)[0X2]=zK[0x00];do EK=eK[nK];end;do nK=nK+1;end;(zK[1])[EK[7]]=zK[0X2];EK=eK[nK];do nK=nK+1;end;(zK)[1]=UK[EK[0X07]];nK=nK+1;nK=nK+0X00001;nK=nK+1;(zK)[0X2]=zK[0x00000];do nK=nK+1;end;local VK=0x0001;(zK)[VK]=zK[VK](zK[VK+1]);do QK=VK;end;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0x001;end;if zK[0X1]==EK[6]then else nK=EK[3];end;else do(zK)[EK[3]]=l(zK[EK[2]]);end;end;else if dK==0xa then do UK[EK[7]]=zK[EK[3]];end;else if not(not(zK[EK[0X02]]<zK[EK[5]]))then else do nK=EK[3];end;end;end;end;else if dK<0X0000F then if dK~=14 then if zK[EK[2]]<zK[EK[5]]then nK=EK[0X3];end;else for VK=EK[0X3],EK[0X2]do do zK[VK]=nil;end;end;end;else if dK<0x10 then(zK)[1]=UK[EK[7]];nK=nK+0X001;nK=nK+0x001;nK=nK+1;do(zK)[0X2]={};end;EK=eK[nK];nK=nK+0x1;(zK[0X1])[EK[7]]=zK[0X2];do EK=eK[nK];end;do nK=nK+0X01;end;nK=EK[0X2];else if dK==0X11 then do(zK)[EK[3]]=EK[7];end;else do zK[EK[3]]=UK[EK[0X7]];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK={};local pK=Q();local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);NK=NK-1;for EK=0x0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X01];end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X1,NK+0X001)};end;if UK==pK then else _(_K,UK);end;local QK=0X0000;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+0X1;if dK<8 then if not(dK<0x00004)then if dK<6 then if dK~=0X5 then if not(not(zK[EK[0X2]]<=zK[EK[0X00005]]))then else nK=EK[0X3];end;else zK[EK[3]]=zK[EK[2]]>=zK[EK[0X5]];end;else if dK~=7 then do zK[EK[3]]=r(zK[EK[2]],zK[EK[0X0005]]);end;else for VK=EK[0X03],EK[2]do(zK)[VK]=nil;end;end;end;else if dK<2 then if dK==0X1 then do(zK)[EK[3]]=UK[EK[0X7]];end;else zK[1]=UK[EK[0x0007]];nK=nK+1;do nK=nK+0X1;end;nK=nK+0X1;zK[2]=zK[0];do EK=eK[nK];end;nK=nK+0X0001;(zK[0X00001])[EK[0x7]]=zK[0x2];EK=eK[nK];nK=nK+0X1;(zK)[1]=UK[EK[7]];nK=nK+0X1;nK=nK+1;nK=nK+1;do QK=1;end;local MK=nil;zK[QK]();QK=QK-1;EK=eK[nK];do nK=nK+0X1;end;(zK)[0X1]=UK[EK[0X0007]];do EK=eK[nK];end;local wK=(0X01);do nK=nK+0X01;end;do(zK)[0x00001]=zK[0X01][EK[0X6]];end;do EK=eK[nK];end;nK=nK+0X1;local VK=EK[2];local aK=VK[9];local gK=#aK;if gK>0X00 then do MK={};end;for rK=0X1,gK do local lK=(aK[rK]);if lK[0X001]~=0 then MK[rK-1]=sK[lK[2]];else MK[rK-1]={zK,lK[0X2]};end;end;K(mK,MK);end;do(zK)[0x2]=Ri(MK,UK,VK);end;do nK=nK+1;end;zK[wK](zK[wK+0X1]);QK=wK-1;nK=nK+1;do nK=nK+0X1;end;do nK=nK+1;end;repeat local rK,lK=mK,(zK);local LK={};do for DK,ZK in W,rK do do for GK,OK in W,ZK do if OK[0x1]==lK and OK[2]>=0x0 then local tK=OK[2];if not(not LK[tK])then else(LK)[tK]={lK[tK]};end;OK[0X1]=LK[tK];OK[2]=0X1;end;end;end;end;end;until true;return;end;else if dK==0X3 then do zK[EK[3]]=zK[EK[0X2]]/zK[EK[5]];end;else zK[EK[3]]={S({},1,EK[2])};end;end;end;else if dK<0Xc then if not(dK>=10)then if dK==0X9 then local VK,MK=EK[2],nil;local aK=VK[0X9];local gK=(#aK);if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0X0 then MK[wK-1]={zK,rK[0X2]};else(MK)[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;(zK)[EK[0X03]]=Ri(MK,UK,VK);else do repeat local VK,MK=mK,zK;local aK=({});do for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X002]>=0X0 then local LK=lK[2];if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];(lK)[2]=1;end;end;end;end;until true;end;do return S(zK,EK[3],QK);end;end;else do if dK==11 then nK=EK[0X2];else zK[EK[3]]=zK[EK[0X002]];end;end;end;else if not(dK>=14)then if dK~=0Xd then else do repeat local MK,aK,gK=mK,zK,{};for wK,rK in W,MK do for lK,LK in W,rK do if LK[0X1]==aK and LK[0X2]>=0X000 then local DK=(LK[2]);if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;do(LK)[1]=gK[DK];end;do(LK)[2]=1;end;end;end;end;until true;end;local VK=(EK[3]);return S(zK,VK,VK+EK[0X0002]-0X02);end;else if dK<0X00F then(zK)[EK[3]]=EK[7];else if dK==0X0010 then local VK=EK[2];local MK=zK[VK];for aK=VK+0x1,EK[0x5]do MK=MK..zK[aK];end;zK[EK[3]]=MK;else zK[EK[0X3]]=zK[EK[2]]-zK[EK[0X5]];end;end;end;end;end;end;end;end;end;else if not(SK>=45)then _K=function(...)local nK=0X1;local zK=({});local pK=Q();local QK,CK=0x0,({[2]=zK,[1]=xK});local NK,HK=vi(...);NK=NK-1;do for EK=0x00,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+0X1)};end;if UK~=pK then(_)(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+1;if dK<20 then if dK<10 then if not(dK<5)then if not(dK>=7)then if dK==0x6 then do zK[0x06]=zK[0X0001];end;EK=eK[nK];do nK=nK+1;end;do(zK)[7]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+0x1;do(zK)[0X7]=zK[7][EK[6]];end;EK=eK[nK];do nK=nK+0X1;end;if not(not zK[7])then else do nK=EK[2];end;end;else zK[0X6]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[0X6]=zK[6][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X01;if not(not zK[6])then else do nK=EK[2];end;end;end;else if not(dK<8)then if dK~=0X0009 then local VK=(EK[2]);local aK=VK[9];local gK=(#aK);local MK=nil;do if not(gK>0)then else MK={};for LK=1,gK do local DK=aK[LK];if DK[1]~=0 then(MK)[LK-1]=sK[DK[0X2]];else MK[LK-0X1]={zK,DK[2]};end;end;K(mK,MK);end;end;zK[4]=Ri(MK,UK,VK);do EK=eK[nK];end;nK=nK+0x00001;do zK[5]=UK[EK[7]];end;nK=nK+0X1;QK=5;zK[QK]=zK[QK]();EK=eK[nK];nK=nK+0x1;do(zK)[6]=UK[EK[0X0007]];end;nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;QK=0X6;(zK)[QK]=zK[QK]();local rK=0X06;do nK=nK+0x1;end;local wK=(sK[0X4]);nK=nK+0X01;EK=eK[nK];nK=nK+1;(UK)[EK[0X07]]=zK[6];nK=nK+1;zK[6]=wK[1][wK[0x2]];EK=eK[nK];nK=nK+1;local lK=(zK[0x6]);(zK)[rK+0X00001]=lK;zK[rK]=lK[EK[6]];EK=eK[nK];do nK=nK+0X001;end;(zK)[8]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;do zK[8]=zK[0X8][EK[0X0006]];end;do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;do(zK)[9]=EK[0X0007];end;nK=nK+0x1;(zK)[10]=zK[0X2];nK=nK+1;(zK)[11]=zK[0X3];nK=nK+0X1;rK=8;do QK=rK+4-0X1;end;zK[rK]=zK[rK](S(zK,rK+1,QK));do QK=rK;end;EK=eK[nK];nK=nK+1;zK[0X009]=EK[7];nK=nK+0X0001;rK=0X00006;QK=rK+4-0X1;zK[rK](S(zK,rK+0X1,QK));QK=rK-1;EK=eK[nK];nK=nK+0X1;zK[6]=UK[EK[0X07]];EK=eK[nK];nK=nK+0X1;zK[6]=zK[6][EK[6]];nK=nK+0X1;nK=nK+0X00001;do EK=eK[nK];end;nK=nK+1;do if not zK[6]then nK=EK[0X02];end;end;else local VK,MK=EK[3],(EK[2]);if MK==0X00 then else do QK=VK+MK-1;end;end;local aK=(EK[5]);local gK,wK=nil,nil;if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));end;do if aK~=1 then do if aK~=0x00000 then gK=VK+aK-2;QK=gK+0X1;else gK=gK+VK-0X001;QK=gK;end;end;local rK=0;for lK=VK,gK do rK=rK+0X001;zK[lK]=wK[rK];end;else QK=VK-0X1;end;end;end;else zK[0X000B]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0X0001;(zK)[0XB]=zK[0X0000b][EK[0X06]];EK=eK[nK];nK=nK+1;if zK[0X0000B]==EK[6]then do nK=EK[3];end;end;end;end;else do if not(dK<2)then if dK>=3 then if dK==4 then local VK=sK[7];do zK[0X00009]=VK[1][VK[2]];end;nK=nK+0X001;do nK=nK+1;end;local MK=(0Xa);EK=eK[nK];do nK=nK+1;end;(zK)[10]=EK[7];nK=nK+0X00001;do(zK)[0X00B]=zK[8];end;do nK=nK+0X001;end;(zK)[10]=zK[MK]..zK[MK+0X01];nK=nK+1;zK[9]=zK[9][zK[0XA]];nK=nK+0X1;nK=nK+0x1;EK=eK[nK];nK=nK+1;if not zK[9]then do nK=EK[2];end;end;else local VK=sK[EK[2]];(zK)[EK[3]]=VK[1][VK[0X002]];end;else zK[EK[0X3]]={S({},1,EK[0X02])};end;else if dK==0X01 then(zK)[4]=UK[EK[0x00007]];do nK=nK+0x1;end;QK=0X4;do(zK)[QK]=zK[QK]();end;EK=eK[nK];nK=nK+1;do(zK)[5]=UK[EK[7]];end;nK=nK+1;do nK=nK+1;end;nK=nK+0x1;zK[4]=zK[0X04]-zK[5];EK=eK[nK];nK=nK+1;if not(EK[7]<=zK[4])then nK=EK[0X3];end;else zK[10]=UK[EK[0X7]];do nK=nK+0x01;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;local VK=0xa;do(zK)[0X0B]=EK[7];end;do nK=nK+1;end;zK[VK](zK[VK+0X00001]);QK=VK-1;EK=eK[nK];do nK=nK+0X1;end;nK=EK[0X2];end;end;end;end;else if not(dK<15)then do if dK>=0x11 then if not(dK<0X012)then if dK==0X13 then zK[0X7]={};EK=eK[nK];nK=nK+0X1;do zK[7][EK[7]]=EK[0X006];end;EK=eK[nK];nK=nK+1;nK=EK[2];else(zK)[EK[3]]=zK[EK[0X2]]>=zK[EK[5]];end;else nK=EK[2];end;else if dK==0X10 then(zK)[10]=zK[9];do nK=nK+1;end;QK=10;zK[QK]();do QK=QK-0X1;end;EK=eK[nK];nK=nK+1;nK=EK[2];else local VK=sK[0X2];(zK)[0X000C]=VK[1][VK[2]];EK=eK[nK];nK=nK+1;(zK)[12]=zK[12][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0x00001;end;do(zK)[0X0000C]=zK[12][EK[0X6]];end;nK=nK+0x1;do nK=nK+0X001;end;EK=eK[nK];nK=nK+0X1;if zK[0Xc]~=EK[0X6]then nK=EK[3];end;end;end;end;else if dK<12 then do if dK~=11 then if zK[EK[2]]==zK[EK[5]]then nK=EK[0X0003];end;else if not zK[EK[3]]then nK=EK[0X00002];end;end;end;else if not(dK>=13)then(zK)[EK[0X003]]=UK[EK[0X7]];else if dK==0x00e then(zK)[EK[3]]=EK[7];else(zK)[0X006]=UK[EK[7]];nK=nK+1;nK=nK+0X00001;do EK=eK[nK];end;do nK=nK+1;end;zK[0x7]=EK[0X7];do EK=eK[nK];end;local VK=(6);nK=nK+0X1;(zK)[8]=UK[EK[0X0007]];EK=eK[nK];nK=nK+0X1;(zK)[0X00008]=zK[0X8][EK[0x6]];nK=nK+0x01;nK=nK+1;do nK=nK+0x1;end;zK[VK](zK[VK+0X1],zK[VK+0X2]);do QK=VK-0X1;end;EK=eK[nK];nK=nK+1;nK=EK[0X002];end;end;end;end;end;else do if dK<30 then if not(dK<0X19)then if dK<0X01b then do if dK~=0X001A then for VK=EK[0X3],EK[2]do zK[VK]=nil;end;else(zK)[0]=UK[EK[7]];do nK=nK+0X00001;end;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do zK[0X0]=zK[0X0][EK[0x6]];end;EK=eK[nK];nK=nK+1;if not(not zK[0])then else nK=EK[2];end;end;end;else do if dK<0x001C then zK[0x0009]=UK[EK[0X00007]];do nK=nK+1;end;nK=nK+0X1;local VK=9;EK=eK[nK];do nK=nK+0X1;end;(zK)[10]=EK[0X7];nK=nK+1;zK[VK](zK[VK+1]);QK=VK-1;do nK=nK+0X1;end;do nK=nK+0X00001;end;do EK=eK[nK];end;nK=nK+0X001;nK=EK[0X2];else if dK==0x1D then zK[8]=UK[EK[7]];do EK=eK[nK];end;nK=nK+0x0001;(zK)[9]=EK[7];nK=nK+1;(zK)[10]=zK[0X6];nK=nK+1;local VK=(0X8);zK[11]=zK[7];nK=nK+1;do QK=VK+4-0x0001;end;local MK=sK[6];(zK[VK])(S(zK,VK+1,QK));do QK=VK-0X01;end;nK=nK+0X1;nK=nK+1;nK=nK+0X01;do zK[0X8]=MK[1][MK[2]];end;EK=eK[nK];nK=nK+0X1;zK[9]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[0X9]=zK[9][EK[6]];EK=eK[nK];nK=nK+1;zK[10]=EK[0x07];do nK=nK+0x1;end;do MK=sK[0X006];end;zK[0XB]=MK[1][MK[2]];nK=nK+1;(zK)[11]=#zK[11];nK=nK+1;VK=0X9;do zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);end;QK=VK;nK=nK+0x1;do(zK)[0x8]=zK[8][zK[0X9]];end;nK=nK+0X001;nK=nK+1;EK=eK[nK];nK=nK+0X1;do if zK[0X8]==EK[6]then else do nK=EK[3];end;end;end;else CK[EK[2]]=zK[EK[3]];end;end;end;end;else if not(dK<22)then if dK>=23 then if dK~=24 then local VK=sK[2];zK[4]=VK[1][VK[2]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];do nK=nK+0X001;end;zK[0X4]=zK[0X004][EK[0X6]];nK=nK+0X1;nK=nK+0X01;do EK=eK[nK];end;nK=nK+0X1;(zK)[4]=zK[4][EK[0x6]];do nK=nK+1;end;nK=nK+0x001;EK=eK[nK];do nK=nK+1;end;do if not(zK[0X004])then else do nK=EK[2];end;end;end;else local VK=(sK[0x02]);(zK)[0X0004]=VK[1][VK[2]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(zK)[4]=zK[4][EK[0X006]];nK=nK+1;nK=nK+0X01;EK=eK[nK];nK=nK+0X01;zK[0X00004]=zK[4][EK[0X6]];EK=eK[nK];do nK=nK+0X0001;end;if zK[0X4]then nK=EK[2];end;end;else if not(zK[EK[0x003]])then else do nK=EK[2];end;end;end;else if dK~=21 then local VK=(sK[0X0007]);(zK)[0Xa]=VK[0X0001][VK[0X2]];nK=nK+0X00001;local MK=0X0000A;nK=nK+1;do EK=eK[nK];end;nK=nK+0X01;(zK)[0X00a]=zK[0Xa][EK[6]];nK=nK+1;zK[11]=zK[8];do nK=nK+1;end;(zK)[MK]=zK[MK](zK[MK+0X1]);do QK=MK;end;nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+0X001;end;if not(not zK[10])then else do nK=EK[0x2];end;end;else zK[0]=UK[EK[0X007]];nK=nK+0x1;nK=nK+0x1;EK=eK[nK];do nK=nK+0X1;end;do(zK)[0x000]=zK[0X0][EK[0X0006]];end;do nK=nK+1;end;nK=nK+0X001;nK=nK+0x01;QK=0X0;do zK[QK]=zK[QK]();end;nK=nK+0x01;nK=nK+1;EK=eK[nK];nK=nK+0X1;if not(not zK[0])then else nK=EK[0X02];end;end;end;end;else do if dK>=35 then if dK<37 then if dK~=0X24 then local gK=0X5;local VK,MK=sK[1],0;do(zK)[0x00000]=VK[0X1][VK[0X02]];end;do EK=eK[nK];end;do nK=nK+1;end;zK[1]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;do zK[2]=EK[0x007];end;nK=nK+1;local aK=3;if aK==0 then else QK=MK+aK-1;end;local wK,rK=nil,nil;if aK==0X01 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;if gK~=1 then if gK==0x00 then wK=wK+MK-1;QK=wK;else do wK=MK+gK-0X2;end;QK=wK+0X01;end;local lK=(0);for LK=MK,wK do lK=lK+0X1;zK[LK]=rK[lK];end;else QK=MK-1;end;nK=nK+0x1;nK=nK+0x1;EK=eK[nK];nK=nK+1;if not(not zK[0])then else nK=EK[0X2];end;else do(zK)[EK[3]]=zK[EK[2]]<=zK[EK[5]];end;end;else if not(dK>=38)then do zK[9]=zK[0X004];end;do nK=nK+0X1;end;QK=0X09;zK[QK]=zK[QK]();local VK=10;nK=nK+0X1;nK=nK+0x001;do EK=eK[nK];end;nK=nK+1;zK[10]=UK[EK[0X7]];EK=eK[nK];nK=nK+0x1;do(zK)[0XB]=EK[0X7];end;do nK=nK+0X1;end;zK[12]=zK[0X9];nK=nK+1;(zK[VK])(zK[VK+0X1],zK[VK+2]);QK=VK-1;EK=eK[nK];nK=nK+0X1;nK=EK[2];else if dK==0X27 then else zK[0X9]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X1;local VK=(0x9);EK=eK[nK];nK=nK+1;(zK)[10]=EK[0X7];nK=nK+1;(zK[VK])(zK[VK+1]);QK=VK-1;nK=nK+0X1;nK=nK+0x00001;EK=eK[nK];nK=nK+1;(zK)[0X9]=UK[EK[7]];nK=nK+0X1;QK=0x009;zK[QK]=zK[QK]();nK=nK+1;zK[9]=zK[0X9]-zK[0X5];EK=eK[nK];nK=nK+1;do zK[0X000a]=UK[EK[0x7]];end;do EK=eK[nK];end;do nK=nK+1;end;do(zK)[10]=zK[10][EK[6]];end;do EK=eK[nK];end;nK=nK+0X01;if not(zK[0X000a]<=zK[9])then else nK=EK[0X3];end;end;end;end;else if not(dK<0X020)then if not(dK<0X021)then do if dK~=0X22 then local VK=sK[2];zK[13]=VK[1][VK[0X00002]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[13]=zK[0XD][EK[0x006]];end;do EK=eK[nK];end;do nK=nK+0x1;end;do zK[0XD]=zK[13][EK[0X0006]];end;EK=eK[nK];nK=nK+0x001;if zK[0X0D]~=EK[0X06]then nK=EK[0X3];end;else local VK=(EK[2]);local MK=nil;local aK=VK[0X9];local gK=#aK;if gK>0 then MK={};for wK=0X00001,gK do local rK=aK[wK];if rK[1]~=0 then do MK[wK-0x1]=sK[rK[2]];end;else do(MK)[wK-0X1]={zK,rK[2]};end;end;end;(K)(mK,MK);end;zK[EK[0X00003]]=Ri(MK,UK,VK);end;end;else zK[0x6]=UK[EK[7]];EK=eK[nK];nK=nK+1;(zK)[0X6]=zK[6][EK[6]];EK=eK[nK];nK=nK+0X1;zK[7]=UK[EK[7]];local MK=0x7;nK=nK+0X1;do nK=nK+0X01;end;local VK=(sK[5]);do nK=nK+0X1;end;do(zK)[8]=VK[1][VK[0x0002]];end;do EK=eK[nK];end;nK=nK+1;(zK)[8]=zK[0x8][EK[0x6]];EK=eK[nK];nK=nK+1;zK[8]=zK[8][EK[0x6]];nK=nK+0x01;nK=nK+0X00001;do EK=eK[nK];end;do nK=nK+1;end;zK[0X8]=zK[8][EK[6]];do EK=eK[nK];end;do nK=nK+0X00001;end;(zK)[8]=zK[0X8][EK[6]];nK=nK+0X00001;zK[MK]=zK[MK](zK[MK+0X01]);QK=MK;do nK=nK+0x1;end;do nK=nK+0x1;end;do EK=eK[nK];end;nK=nK+1;do if zK[0X6]~=zK[0X7]then else nK=EK[3];end;end;end;else if dK~=31 then repeat local aK={};local VK,MK=mK,(zK);do for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0X00000 then local LK=(lK[2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;do lK[0X1]=aK[LK];end;lK[0X0002]=1;end;end;end;end;until true;return;else(zK)[EK[0x03]]=D(zK[EK[0x2]],zK[EK[0X0005]]);end;end;end;end;end;end;end;end;end;else if SK~=0X2e then _K=function(...)local nK,zK=0X1,({});local QK=(0);local CK=({[1]=xK,[2]=zK});local pK=(Q());local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X1,NK+0x00001)};end;do if UK==pK then else _(_K,UK);end;end;while true do local EK=eK[nK];local dK=EK[0X1];nK=nK+0x001;if dK>=7 then if dK<10 then do if dK<0x08 then else do if dK~=9 then local MK=(EK[0X2]);local VK=(EK[3]);do if MK==0x0 then else QK=VK+MK-0x001;end;end;local gK,wK,aK=nil,nil,(EK[5]);if MK==0X1 then do gK,wK=vi(zK[VK]());end;else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;if aK~=1 then do if aK~=0 then do gK=VK+aK-2;end;do QK=gK+1;end;else gK=gK+VK-1;QK=gK;end;end;local rK=(0);for lK=VK,gK do rK=rK+0x1;zK[lK]=wK[rK];end;else QK=VK-0X1;end;else if zK[EK[2]]==zK[EK[0X5]]then else nK=EK[3];end;end;end;end;end;else if dK<0Xc then if dK==0XB then zK[EK[0X3]]=D(zK[EK[0X2]],zK[EK[0X00005]]);else do(zK)[EK[3]]=UK[EK[7]];end;end;else if dK==13 then(zK)[1]=UK[EK[0X7]];nK=nK+0X1;do nK=nK+0X1;end;do nK=nK+0X1;end;zK[2]=zK[0];do EK=eK[nK];end;nK=nK+1;(zK[0X1])[EK[0X0007]]=zK[2];EK=eK[nK];nK=nK+0x0001;(zK)[1]=UK[EK[0x7]];nK=nK+1;QK=0X0001;(zK[QK])();local wK=(0X1);QK=QK-0X001;local MK=nil;do EK=eK[nK];end;do nK=nK+0X001;end;do zK[0X1]=UK[EK[0x7]];end;EK=eK[nK];nK=nK+1;do zK[0x00001]=zK[0x1][EK[0X06]];end;nK=nK+0X1;nK=nK+0X001;EK=eK[nK];do nK=nK+0X01;end;local VK=(EK[0X2]);local aK=VK[0x009];local gK=#aK;if not(gK>0)then else MK={};for rK=1,gK do local lK=aK[rK];if lK[0X1]==0X0 then MK[rK-1]={zK,lK[2]};else MK[rK-0X1]=sK[lK[0X002]];end;end;(K)(mK,MK);end;(zK)[0x00002]=Ri(MK,UK,VK);nK=nK+1;(zK[wK])(zK[wK+1]);QK=wK-0x1;do nK=nK+1;end;repeat local rK,lK=mK,(zK);local LK=({});do for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[1]==lK and OK[0X002]>=0)then else local tK=OK[2];if not LK[tK]then do LK[tK]={lK[tK]};end;end;do(OK)[0X001]=LK[tK];end;(OK)[0X0002]=0x1;end;end;end;end;until true;do return;end;else UK[EK[7]]=zK[EK[0x00003]];end;end;end;else if dK>=0X03 then if not(dK>=0x5)then if dK==0X04 then(zK)[EK[3]]=zK[EK[0X02]]^zK[EK[0X5]];else do for VK=EK[0X0003],EK[2]do do zK[VK]=nil;end;end;end;end;else if dK~=6 then local VK=(EK[2]);local aK=(VK[0X9]);local MK=(nil);local gK=(#aK);if gK>0 then do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);do if rK[1]~=0 then do(MK)[wK-0X00001]=sK[rK[2]];end;else MK[wK-0X01]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);else zK[EK[0X3]]=EK[0x7];end;end;else do if dK<1 then zK[EK[0X3]]={S({},0X1,EK[0X2])};else do if dK==2 then nK=EK[0X2];else do zK[EK[0X03]]=r(zK[EK[2]],zK[EK[5]]);end;end;end;end;end;end;end;end;end;else _K=function(...)local zK={};local nK=(1);local pK=(Q());local UK=(pK==z and KK or pK);local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-1;do for EK=0X0,NK do do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;end;local QK=0;if not PK then HK=nil;elseif YK then do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[0x00001];nK=nK+1;if dK<7 then do if dK>=0X3 then do if dK>=5 then do if dK~=6 then local MK=(nil);local VK=(EK[0X2]);local aK=VK[0X0009];local gK=#aK;if not(gK>0X0)then else do MK={};end;for wK=0x0001,gK do local rK=aK[wK];if rK[0x001]==0X0 then do(MK)[wK-1]={zK,rK[2]};end;else(MK)[wK-1]=sK[rK[2]];end;end;(K)(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);else zK[EK[3]]={S({},0x01,EK[2])};end;end;else if dK==0x4 then if zK[EK[0X2]]<=zK[EK[0x005]]then nK=EK[3];end;else zK[0X1]=UK[EK[0x07]];EK=eK[nK];nK=nK+0X1;(zK)[0X002]=UK[EK[0X7]];nK=nK+0X1;nK=nK+1;local VK=2;nK=nK+0x1;(zK)[0X00003]=zK[0];nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+0x1]);do QK=VK;end;nK=nK+0x1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+1;(zK[1])[EK[0X007]]=zK[2];EK=eK[nK];nK=nK+1;do zK[0X0001]=UK[EK[0X7]];end;EK=eK[nK];nK=nK+0X1;do zK[1]=zK[0X0001][EK[0X006]];end;do EK=eK[nK];end;do nK=nK+0X1;end;do if zK[0X001]~=EK[0X6]then nK=EK[0X3];end;end;end;end;end;else if not(dK>=1)then do repeat local MK,aK=mK,zK;local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if not(LK[0X1]==aK and LK[0x002]>=0)then else local DK=LK[0X00002];do if not(not gK[DK])then else do(gK)[DK]={aK[DK]};end;end;end;LK[1]=gK[DK];LK[2]=0x001;end;end;end;until true;end;local VK=EK[0X3];return S(zK,VK,VK+EK[2]-0x2);else if dK~=0X002 then zK[EK[3]]=EK[7];else(zK)[0X1]=UK[EK[7]];EK=eK[nK];nK=nK+1;do zK[1][EK[0X7]]=EK[6];end;do EK=eK[nK];end;nK=nK+1;local VK=0x01;(zK)[1]=UK[EK[7]];nK=nK+1;nK=nK+0X1;EK=eK[nK];nK=nK+0X01;do(zK)[0X1]=zK[0X0001][EK[6]];end;EK=eK[nK];do nK=nK+1;end;local MK=zK[1];(zK)[VK+0x1]=MK;(zK)[VK]=MK[EK[0x6]];EK=eK[nK];nK=nK+0X01;(zK)[0X3]=UK[EK[7]];nK=nK+0X1;nK=nK+0X0001;EK=eK[nK];do nK=nK+0X001;end;zK[0X3]=zK[3][EK[0X6]];nK=nK+0X1;nK=nK+1;nK=nK+0X0001;do VK=1;end;(zK[VK])(zK[VK+1],zK[VK+0X002]);do QK=VK-1;end;do nK=nK+0x1;end;do nK=nK+1;end;end;end;end;end;else if dK>=0X0000B then if not(dK>=0X000D)then if dK==0Xc then(zK)[EK[3]]=UK[EK[0X07]];else do for VK=EK[0X3],EK[0X2]do zK[VK]=nil;end;end;end;else if dK==14 then else do(zK)[EK[0X3]]=zK[EK[0X2]]==zK[EK[5]];end;end;end;else do if dK<0X009 then if dK==8 then local VK=(EK[0x03]);local MK,aK,gK=zK[VK],zK[VK+1],zK[VK+0X02];zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);do nK=EK[0X2];end;else zK[0X1]=UK[EK[0X0007]];nK=nK+0X1;QK=1;(zK[QK])();QK=QK-1;nK=nK+1;nK=nK+1;do nK=nK+0x001;end;repeat local aK={};local VK,MK=mK,(zK);for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0x0002]>=0X0 then local LK=lK[2];if not aK[LK]then(aK)[LK]={MK[LK]};end;do lK[1]=aK[LK];end;lK[2]=1;end;end;end;until true;return;end;else if dK~=0x0000a then local VK=EK[0x3];local MK,aK=zK[VK]();if not(MK)then else for gK=1,EK[5]do(zK)[VK+gK]=aK[gK];end;nK=EK[0X02];end;else do nK=EK[0x02];end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if SK>=11 then if SK>=17 then if SK<20 then if not(SK>=18)then _K=function(...)local nK,zK,QK=0x1,{},0x0000;local CK={[1]=xK,[2]=zK};local pK=Q();local NK,HK=vi(...);NK=NK-0X1;local UK=(pK==z and KK or pK);for EK=0,NK do if not(WK>EK)then do break;end;else do zK[EK]=HK[EK+1];end;end;end;if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0x00001,NK+1)};end;if UK==pK then else _(_K,UK);end;do while true do local EK=eK[nK];local dK=EK[1];nK=nK+1;if dK<7 then if not(dK>=3)then if not(dK<1)then if dK==0X2 then zK[EK[0x3]]=UK[EK[7]];else(zK)[EK[0X3]]={S({},1,EK[0X2])};end;else zK[EK[0X3]]=EK[0X07];end;else if dK<0x5 then if dK==0X0004 then zK[EK[0X3]]=zK[EK[0X2]]*zK[EK[0X05]];else do(zK)[1]=UK[EK[7]];end;nK=nK+0X1;(zK)[0x2]=zK[0];EK=eK[nK];nK=nK+1;zK[0X1][EK[7]]=zK[2];EK=eK[nK];nK=nK+0X01;do zK[0X00001]=UK[EK[0X0007]];end;nK=nK+0x1;nK=nK+0X001;do nK=nK+1;end;QK=1;(zK[QK])();QK=QK-1;local wK=(1);do EK=eK[nK];end;nK=nK+1;local MK=(nil);do(zK)[0X0001]=UK[EK[7]];end;nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+0X1;end;zK[1]=zK[0X1][EK[0X6]];nK=nK+1;nK=nK+0X00001;EK=eK[nK];nK=nK+0X0001;local VK=EK[0x2];local aK=VK[9];local gK=#aK;if gK>0 then MK={};do for rK=1,gK do local lK=aK[rK];do if lK[1]==0 then(MK)[rK-1]={zK,lK[2]};else do(MK)[rK-0x0001]=sK[lK[2]];end;end;end;end;end;K(mK,MK);end;zK[2]=Ri(MK,UK,VK);do nK=nK+0X1;end;zK[wK](zK[wK+1]);do QK=wK-1;end;nK=nK+1;nK=nK+0x1;nK=nK+0X01;repeat local rK,lK=mK,(zK);local LK=({});do for DK,ZK in W,rK do for GK,OK in W,ZK do if not(OK[1]==lK and OK[0X2]>=0X0)then else local tK=OK[2];if not LK[tK]then LK[tK]={lK[tK]};end;(OK)[0X01]=LK[tK];(OK)[2]=1;end;end;end;end;until true;return;end;else do if dK==6 then nK=EK[0X2];else zK[EK[3]]=l(zK[EK[0x00002]]);end;end;end;end;else if dK<0X0B then if not(dK<0x9)then if dK==0XA then zK[EK[0X03]]=zK[EK[2]]<zK[EK[0X00005]];else local VK=EK[0X2];local MK=zK[VK];for aK=VK+0X1,EK[5]do MK=MK..zK[aK];end;(zK)[EK[3]]=MK;end;else if dK==8 then for VK=EK[3],EK[2]do do(zK)[VK]=nil;end;end;else(zK)[EK[3]]=L(zK[EK[2]],zK[EK[0X05]]);end;end;else if dK>=13 then if dK~=14 then(zK)[EK[3]]=zK[EK[2]]-zK[EK[0x5]];else end;else if dK~=0Xc then local VK=EK[2];local aK,MK=VK[9],nil;local gK=(#aK);if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0X000 then do(MK)[wK-0X001]=sK[rK[0x2]];end;else MK[wK-0x1]={zK,rK[0x002]};end;end;(K)(mK,MK);end;do zK[EK[3]]=Ri(MK,UK,VK);end;else(zK)[EK[0X0003]]=zK[EK[2]]<=zK[EK[5]];end;end;end;end;end;end;end;else do if SK~=19 then _K=function(...)local nK,zK,QK=0x1,{},0;local CK=({[2]=zK,[1]=xK});local pK=(Q());local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X1;for EK=0X0,NK do do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;end;do if not PK then do HK=nil;end;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0X0000,S(HK,WK+0x1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+1;if not(dK>=0X6)then if dK>=3 then do if dK>=0X004 then if dK==5 then if not(zK[EK[2]]<zK[EK[5]])then else do nK=EK[3];end;end;else zK[EK[3]]=EK[0x7];end;else UK[EK[7]]=zK[EK[0X03]];end;end;else if dK>=0X0001 then do if dK~=2 then zK[EK[3]]=UK[EK[0X7]];else zK[EK[3]]=zK[EK[0x2]]<=zK[EK[0x5]];end;end;else for VK=EK[3],EK[2]do zK[VK]=nil;end;end;end;else if dK<0X9 then if not(dK<7)then do if dK~=8 then nK=EK[2];else local VK=sK[0];do(zK)[0x0]=VK[0X1][VK[0X2]];end;local aK=zK[0x0000];EK=eK[nK];nK=nK+1;local MK=(0);(zK)[MK+1]=aK;(zK)[MK]=aK[EK[0X6]];EK=eK[nK];nK=nK+0X0001;zK[2]=EK[7];local gK=2;do nK=nK+0X01;end;VK=sK[0X01];do zK[3]=VK[0X1][VK[0X00002]];end;nK=nK+1;nK=nK+0X00001;nK=nK+0x1;do(zK)[2]=zK[gK]..zK[gK+1];end;nK=nK+0X0001;zK[0X3]={};EK=eK[nK];nK=nK+1;zK[4]=UK[EK[7]];nK=nK+1;VK=sK[0X2];(zK)[5]=VK[1][VK[0x0002]];do nK=nK+0X001;end;MK=0X4;(zK)[MK]=zK[MK](zK[MK+0x1]);QK=MK;nK=nK+1;do nK=nK+1;end;EK=eK[nK];do nK=nK+0x1;end;do zK[0x3][EK[7]]=zK[4];end;EK=eK[nK];do nK=nK+0x1;end;do(zK)[4]=UK[EK[7]];end;EK=eK[nK];nK=nK+1;zK[4]=zK[4][EK[0x6]];nK=nK+1;VK=sK[1];zK[5]=VK[0X00001][VK[0x0002]];nK=nK+0X00001;(zK)[0x4]=zK[0x4][zK[0x5]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;if zK[0X00004]then nK=EK[0x002];end;end;end;else local VK=EK[0X02];local aK,MK=VK[9],(nil);local gK=#aK;if gK>0 then MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X01]~=0 then(MK)[wK-0X1]=sK[rK[0X0002]];else do(MK)[wK-1]={zK,rK[2]};end;end;end;end;K(mK,MK);end;zK[EK[0x3]]=Ri(MK,UK,VK);end;else if not(dK>=0xB)then if dK==0xA then zK[3][EK[0x7]]=zK[0X4];EK=eK[nK];nK=nK+1;(zK[3])[EK[0X7]]=EK[0x0006];nK=nK+1;local VK,MK=sK[3],0X00000;zK[4]=VK[0X00001][VK[0X00002]];EK=eK[nK];do nK=nK+0x001;end;(zK[3])[EK[7]]=zK[4];nK=nK+1;QK=MK+0X00004-0x1;(zK)[MK]=zK[MK](S(zK,MK+0X1,QK));do QK=MK;end;local aK=zK[0];EK=eK[nK];nK=nK+0X01;MK=0x0;zK[MK+0X0001]=aK;(zK)[MK]=aK[EK[0X0006]];EK=eK[nK];local wK=nil;do nK=nK+0X1;end;local gK=(EK[2]);local rK=(gK[9]);local lK=#rK;if lK>0X00 then wK={};for LK=1,lK do local DK=(rK[LK]);do if DK[1]~=0X000 then wK[LK-1]=sK[DK[0X2]];else(wK)[LK-0X1]={zK,DK[0x002]};end;end;end;(K)(mK,wK);end;(zK)[0X2]=Ri(wK,UK,gK);nK=nK+0X1;MK=0X00000;(zK[MK])(zK[MK+1],zK[MK+2]);QK=MK-1;nK=nK+1;nK=nK+1;nK=nK+1;do repeat local LK,DK,ZK=mK,zK,({});for GK,OK in W,LK do for tK,AK in W,OK do if not(AK[0X1]==DK and AK[0X2]>=0)then else local jK=(AK[2]);if not ZK[jK]then ZK[jK]={DK[jK]};end;AK[1]=ZK[jK];(AK)[2]=0X1;end;end;end;until true;end;return;else(zK)[EK[3]]={S({},1,EK[0X2])};end;else if dK~=12 then else repeat local MK,aK=mK,zK;local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if LK[1]==aK and LK[2]>=0 then local DK=LK[0x2];do if not(not gK[DK])then else(gK)[DK]={aK[DK]};end;end;(LK)[0X1]=gK[DK];(LK)[2]=1;end;end;end;until true;local VK=EK[3];do return S(zK,VK,VK+EK[2]-2);end;end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK={};local CK=({[1]=xK,[2]=zK});local pK=Q();local NK,HK=vi(...);local UK=(pK==z and KK or pK);do NK=NK-1;end;local QK=0;for EK=0X00000,NK do do if WK>EK then zK[EK]=HK[EK+0X1];else break;end;end;end;do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X0001 or 0,S(HK,WK+1,NK+0X0001)};end;end;if UK==pK then else _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if dK<0X00009 then if dK<4 then if dK>=2 then do if dK~=0x3 then zK[0X1]=UK[EK[0X07]];nK=nK+1;(zK)[2]=zK[0X0];local VK=(0X1);nK=nK+0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+1;if zK[1]==EK[0x6]then else nK=EK[3];end;else do zK[1]=UK[EK[7]];end;nK=nK+1;nK=nK+0X1;nK=nK+1;(zK)[2]=zK[0X00];EK=eK[nK];do nK=nK+0x00001;end;do zK[0X1][EK[7]]=zK[2];end;EK=eK[nK];nK=nK+1;nK=EK[2];end;end;else if dK==0X001 then zK[EK[3]]=zK[EK[0X2]]/zK[EK[5]];else repeat local VK,MK,aK=mK,zK,EK[3];local gK=({});for wK,rK in W,VK do for lK,LK in W,rK do if LK[0X1]==MK and LK[2]>=aK then local DK=(LK[0X2]);if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;LK[0X1]=gK[DK];(LK)[2]=0X1;end;end;end;until true;end;end;else if not(dK<0X06)then if dK<0X07 then else if dK==0X8 then do zK[0x1]=UK[EK[0x7]];end;nK=nK+1;nK=nK+0X1;nK=nK+0X1;QK=0x1;(zK[QK])();QK=QK-1;nK=nK+0X1;do repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[0x0001]==MK and lK[0X2]>=0X0000 then local LK=lK[2];if not aK[LK]then(aK)[LK]={MK[LK]};end;lK[0X1]=aK[LK];(lK)[2]=1;end;end;end;until true;end;do return;end;else(zK)[EK[3]]=EK[0X00007];end;end;else if dK==5 then(zK)[EK[0x3]]=UK[EK[0X00007]];else if not(zK[EK[0X00002]]<zK[EK[5]])then nK=EK[3];end;end;end;end;else if dK>=13 then do if dK<15 then do if dK==14 then local VK=EK[2];local aK=VK[0X9];local gK,MK=#aK,nil;if not(gK>0X0)then else MK={};for wK=0X001,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-0X1]=sK[rK[0X00002]];else(MK)[wK-0X00001]={zK,rK[0x2]};end;end;K(mK,MK);end;(zK)[EK[3]]=i[EK[0X5]](MK);else do(zK)[EK[3]]=zK[EK[0x00002]]*zK[EK[5]];end;end;end;else if dK>=16 then if dK==0X0011 then zK[1]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0x1;do zK[1][EK[0X7]]=EK[6];end;EK=eK[nK];nK=nK+0X1;nK=EK[2];else if zK[EK[0X002]]~=zK[EK[0X5]]then else do nK=EK[0X3];end;end;end;else(zK)[EK[0X00003]]=r(zK[EK[0X002]],zK[EK[5]]);end;end;end;else if not(dK<0xB)then if dK~=0xc then local VK=EK[0x2];local aK=VK[0X9];local MK=nil;local gK=#aK;if gK>0 then MK={};do for wK=1,gK do local rK=(aK[wK]);do if rK[1]==0 then MK[wK-0X0001]={zK,rK[0X2]};else do(MK)[wK-0x1]=sK[rK[0x2]];end;end;end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else do zK[EK[3]]={S({},0X0001,EK[0X2])};end;end;else if dK~=10 then nK=EK[0x00002];else zK[EK[3]]=EK[0X2];end;end;end;end;end;end;end;end;end;else if SK<0X0015 then _K=function(...)local zK={};local nK=0X1;local pK=(Q());local CK,UK={[2]=zK,[1]=xK},(pK==z and KK or pK);local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;do if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+0X1,NK+0X1)};end;end;if UK~=pK then(_)(_K,UK);end;local QK=0x00000;while true do local EK=eK[nK];local dK=EK[0X001];nK=nK+1;if not(dK<10)then if dK>=15 then if not(dK>=0X12)then if not(dK>=16)then zK[0x1]=UK[EK[0x7]];nK=nK+0X01;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;local VK=0X1;do(zK)[2]=EK[0X7];end;nK=nK+0x1;(zK[VK])(zK[VK+0X001]);QK=VK-0X1;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X01;nK=EK[0X0002];else if dK==17 then do nK=EK[2];end;else for VK=EK[3],EK[2]do do zK[VK]=nil;end;end;end;end;else do if not(dK>=0x13)then local VK=(EK[0X02]);local aK,MK=VK[9],nil;local gK=#aK;if not(gK>0)then else MK={};do for wK=0x0001,gK do local rK=(aK[wK]);if rK[0X1]~=0 then(MK)[wK-1]=sK[rK[0X02]];else(MK)[wK-0X1]={zK,rK[0X2]};end;end;end;(K)(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else if dK==0X014 then local VK=(EK[0x3]);local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do(o)(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));(MK)(zK[VK],zK[VK+1],zK[VK+0x2]);do QK=VK;end;do zK[VK]=MK;end;nK=EK[0x2];else zK[EK[0X003]]=UK[EK[0X07]];end;end;end;end;else if dK>=12 then do if not(dK<0X0000d)then if dK~=14 then do zK[EK[3]]=D(zK[EK[2]],zK[EK[0X0005]]);end;else if zK[EK[0x00002]]==zK[EK[0X00005]]then nK=EK[0X0003];end;end;else local VK,MK=EK[3],EK[0X2];do if MK==0 then else do QK=VK+MK-0X1;end;end;end;local gK,wK,aK=nil,nil,EK[5];do if MK==0X1 then gK,wK=vi(zK[VK]());else do gK,wK=vi(zK[VK](S(zK,VK+0X0001,QK)));end;end;end;do if aK==1 then QK=VK-1;else if aK~=0 then do gK=VK+aK-2;end;QK=gK+1;else gK=gK+VK-0x1;QK=gK;end;local rK=(0X0);do for lK=VK,gK do rK=rK+0X1;zK[lK]=wK[rK];end;end;end;end;end;end;else if dK~=11 then if not(not zK[EK[0X03]])then else nK=EK[0X2];end;else(zK)[1]=UK[EK[0X7]];nK=nK+0X0001;do QK=0X1;end;zK[QK]();QK=QK-1;nK=nK+1;repeat local aK={};local VK,MK=mK,zK;do for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0X001]==MK and lK[0X2]>=0x0 then local LK=(lK[0X2]);if not aK[LK]then aK[LK]={MK[LK]};end;lK[0X0001]=aK[LK];lK[2]=0x1;end;end;end;end;end;until true;return;end;end;end;else do if not(dK>=0X5)then do if not(dK>=2)then if dK~=1 then zK[0X1]=UK[EK[0X7]];nK=nK+1;(zK)[2]=zK[0X00000];do nK=nK+1;end;local VK=0X1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+0X1;if zK[1]~=EK[6]then nK=EK[3];end;else do if not(zK[EK[2]]<=zK[EK[0x5]])then else do nK=EK[0X03];end;end;end;end;else if not(dK<3)then if dK~=4 then if zK[EK[2]]~=EK[0X00006]then nK=EK[3];end;else(zK)[EK[0X00003]]=EK[0X007];end;else do(zK)[EK[3]]={S({},0X1,EK[2])};end;end;end;end;else if not(dK<0X7)then do if dK<0X8 then(zK)[1]=UK[EK[7]];local VK=sK[0x00];nK=nK+1;do nK=nK+0X01;end;do EK=eK[nK];end;nK=nK+1;(zK)[0X0001]=zK[1][EK[6]];nK=nK+0x1;do nK=nK+1;end;nK=nK+1;(zK)[0X2]=VK[1][VK[2]];do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0X0001;(zK[0X1])[zK[2]]=EK[0x6];EK=eK[nK];nK=nK+1;nK=EK[2];else if dK~=9 then zK[0x001]=UK[EK[7]];nK=nK+0x001;nK=nK+0X00001;local VK=sK[0X0];EK=eK[nK];nK=nK+1;(zK)[0X00001]=zK[1][EK[6]];nK=nK+1;do(zK)[2]=VK[0X1][VK[2]];end;nK=nK+1;zK[3]=zK[0];EK=eK[nK];nK=nK+0X001;if not(zK[0X3])then else do nK=EK[0x2];end;end;else do zK[EK[0X00003]]=zK[EK[2]];end;end;end;end;else if dK==0x06 then zK[EK[3]][zK[EK[2]]]=zK[EK[5]];else end;end;end;end;end;end;end;else do if SK~=22 then _K=function(...)local nK,zK=1,({});local pK=(Q());local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);local QK=0X000;NK=NK-0x1;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+0X0001];else do break;end;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+1,NK+1)};end;if UK==pK then else _(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0X1;if dK>=13 then if not(dK<19)then if dK>=22 then if not(dK<0X18)then if dK==25 then(zK)[3]=zK[2][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;(zK)[4]=zK[3][EK[6]];EK=eK[nK];do nK=nK+1;end;zK[5]=zK[0x2][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[0X6]=zK[4]~=EK[6];EK=eK[nK];do nK=nK+1;end;do if not(not zK[0X6])then else nK=EK[2];end;end;else do zK[8]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+1;local VK=(0X0008);EK=eK[nK];nK=nK+0X1;(zK)[0X9]=EK[0X00007];do nK=nK+0X01;end;zK[10]=zK[1];nK=nK+1;zK[VK](zK[VK+0x1],zK[VK+2]);QK=VK-1;do EK=eK[nK];end;nK=nK+0X01;do nK=EK[2];end;end;else if dK==23 then(zK)[EK[3]]=UK[EK[7]];else local VK=(EK[0X2]);local MK=nil;local aK=(VK[0x9]);local gK=#aK;if gK>0 then MK={};for wK=1,gK do local rK=aK[wK];do if rK[1]==0 then MK[wK-0X001]={zK,rK[0X2]};else(MK)[wK-1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;zK[EK[0X3]]=Ri(MK,UK,VK);end;end;else if dK<20 then if zK[EK[0x3]]then do nK=EK[2];end;end;else if dK==21 then zK[EK[0X3]]=zK[EK[0X2]]+zK[EK[0X5]];else do nK=EK[2];end;end;end;end;else if not(dK<0x0010)then do if not(dK>=0X011)then zK[EK[0x3]]=zK[EK[0X002]]-zK[EK[0x5]];else do if dK~=0X12 then for VK=EK[3],EK[0X2]do do(zK)[VK]=nil;end;end;else(zK)[0X0]=UK[EK[0X0007]];do nK=nK+1;end;local VK=sK[0x1];(zK)[0X1]=VK[1][VK[0x2]];nK=nK+1;nK=nK+0X001;local MK=0X0;EK=eK[nK];nK=nK+0X00001;do zK[0X1]=zK[1][EK[6]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0x1]=zK[0x1][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0x1;(zK)[1]=zK[1][EK[6]];do nK=nK+0X1;end;nK=nK+1;do EK=eK[nK];end;do nK=nK+0X0001;end;(zK)[1]=zK[1][EK[0X6]];do nK=nK+1;end;nK=nK+1;nK=nK+0X0001;local aK=0X00002;if aK~=0 then QK=MK+aK-1;end;local wK,rK,gK=nil,nil,0X004;if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));else do wK,rK=vi(zK[MK]());end;end;if gK==0x1 then QK=MK-0X1;else do if gK==0 then wK=wK+MK-0X0001;QK=wK;else do wK=MK+gK-2;end;QK=wK+1;end;end;local LK=(0);do for DK=MK,wK do LK=LK+0X1;do(zK)[DK]=rK[LK];end;end;end;end;EK=eK[nK];nK=nK+0X001;MK=0x0;local lK=b(function(...)(o)();for LK,DK in...do o(true,LK,DK);end;end);(lK)(zK[MK],zK[MK+1],zK[MK+2]);do QK=MK;end;zK[MK]=lK;nK=EK[2];end;end;end;end;else do if dK>=0x0E then do if dK~=15 then zK[EK[0X0003]]=EK[7];else zK[0]=UK[EK[7]];nK=nK+0X1;nK=nK+0x1;EK=eK[nK];do nK=nK+1;end;do(zK)[0]=zK[0x00000][EK[0X006]];end;nK=nK+1;do nK=nK+1;end;do EK=eK[nK];end;nK=nK+0X1;do zK[0X1]=EK[7];end;local VK=0X0;do nK=nK+1;end;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;do nK=nK+1;end;nK=nK+0x00001;EK=eK[nK];nK=nK+1;if not zK[0x0]then nK=EK[2];end;end;end;else if not(not zK[EK[3]])then else nK=EK[0X2];end;end;end;end;end;else if not(dK>=6)then if dK<3 then do if dK>=0X1 then if dK~=0X0002 then do zK[EK[3]]=zK[EK[2]][EK[0X006]];end;else do zK[EK[3]]=zK[EK[0x00002]]~=zK[EK[5]];end;end;else zK[EK[0X03]]={S({},0X001,EK[2])};end;end;else do if dK>=4 then if dK~=0X005 then if not(zK[EK[0x002]]<zK[EK[0X05]])then nK=EK[3];end;else(zK)[EK[0X3]]=zK[EK[2]]~=EK[6];end;else end;end;end;else if not(dK<0x9)then if dK>=0Xb then if dK==0x000c then local VK=EK[3];local MK,aK,gK=zK[VK]();if not(MK)then else(zK)[VK+0x1]=aK;(zK)[VK+2]=gK;nK=EK[0X002];end;else repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[0X2]>=0X00000 then local LK=(lK[2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;(lK)[0x1]=aK[LK];(lK)[2]=1;end;end;end;until true;do return;end;end;else if dK==0X0A then if zK[EK[2]]~=zK[EK[0X5]]then nK=EK[3];end;else(zK)[0X0]=UK[EK[0X7]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;(zK)[0X00000]=zK[0X0][EK[0X6]];nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;if not(not zK[0X0])then else nK=EK[0X0002];end;end;end;else if not(dK<7)then if dK~=0x00008 then(zK)[0X07]=zK[0X0005][EK[0X006]];nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;nK=EK[2];else if not(not(zK[EK[2]]<=zK[EK[0X005]]))then else nK=EK[3];end;end;else local VK=sK[EK[0X02]];zK[EK[3]]=VK[0X1][VK[0X00002]];end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X001,({});local CK=({[2]=zK,[1]=xK});local pK=Q();local UK=((pK==z and KK or pK));local NK,HK=vi(...);do NK=NK-0x1;end;for EK=0,NK do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;do if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0x01)};end;end;local QK=(0X0);if UK~=pK then(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X1;if not(dK>=0X7)then if not(dK<3)then if dK<5 then do if dK~=4 then do(zK)[EK[3]]=zK[EK[2]]>=zK[EK[0X5]];end;else local VK=EK[0X0002];local aK,MK=VK[9],nil;local gK=#aK;do if not(gK>0X0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[1]==0X000 then MK[wK-1]={zK,rK[0X00002]};else MK[wK-0x1]=sK[rK[2]];end;end;K(mK,MK);end;end;zK[EK[0x3]]=Ri(MK,UK,VK);end;end;else if dK~=0x6 then local VK=EK[0X00003];local MK=b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end);(MK)(zK[VK],zK[VK+1],zK[VK+0X00002]);QK=VK;zK[VK]=MK;do nK=EK[2];end;else do(zK)[0X0001]=UK[EK[0x07]];end;local wK=(0X001);nK=nK+1;(zK)[0X002]=zK[0X0];EK=eK[nK];nK=nK+0X1;(zK[0X0001])[EK[7]]=zK[2];EK=eK[nK];do nK=nK+0X1;end;zK[1]=UK[EK[7]];nK=nK+0X1;nK=nK+1;nK=nK+0X0001;QK=1;zK[QK]();QK=QK-1;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[1]=UK[EK[7]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X1]=zK[0X1][EK[0X6]];EK=eK[nK];local VK=EK[2];do nK=nK+1;end;local aK=VK[9];local MK=nil;local gK=#aK;do if gK>0 then MK={};for rK=0X01,gK do local lK=aK[rK];if lK[0X1]==0 then(MK)[rK-1]={zK,lK[0x2]};else(MK)[rK-0X1]=sK[lK[0X2]];end;end;K(mK,MK);end;end;(zK)[0X002]=Ri(MK,UK,VK);nK=nK+1;(zK[wK])(zK[wK+0X1]);QK=wK-1;do nK=nK+1;end;repeat local rK,lK,LK=mK,zK,{};for DK,ZK in W,rK do for GK,OK in W,ZK do if OK[1]==lK and OK[2]>=0 then local tK=OK[0x02];do if not LK[tK]then(LK)[tK]={lK[tK]};end;end;(OK)[1]=LK[tK];(OK)[2]=1;end;end;end;until true;return;end;end;else do if not(dK<0X01)then if dK~=2 then(zK)[EK[3]]=r(zK[EK[2]],zK[EK[0x05]]);else do zK[EK[0x0003]]=EK[0X0007];end;end;else for VK=EK[0X00003],EK[0X002]do(zK)[VK]=nil;end;end;end;end;else if dK>=10 then if dK>=0x0000c then if dK~=13 then do nK=EK[0X2];end;else local VK=(EK[3]);local MK,aK=zK[VK]();if not(MK)then else do nK=EK[0X002];end;(zK)[VK+0X3]=aK;end;end;else if dK~=0XB then do repeat local VK,MK,aK=mK,zK,EK[3];local gK=({});for wK,rK in W,VK do do for lK,LK in W,rK do if LK[0X00001]==MK and LK[0x2]>=aK then local DK=LK[0X2];if not gK[DK]then do gK[DK]={MK[DK]};end;end;(LK)[1]=gK[DK];LK[0x0002]=1;end;end;end;end;until true;end;else end;end;else if dK>=8 then if dK~=0X009 then do(zK)[EK[3]]={S({},1,EK[2])};end;else do zK[EK[3]]=UK[EK[0X7]];end;end;else local MK=(EK[0X5]-1)*0X32;local VK=EK[3];local aK=zK[VK];for gK=0X1,EK[0x2]do aK[MK+gK]=zK[VK+gK];end;end;end;end;end;end;end;end;end;end;else if not(SK<0X0E)then do if not(SK>=15)then _K=function(...)local nK,zK=1,{};local pK=Q();local QK=0;local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0X0001;local UK=((pK==z and KK or pK));do for EK=0x0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+0X00001,NK+1)};end;do if UK==pK then else(_)(_K,UK);end;end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if dK>=0Xa then if not(dK>=0xf)then if dK>=0x0000C then if dK<13 then nK=EK[2];else if dK==14 then local VK,MK=EK[3],EK[2];if MK~=0 then do QK=VK+MK-0X1;end;end;local gK,wK=nil,(nil);local aK=(EK[0X5]);do if MK==1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0X1,QK)));end;end;do if aK~=0X1 then if aK~=0 then do gK=VK+aK-2;end;QK=gK+0x1;else gK=gK+VK-1;QK=gK;end;local rK=0X0;for lK=VK,gK do rK=rK+1;(zK)[lK]=wK[rK];end;else QK=VK-1;end;end;else zK[0X01]=UK[EK[7]];nK=nK+1;(zK)[2]=zK[0X00000];nK=nK+1;local VK=1;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];nK=nK+1;if zK[1]==EK[6]then else nK=EK[3];end;end;end;else if dK==0xB then(zK)[EK[3]]=UK[EK[0X7]];else zK[EK[3]]=true;end;end;else do if dK<18 then if not(dK>=16)then repeat local VK,MK,aK=mK,zK,EK[0X00003];local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[1]==MK and LK[2]>=aK)then else local DK=(LK[2]);if not gK[DK]then gK[DK]={MK[DK]};end;LK[1]=gK[DK];LK[0x2]=0X001;end;end;end;until true;else if dK==17 then local VK=EK[0x2];local aK=(VK[0X9]);local gK=#aK;local MK=(nil);do if gK>0 then do MK={};end;for wK=1,gK do local rK=aK[wK];if rK[0x1]~=0 then do MK[wK-1]=sK[rK[0X00002]];end;else do MK[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;end;(zK)[EK[0x03]]=i[EK[5]](MK);else local VK=(EK[0X00002]);local aK=(VK[0X00009]);local MK=(nil);local gK=(#aK);do if gK>0 then MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X001]==0X0 then do MK[wK-0x0001]={zK,rK[2]};end;else(MK)[wK-0X1]=sK[rK[2]];end;end;end;(K)(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);end;end;else if not(dK<0X13)then do if dK==20 then zK[1]=UK[EK[7]];nK=nK+0x1;zK[0X2]={};EK=eK[nK];do nK=nK+0X1;end;(zK[1])[EK[0X007]]=zK[0X2];EK=eK[nK];do nK=nK+1;end;nK=EK[2];else end;end;else local VK=EK[0X002];local MK=zK[VK];for aK=VK+0X1,EK[5]do do MK=MK..zK[aK];end;end;do(zK)[EK[3]]=MK;end;end;end;end;end;else if dK>=5 then if dK>=7 then if dK>=8 then if dK==0X9 then do zK[0X001]=UK[EK[7]];end;nK=nK+0x1;nK=nK+0X0001;nK=nK+1;(zK)[0x2]=zK[0X0];EK=eK[nK];do nK=nK+1;end;do zK[1][EK[0x7]]=zK[0X2];end;else zK[EK[3]]=-zK[EK[0X2]];end;else for VK=EK[3],EK[0X2]do zK[VK]=nil;end;end;else if dK==0X6 then(zK)[0X1]=UK[EK[0X7]];do nK=nK+0X1;end;nK=nK+0X00001;nK=nK+0X1;QK=0X1;(zK[QK])();QK=QK-0X1;nK=nK+0X0001;nK=nK+0X1;do nK=nK+1;end;do repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=lK[0X2];if not aK[LK]then aK[LK]={MK[LK]};end;lK[0X1]=aK[LK];do(lK)[2]=1;end;end;end;end;until true;end;do return;end;else(zK)[EK[0X3]]=zK[EK[2]]/zK[EK[5]];end;end;else if not(dK<0X2)then if not(dK<0x3)then if dK==0x004 then(zK)[EK[0X3]]={S({},1,EK[2])};else do(UK)[EK[7]]=zK[EK[0X003]];end;end;else zK[EK[0X3]]=EK[7];end;else do if dK~=0X1 then if not(zK[EK[2]]<=zK[EK[0x0005]])then else do nK=EK[0X0003];end;end;else if zK[EK[3]]then nK=EK[0X2];end;end;end;end;end;end;end;end;else do if SK==0X10 then do _K=function(...)local nK,zK=0x1,({});local pK=(Q());local CK=({[2]=zK,[1]=xK});local NK,HK=vi(...);local QK=0;do NK=NK-0x00001;end;local UK=((pK==z and KK or pK));for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0X1];end;end;if not PK then do HK=nil;end;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X1)};end;if UK==pK then else(_)(_K,UK);end;do while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK>=0X9)then do if not(dK>=0X004)then do if not(dK>=2)then if dK~=0X1 then(zK)[0X1]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0X1;zK[0x2]={};do EK=eK[nK];end;do nK=nK+0X1;end;do zK[1][EK[7]]=zK[2];end;do EK=eK[nK];end;nK=nK+0X01;do nK=EK[2];end;else(zK)[EK[3]]=zK[EK[0X02]]%zK[EK[5]];end;else if dK~=0X0003 then local VK,MK=EK[3],zK[EK[2]];do zK[VK+0X00001]=MK;end;do zK[VK]=MK[EK[6]];end;else(zK)[EK[3]]=zK[EK[2]]+zK[EK[0X5]];end;end;end;else if dK<6 then if dK~=0x05 then do(zK)[EK[3]]={};end;else do zK[EK[3]]=D(zK[EK[2]],zK[EK[5]]);end;end;else if not(dK<7)then if dK==0X8 then zK[EK[3]]=EK[7];else zK[0X1]=UK[EK[0x07]];do nK=nK+0X1;end;QK=0x001;(zK[QK])();do QK=QK-0X1;end;nK=nK+1;repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0X00000)then else local LK=lK[2];if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];(lK)[0X2]=1;end;end;end;end;until true;return;end;else end;end;end;end;else if dK<0X0000e then do if dK>=0xB then if dK<0X0c then if zK[EK[0X2]]==zK[EK[5]]then nK=EK[3];end;else if dK==13 then do repeat local MK,aK=mK,zK;local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if LK[0X0001]==aK and LK[2]>=0 then local DK=LK[2];if not gK[DK]then gK[DK]={aK[DK]};end;LK[1]=gK[DK];LK[0X00002]=1;end;end;end;until true;end;local VK=EK[0x3];return S(zK,VK,VK+EK[0X00002]-0x00002);else do(zK)[EK[3]]=UK[EK[0X7]];end;end;end;else if dK==10 then local VK,MK=EK[0x2],nil;local aK=VK[9];local gK=#aK;do if gK>0X0 then MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[0X1]==0 then do(MK)[wK-1]={zK,rK[0X2]};end;else do MK[wK-0X1]=sK[rK[0x00002]];end;end;end;end;(K)(mK,MK);end;end;(zK)[EK[3]]=Ri(MK,UK,VK);else zK[1]=UK[EK[0X7]];nK=nK+1;(zK)[2]=zK[0X0];EK=eK[nK];nK=nK+0X00001;if zK[0X02]then nK=EK[0X2];end;end;end;end;else if not(dK<0X10)then if not(dK>=17)then zK[1]=UK[EK[7]];nK=nK+1;nK=nK+0X1;do nK=nK+1;end;do zK[0X2]=zK[0];end;nK=nK+1;local VK=0X00001;(zK)[VK]=zK[VK](zK[VK+1]);QK=VK;EK=eK[nK];do nK=nK+0x00001;end;do if zK[1]~=EK[0x0006]then nK=EK[0x03];end;end;else if dK==18 then zK[EK[0X3]][EK[0x007]]=zK[EK[5]];else(zK)[EK[3]]={S({},1,EK[0X2])};end;end;else if dK~=15 then nK=EK[2];else do if zK[EK[0X3]]then nK=EK[0x2];end;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X1,({});local pK=Q();local CK=({[1]=xK,[2]=zK});local QK=0;local NK,HK=vi(...);NK=NK-1;for EK=0X000,NK do do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;end;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x1,NK+0X00001)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0x1;if dK>=8 then if not(dK>=0X000c)then if not(dK>=0X000a)then if dK==0X9 then local VK,MK=EK[0X03],EK[0X2];local aK=(EK[5]);if MK==0X000 then else QK=VK+MK-0X1;end;local gK,wK=nil,(nil);if MK==0x1 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));end;if aK==0X1 then QK=VK-0X1;else if aK~=0x0 then do gK=VK+aK-0X2;end;QK=gK+1;else gK=gK+VK-0X0001;QK=gK;end;local rK=(0);for lK=VK,gK do rK=rK+1;do(zK)[lK]=wK[rK];end;end;end;else do(zK)[EK[0X3]]=EK[7];end;end;else do if dK~=11 then do zK[EK[3]]=not zK[EK[0X0002]];end;else(zK)[EK[0X00003]]=zK[EK[2]]<zK[EK[0X05]];end;end;end;else if dK>=14 then if dK>=15 then do if dK==0x010 then do(CK)[EK[2]]=zK[EK[0X0003]];end;else zK[EK[3]]=UK[EK[7]];end;end;else do zK[0X00001]=UK[EK[0x7]];end;nK=nK+1;nK=nK+0X0001;nK=nK+0X1;zK[0X2]=zK[0];do EK=eK[nK];end;nK=nK+1;(zK[1])[EK[0X0007]]=zK[0X2];do EK=eK[nK];end;do nK=nK+1;end;zK[1]=UK[EK[0x00007]];do nK=nK+0x00001;end;do nK=nK+1;end;do nK=nK+0X001;end;do QK=0X1;end;zK[QK]();QK=QK-1;nK=nK+1;nK=nK+0X1;nK=nK+1;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if lK[1]==MK and lK[0X00002]>=0X000 then local LK=(lK[2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0x0001]=aK[LK];do(lK)[0X02]=0X001;end;end;end;end;end;until true;return;end;else if dK==13 then do zK[EK[3]]=zK[EK[2]]^zK[EK[5]];end;else local VK=EK[0x002];local aK=(VK[0X9]);local MK=nil;local gK=#aK;if not(gK>0x0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[0x0001]==0 then do MK[wK-0X1]={zK,rK[2]};end;else do(MK)[wK-0X0001]=sK[rK[0X02]];end;end;end;(K)(mK,MK);end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;end;end;else if not(dK>=0X00004)then if dK<0X2 then if dK==1 then zK[EK[0X0003]]={S({},1,EK[0X02])};else for VK=EK[3],EK[2]do zK[VK]=nil;end;end;else if dK~=3 then nK=EK[2];else(zK)[EK[0x003]]=CK[EK[0X002]];end;end;else if dK>=0x6 then do if dK==0X7 then zK[EK[3]][zK[EK[0X00002]]]=zK[EK[0x5]];else do zK[EK[0X3]]=zK[EK[2]]>zK[EK[0X005]];end;end;end;else if dK==5 then else local VK=EK[3];local MK=(b(function(...)(o)();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end));MK(zK[VK],zK[VK+1],zK[VK+0x2]);QK=VK;(zK)[VK]=MK;nK=EK[2];end;end;end;end;end;end;end;end;end;end;else if SK>=0X0c then if SK~=0Xd then do _K=function(...)local nK,zK,QK=0X1,{},(0);local CK=({[2]=zK,[1]=xK});local pK=Q();local NK,HK=vi(...);local UK=(pK==z and KK or pK);NK=NK-0X0001;for EK=0x00,NK do if not(WK>EK)then break;else do(zK)[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+0X00001)};end;do if UK~=pK then _(_K,UK);end;end;while true do local EK=(eK[nK]);local dK=(EK[0x1]);do nK=nK+1;end;if not(dK<0XA)then if dK>=0Xf then if dK<0X11 then if dK~=16 then local VK=(EK[0X3]);local MK=(b(function(...)o();do for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end;end));(MK)(zK[VK],zK[VK+1],zK[VK+2]);QK=VK;zK[VK]=MK;do nK=EK[0x002];end;else do zK[EK[3]]=UK[EK[7]];end;end;else if not(dK>=0X012)then local VK=(EK[2]);local aK=VK[0X9];local gK,MK=#aK,nil;do if not(gK>0X000)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X1]~=0 then do(MK)[wK-0X0001]=sK[rK[0x0002]];end;else MK[wK-0X0001]={zK,rK[2]};end;end;(K)(mK,MK);end;end;do zK[EK[0X03]]=Ri(MK,UK,VK);end;else if dK~=19 then zK[0X001]=UK[EK[7]];nK=nK+1;nK=nK+0X0001;nK=nK+1;QK=0X01;(zK[QK])();QK=QK-0X0001;nK=nK+0x1;do repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[2]>=0 then local LK=(lK[0X2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;(lK)[0x001]=aK[LK];(lK)[2]=0x1;end;end;end;end;until true;end;return;else zK[EK[0X003]][zK[EK[0X00002]]]=zK[EK[0X5]];end;end;end;else if dK>=12 then if dK>=0x0000D then if dK==14 then zK[EK[0X3]]=zK[EK[2]]*zK[EK[5]];else do if zK[EK[0X2]]<=zK[EK[0X5]]then nK=EK[0X00003];end;end;end;else do(zK)[EK[0X003]]=EK[0X0007];end;end;else if dK==0XB then zK[EK[3]]=CK[EK[2]];else(zK)[EK[0x3]]={S({},0X001,EK[0X00002])};end;end;end;else do if dK>=5 then if not(dK>=7)then if dK==6 then(zK)[1]=UK[EK[7]];nK=nK+1;local VK=1;zK[0X2]=zK[0X00];nK=nK+0X1;do(zK)[VK]=zK[VK](zK[VK+1]);end;QK=VK;do EK=eK[nK];end;nK=nK+1;if zK[0x1]~=EK[6]then nK=EK[3];end;else(zK)[1]=UK[EK[7]];do nK=nK+0x1;end;do nK=nK+1;end;do nK=nK+1;end;(zK)[2]=zK[0X000];EK=eK[nK];nK=nK+1;(zK[1])[EK[7]]=zK[2];end;else if not(dK>=8)then do if zK[EK[0X2]]~=zK[EK[5]]then nK=EK[3];end;end;else do if dK~=0x9 then if zK[EK[2]]<zK[EK[0X05]]then nK=EK[0X3];end;else nK=EK[0X2];end;end;end;end;else if not(dK>=0X002)then if dK==0x1 then else do zK[EK[3]]=r(zK[EK[2]],zK[EK[0x5]]);end;end;else if dK>=3 then if dK==0X4 then zK[0x0001]=UK[EK[0X7]];nK=nK+1;zK[2]={};do EK=eK[nK];end;nK=nK+1;zK[1][EK[0X0007]]=zK[2];EK=eK[nK];nK=nK+1;nK=EK[2];else if not(not(zK[EK[2]]<=zK[EK[5]]))then else nK=EK[0x3];end;end;else do repeat local VK,MK,aK=mK,zK,EK[3];local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[0X001]==MK and LK[2]>=aK)then else local DK=LK[0X02];if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;do LK[0X1]=gK[DK];end;(LK)[0x02]=1;end;end;end;until true;end;end;end;end;end;end;end;end;end;else _K=function(...)local nK,zK=0X1,({});local pK=Q();local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);NK=NK-0X1;for EK=0,NK do if WK>EK then do(zK)[EK]=HK[EK+0x1];end;else break;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif not(YK)then else zK[WK]={n=NK>=WK and NK-WK+1 or 0X0,S(HK,WK+1,NK+1)};end;local QK=(0);if UK==pK then else _(_K,UK);end;do while true do local EK=(eK[nK]);local dK=EK[0X0001];do nK=nK+1;end;do if dK<0X00e then if not(dK<0X0007)then if dK>=10 then do if not(dK>=0x000C)then if dK==11 then(zK)[EK[0x003]]=zK[EK[0X00002]]==zK[EK[0x05]];else zK[0X006]=zK[2][EK[0X6]];nK=nK+0x1;nK=nK+0X00001;EK=eK[nK];nK=nK+0X1;if zK[0X6]==zK[4]then else do nK=EK[0X3];end;end;end;else if dK~=0X00D then if not zK[EK[3]]then nK=EK[2];end;else repeat local VK,MK=mK,(zK);local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do do if lK[0X1]==MK and lK[0X00002]>=0 then local LK=(lK[2]);do if not(not aK[LK])then else aK[LK]={MK[LK]};end;end;do lK[0X1]=aK[LK];end;lK[0X2]=0x1;end;end;end;end;until true;do return;end;end;end;end;else if not(dK<8)then do if dK==0x00009 then do zK[0X3]=UK[EK[0X0007]];end;EK=eK[nK];nK=nK+1;local VK,aK=0X03,0X4;zK[0X4]=UK[EK[0X7]];nK=nK+0x1;nK=nK+1;nK=nK+1;local MK=(0X2);if MK~=0X0000 then QK=VK+MK-0X0001;end;local gK,wK=nil,(nil);do if MK==0x00001 then gK,wK=vi(zK[VK]());else gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;end;if aK~=1 then if aK==0X00 then do gK=gK+VK-0X01;end;QK=gK;else do gK=VK+aK-2;end;QK=gK+1;end;local lK=0X0000;for LK=VK,gK do lK=lK+0x1;(zK)[LK]=wK[lK];end;else QK=VK-0X01;end;do EK=eK[nK];end;nK=nK+1;VK=0X3;local rK=(b(function(...)(o)();do for lK,LK in...do o(true,lK,LK);end;end;end));rK(zK[VK],zK[VK+0X1],zK[VK+0X0002]);QK=VK;do zK[VK]=rK;end;do nK=EK[0X0002];end;else zK[EK[3]]=zK[EK[2]]%zK[EK[5]];end;end;else do(zK)[0]=UK[EK[0X7]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[0]=zK[0X0][EK[6]];EK=eK[nK];do nK=nK+1;end;if not zK[0]then nK=EK[0X2];end;end;end;else if dK<3 then if dK<0X01 then(zK)[EK[3]]=zK[EK[0X2]]>=zK[EK[5]];else if dK~=2 then do zK[6]=zK[0X00002][EK[6]];end;nK=nK+0X1;do nK=nK+1;end;local VK=6;EK=eK[nK];nK=nK+0X1;do zK[6]=zK[0x6][EK[6]];end;EK=eK[nK];nK=nK+1;local MK=(zK[0x00006]);(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];do EK=eK[nK];end;nK=nK+0X1;do zK[0x00008]=EK[0X7];end;EK=eK[nK];nK=nK+0X1;do(zK)[0x0009]=EK[7];end;nK=nK+0X1;do VK=0X6;end;do QK=VK+4-0x1;end;(zK)[VK]=zK[VK](S(zK,VK+0X1,QK));QK=VK;nK=nK+1;do nK=nK+0X001;end;local aK=0X006;EK=eK[nK];do nK=nK+1;end;(UK)[EK[7]]=zK[0X6];EK=eK[nK];nK=nK+0x1;(zK)[6]=EK[7];EK=eK[nK];nK=nK+0X00001;(zK)[7]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;(zK)[0x8]=EK[2];EK=eK[nK];do nK=nK+0X01;end;VK=zK[aK];local gK=zK[aK+1];local wK=(zK[aK+0X02]);zK[aK]=b(function()for rK=VK,gK,wK do(o)(true,rK);end;end);do nK=EK[2];end;else(zK)[3]=UK[EK[0x007]];nK=nK+1;nK=nK+1;do EK=eK[nK];end;nK=nK+0X1;do zK[3]=zK[0X3][EK[0X6]];end;do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;do zK[0x4]=UK[EK[7]];end;nK=nK+0X0001;nK=nK+0X1;EK=eK[nK];nK=nK+1;do(zK)[0X00005]=zK[0x2][EK[6]];end;nK=nK+1;local VK=3;nK=nK+1;do nK=nK+1;end;do(zK)[VK]=zK[VK](zK[VK+0X01],zK[VK+2]);end;QK=VK;nK=nK+1;do nK=nK+0X0001;end;do EK=eK[nK];end;do nK=nK+0X1;end;if not(not zK[3])then else nK=EK[0X2];end;end;end;else do if dK>=5 then if dK==0X00006 then(zK)[EK[3]]=zK[EK[2]]*zK[EK[0X005]];else do zK[10]=UK[EK[7]];end;do nK=nK+1;end;nK=nK+1;nK=nK+1;QK=0xA;(zK[QK])();do QK=QK-1;end;nK=nK+1;nK=nK+0X001;EK=eK[nK];nK=nK+0X1;do zK[0X0a]=UK[EK[0X7]];end;nK=nK+0X001;do nK=nK+0X01;end;nK=nK+0X0001;QK=10;zK[QK]();QK=QK-1;do nK=nK+1;end;do nK=nK+1;end;EK=eK[nK];local VK=0XA;nK=nK+0x1;(zK)[10]=UK[EK[0X0007]];nK=nK+0x00001;nK=nK+1;EK=eK[nK];nK=nK+0X00001;(zK)[0XB]=EK[7];EK=eK[nK];do nK=nK+1;end;do zK[12]=zK[2][EK[0X06]];end;do nK=nK+0x1;end;zK[VK](zK[VK+0X1],zK[VK+2]);QK=VK-1;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0x1;nK=EK[2];end;else if dK~=4 then local VK,MK=0x6,zK[2];zK[VK+1]=MK;do(zK)[VK]=MK[EK[0x006]];end;EK=eK[nK];nK=nK+0x0001;(zK)[8]=EK[0X7];nK=nK+1;VK=0x0006;zK[VK]=zK[VK](zK[VK+1],zK[VK+0X2]);do QK=VK;end;EK=eK[nK];do nK=nK+1;end;do if not zK[6]then nK=EK[0x2];end;end;else local VK=(EK[0X3]);local MK,aK,gK=zK[VK]();if MK then(zK)[VK+1]=aK;zK[VK+0X2]=gK;nK=EK[0X002];end;end;end;end;end;end;else if not(dK<21)then if dK<0X19 then do if not(dK<0x17)then if dK==24 then do(zK)[0X0]=UK[EK[0X0007]];end;do nK=nK+1;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do zK[0x00]=zK[0X0][EK[6]];end;nK=nK+1;do nK=nK+0X001;end;nK=nK+0X1;QK=0X0;do zK[QK]=zK[QK]();end;EK=eK[nK];do nK=nK+0X01;end;if not(not zK[0])then else do nK=EK[2];end;end;else local VK=(EK[2]);local aK=VK[0X9];local MK=nil;local gK=#aK;do if gK>0X00 then MK={};do for wK=0X001,gK do local rK=(aK[wK]);if rK[1]==0X0 then(MK)[wK-1]={zK,rK[2]};else do MK[wK-0x1]=sK[rK[0X2]];end;end;end;end;(K)(mK,MK);end;end;(zK)[EK[0X3]]=Ri(MK,UK,VK);end;else if dK~=0X000016 then local VK=(sK[EK[0x2]]);do zK[EK[3]]=VK[0X01][VK[0X002]];end;else for VK=EK[3],EK[2]do(zK)[VK]=nil;end;end;end;end;else if not(dK>=0X1B)then if dK~=0x1a then zK[0X007]=UK[EK[0x7]];EK=eK[nK];nK=nK+1;(zK)[0x7]=zK[7][EK[6]];do EK=eK[nK];end;nK=nK+0X1;(zK)[8]=UK[EK[7]];do nK=nK+1;end;nK=nK+0X1;EK=eK[nK];nK=nK+0x0001;(zK)[0X8]=zK[0x0008][EK[6]];local VK=0X0007;nK=nK+1;(zK)[9]=zK[0X5];do nK=nK+0x1;end;zK[VK]=zK[VK](zK[VK+0X0001],zK[VK+0X2]);QK=VK;do nK=nK+0X001;end;nK=nK+1;do EK=eK[nK];end;nK=nK+1;if zK[7]then nK=EK[0X02];end;else do(zK)[0]=UK[EK[7]];end;nK=nK+0X01;QK=0X0;(zK[QK])();local VK=(sK[1]);QK=QK-1;nK=nK+1;local MK=1;nK=nK+0x01;EK=eK[nK];do nK=nK+1;end;zK[0X0]=UK[EK[0X007]];nK=nK+0X00001;(zK)[1]=VK[0X1][VK[2]];EK=eK[nK];nK=nK+1;local gK=0x0002;zK[0x00001]=zK[0x1][EK[6]];EK=eK[nK];nK=nK+1;(zK)[1]=zK[0x1][EK[6]];EK=eK[nK];nK=nK+1;(zK)[0x1]=zK[1][EK[6]];EK=eK[nK];nK=nK+0x1;zK[1]=zK[1][EK[6]];nK=nK+0x1;nK=nK+1;EK=eK[nK];nK=nK+0X1;(zK)[1]=zK[1][EK[0X6]];EK=eK[nK];nK=nK+1;local aK=zK[1];(zK)[MK+0x1]=aK;zK[MK]=aK[EK[6]];do nK=nK+0X1;end;MK=0x001;local wK=(0X000);do if gK~=0x0 then QK=MK+gK-1;end;end;local rK,lK=nil,(nil);if gK~=0X1 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else rK,lK=vi(zK[MK]());end;if wK==0x00001 then QK=MK-0X00001;else if wK~=0 then rK=MK+wK-0x2;QK=rK+1;else rK=rK+MK-0X001;QK=rK;end;local DK=0;for ZK=MK,rK do DK=DK+0X01;do(zK)[ZK]=lK[DK];end;end;end;nK=nK+0X01;do MK=0;end;gK=0;wK=0X00004;do if gK==0X00 then else do QK=MK+gK-0x1;end;end;end;rK,lK=nil;if gK~=0X1 then rK,lK=vi(zK[MK](S(zK,MK+0X01,QK)));else do rK,lK=vi(zK[MK]());end;end;if wK==1 then QK=MK-0X1;else if wK~=0 then do rK=MK+wK-0x0002;end;QK=rK+1;else rK=rK+MK-1;QK=rK;end;local DK=(0);for ZK=MK,rK do DK=DK+0x1;zK[ZK]=lK[DK];end;end;do EK=eK[nK];end;nK=nK+1;MK=0X000;local LK=b(function(...)(o)();for DK,ZK in...do o(true,DK,ZK);end;end);(LK)(zK[MK],zK[MK+0x0001],zK[MK+0X02]);QK=MK;(zK)[MK]=LK;nK=EK[2];end;else do if dK==28 then local VK=EK[3];local MK,aK=zK[VK]();if MK then nK=EK[0X2];zK[VK+3]=aK;end;else zK[EK[3]]=zK[EK[2]]>zK[EK[5]];end;end;end;end;else if dK<17 then if not(dK<0Xf)then if dK~=0X10 then(zK)[EK[0X3]]=EK[0x7];else end;else(zK)[EK[0X3]]=UK[EK[0x7]];end;else do if not(dK<0x13)then if dK==0x14 then nK=EK[0X2];else do(zK)[EK[0X3]]={S({},1,EK[2])};end;end;else if dK==18 then local VK=EK[0X3];for MK=VK,VK+(EK[0X2]-1)do zK[MK]=HK[WK+(MK-VK)+0X01];end;else repeat local VK,MK,aK=mK,zK,EK[3];local gK=({});for wK,rK in W,VK do do for lK,LK in W,rK do if LK[1]==MK and LK[0x2]>=aK then local DK=(LK[2]);if not(not gK[DK])then else gK[DK]={MK[DK]};end;do(LK)[0x00001]=gK[DK];end;(LK)[0X2]=0x1;end;end;end;end;until true;end;end;end;end;end;end;end;end;end;end;end;else _K=function(...)local QK,zK=0X000,{};local pK=(Q());local CK=({[1]=xK,[2]=zK});local NK,HK=vi(...);do NK=NK-1;end;do for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0x0,S(HK,WK+1,NK+1)};end;local UK=((pK==z and KK or pK));local nK=0X1;if UK~=pK then _(_K,UK);end;while true do local EK=(eK[nK]);local dK=EK[1];nK=nK+0x01;do if dK<6 then do if not(dK>=0x3)then do if dK<1 then local VK=(EK[0X00002]);local aK,MK=VK[0X00009],nil;local gK=#aK;if not(gK>0)then else MK={};for wK=0X1,gK do local rK=(aK[wK]);do if rK[1]==0 then(MK)[wK-0x1]={zK,rK[0X002]};else MK[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;zK[EK[0x3]]=Ri(MK,UK,VK);else if dK==2 then local VK=(EK[0X002]);local aK,MK=VK[9],nil;local gK=#aK;if gK>0x0 then MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X00001]~=0 then do MK[wK-1]=sK[rK[0X002]];end;else(MK)[wK-1]={zK,rK[0X02]};end;end;K(mK,MK);end;zK[EK[3]]=i[EK[0X5]](MK);else zK[EK[3]]=l(zK[EK[2]]);end;end;end;else if not(dK<4)then if dK==0X00005 then(zK)[EK[3]]=UK[EK[0x7]];else end;else local VK=EK[2];local MK=zK[VK];for aK=VK+0X1,EK[5]do MK=MK..zK[aK];end;do zK[EK[3]]=MK;end;end;end;end;else do if dK>=0X9 then if dK>=10 then if dK==11 then zK[1]=UK[EK[7]];do nK=nK+1;end;(zK)[0X0002]=zK[0X0000];EK=eK[nK];nK=nK+1;zK[1][EK[7]]=zK[2];EK=eK[nK];do nK=nK+1;end;(zK)[0X1]=UK[EK[0X7]];nK=nK+1;do nK=nK+1;end;nK=nK+0x01;QK=1;(zK[QK])();local wK=(0X00001);do QK=QK-0x1;end;EK=eK[nK];nK=nK+0X1;do zK[0X1]=UK[EK[0X7]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X0001;(zK)[0x1]=zK[0X0001][EK[6]];EK=eK[nK];local VK=(EK[2]);nK=nK+0x1;local aK,MK=VK[0X09],nil;local gK=#aK;if gK>0x0 then do MK={};end;do for rK=1,gK do local lK=aK[rK];do if lK[0X001]~=0x0 then MK[rK-1]=sK[lK[0X0002]];else MK[rK-1]={zK,lK[0X00002]};end;end;end;end;(K)(mK,MK);end;(zK)[0x2]=Ri(MK,UK,VK);do nK=nK+0X0001;end;zK[wK](zK[wK+1]);QK=wK-1;nK=nK+0x00001;repeat local rK,lK=mK,zK;local LK={};for DK,ZK in W,rK do do for GK,OK in W,ZK do do if not(OK[1]==lK and OK[0X2]>=0)then else local tK=OK[2];do if not LK[tK]then(LK)[tK]={lK[tK]};end;end;OK[1]=LK[tK];do OK[0X2]=0x0001;end;end;end;end;end;end;until true;return;else local VK=zK[EK[0X2]]/zK[EK[5]];(zK)[EK[3]]=VK-VK%1;end;else nK=EK[0x2];end;else do if dK<7 then do zK[EK[3]]=EK[0x7];end;else if dK==8 then zK[EK[3]]={S({},0X00001,EK[2])};else local VK=EK[0x3];local MK=EK[2];if MK==0 then else do QK=VK+MK-1;end;end;local gK,wK=nil,(nil);local aK=EK[5];if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+0X0001,QK)));else gK,wK=vi(zK[VK]());end;if aK==1 then do QK=VK-0X00001;end;else do if aK~=0 then do gK=VK+aK-2;end;QK=gK+1;else gK=gK+VK-1;QK=gK;end;end;local rK=0;do for lK=VK,gK do do rK=rK+0x1;end;zK[lK]=wK[rK];end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;elseif not(SK<5)then if SK>=0x0008 then if not(SK<0x9)then do if SK==0XA then _K=function(...)local nK,zK=0x001,{};local pK=Q();local CK={[1]=xK,[2]=zK};local NK,HK=vi(...);do NK=NK-1;end;local UK=((pK==z and KK or pK));do for EK=0x0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+1];end;end;end;if not PK then HK=nil;elseif YK then do zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x1,NK+0X0001)};end;end;if UK~=pK then(_)(_K,UK);end;local QK=0X00;while true do local EK=eK[nK];local dK=EK[0X1];do nK=nK+1;end;if dK>=8 then if dK>=12 then if dK<14 then if dK==13 then do if zK[EK[2]]~=zK[EK[0x5]]then do nK=EK[0x00003];end;end;end;else for VK=EK[0X00003],EK[0X2]do(zK)[VK]=nil;end;end;else if dK==15 then local MK=zK[EK[0X2]];local VK=(EK[0X3]);zK[VK+1]=MK;(zK)[VK]=MK[EK[0X6]];else do zK[EK[0X3]]=zK[EK[0X00002]]/zK[EK[5]];end;end;end;else if not(dK<0Xa)then if dK~=11 then local VK=(EK[2]);local MK=zK[VK];for aK=VK+1,EK[5]do MK=MK..zK[aK];end;do(zK)[EK[0X3]]=MK;end;else do if not(not(zK[EK[0X00002]]<zK[EK[0X5]]))then else nK=EK[3];end;end;end;else do if dK==9 then zK[0x1]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+1;nK=nK+0X001;do(zK)[0X2]=zK[0];end;EK=eK[nK];nK=nK+1;(zK[0x1])[EK[0X7]]=zK[2];EK=eK[nK];nK=nK+1;do zK[0x00001]=UK[EK[0X7]];end;nK=nK+1;do nK=nK+0X01;end;nK=nK+1;QK=0X0001;(zK[QK])();QK=QK-0X1;nK=nK+1;nK=nK+1;nK=nK+0X1;do repeat local VK,MK,aK=mK,zK,({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=lK[0x0002];if not aK[LK]then aK[LK]={MK[LK]};end;(lK)[0X1]=aK[LK];do(lK)[2]=0X1;end;end;end;end;until true;end;do return;end;else(zK)[EK[3]]={S({},0X1,EK[0X0002])};end;end;end;end;else do if not(dK>=0X4)then do if dK<0X002 then if dK==0X01 then local VK=EK[2];local aK,MK=VK[0x9],(nil);local gK=#aK;do if gK>0X0 then MK={};for wK=0X1,gK do local rK=aK[wK];do if rK[0x1]~=0X00 then(MK)[wK-0X1]=sK[rK[0X2]];else MK[wK-0X0001]={zK,rK[0x2]};end;end;end;K(mK,MK);end;end;(zK)[EK[0X03]]=Ri(MK,UK,VK);else repeat local VK,MK,aK=mK,zK,EK[3];local gK={};do for wK,rK in W,VK do for lK,LK in W,rK do if not(LK[0X1]==MK and LK[0X2]>=aK)then else local DK=(LK[2]);do if not(not gK[DK])then else gK[DK]={MK[DK]};end;end;LK[0x1]=gK[DK];(LK)[2]=1;end;end;end;end;until true;end;else if dK==0x3 then nK=EK[2];else zK[EK[3]]=EK[7];end;end;end;else if not(dK<6)then do if dK==0X007 then(zK)[EK[3]]=l(zK[EK[2]]);else zK[EK[0X0003]]=#zK[EK[2]];end;end;else if dK==0X0005 then(zK)[EK[0X3]]=UK[EK[0x7]];else end;end;end;end;end;end;end;else _K=function(...)local nK,zK=1,({});local pK=(Q());local CK=({[1]=xK,[2]=zK});local QK,UK=0,((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X1;do for EK=0X00000,NK do do if WK>EK then zK[EK]=HK[EK+1];else do break;end;end;end;end;end;if not PK then HK=nil;elseif not(YK)then else(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x00001,NK+1)};end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0x1]);nK=nK+0X1;if not(dK>=6)then if not(dK<3)then if dK>=0x4 then if dK==0X5 then(zK)[1]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+0X001;nK=nK+0x0001;do(zK)[2]=zK[0];end;EK=eK[nK];do nK=nK+1;end;zK[1][EK[0X0007]]=zK[2];EK=eK[nK];do nK=nK+1;end;(zK)[0X001]=UK[EK[0x7]];nK=nK+1;nK=nK+0X0001;nK=nK+0X00001;QK=0x1;(zK[QK])();QK=QK-0X1;do nK=nK+0X1;end;repeat local VK,MK=mK,zK;local aK=({});do for gK,wK in W,VK do do for rK,lK in W,wK do if lK[0x1]==MK and lK[2]>=0x00 then local LK=lK[0X2];do if not(not aK[LK])then else(aK)[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;lK[0X2]=1;end;end;end;end;end;until true;return;else do(zK)[EK[3]]=EK[0X2];end;end;else repeat local MK,aK=mK,(zK);local gK=({});for wK,rK in W,MK do for lK,LK in W,rK do if LK[1]==aK and LK[0X2]>=0 then local DK=LK[0x2];if not gK[DK]then(gK)[DK]={aK[DK]};end;do(LK)[0x1]=gK[DK];end;LK[2]=1;end;end;end;until true;local VK=(EK[3]);return S(zK,VK,VK+EK[2]-2);end;else if not(dK>=1)then local VK=EK[0x002];local MK=(nil);local aK=(VK[9]);local gK=(#aK);do if not(gK>0X000)then else MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X1]==0 then MK[wK-0X001]={zK,rK[2]};else(MK)[wK-0X001]=sK[rK[0x002]];end;end;(K)(mK,MK);end;end;zK[EK[3]]=Ri(MK,UK,VK);else if dK==2 then do(zK)[EK[0X3]]=zK[EK[0X00002]]+zK[EK[0X5]];end;else do zK[EK[0X3]]={S({},0x001,EK[2])};end;end;end;end;else if dK>=0X9 then if not(dK<11)then do if dK==12 then zK[EK[0X3]]=EK[7];else local VK=EK[0X2];local MK=zK[VK];for aK=VK+1,EK[0X5]do MK=MK..zK[aK];end;(zK)[EK[3]]=MK;end;end;else if dK==10 then nK=EK[2];else zK[EK[0X3]]=UK[EK[7]];end;end;else if not(dK>=7)then local VK=EK[3];local MK=(EK[0X2]);if MK~=0X00000 then do QK=VK+MK-0x0001;end;end;local aK=EK[0X5];local gK,wK=nil,nil;do if MK~=1 then do gK,wK=vi(zK[VK](S(zK,VK+1,QK)));end;else gK,wK=vi(zK[VK]());end;end;if aK~=1 then if aK==0 then gK=gK+VK-0X1;do QK=gK;end;else do gK=VK+aK-2;end;QK=gK+1;end;local rK=(0);for lK=VK,gK do rK=rK+0x00001;zK[lK]=wK[rK];end;else QK=VK-0X1;end;else do if dK~=0x08 then else zK[EK[3]]=zK[EK[0X2]]/zK[EK[0X05]];end;end;end;end;end;end;end;end;end;else do _K=function(...)local zK={};local nK=(0X001);local pK=(Q());local CK={[1]=xK,[2]=zK};local UK=(pK==z and KK or pK);local QK=0;local NK,HK=vi(...);NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;do if not PK then HK=nil;elseif YK then do zK[WK]={n=NK>=WK and NK-WK+0X0001 or 0,S(HK,WK+1,NK+0X1)};end;end;end;if UK==pK then else _(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0X01]);nK=nK+1;if not(dK>=8)then if not(dK<4)then if dK>=0X0006 then if dK~=7 then zK[EK[3]]=UK[EK[0X0007]];else local MK=(nil);local VK=(EK[0X2]);local aK=(VK[0X9]);local gK=(#aK);if not(gK>0X000)then else MK={};do for wK=1,gK do local rK=aK[wK];if rK[0X001]~=0X0 then MK[wK-0X001]=sK[rK[2]];else do MK[wK-1]={zK,rK[0X0002]};end;end;end;end;K(mK,MK);end;(zK)[EK[0X0003]]=Ri(MK,UK,VK);end;else if dK~=0X5 then do(zK)[EK[3]]=zK[EK[2]]+zK[EK[0X5]];end;else(zK)[EK[3]]=not zK[EK[0X2]];end;end;else if dK>=0X2 then do if dK==3 then(zK)[EK[0X3]]=zK[EK[2]]<zK[EK[5]];else end;end;else if dK~=1 then zK[EK[3]]=g(zK[EK[0x00002]],zK[EK[0X5]]);else zK[EK[0X00003]]=EK[0X7];end;end;end;else if not(dK<12)then if dK<14 then if dK~=13 then do for VK=EK[3],EK[2]do zK[VK]=nil;end;end;else do repeat local VK,MK,aK=mK,zK,EK[0X3];local gK={};for wK,rK in W,VK do do for lK,LK in W,rK do if not(LK[1]==MK and LK[2]>=aK)then else local DK=(LK[0x2]);if not gK[DK]then gK[DK]={MK[DK]};end;LK[0x1]=gK[DK];LK[2]=1;end;end;end;end;until true;end;end;else if dK~=15 then do nK=EK[0x0002];end;else local VK=EK[0X00003];local MK,aK=zK[VK]();if MK then for gK=0X001,EK[0X5]do(zK)[VK+gK]=aK[gK];end;nK=EK[0X02];end;end;end;else if dK>=0X0A then if dK~=0X0000b then zK[EK[3]]={S({},1,EK[0x00002])};else zK[0X001]=UK[EK[7]];nK=nK+1;nK=nK+1;do nK=nK+1;end;zK[0X2]=zK[0];EK=eK[nK];nK=nK+1;(zK[1])[EK[0x7]]=zK[0X02];do EK=eK[nK];end;do nK=nK+0x1;end;zK[1]=UK[EK[0X7]];nK=nK+1;QK=0X1;(zK[QK])();QK=QK-0X1;nK=nK+0X1;nK=nK+1;nK=nK+1;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do for rK,lK in W,wK do if lK[0X1]==MK and lK[0x002]>=0 then local LK=(lK[0x2]);do if not(not aK[LK])then else do aK[LK]={MK[LK]};end;end;end;(lK)[1]=aK[LK];do(lK)[2]=1;end;end;end;end;until true;return;end;else if dK==0x9 then(zK)[EK[3]]=r(zK[EK[0X2]],zK[EK[0X5]]);else local VK=(EK[3]);local aK,MK=zK[VK],(EK[0X00005]-0X1)*0x32;for gK=0X01,EK[2]do(aK)[MK+gK]=zK[VK+gK];end;end;end;end;end;end;end;end;end;else if not(SK<6)then if SK==7 then _K=function(...)local QK=(0);local zK=({});local nK=(0X1);local CK=({[1]=xK,[2]=zK});local pK=(Q());local UK=((pK==z and KK or pK));local NK,HK=vi(...);NK=NK-0X1;for EK=0X0,NK do if WK>EK then do zK[EK]=HK[EK+1];end;else break;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X1 or 0,S(HK,WK+1,NK+1)};end;if UK==pK then else _(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[0X1]);nK=nK+0X1;do if dK>=0X006 then if dK>=9 then do if not(dK>=11)then if dK==10 then local VK,MK=EK[0X2],nil;local aK=(VK[9]);local gK=(#aK);do if not(gK>0)then else do MK={};end;for wK=1,gK do local rK=(aK[wK]);if rK[1]~=0 then MK[wK-1]=sK[rK[0X2]];else do MK[wK-0X0001]={zK,rK[0x2]};end;end;end;K(mK,MK);end;end;zK[EK[0x3]]=Ri(MK,UK,VK);else if zK[EK[2]]==zK[EK[0X0005]]then nK=EK[0X3];end;end;else if dK==0Xc then zK[EK[3]]=EK[7];else do(zK)[EK[3]]={S({},0X00001,EK[2])};end;end;end;end;else do if not(dK>=7)then zK[EK[0X3]]=UK[EK[0X7]];else if dK~=8 then repeat local VK,MK,aK=mK,zK,EK[3];local gK={};for wK,rK in W,VK do for lK,LK in W,rK do if LK[1]==MK and LK[0X2]>=aK then local DK=(LK[0x02]);if not(not gK[DK])then else(gK)[DK]={MK[DK]};end;(LK)[0X1]=gK[DK];do(LK)[0X2]=1;end;end;end;end;until true;else local VK=EK[2];local MK=zK[VK];for aK=VK+0x001,EK[0X5]do MK=MK..zK[aK];end;zK[EK[3]]=MK;end;end;end;end;else if not(dK<3)then if not(dK>=4)then zK[0X001]=UK[EK[7]];nK=nK+0x1;do nK=nK+0X0001;end;nK=nK+1;do zK[2]=zK[0X0];end;EK=eK[nK];do nK=nK+0X1;end;zK[0X1][EK[7]]=zK[0X00002];EK=eK[nK];nK=nK+0X1;zK[0X1]=UK[EK[7]];nK=nK+1;nK=nK+1;nK=nK+0x1;QK=0x001;local wK=0x1;(zK[QK])();QK=QK-1;EK=eK[nK];nK=nK+0X1;(zK)[0x1]=UK[EK[0x7]];do EK=eK[nK];end;nK=nK+0X01;do(zK)[1]=zK[1][EK[0X6]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];local VK=EK[0X0002];local aK=VK[0X9];nK=nK+1;local MK,gK=nil,#aK;do if not(gK>0X0)then else MK={};do for rK=1,gK do local lK=(aK[rK]);if lK[1]==0 then do(MK)[rK-0X0001]={zK,lK[2]};end;else do(MK)[rK-0x001]=sK[lK[2]];end;end;end;end;(K)(mK,MK);end;end;do zK[0X2]=Ri(MK,UK,VK);end;do nK=nK+1;end;(zK[wK])(zK[wK+0X01]);QK=wK-1;nK=nK+1;repeat local rK,lK=mK,(zK);local LK=({});for DK,ZK in W,rK do do for GK,OK in W,ZK do if OK[1]==lK and OK[0x2]>=0X000 then local tK=(OK[2]);if not(not LK[tK])then else do LK[tK]={lK[tK]};end;end;(OK)[1]=LK[tK];(OK)[0X2]=1;end;end;end;end;until true;do return;end;else if dK~=5 then else do(zK)[EK[0X3]]=zK[EK[2]]^zK[EK[0X0005]];end;end;end;else do if dK>=1 then if dK~=2 then do nK=EK[0X002];end;else(zK)[EK[3]]=zK[EK[2]]%zK[EK[0X005]];end;else local VK=EK[3];local MK,aK,gK=zK[VK],zK[VK+0X01],zK[VK+2];zK[VK]=b(function()for wK=MK,aK,gK do o(true,wK);end;end);nK=EK[0X002];end;end;end;end;end;end;end;else _K=function(...)local zK=({});local nK=0x01;local pK=Q();local UK=((pK==z and KK or pK));local QK=(0);local NK,HK=vi(...);local CK=({[1]=xK,[2]=zK});NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+0x1];end;end;if not PK then HK=nil;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+1)};end;do if UK==pK then else(_)(_K,UK);end;end;do while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+1;if not(dK>=0X7)then if not(dK>=3)then do if dK>=0x0001 then if dK~=0X002 then zK[EK[0x3]]=CK[EK[2]];else do zK[EK[3]]=EK[7];end;end;else do zK[EK[0X3]]={S({},1,EK[0X2])};end;end;end;else if dK>=5 then do if dK~=6 then for VK=EK[0X3],EK[0x0002]do do zK[VK]=nil;end;end;else local VK=(EK[2]);local aK=(VK[0X0009]);local MK=nil;local gK=(#aK);if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0X1]~=0X0 then MK[wK-0x1]=sK[rK[0X2]];else MK[wK-1]={zK,rK[0X2]};end;end;K(mK,MK);end;zK[EK[3]]=Ri(MK,UK,VK);end;end;else if dK==0X4 then local VK=EK[0x3];local MK=zK[EK[0X2]];(zK)[VK+1]=MK;zK[VK]=MK[EK[6]];else do zK[1]=UK[EK[7]];end;nK=nK+1;nK=nK+0x1;nK=nK+1;(zK)[0X02]=zK[0];do EK=eK[nK];end;nK=nK+0X0001;zK[0x1][EK[7]]=zK[2];EK=eK[nK];nK=nK+0X1;zK[0X1]=UK[EK[7]];nK=nK+0x1;QK=0X1;(zK[QK])();do QK=QK-0X1;end;do nK=nK+0X01;end;nK=nK+1;EK=eK[nK];nK=nK+1;do zK[1]=UK[EK[7]];end;nK=nK+1;do nK=nK+0x001;end;EK=eK[nK];nK=nK+1;local wK=(1);(zK)[1]=zK[0x0001][EK[6]];nK=nK+0x1;nK=nK+1;EK=eK[nK];local VK=EK[2];do nK=nK+1;end;local aK=VK[0x9];local MK=(nil);local gK=#aK;do if not(gK>0)then else MK={};for rK=0X1,gK do local lK=(aK[rK]);if lK[0X01]~=0x0 then MK[rK-1]=sK[lK[0X02]];else do(MK)[rK-1]={zK,lK[2]};end;end;end;(K)(mK,MK);end;end;zK[0x2]=Ri(MK,UK,VK);nK=nK+0X1;(zK[wK])(zK[wK+0X1]);do QK=wK-0X1;end;nK=nK+0x001;do nK=nK+0X1;end;nK=nK+1;repeat local rK,lK=mK,(zK);local LK={};do for DK,ZK in W,rK do for GK,OK in W,ZK do do if OK[0x01]==lK and OK[0x02]>=0 then local tK=OK[0x2];do if not LK[tK]then do LK[tK]={lK[tK]};end;end;end;do(OK)[1]=LK[tK];end;(OK)[0x2]=0x0001;end;end;end;end;end;until true;return;end;end;end;else do if not(dK>=0X00b)then if not(dK<0X00009)then if dK==0Xa then local VK=(EK[3]);local MK,aK=zK[VK]();do if MK then for gK=0X1,EK[5]do zK[VK+gK]=aK[gK];end;nK=EK[0X002];end;end;else do(zK)[EK[0X03]]=UK[EK[7]];end;end;else if dK==8 then zK[EK[0X3]]=zK[EK[0X2]]<zK[EK[0X5]];else zK[EK[3]]=zK[EK[2]]>zK[EK[5]];end;end;else if dK<13 then if dK==12 then local VK=(EK[0x2]);local MK=zK[VK];for aK=VK+1,EK[0X5]do MK=MK..zK[aK];end;do(zK)[EK[3]]=MK;end;else nK=EK[2];end;else if dK==14 then else if not(zK[EK[0X2]]<=zK[EK[0X5]])then do nK=EK[3];end;end;end;end;end;end;end;end;end;end;end;else do _K=function(...)local nK,zK=1,{};local pK=Q();local NK,HK=vi(...);local CK={[1]=xK,[2]=zK};NK=NK-1;for EK=0,NK do if not(WK>EK)then break;else(zK)[EK]=HK[EK+1];end;end;local QK=0;local UK=((pK==z and KK or pK));if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+0X0001)};end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];do nK=nK+0X1;end;if dK>=0Xd then if dK<19 then if dK>=0X10 then if dK>=0X0011 then if dK~=0X0012 then do(zK)[EK[0X03]]=g(zK[EK[0X2]],zK[EK[5]]);end;else do repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[2]>=0)then else local LK=(lK[0X2]);if not(not aK[LK])then else do(aK)[LK]={MK[LK]};end;end;lK[1]=aK[LK];do lK[2]=1;end;end;end;end;until true;end;return;end;else do if not(zK[EK[0X2]]<=zK[EK[5]])then else do nK=EK[0X003];end;end;end;end;else if not(dK<14)then if dK==0Xf then(zK)[EK[3]]=not zK[EK[0X00002]];else(zK)[1]=UK[EK[0X7]];nK=nK+1;nK=nK+0X1;local MK=(sK[1]);EK=eK[nK];local VK=(1);nK=nK+1;do(zK)[0X1]=zK[0X1][EK[6]];end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;zK[0X00002]=EK[7];nK=nK+1;(zK[VK])(zK[VK+0X1]);QK=VK-0X1;nK=nK+0X0001;do(zK)[0X1]=MK[0X1][MK[2]];end;EK=eK[nK];do nK=nK+0X0001;end;zK[0X0001]=zK[1][EK[6]];EK=eK[nK];nK=nK+1;zK[0x1]=zK[0X1][EK[6]];nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+0X1;end;(zK)[1]=zK[0x1][EK[0X0006]];do nK=nK+0X0001;end;nK=nK+1;do EK=eK[nK];end;nK=nK+0X0001;(zK)[0X00001]=zK[1][EK[6]];EK=eK[nK];nK=nK+1;if zK[1]~=EK[0x6]then do nK=EK[0X0003];end;end;end;else zK[7]=UK[EK[0X07]];local VK=(0x07);EK=eK[nK];nK=nK+1;zK[7]=zK[7][EK[0X00006]];EK=eK[nK];nK=nK+0X0001;local MK=zK[7];zK[VK+0X1]=MK;do(zK)[VK]=MK[EK[6]];end;EK=eK[nK];nK=nK+0X1;zK[0X00009]=zK[6][EK[0X06]];nK=nK+1;VK=7;local aK=(sK[2]);(zK[VK])(zK[VK+0X1],zK[VK+2]);do QK=VK-1;end;nK=nK+0X01;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do zK[0X0007]=UK[EK[0X007]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+1;zK[0X0008]=EK[0X0007];nK=nK+1;do VK=7;end;zK[VK](zK[VK+1]);QK=VK-1;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;do(zK)[7]=UK[EK[7]];end;nK=nK+0X001;nK=nK+0X01;EK=eK[nK];nK=nK+0X1;do(zK)[7]=zK[7][EK[6]];end;EK=eK[nK];nK=nK+0X1;VK=7;MK=zK[0X7];(zK)[VK+0X1]=MK;do zK[VK]=MK[EK[6]];end;do EK=eK[nK];end;nK=nK+0X0001;do zK[9]=UK[EK[7]];end;nK=nK+0X1;do nK=nK+0X1;end;nK=nK+0X1;zK[10]=aK[1][aK[2]];EK=eK[nK];nK=nK+1;do(zK)[10]=zK[10][EK[0X06]];end;EK=eK[nK];nK=nK+1;zK[11]=zK[2]+EK[0X6];nK=nK+1;zK[10]=zK[10][zK[11]];do nK=nK+1;end;nK=nK+1;nK=nK+0X1;do(zK)[9]=zK[0X0009][zK[10]];end;EK=eK[nK];nK=nK+0X1;do(zK)[0X9]=zK[0X0009][EK[6]];end;nK=nK+0X001;nK=nK+1;nK=nK+1;VK=7;(zK[VK])(zK[VK+0X1],zK[VK+0X02]);QK=VK-1;nK=nK+0X1;do nK=nK+1;end;EK=eK[nK];do nK=nK+0X0001;end;do zK[7]=EK[0X007];end;do nK=nK+1;end;(zK)[0]=zK[7];EK=eK[nK];nK=nK+0x1;nK=EK[0x02];end;end;else if dK<22 then if not(dK>=20)then local VK=sK[0X02];zK[0X007]=VK[0x1][VK[2]];EK=eK[nK];nK=nK+1;zK[0X7]=zK[0X7][EK[6]];EK=eK[nK];nK=nK+0X1;zK[0X008]=zK[2]+EK[6];do nK=nK+1;end;zK[0X0007]=zK[0X7][zK[0X8]];do EK=eK[nK];end;nK=nK+0x1;if zK[7]~=zK[0X5]then nK=EK[0X0003];end;else if dK==21 then local VK=sK[0X0];(zK)[1]=VK[0x1][VK[0X00002]];nK=nK+0X0001;nK=nK+0X00001;EK=eK[nK];do nK=nK+0X1;end;do if not(not zK[0x1])then else nK=EK[2];end;end;else do(zK)[1]=UK[EK[7]];end;local VK=sK[0X00002];nK=nK+0x01;nK=nK+0X1;nK=nK+0x1;zK[0X2]=VK[1][VK[0X2]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0x1;do zK[0X2]=zK[0x002][EK[0X6]];end;local gK,MK=4,(0X1);nK=nK+0X1;local aK=0x2;if aK==0X0 then else QK=MK+aK-0X1;end;local wK,rK=nil,nil;if aK~=0X001 then do wK,rK=vi(zK[MK](S(zK,MK+1,QK)));end;else wK,rK=vi(zK[MK]());end;if gK~=1 then if gK~=0X00 then do wK=MK+gK-0x002;end;QK=wK+0X1;else wK=wK+MK-0x1;QK=wK;end;local LK=(0X0);for DK=MK,wK do LK=LK+1;zK[DK]=rK[LK];end;else do QK=MK-0X1;end;end;do nK=nK+0x1;end;nK=nK+0X1;EK=eK[nK];nK=nK+1;do MK=0x1;end;local lK=(b(function(...)(o)();do for LK,DK in...do o(true,LK,DK);end;end;end));lK(zK[MK],zK[MK+1],zK[MK+0X2]);QK=MK;do zK[MK]=lK;end;nK=EK[2];end;end;else do if dK<0X18 then if dK~=23 then zK[4]=UK[EK[0x7]];do EK=eK[nK];end;do nK=nK+0X0001;end;do zK[0X5]=UK[EK[0X00007]];end;local VK=(4);nK=nK+1;local MK,aK=2,(0X4);if MK==0X0 then else do QK=VK+MK-0X1;end;end;local gK,wK=nil,(nil);if MK~=0x1 then gK,wK=vi(zK[VK](S(zK,VK+1,QK)));else gK,wK=vi(zK[VK]());end;if aK~=0X00001 then do if aK~=0 then gK=VK+aK-2;QK=gK+1;else gK=gK+VK-0x1;QK=gK;end;end;local lK=(0);for LK=VK,gK do lK=lK+0x1;(zK)[LK]=wK[lK];end;else QK=VK-1;end;EK=eK[nK];nK=nK+1;VK=0X4;local rK=(b(function(...)(o)();for lK,LK in...do o(true,lK,LK);end;end));(rK)(zK[VK],zK[VK+0X1],zK[VK+2]);QK=VK;(zK)[VK]=rK;nK=EK[0X2];else zK[0X01]=UK[EK[7]];do nK=nK+0X1;end;do nK=nK+0X00001;end;nK=nK+1;QK=1;zK[QK]=zK[QK]();do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X1;do if not(not zK[1])then else nK=EK[0X00002];end;end;end;else if dK~=0X19 then do zK[EK[0X003]]=EK[0X7];end;else(zK)[0X4]=UK[EK[0X7]];nK=nK+1;nK=nK+0x1;do EK=eK[nK];end;local VK=0X4;nK=nK+0X1;do(zK)[5]=UK[EK[7]];end;do EK=eK[nK];end;nK=nK+0x1;(zK)[5]=zK[5][EK[0X6]];nK=nK+1;nK=nK+0X1;nK=nK+1;zK[VK]=zK[VK](zK[VK+1]);do QK=VK;end;EK=eK[nK];nK=nK+1;if zK[3]==zK[0X4]then else nK=EK[0X0003];end;end;end;end;end;end;else if dK>=6 then if not(dK>=9)then if not(dK>=0x007)then else if dK==8 then do(zK)[0X00001]=UK[EK[0X00007]];end;nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X001;zK[1]=zK[0X0001][EK[0X6]];do nK=nK+0X1;end;do nK=nK+0X1;end;do EK=eK[nK];end;do nK=nK+1;end;do if not(not zK[1])then else nK=EK[0X2];end;end;else(zK[EK[0X3]])[zK[EK[2]]]=zK[EK[0X5]];end;end;else if dK>=11 then if dK==0x0000c then do for VK=EK[0X3],EK[0X2]do do zK[VK]=nil;end;end;end;else do(zK)[EK[0x00003]]={S({},1,EK[0X2])};end;end;else do if dK~=0XA then do zK[EK[3]]=UK[EK[0X7]];end;else local VK=EK[0X00003];local MK,aK,gK=zK[VK]();if MK then(zK)[VK+1]=aK;(zK)[VK+2]=gK;nK=EK[2];end;end;end;end;end;else do if dK>=0X00003 then if not(dK<4)then if dK~=5 then do(zK)[0X1]=UK[EK[0X07]];end;do nK=nK+1;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;local VK=(1);(zK)[0X00002]=EK[7];nK=nK+1;(zK)[VK]=zK[VK](zK[VK+0X1]);QK=VK;do EK=eK[nK];end;nK=nK+0X00001;if not(not zK[1])then else nK=EK[2];end;else(zK)[0x0001]=UK[EK[7]];nK=nK+0x01;nK=nK+0X1;do nK=nK+1;end;QK=0X1;(zK[QK])();QK=QK-0x001;nK=nK+1;nK=nK+0x1;do EK=eK[nK];end;nK=nK+0X0001;nK=EK[2];end;else zK[EK[0X3]]=zK[EK[0x002]]>zK[EK[0X005]];end;else if dK<0X001 then nK=EK[2];else if dK==2 then local VK,MK=EK[2],(nil);local aK=VK[9];local gK=(#aK);if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);if rK[0X1]~=0 then(MK)[wK-0X1]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X0002]};end;end;(K)(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;else if zK[EK[3]]then nK=EK[0x02];end;end;end;end;end;end;end;end;end;end;end;end;else if SK<2 then if SK~=1 then _K=function(...)local nK,zK=0X1,{};local pK=Q();local CK={[1]=xK,[2]=zK};local QK=(0);local NK,HK=vi(...);NK=NK-0X1;local UK=(pK==z and KK or pK);for EK=0X00000,NK do if WK>EK then zK[EK]=HK[EK+0X1];else do break;end;end;end;do if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+1,NK+1)};end;end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=EK[1];nK=nK+0x1;do if dK>=0X7 then if not(dK<0Xa)then if not(dK>=12)then if dK==11 then zK[EK[0X0003]]=EK[0x7];else(zK)[EK[0X003]]={S({},1,EK[0X2])};end;else if dK==0Xd then local VK=EK[0x3];for MK=VK,VK+(EK[2]-1)do do(zK)[MK]=HK[WK+(MK-VK)+0X001];end;end;else zK[EK[3]]=L(zK[EK[0x2]],zK[EK[5]]);end;end;else if dK>=8 then do if dK==0x09 then local VK=EK[2];local MK=(zK[VK]);do for aK=VK+0x1,EK[5]do MK=MK..zK[aK];end;end;zK[EK[3]]=MK;else(zK)[EK[0X3]]=zK[EK[2]]==zK[EK[0x5]];end;end;else if not(zK[EK[2]]<zK[EK[5]])then else nK=EK[3];end;end;end;else do if not(dK<0X3)then if not(dK<5)then if dK==6 then zK[EK[0X003]]=UK[EK[0x7]];else local VK=EK[2];local MK=(nil);local aK=VK[9];local gK=(#aK);if not(gK>0X0)then else do MK={};end;for wK=1,gK do local rK=aK[wK];do if rK[0x01]~=0 then MK[wK-1]=sK[rK[2]];else(MK)[wK-1]={zK,rK[0X00002]};end;end;end;K(mK,MK);end;(zK)[EK[0X0003]]=Ri(MK,UK,VK);end;else if dK==4 then zK[0X001]=UK[EK[0x7]];nK=nK+1;do nK=nK+1;end;do nK=nK+1;end;zK[2]=zK[0X0];EK=eK[nK];nK=nK+0x001;(zK[1])[EK[7]]=zK[2];EK=eK[nK];nK=nK+0x1;(zK)[0x0001]=UK[EK[7]];do nK=nK+1;end;QK=1;zK[QK]();do QK=QK-0x001;end;do nK=nK+1;end;repeat local VK,MK=mK,zK;local aK={};for gK,wK in W,VK do for rK,lK in W,wK do if lK[1]==MK and lK[2]>=0 then local LK=(lK[2]);do if not aK[LK]then(aK)[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;do lK[2]=0X1;end;end;end;end;until true;return;else end;end;else do if dK<1 then do nK=EK[2];end;else if dK==0X002 then do zK[EK[3]]=zK[EK[0x0002]]~=zK[EK[0x5]];end;else if zK[EK[2]]<=zK[EK[0X5]]then do nK=EK[0x003];end;end;end;end;end;end;end;end;end;end;end;else _K=function(...)local zK=({});local nK=(1);local pK=(Q());local NK,HK=vi(...);local CK,UK={[1]=xK,[2]=zK},(pK==z and KK or pK);do NK=NK-1;end;local QK=0;for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X0001];else break;end;end;if not PK then do HK=nil;end;elseif YK then zK[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0x00001,NK+1)};end;if UK~=pK then _(_K,UK);end;do while true do local EK=eK[nK];local dK=(EK[0X0001]);nK=nK+1;do if dK<17 then if not(dK<0X8)then if not(dK<0XC)then if not(dK>=14)then if dK==0X0d then local VK=(EK[3]);local MK=(b(function(...)(o)();for aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK in...do o(true,{aK,gK,wK,rK,lK,LK,DK,ZK,GK,OK});end;end));MK(zK[VK],zK[VK+0X001],zK[VK+2]);QK=VK;do(zK)[VK]=MK;end;do nK=EK[0X2];end;else local VK,MK=EK[0X00003],zK[EK[2]];zK[VK+1]=MK;zK[VK]=MK[EK[6]];end;else if dK<15 then zK[EK[3]]=EK[0x7];else if dK~=0X10 then repeat local VK,MK=mK,zK;local aK={};do for gK,wK in W,VK do do for rK,lK in W,wK do do if not(lK[0X1]==MK and lK[0X2]>=0X0)then else local LK=lK[0x02];if not aK[LK]then(aK)[LK]={MK[LK]};end;(lK)[1]=aK[LK];do lK[2]=0X00001;end;end;end;end;end;end;end;until true;return;else zK[8]=UK[EK[7]];EK=eK[nK];nK=nK+1;do(zK)[0X8]=zK[8][EK[6]];end;do EK=eK[nK];end;nK=nK+0x001;(zK)[0x9]=UK[EK[7]];local VK=sK[5];do nK=nK+1;end;(zK)[10]=VK[1][VK[0X2]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[10]=zK[10][EK[0x6]];end;EK=eK[nK];do nK=nK+1;end;(zK)[0Xa]=zK[10][EK[6]];nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0X00001;(zK)[10]=zK[10][EK[6]];do nK=nK+1;end;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+0X001;end;do(zK)[10]=zK[0Xa][EK[6]];end;nK=nK+1;do nK=nK+0x1;end;local MK=(9);nK=nK+1;do(zK)[MK]=zK[MK](zK[MK+1]);end;QK=MK;do EK=eK[nK];end;nK=nK+0X1;if zK[0X8]==zK[9]then nK=EK[3];end;end;end;end;else do if not(dK>=0Xa)then if dK==9 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else zK[0X2]=UK[EK[0X0007]];nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+0X01;do(zK)[2]=zK[0x2][EK[0X00006]];end;nK=nK+0X1;nK=nK+1;EK=eK[nK];nK=nK+0x1;if not zK[2]then do nK=EK[2];end;end;end;else if dK~=11 then if zK[EK[2]]==EK[0X6]then else nK=EK[0X3];end;else local VK=sK[2];zK[6]=VK[1][VK[0x2]];nK=nK+1;nK=nK+0X1;EK=eK[nK];do nK=nK+1;end;do zK[6]=zK[6][EK[0X0006]];end;nK=nK+0x00001;do nK=nK+0X0001;end;EK=eK[nK];do nK=nK+1;end;(zK)[6]=zK[0X6][EK[6]];EK=eK[nK];nK=nK+1;(zK)[6]=zK[0X006][EK[6]];do nK=nK+1;end;zK[7]={};EK=eK[nK];nK=nK+0X1;do(zK[7])[EK[0X7]]=zK[0];end;EK=eK[nK];nK=nK+1;(zK)[0X8]=UK[EK[0x7]];nK=nK+1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X1;local gK=(0x0);zK[0x9]=EK[7];EK=eK[nK];nK=nK+0X1;zK[0Xa]=UK[EK[0X7]];do nK=nK+1;end;(zK)[0X000B]=zK[7];nK=nK+0X001;local aK=2;local MK=10;if aK==0X0 then else QK=MK+aK-0x0001;end;local wK,rK=nil,nil;if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+0x1,QK)));else wK,rK=vi(zK[MK]());end;do if gK~=0X00001 then do if gK==0 then wK=wK+MK-1;QK=wK;else wK=MK+gK-2;QK=wK+1;end;end;local lK=0;for LK=MK,wK do do lK=lK+0x1;end;zK[LK]=rK[lK];end;else do QK=MK-1;end;end;end;nK=nK+0x01;nK=nK+1;do nK=nK+0X1;end;MK=8;zK[MK](S(zK,MK+0x1,QK));QK=MK-0X1;nK=nK+0X1;nK=nK+0x1;EK=eK[nK];nK=nK+0X1;do zK[0X8]=UK[EK[0X07]];end;nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;nK=nK+0X1;zK[0x0008]=zK[0x00008][EK[6]];nK=nK+0X1;nK=nK+1;nK=nK+0X00001;do QK=0X08;end;(zK[QK])();QK=QK-0X01;do nK=nK+0x1;end;zK[8]={};EK=eK[nK];nK=nK+1;(zK[0X8])[EK[0X00007]]=zK[0X0];EK=eK[nK];nK=nK+0X1;zK[8][EK[7]]=zK[5];EK=eK[nK];do nK=nK+0x001;end;do zK[0X8][EK[0X7]]=EK[6];end;EK=eK[nK];do nK=nK+0X0001;end;zK[0X00008][EK[7]]=EK[0X00006];EK=eK[nK];nK=nK+0x1;do UK[EK[7]]=zK[8];end;do EK=eK[nK];end;nK=nK+0X001;(zK)[8]=UK[EK[7]];do EK=eK[nK];end;nK=nK+1;(zK)[0X9]=EK[7];do EK=eK[nK];end;do nK=nK+1;end;(zK)[10]=UK[EK[0X7]];EK=eK[nK];nK=nK+1;zK[0XB]=UK[EK[7]];do nK=nK+1;end;MK=0X000A;aK=2;gK=0;if aK~=0X0 then do QK=MK+aK-0X1;end;end;wK,rK=nil;if aK==0X1 then wK,rK=vi(zK[MK]());else do wK,rK=vi(zK[MK](S(zK,MK+0X0001,QK)));end;end;if gK~=0X1 then if gK==0 then do wK=wK+MK-0X1;end;QK=wK;else wK=MK+gK-2;QK=wK+0X001;end;local lK=(0X00);for LK=MK,wK do lK=lK+0x0001;(zK)[LK]=rK[lK];end;else QK=MK-0X1;end;nK=nK+0X1;MK=0X8;(zK[MK])(S(zK,MK+1,QK));QK=MK-0X1;nK=nK+1;nK=nK+1;nK=nK+0X1;do VK=sK[0X002];end;zK[8]=VK[0X1][VK[2]];EK=eK[nK];nK=nK+0X01;do(zK)[8]=zK[8][EK[6]];end;EK=eK[nK];nK=nK+0X1;(zK)[0X8]=zK[8][EK[0X00006]];nK=nK+0X01;(zK)[0X9]=zK[0X6];EK=eK[nK];do nK=nK+1;end;do zK[0X8][EK[0X0007]]=zK[0x9];end;do nK=nK+1;end;zK[0X8]={};EK=eK[nK];nK=nK+0X00001;(zK[8])[EK[0X7]]=zK[0x0];EK=eK[nK];do nK=nK+1;end;zK[9]=UK[EK[7]];EK=eK[nK];nK=nK+1;do(zK)[0XA]=EK[0X7];end;EK=eK[nK];nK=nK+0X1;zK[11]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+0X0001;do nK=nK+1;end;(zK)[0Xc]=zK[8];do nK=nK+0X1;end;do MK=11;end;aK=0X2;gK=0;if aK~=0X00 then QK=MK+aK-1;end;wK,rK=nil;if aK~=1 then wK,rK=vi(zK[MK](S(zK,MK+0x1,QK)));else wK,rK=vi(zK[MK]());end;if gK==0X1 then do QK=MK-0X001;end;else if gK~=0 then do wK=MK+gK-2;end;QK=wK+1;else wK=wK+MK-1;do QK=wK;end;end;local lK=(0X00);do for LK=MK,wK do lK=lK+0X1;zK[LK]=rK[lK];end;end;end;nK=nK+1;MK=9;(zK[MK])(S(zK,MK+1,QK));do QK=MK-0X00001;end;nK=nK+0X1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+0X1;nK=EK[0X00002];end;end;end;end;else if not(dK<0X4)then if not(dK>=6)then if dK==0X5 then(zK)[EK[0X3]]=zK[EK[0X002]][EK[6]];else if not zK[EK[3]]then do nK=EK[2];end;end;end;else if dK~=0X0007 then zK[2]=UK[EK[7]];do EK=eK[nK];end;do nK=nK+1;end;zK[2]=zK[0X2][EK[6]];nK=nK+0X00001;nK=nK+0X01;nK=nK+0X1;QK=2;(zK)[QK]=zK[QK]();nK=nK+0X0001;nK=nK+0X0001;do EK=eK[nK];end;do nK=nK+1;end;if not zK[0X00002]then nK=EK[0X2];end;else(zK)[7]=UK[EK[0X7]];do nK=nK+1;end;do nK=nK+0X1;end;EK=eK[nK];do nK=nK+0X001;end;zK[0X7]=zK[7][EK[0X6]];nK=nK+1;do nK=nK+0X1;end;EK=eK[nK];nK=nK+1;do if zK[0X7]==EK[6]then nK=EK[0X3];end;end;end;end;else if dK>=0X2 then if dK==0X3 then if zK[EK[0X3]]then nK=EK[2];end;else nK=EK[0X2];end;else if dK==0x1 then local VK=(EK[0X2]);local MK=(nil);local aK=(VK[0X00009]);local gK=(#aK);if gK>0 then MK={};for wK=1,gK do local rK=(aK[wK]);do if rK[1]~=0 then do MK[wK-0x1]=sK[rK[0x2]];end;else MK[wK-1]={zK,rK[2]};end;end;end;K(mK,MK);end;(zK)[EK[3]]=Ri(MK,UK,VK);else(zK)[EK[0X3]]={S({},1,EK[2])};end;end;end;end;else if dK<25 then if dK>=0X0015 then if not(dK<0x17)then if dK~=0x18 then UK[EK[7]]=zK[EK[0X003]];else(zK)[EK[3]]=zK[EK[0x2]]==zK[EK[5]];end;else if dK~=22 then(zK)[EK[3]]=-zK[EK[0X2]];else local VK=sK[0X2];zK[6]=VK[0X1][VK[0X0002]];nK=nK+1;nK=nK+1;EK=eK[nK];nK=nK+0X1;zK[6]=zK[6][EK[6]];nK=nK+0X01;nK=nK+1;EK=eK[nK];nK=nK+1;do(zK)[6]=zK[0X6][EK[0x00006]];end;do nK=nK+0x1;end;do nK=nK+1;end;EK=eK[nK];nK=nK+0x1;if zK[6]~=EK[0x0006]then nK=EK[0x3];end;end;end;else if not(dK<0X013)then if dK~=0X14 then zK[6]=UK[EK[7]];do EK=eK[nK];end;do nK=nK+0x0001;end;(zK)[7]=EK[7];EK=eK[nK];nK=nK+1;do(zK)[0x8]=UK[EK[7]];end;local VK=0x6;EK=eK[nK];nK=nK+1;(zK)[8]=zK[0x08][EK[6]];nK=nK+1;(zK[VK])(zK[VK+0X1],zK[VK+0X00002]);QK=VK-0X001;nK=nK+0X1;nK=nK+0X1;do EK=eK[nK];end;do nK=nK+1;end;nK=EK[0X2];else local VK=(EK[3]);local MK,aK,gK=zK[VK]();if MK then zK[VK+1]=aK;do zK[VK+2]=gK;end;nK=EK[0x2];end;end;else if dK==0X12 then local VK=(EK[0x3]);local MK,aK=zK[VK]();if not(MK)then else for gK=0X01,EK[5]do do(zK)[VK+gK]=aK[gK];end;end;do nK=EK[2];end;end;else do zK[EK[3]]=l(zK[EK[0X2]]);end;end;end;end;else if not(dK<29)then if dK<0X1F then do if dK~=0X1e then else local VK=sK[0X4];do(zK)[0X6]=VK[1][VK[2]];end;local MK=6;EK=eK[nK];do nK=nK+1;end;local aK=(zK[6]);(zK)[MK+0X1]=aK;zK[MK]=aK[EK[0X6]];do EK=eK[nK];end;do nK=nK+1;end;(zK)[8]=UK[EK[7]];nK=nK+1;do nK=nK+0X1;end;do EK=eK[nK];end;nK=nK+1;zK[0x08]=zK[0X8][EK[6]];do EK=eK[nK];end;nK=nK+1;do zK[9]=EK[0x007];end;nK=nK+1;zK[0XA]=zK[0X00003];nK=nK+0X1;local gK=(4);do zK[11]=zK[0X00004];end;nK=nK+0X001;MK=8;local wK=0X0;if gK==0 then else do QK=MK+gK-1;end;end;local rK,lK=nil,(nil);do if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else do rK,lK=vi(zK[MK]());end;end;end;if wK==1 then do QK=MK-1;end;else if wK~=0 then rK=MK+wK-2;QK=rK+1;else rK=rK+MK-1;QK=rK;end;local LK=0;for DK=MK,rK do LK=LK+1;do zK[DK]=lK[LK];end;end;end;do nK=nK+1;end;nK=nK+1;do nK=nK+1;end;MK=6;(zK[MK])(S(zK,MK+0X1,QK));QK=MK-1;nK=nK+0X1;nK=nK+1;EK=eK[nK];do nK=nK+0X01;end;zK[6]=UK[EK[0x7]];EK=eK[nK];do nK=nK+0X01;end;(zK)[6]=zK[6][EK[6]];nK=nK+1;nK=nK+0X0001;do EK=eK[nK];end;nK=nK+1;do if zK[0x6]~=EK[6]then do nK=EK[0x3];end;end;end;end;end;else do if not(dK>=0X20)then(zK)[EK[0X3]]=UK[EK[0X7]];else if dK~=33 then local VK=(sK[2]);(zK)[0X07]=VK[0X0001][VK[2]];EK=eK[nK];nK=nK+1;zK[7]=zK[0X7][EK[6]];EK=eK[nK];nK=nK+1;zK[7]=zK[7][EK[6]];do nK=nK+0X1;end;nK=nK+1;EK=eK[nK];nK=nK+0x0001;if zK[7]==EK[6]then else do nK=EK[0x3];end;end;else(zK)[0x00009]=zK[0X8][EK[0x6]];do EK=eK[nK];end;local VK=(9);nK=nK+0X01;(zK)[9]=zK[9][EK[0x6]];do nK=nK+0x001;end;zK[0X0]=zK[0X9];EK=eK[nK];nK=nK+1;(zK)[0X00009]=zK[8][EK[6]];do EK=eK[nK];end;nK=nK+1;local MK=(zK[9]);do(zK)[VK+0x1]=MK;end;(zK)[VK]=MK[EK[0X0006]];do nK=nK+1;end;VK=9;(zK)[VK]=zK[VK](zK[VK+0X1]);do QK=VK;end;nK=nK+1;do nK=nK+1;end;EK=eK[nK];nK=nK+1;(UK)[EK[0x0007]]=zK[0X9];EK=eK[nK];do nK=nK+0X1;end;nK=EK[0X2];end;end;end;end;else do if dK>=0X1B then if dK==28 then local VK=sK[0];do zK[2]=VK[0X1][VK[2]];end;nK=nK+0x00001;nK=nK+0X1;EK=eK[nK];nK=nK+0X1;if not zK[2]then nK=EK[2];end;else zK[0X0006]=UK[EK[0X7]];nK=nK+0X1;nK=nK+1;nK=nK+1;local VK=(sK[3]);(zK)[0X07]=VK[0x1][VK[2]];nK=nK+0X1;nK=nK+1;do EK=eK[nK];end;do nK=nK+1;end;zK[7]=zK[7][EK[0x06]];nK=nK+1;local gK=0X002;nK=nK+0X1;EK=eK[nK];nK=nK+1;do zK[7]=zK[0X7][EK[0x6]];end;nK=nK+0x1;nK=nK+1;EK=eK[nK];local aK=zK[0x7];do nK=nK+1;end;local MK=(0x07);zK[MK+0X1]=aK;(zK)[MK]=aK[EK[6]];nK=nK+1;MK=0X007;local wK=0;if gK~=0X00 then QK=MK+gK-0X1;end;local rK,lK=nil,(nil);if gK~=0x00001 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else rK,lK=vi(zK[MK]());end;if wK==0X001 then QK=MK-0X00001;else if wK~=0X0 then rK=MK+wK-2;QK=rK+1;else rK=rK+MK-0x1;do QK=rK;end;end;local DK=(0X0);for ZK=MK,rK do DK=DK+1;(zK)[ZK]=lK[DK];end;end;nK=nK+0X001;MK=0X6;do gK=0X00;end;wK=0X4;if gK==0X00 then else QK=MK+gK-1;end;rK,lK=nil;if gK~=1 then rK,lK=vi(zK[MK](S(zK,MK+1,QK)));else do rK,lK=vi(zK[MK]());end;end;do if wK==1 then QK=MK-0X1;else if wK~=0X0 then rK=MK+wK-0X0002;QK=rK+0X1;else rK=rK+MK-1;QK=rK;end;local DK=(0);do for ZK=MK,rK do DK=DK+1;zK[ZK]=lK[DK];end;end;end;end;nK=nK+1;nK=nK+1;EK=eK[nK];do nK=nK+1;end;MK=6;local LK=b(function(...)o();do for DK,ZK in...do o(true,DK,ZK);end;end;end);(LK)(zK[MK],zK[MK+0X01],zK[MK+0x00002]);QK=MK;(zK)[MK]=LK;do nK=EK[2];end;end;else do if dK~=0X1A then do zK[10]=zK[0X0008][EK[0X6]];end;nK=nK+0x1;nK=nK+1;do EK=eK[nK];end;nK=nK+1;do if zK[10]~=EK[6]then do nK=EK[0x03];end;end;end;else local VK=(sK[0X1]);(zK)[0X2]=VK[1][VK[2]];do nK=nK+0X01;end;nK=nK+1;EK=eK[nK];local MK=0x0002;nK=nK+1;zK[0X3]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+1;zK[0X0004]=EK[7];nK=nK+0X01;local aK=(3);if aK==0x000 then else QK=MK+aK-0X00001;end;local wK,rK,gK=nil,nil,(0x00005);do if aK==1 then wK,rK=vi(zK[MK]());else wK,rK=vi(zK[MK](S(zK,MK+0X1,QK)));end;end;do if gK~=0x0001 then if gK==0 then wK=wK+MK-0X01;QK=wK;else do wK=MK+gK-0x0002;end;QK=wK+0X1;end;local lK=0X00000;for LK=MK,wK do do lK=lK+0X1;end;zK[LK]=rK[lK];end;else do QK=MK-0x1;end;end;end;do nK=nK+1;end;nK=nK+1;EK=eK[nK];nK=nK+0X0001;if not(not zK[2])then else do nK=EK[0X2];end;end;end;end;end;end;end;end;end;end;end;end;end;end;else if not(SK<3)then if SK==0X4 then _K=function(...)local nK=(0X1);local zK=({});local pK=(Q());local CK={[2]=zK,[1]=xK};local NK,HK=vi(...);do NK=NK-1;end;local QK=0X0000;for EK=0X0000,NK do if WK>EK then(zK)[EK]=HK[EK+1];else do break;end;end;end;local UK=(pK==z and KK or pK);if not PK then HK=nil;elseif YK then do(zK)[WK]={n=NK>=WK and NK-WK+1 or 0x00000,S(HK,WK+1,NK+0X1)};end;end;if UK==pK then else(_)(_K,UK);end;while true do local EK=(eK[nK]);local dK=(EK[0X1]);nK=nK+0X1;if not(dK<7)then if not(dK>=10)then if dK<0X008 then local MK=(EK[0X2]);local VK=EK[0X00003];if MK~=0X000 then do QK=VK+MK-0X1;end;end;local aK=EK[5];local gK,wK=nil,nil;if MK~=1 then gK,wK=vi(zK[VK](S(zK,VK+0x1,QK)));else gK,wK=vi(zK[VK]());end;if aK==0X1 then do QK=VK-0x1;end;else if aK==0X0 then do gK=gK+VK-1;end;do QK=gK;end;else gK=VK+aK-2;do QK=gK+0X0001;end;end;local rK=(0X000);for lK=VK,gK do rK=rK+1;(zK)[lK]=wK[rK];end;end;else if dK~=0X9 then else nK=EK[0X2];end;end;else if dK<12 then if dK==11 then(zK)[EK[0X3]]=zK[EK[2]][zK[EK[5]]];else(zK)[EK[0X3]]=D(zK[EK[2]],zK[EK[0x5]]);end;else do if dK~=13 then(zK)[EK[3]]={S({},0X01,EK[0X0002])};else do zK[EK[0x3]]=zK[EK[0x002]]==zK[EK[5]];end;end;end;end;end;else if dK<0X3 then if not(dK>=0x1)then zK[EK[3]]=EK[7];else do if dK~=2 then local VK=EK[2];local aK=VK[0X00009];local MK=(nil);local gK=#aK;if not(gK>0X0)then else do MK={};end;do for wK=0X1,gK do local rK=(aK[wK]);if rK[0X1]==0 then(MK)[wK-0X00001]={zK,rK[2]};else MK[wK-1]=sK[rK[2]];end;end;end;K(mK,MK);end;do(zK)[EK[0X3]]=i[EK[5]](MK);end;else local VK=EK[2];local aK=(VK[0x9]);local MK=(nil);local gK=#aK;if gK>0 then MK={};for wK=0X1,gK do local rK=aK[wK];if rK[0X1]~=0 then(MK)[wK-0X1]=sK[rK[0X002]];else(MK)[wK-1]={zK,rK[0X2]};end;end;K(mK,MK);end;do(zK)[EK[3]]=Ri(MK,UK,VK);end;end;end;end;else if dK>=0X5 then do if dK~=6 then do(zK)[EK[3]]=UK[EK[7]];end;else zK[0X1]=UK[EK[0X7]];nK=nK+1;zK[2]=zK[0X0];do EK=eK[nK];end;nK=nK+0X01;zK[1][EK[7]]=zK[2];EK=eK[nK];nK=nK+0x01;do zK[0X00001]=UK[EK[0x07]];end;nK=nK+0X1;QK=1;(zK[QK])();QK=QK-0x1;nK=nK+0X1;nK=nK+1;nK=nK+1;repeat local VK,MK,aK=mK,zK,{};for gK,wK in W,VK do do for rK,lK in W,wK do if not(lK[1]==MK and lK[0X2]>=0X0)then else local LK=lK[0X2];if not aK[LK]then do aK[LK]={MK[LK]};end;end;do lK[1]=aK[LK];end;lK[2]=1;end;end;end;end;until true;do return;end;end;end;else if dK==4 then for VK=EK[3],EK[2]do(zK)[VK]=nil;end;else local MK=EK[0x002];local VK=EK[0X3];do QK=VK+MK-0X1;end;repeat local aK,gK,wK=mK,zK,{};for rK,lK in W,aK do for LK,DK in W,lK do do if DK[0X01]==gK and DK[0X2]>=0x00000 then local ZK=(DK[0X2]);if not(not wK[ZK])then else(wK)[ZK]={gK[ZK]};end;DK[1]=wK[ZK];do DK[0x2]=0X1;end;end;end;end;end;until true;do return zK[VK](S(zK,VK+1,QK));end;end;end;end;end;end;end;else _K=function(...)local nK=(1);local zK={};local pK=(Q());local CK,QK={[2]=zK,[1]=xK},0x0;local NK,HK=vi(...);local UK=((pK==z and KK or pK));NK=NK-0X1;do for EK=0,NK do if WK>EK then(zK)[EK]=HK[EK+0X1];else break;end;end;end;if not PK then HK=nil;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+1 or 0,S(HK,WK+0X1,NK+1)};end;if UK~=pK then _(_K,UK);end;while true do local EK=eK[nK];local dK=(EK[1]);nK=nK+1;if not(dK>=8)then if dK>=4 then if dK>=0x6 then if dK~=7 then(zK)[1]=UK[EK[0X007]];nK=nK+0x1;(zK)[0X02]=zK[0x000];EK=eK[nK];do nK=nK+1;end;zK[0X00001][EK[7]]=zK[2];do EK=eK[nK];end;do nK=nK+1;end;do(zK)[1]=UK[EK[7]];end;do nK=nK+0x0001;end;QK=1;(zK[QK])();QK=QK-1;local wK=(0X01);EK=eK[nK];do nK=nK+1;end;zK[0X01]=UK[EK[0X7]];do EK=eK[nK];end;nK=nK+0x01;(zK)[0X0001]=zK[1][EK[0X6]];do EK=eK[nK];end;local VK=EK[0X2];local aK=(VK[9]);do nK=nK+1;end;local MK=(nil);local gK=#aK;if not(gK>0X0)then else MK={};for rK=0X001,gK do local lK=(aK[rK]);if lK[1]~=0 then do MK[rK-1]=sK[lK[2]];end;else(MK)[rK-1]={zK,lK[0X2]};end;end;K(mK,MK);end;zK[2]=Ri(MK,UK,VK);nK=nK+1;zK[wK](zK[wK+0x1]);QK=wK-0X01;nK=nK+1;nK=nK+1;nK=nK+0X001;do repeat local LK=({});local rK,lK=mK,(zK);for DK,ZK in W,rK do do for GK,OK in W,ZK do if OK[1]==lK and OK[0X02]>=0x0 then local tK=OK[0X2];if not LK[tK]then LK[tK]={lK[tK]};end;OK[1]=LK[tK];(OK)[2]=0x1;end;end;end;end;until true;end;return;else if not(zK[EK[2]]<zK[EK[5]])then else do nK=EK[0X00003];end;end;end;else do if dK==5 then do for VK=EK[0X3],EK[2]do(zK)[VK]=nil;end;end;else local VK=EK[3];for MK=VK,VK+(EK[0X2]-1)do zK[MK]=HK[WK+(MK-VK)+0x001];end;end;end;end;else if not(dK<0X2)then if dK==0X3 then(zK)[EK[0X00003]]=EK[7];else(zK)[EK[3]]={S({},1,EK[2])};end;else do if dK~=0X1 then(zK)[EK[3]]=zK[EK[2]]%zK[EK[0X5]];else local VK=(EK[0X0002]);local aK=VK[9];local MK=nil;local gK=(#aK);if gK>0X00000 then do MK={};end;for wK=0X001,gK do local rK=(aK[wK]);do if rK[1]==0X000 then(MK)[wK-1]={zK,rK[0X00002]};else(MK)[wK-0X00001]=sK[rK[0X0002]];end;end;end;K(mK,MK);end;zK[EK[0X03]]=Ri(MK,UK,VK);end;end;end;end;else if dK>=12 then if dK<0XE then do if dK==0X0000d then(zK)[EK[3]]=true;else do nK=EK[0X2];end;end;end;else do if dK==0xF then zK[EK[0X3]]=EK[0X2];else(zK)[EK[0x3]]=UK[EK[7]];end;end;end;else if not(dK>=0XA)then if dK~=9 then else(zK)[EK[3]]=zK[EK[2]]-zK[EK[5]];end;else if dK~=0Xb then(zK)[EK[3]]=w(zK[EK[0X2]],zK[EK[0X5]]);else(zK)[EK[0X00003]]=zK[EK[2]]/zK[EK[0X0005]];end;end;end;end;end;end;end;else do _K=function(...)local zK=({});local nK=1;local CK={[1]=xK,[2]=zK};local pK=(Q());local NK,HK=vi(...);local QK=(0x000);do NK=NK-0X00001;end;for EK=0,NK do if not(WK>EK)then break;else zK[EK]=HK[EK+0X1];end;end;local UK=((pK==z and KK or pK));do if not PK then do HK=nil;end;elseif YK then(zK)[WK]={n=NK>=WK and NK-WK+0X01 or 0X0,S(HK,WK+0x1,NK+1)};end;end;do if UK==pK then else _(_K,UK);end;end;do while true do local EK=(eK[nK]);local dK=(EK[1]);nK=nK+0X1;if not(dK<8)then do if dK>=12 then if dK<14 then do if dK==0xD then(zK)[1]=UK[EK[0X7]];do nK=nK+1;end;nK=nK+0X01;do nK=nK+0x1;end;do QK=0X1;end;(zK[QK])();do QK=QK-1;end;nK=nK+1;do nK=nK+0X0001;end;nK=nK+0X0001;repeat local VK,MK=mK,zK;local aK=({});for gK,wK in W,VK do for rK,lK in W,wK do if not(lK[1]==MK and lK[0x2]>=0)then else local LK=(lK[0X2]);if not(not aK[LK])then else aK[LK]={MK[LK]};end;lK[1]=aK[LK];(lK)[2]=1;end;end;end;until true;do return;end;else do zK[EK[3]]=not zK[EK[0X2]];end;end;end;else if not(dK<0Xf)then do if dK~=16 then else do(zK)[EK[0X3]]=UK[EK[7]];end;end;end;else do if zK[EK[2]]~=zK[EK[0x05]]then else nK=EK[3];end;end;end;end;else if not(dK>=0X0000A)then if dK~=9 then do zK[1]=UK[EK[0X7]];end;EK=eK[nK];do nK=nK+0X01;end;(zK[0X1])[EK[0X7]]=EK[0X06];EK=eK[nK];do nK=nK+0X001;end;do nK=EK[2];end;else for VK=EK[3],EK[0X02]do(zK)[VK]=nil;end;end;else if dK==0x00B then local VK,MK=EK[0X3],zK[EK[0x2]];(zK)[VK+0x00001]=MK;zK[VK]=MK[EK[0x06]];else local MK=nil;local VK=(EK[2]);local aK=VK[0X9];local gK=(#aK);do if not(gK>0)then else do MK={};end;for wK=0X1,gK do local rK=(aK[wK]);if rK[1]==0X0000 then(MK)[wK-1]={zK,rK[2]};else MK[wK-0X1]=sK[rK[2]];end;end;K(mK,MK);end;end;do(zK)[EK[0X3]]=Ri(MK,UK,VK);end;end;end;end;end;else if dK>=0X004 then if not(dK<6)then if dK==7 then do if not(zK[EK[3]])then else do nK=EK[2];end;end;end;else do nK=EK[2];end;end;else if dK~=0X00005 then zK[1]=UK[EK[7]];nK=nK+1;do nK=nK+1;end;nK=nK+0X0001;(zK)[2]=zK[0X000];EK=eK[nK];nK=nK+1;(zK[0X1])[EK[7]]=zK[0X2];do EK=eK[nK];end;nK=nK+1;do nK=EK[0X0002];end;else do(CK)[EK[0x002]]=zK[EK[3]];end;end;end;else if not(dK>=2)then if dK~=0X1 then do(zK)[0X1]=UK[EK[0X7]];end;local VK=(1);nK=nK+0X01;nK=nK+0x001;nK=nK+0X01;(zK)[2]=zK[0x0];nK=nK+1;do(zK)[VK]=zK[VK](zK[VK+1]);end;do QK=VK;end;do EK=eK[nK];end;nK=nK+0X00001;if zK[0X0001]==EK[0X6]then else nK=EK[0X0003];end;else do(zK)[EK[3]]=EK[7];end;end;else if dK~=3 then if not(not zK[EK[3]])then else do nK=EK[2];end;end;else zK[EK[0X003]]={S({},1,EK[2])};end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;(_)(_K,KK);return _K;end;do continue;end;end;else do Ji={[2]=Ti};end;if not(not iK[1717884682])then RK=iK[1717884682];else RK=0x7a81Ef79;do(iK)[1717884682]=RK;end;end;do continue;end;end;end;end;local Ki=(qi());local qK=(0X0005B73356);while""do if qK~=95892310 then if qK==0X0896d2Bd then return Ri(nil,z,Ki);end;else Ki=Ri(nil,z,Ki)(qi,F,C,xi,Fi,t,A,k);do if not iK[0X25DB25De]then do qK=144102077;end;(iK)[635119070]=qK;else qK=iK[635119070];end;end;end;end;end)(2,35,bit32,0x4000,0X0013,string.gsub,9,type,setfenv,0X00008000,bit32.lshift,string.byte,table.insert,0X00004,127,0X1,bit32.rshift,string,nil,pcall,rawget,0X00007,0X000FB,string.char,tostring,rawset,coroutine,0X0,'\y\105\dEj\Q\120',5195,getfenv,bit32.bor,0x00003,16,string.sub,next,0X0005,function(...)do(...)[...]=nil;end;end,{},{51598,2762143860,0X67548B87,2523290551,0X6599Eed0,2612715272,4081772288,2974302422,2699719864})(...);
