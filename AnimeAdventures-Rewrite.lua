return(function(Un,An,Jn,EL,wn,_n,Bn,Xn,Ln,hn,Pn,uL,nn,Dn,mn,On,Hn,Nn,Rn,Fn,Sn,WL,bL,kn,fn,Cn,dn,qn,Mn,Zn,Kn,Yn,gn,pn,an,Qn,rn,Tn,eL,sn,b,u,E)local oL=({});local e,j,o,jL='\EC\067\j\097\Y\ \054',0.9144986837184833,1259547916,(2015623298);while"\*\109\J\Q\ q\073"do do if jL~=0X7823f882 then if jL~=0x6fF85dF9 then else j=Zn;do o=tonumber;end;break;end;else e=Jn;if not oL[2140979006]then jL=1878547961;oL[0x7f9CBF3e]=jL;else jL=oL[2140979006];end;end;end;end;local L,l=true,nil;local zL=(667911090);do repeat if zL~=667911090 then if zL~=0X4Cd38F69 then else l=tostring;break;end;else do L=pn;end;if not(not oL[0X000058A55D85])then do zL=oL[1487232389];end;else zL=0x00004CD38f69;(oL)[0X58a55d85]=zL;end;continue;end;until false;end;local I,y=nil,(0.5076835232477656);local v=(-0X06BDb477e);local a,s=2147483648,(Un);local lL=0X00002aA16039;do repeat if lL<0X018888C44 then y=sn;break;elseif lL<0X2Aa16039 and lL>0X15E52Ad3 then do if not(not oL[573485567])then lL=oL[573485567];else lL=367340243;oL[573485567]=lL;end;end;I=qn.char;continue;else if not(lL>0X18888c44)then else do v=gn;end;if not oL[1108652320]then lL=0X000018888c44;(oL)[0X4214b120]=lL;else do lL=oL[1108652320];end;end;continue;end;end;until false;end;local x=table.insert;local Z,z,q=false,0X3c82FFE3,false;local GL=1514402568;repeat if GL<=0X207F7AC7 then z=Rn;if not oL[0x78e34e89]then GL=725776762;do(oL)[2028162697]=GL;end;else GL=oL[0X078E34E89];end;continue;else if not(GL<0X5A43F308)then Z=rawget;if not(not oL[0X000075a09752])then GL=oL[0x000075A09752];else GL=0X000207f7AC7;(oL)[1973458770]=GL;end;else do q=Fn;end;break;end;end;until false;local c=true;local vL=(1710847372);local C=(1833631500);repeat if vL>1234940795 then c=fn;if not oL[480609876]then vL=0x499bb37b;(oL)[0X01ca58654]=vL;else vL=oL[0X1cA58654];end;do continue;end;else if not(vL<1710847372)then else C=4503599627370496;break;end;end;until false;local H,f=0.5135766048591707,(nil);local tL=0X00027Bc509B;local R=(nil);while-0X6c217A66 do if tL==0X27bC509B then H=Xn;if not(not oL[0X42903Da3])then tL=oL[0x000042903dA3];else do tL=675269950;end;oL[0X42903Da3]=tL;end;continue;elseif tL==675269950 then do R=function(qL,sL,RL)local FL,fL=nil,1913570689;while'\j2\052\118\^%'do do if not(fL>863592684)then if FL>=Qn then return qL[sL],qL[sL+_n],qL[sL+0X002],qL[sL+3],qL[sL+Sn],qL[sL+5],qL[sL+6],qL[sL+Hn],R(qL,sL+0X8,RL);elseif FL>=Hn then return qL[sL],qL[sL+0X001],qL[sL+mn],qL[sL+3],qL[sL+0x004],qL[sL+0X005],qL[sL+0X06],R(qL,sL+0X7,RL);elseif FL>=0x0006 then return qL[sL],qL[sL+0X1],qL[sL+2],qL[sL+3],qL[sL+4],qL[sL+0X5],R(qL,sL+0X0006,RL);elseif FL>=0X005 then return qL[sL],qL[sL+0X1],qL[sL+mn],qL[sL+0X00003],qL[sL+0X4],R(qL,sL+5,RL);elseif FL>=4 then return qL[sL],qL[sL+1],qL[sL+2],qL[sL+0X0003],R(qL,sL+Sn,RL);elseif FL>=3 then return qL[sL],qL[sL+0X0001],qL[sL+0X00002],R(qL,sL+0X3,RL);else if not(FL>=0X002)then return qL[sL],R(qL,sL+1,RL);else return qL[sL],qL[sL+1],R(qL,sL+0X2,RL);end;end;break;else if not(sL>RL)then else return;end;fL=0X337960EC;FL=RL-sL+1;continue;end;end;end;end;end;if not(not oL[456918694])then tL=oL[0X1b3C06a6];else tL=1048646533;do(oL)[456918694]=tL;end;end;else if tL~=0X0003E811385 then else do f=an;end;do break;end;end;end;end;local IL=0X795E2412;local Q=nil;local _,i=1389028334,(-0X00732eBcaF);while'\103\~\123\)z\114'do do if IL==2036212754 then if not(not oL[794258893])then IL=oL[794258893];else IL=0X00006e57F449;do(oL)[794258893]=IL;end;end;Q=getfenv;else _=Q();i=1;break;end;end;end;local m=(y(v(Nn,5),"(\.)(\.\)",function(qL,sL)if sL=="\072"then do H=o(qL);end;return"";else local RL=I(o(qL..sL,16));if H then local FL=c(RL,H);H=nil;return FL;else return RL;end;end;end));local V=string.match;local N,Y=4294967296,9007199254740992;local k,G=N-0X1,1843200380;local K,F,cL=-1657957672,nil,(1394872600);do repeat if cL==1394872600 then if not(not oL[0X00032A434c8])then cL=oL[849622216];else do cL=2137743767;end;do(oL)[0x032A434C8]=cL;end;end;G=Cn;continue;else if cL==2137743767 then do if not oL[1666535815]then cL=0x000584120a;oL[0X63555187]=cL;else do cL=oL[0X000063555187];end;end;end;K=Yn;continue;else if cL==92541450 then do F=function(qL,sL,RL)local FL,fL=nil,1153497767;while 0.286783436611888 do do if fL==0x000044C0fAa7 then do if not sL then do sL=0X1;end;end;end;do fL=0X0000186937DA;end;elseif fL==409548762 then if not(not RL)then else RL=#qL;end;fL=1515300209;else if fL==1515300209 then do fL=0X288601C;end;FL=RL-sL+0X1;continue;else if fL~=42491932 then else if FL>0X001f3d then return R(qL,sL,RL);else return s(qL,sL,RL);end;break;end;end;end;end;end;end;end;break;end;end;end;until false;end;local h=nil;local jn,yL=0.47908859530141545,0X66DB672;local M=nil;while"H\#\091"do if yL>0x66DB672 then if yL<0X1A3E9274 then M=On;if not oL[2054651729]then do yL=440308340;end;do(oL)[0x7A777f51]=yL;end;else yL=oL[2054651729];end;continue;else jn={};break;end;else if not oL[1013899578]then yL=399811369;oL[1013899578]=yL;else yL=oL[1013899578];end;h=kn.bor;do continue;end;end;end;local VL=(917120702);local t=true;local O=nil;local P=(nil);repeat do if VL<0X00036aA26BE then t=Kn;O={[0X00000]=1,2,0X004,8,16,0x000020,0x40,128,Ln,0x200,1024,0X0000800,4096,0X2000,16384,0x008000,0x010000,0X20000,262144,524288,1048576,0X200000,4194304,0X800000,16777216,33554432,67108864,134217728,268435456,0X20000000,hn,a,N,[0X23]=34359738368,[0X2A]=4398046511104,[49]=562949953421312};break;else do if not oL[2338940]then VL=386965253;(oL)[2338940]=VL;else do VL=oL[2338940];end;end;end;P={0X00007,5,0X4};continue;end;end;until false;local Gn=(function()G(nn);end);local d=function()local qL=0.763215268457061;local sL=(0X59EcE77F);do repeat if sL>1420730377 then sL=1293569746;do qL=t(m,i,i);end;else if sL<0x54AEA009 then do sL=0X0054AEa009;end;i=i+1;else if not(sL<1508697983 and sL>1293569746)then else return qL;end;end;end;until false;end;end;local Vn=nil;local B,xL=nil,662584609;local ln,A=false,true;do repeat if xL>40645644 and xL<0x277E3D21 then B=function()local qL,sL=f('<I\052',m,i);i=sL;return qL;end;break;elseif xL<0XDD65FFB then A=function(qL,sL,RL)local FL,fL=(qL/O[sL])%O[RL],(351581306);do while-495849379 do do if fL==351581306 then do fL=0X006CaEB991;end;FL=FL-FL%0X01;continue;else if fL~=0X06caEb991 then else return FL;end;end;end;end;end;end;if not(not oL[0X0000716C3B0e])then xL=oL[0X716c3B0E];else xL=0X0DD65ffB;(oL)[1902918414]=xL;end;continue;else if not(xL>0XDD65FfB)then else if not(not oL[850153899])then do xL=oL[850153899];end;else xL=0X0026C340C;oL[850153899]=xL;end;Vn=function(...)return(...)();end;ln={[0X2]=jn};continue;end;end;until false;end;local D=(function()local qL,sL=f("\<\i8",m,i);do i=sL;end;return qL;end);local U=(next);local bn=(function()local qL,sL,RL=306810290,nil,(1329607208);repeat if RL<0x4F403228 then i=sL;return qL;else if RL>0X3C956F67 then RL=1016426343;qL,sL=f('<\d',m,i);do continue;end;end;end;until false;end);local un=function()local qL=(0);local sL=0X0;do repeat local RL=t(m,i,i);i=i+1;qL=qL+((RL>0X07F and RL-128 or RL)*O[sL]);if RL<0X80 then return qL;end;sL=sL+7;until false;end;end;local en=false;local Wn=(nil);local zn,En,JL="",nil,(0X000596308d3);local on=nil;repeat if not(JL>0X18957816)then do if not oL[0x3A0c2d70]then do JL=1141166205;end;oL[0x00003A0c2D70]=JL;else JL=oL[0X3A0C2d70];end;end;on=function(...)return e("\#",...),{...};end;en=function(qL)local sL=(B());local RL,FL=nil,0X5FA61Ce2;while'\X3\,\055\126\053\126W\121'do if FL>1036677732 then RL='';do FL=0X197276d9;end;continue;else if FL>0X350e9a73 and FL<0x005fA61Ce2 then i=i+sL;FL=0X350e9a73;continue;elseif FL<0x0350e9A73 then do for fL=0X01,sL,7997 do local XL,QL,_L=nil,-0X0055416b2F,502530472;repeat if _L<602142951 then _L=0x23e3f8E7;XL=fL+0X1F3D-1;elseif _L<0X00032bdA11A and _L>0X01Df401A8 then if XL>sL then XL=sL;end;_L=0X0032bDa11A;else if _L>0X000023e3F8e7 then QL={t(m,i+fL-0X01,i+XL-1)};break;end;end;until false;do for SL=0X1,#QL do QL[SL]=K(QL[SL],Wn);do Wn=(qL*Wn+95)%256;end;end;end;RL=RL..I(F(QL));end;end;FL=0X00003dcA7264;do continue;end;else if not(FL<0x3DCa7264 and FL>426931929)then else return RL;end;end;end;end;end;else if not(JL>=1499662547)then zn=1;En=function()local qL=(nil);for sL=7036,0X00f579,0X1BC7 do do if sL<=7036 then qL=un();continue;elseif sL~=0X003743 then return qL;else do if qL>=C then return qL-Y;end;end;end;end;end;end;break;else if not(not oL[1658029845])then JL=oL[1658029845];else JL=0X18957816;(oL)[0X62D38715]=JL;end;Wn=d();continue;end;end;until false;local ZL=0x00007e76774D;local g="m\J\078\y\047\124\077N\051";local r=(-0X7Ed505eE);while 0.019523969751057857 do if ZL>0X280b048 then if not oL[0X0007917E20f]then ZL=0X0280b048;do(oL)[0X7917E20F]=ZL;end;else ZL=oL[2031608335];end;g=Tn.wrap;else if not(ZL<2121693005)then else r=Mn;break;end;end;end;local J=(setmetatable);local X,vn,p,tn,T,pL=nil,nil,nil,0X70cfc4C3,0.31144887226525175,(0X761a6e54);local w=(0X6fa13495);repeat if pL==0x0761a6e54 then w={[0X0005]=rn,[0X3]="\%\+\Y\105\049\y",[0X7]=0X3,[0X0]=Pn,[Sn]=1,[0]=0.3169182845126073,[2]=1,[0X000]=517518430,[wn]=0x8,[6]="\060\076]\S7\}\X\078",[0]=0X9,[6]=8,[0x5]=0X6,[6]=3,[0X3]=9};do if not(not oL[2049861666])then pL=oL[2049861666];else pL=166725027;do(oL)[0X07a2e6822]=pL;end;end;end;continue;elseif pL==166725027 then if not oL[429508889]then do pL=1825124006;end;do oL[0x1999C919]=pL;end;else pL=oL[0X1999c919];end;do X=setfenv;end;elseif pL==0X6CC92Ea6 then vn=Gn;if not oL[1926176676]then pL=0X0797275cD;oL[1926176676]=pL;else pL=oL[1926176676];end;continue;else if pL==2037544397 then do if not oL[0x2e92E6b3]then do pL=53714120;end;(oL)[781379251]=pL;else pL=oL[0X2e92e6b3];end;end;do p=rawset;end;else if pL==53714120 then if not(not oL[692780150])then pL=oL[0x294AFC76];else do pL=1175296391;end;(oL)[0X294AFC76]=pL;end;tn=Gn;do continue;end;else if pL==0X460d9987 then T=An;break;end;end;end;end;until false;local cn,UL=0.7892213968536679,(2143024379);repeat if UL>0X919661e then if not(not oL[0X0005D5aC95D])then do UL=oL[1566230877];end;else UL=152659486;(oL)[1566230877]=UL;end;else if not(UL<0X7fbBF4Fb)then else do cn=function(RL,sL,qL)local QL,_L=qL[0x5],qL[8];local XL=(qL[6]);local FL,fL=qL[7],qL[9];local iL=(qL[0x3]);local SL=(qL[1]);local mL=J({},{__mode="\118"});local HL,aL=qL[4],nil;if HL>=0X44 then if not(HL>=0X000066)then if not(HL<0X55)then if not(HL<93)then do if not(HL>=97)then if HL<95 then if HL~=94 then do aL=function(...)local CL,YL=1,({});local kL=({[2]=qL,[0X1]=YL});local OL=(Q());local KL,NL=(OL==_ and sL or OL),0x00;local LL,hL=on(...);do LL=LL-0X1;end;do for PL=0x0,LL do do if XL>PL then do(YL)[PL]=hL[PL+1];end;else do break;end;end;end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X0001 or 0X0,F(hL,XL+0X1,LL+1)};end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+0X001;if not(wL>=6)then if not(wL<0x3)then if not(wL>=0X0004)then(YL)[PL[0X5]]=YL[PL[4]]-YL[PL[7]];else if wL~=0X5 then local AL=(PL[4]);local dL=nil;local BL=AL[0X2];local DL=#BL;if DL>0X0 then dL={};for bC=1,DL do local uC=BL[bC];do if uC[0x01]~=0 then dL[bC-1]=RL[uC[0X2]];else dL[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);else local AL=(PL[5]);local dL,BL=YL[AL]();do if not(dL)then else for DL=0X00001,PL[7]do YL[AL+DL]=BL[DL];end;do CL=PL[0X4];end;end;end;end;end;else do if not(wL>=0x001)then(YL)[PL[0X005]]={F({},0x1,PL[4])};else if wL~=0X00002 then else YL[PL[5]]=YL[PL[4]]~=YL[PL[0X007]];end;end;end;end;else if not(wL<9)then if not(wL<0x0000a)then if wL~=11 then YL[PL[5]]=KL[PL[0x1]];else(YL)[PL[0X5]]=K(YL[PL[0X4]],YL[PL[0X7]]);end;else do if not(not(YL[PL[4]]<YL[PL[7]]))then else CL=PL[5];end;end;end;else if wL<7 then(YL)[2]=KL[PL[1]];do PL=FL[CL];end;local AL=(RL[0X0]);CL=CL+0X1;do(YL)[0X2]=YL[2][PL[0X00003]];end;do CL=CL+1;end;do(YL)[0X3]=AL[1][AL[2]];end;CL=CL+1;YL[2]=YL[0x2][YL[3]];CL=CL+0X1;do(YL)[3]=YL[1];end;CL=CL+0X00001;(YL[2])[YL[0]]=YL[3];CL=CL+0X1;do repeat local dL,BL,DL=mL,YL,({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X1]==BL and WC[2]>=0)then else local eC=WC[2];if not DL[eC]then DL[eC]={BL[eC]};end;WC[1]=DL[eC];WC[2]=1;end;end;end;until true;end;do return;end;else if wL~=0X00008 then YL[PL[0x5]]=PL[1];else CL=PL[0X04];end;end;end;end;end;end;end);do if nL then if TL then if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;else do if z(TL)=="st\114\in\g"then if not(V(TL,'\097\116t\e\109\112\116\032to\ \121i\e\ld a\099r\o\s\s\ \m\101ta\m\101t\104od/\C%\-\099a\l\l\032b\ou\110\100\097\114y'))then else do return q();end;end;if not(V(TL,"^\.-\:\037\d\+\058\ "))then(G)(TL,0);else G("L\117\114\097\p\h S\cript:"..(_L[CL-0X0001]or'\(\105\110\116\e\114na\l\)')..'\:\ '..l(TL),0X0);end;else G(TL,0X0);end;end;end;end;end;end;else do aL=function(...)local YL=({});local CL=1;local OL=Q();local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-0X1;for PL=0X0000,LL do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0X00,F(hL,XL+0x001,LL+0X1)};end;local KL=(OL==_ and sL or OL);local NL=0X0;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+1;do if not(wL<0X8)then do if wL<12 then if not(wL>=0X000A)then do if wL==9 then local AL=(PL[0x05]);local BL,dL=YL[AL],((PL[0X0007]-0X01)*50);for DL=0x1,PL[0X4]do do BL[dL+DL]=YL[AL+DL];end;end;else(YL)[PL[5]]=PL[0X1];end;end;else if wL==11 then local AL=(PL[0X0004]);local BL=(AL[0X0002]);local dL=nil;local DL=#BL;if DL>0X00 then dL={};for bC=0x1,DL do local uC=BL[bC];if uC[1]==0X00 then dL[bC-0X1]={YL,uC[2]};else(dL)[bC-0x01]=RL[uC[0X2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);else do YL[0X00]=KL[PL[0X0001]];end;local AL=0;CL=CL+1;CL=CL+0X00001;PL=FL[CL];do CL=CL+0X00001;end;YL[0x0]=YL[0][PL[0X3]];PL=FL[CL];CL=CL+0X1;(YL)[0X1]=PL[1];CL=CL+0x001;YL[AL]=YL[AL](YL[AL+0X1]);NL=AL;CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X001;if not YL[0]then CL=PL[0x4];end;end;end;else if not(wL<0xe)then if not(wL<0Xf)then if wL~=16 then repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X0001]==dL and EC[0X002]>=0)then else local WC=EC[0X002];if not(not BL[WC])then else BL[WC]={dL[WC]};end;EC[0X001]=BL[WC];do EC[0x2]=0x0001;end;end;end;end;until true;do return;end;else CL=PL[4];end;else do YL[PL[5]]=-YL[PL[4]];end;end;else if wL~=0xD then local AL=(RL[1]);local uC,BL=0X0000,(nil);YL[0x0]=AL[0x1][AL[2]];PL=FL[CL];CL=CL+1;local dL=PL[0X4];local DL=dL[2];local bC=(#DL);if bC>0x000 then BL={};for EC=0X00001,bC do local WC=DL[EC];if WC[0x1]~=0x000 then(BL)[EC-0x1]=RL[WC[0x2]];else(BL)[EC-1]={YL,WC[0X2]};end;end;x(mL,BL);end;YL[1]=cn(BL,KL,dL);CL=CL+0X1;YL[uC](YL[uC+0X1]);NL=uC-1;CL=CL+0X1;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+0X1;end;do CL=PL[0X04];end;else(YL)[0]=KL[PL[0x01]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;YL[0X0000]=YL[0X0][PL[3]];PL=FL[CL];CL=CL+1;if not(not YL[0X0])then else CL=PL[4];end;end;end;end;end;else if not(wL>=0X04)then do if not(wL<0X00002)then if wL~=3 then else YL[PL[5]]={F({},0X01,PL[4])};end;else do if wL~=1 then local AL=RL[0];do(YL)[0]=AL[0x1][AL[2]];end;do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+0X01;do if not(not YL[0])then else CL=PL[0X004];end;end;else(KL)[PL[1]]=YL[PL[0X5]];end;end;end;end;else if wL<6 then if wL==5 then YL[PL[0X005]]=YL[PL[4]]<=YL[PL[0X007]];else for AL=PL[0X5],PL[0X4]do YL[AL]=nil;end;end;else do if wL~=0X7 then YL[PL[0X5]]=KL[PL[0X1]];else if not YL[PL[0X5]]then CL=PL[0x00004];end;end;end;end;end;end;end;end;end);do if nL then if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~='strin\g'then(G)(TL,0);else if not(V(TL,'\097tt\e\109pt\032t\111\ \y\ie\108\100 a\099r\os\115\ \109\e\116\097m\101\116\104\o\d/\067\%\-\099a\l\l bo\117\110\100\097\114\y'))then else return q();end;do if not(V(TL,'\^\.-\:\%\100\+:\ '))then G(TL,0X00000);else(G)('L\117r\097p\h \083\099r\i\pt\:'..(_L[CL-1]or"\(\105nterna\108)")..'\:\032'..l(TL),0);end;end;end;end;end;end;end;end;else if HL~=0x60 then aL=function(...)local YL=({});local CL=1;local OL=Q();local kL={[2]=qL,[0X1]=YL};local KL=(OL==_ and sL or OL);local NL=0x0;local LL,hL=on(...);LL=LL-1;do for PL=0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X1];end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+0X0001;if not(wL<12)then if not(wL>=18)then if not(wL>=15)then if not(wL<13)then do if wL~=14 then(YL)[PL[0x0005]]=YL[PL[0X4]];else do repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do do for uC,EC in U,bC do if EC[1]==dL and EC[0X2]>=0 then local WC=(EC[0x002]);if not BL[WC]then BL[WC]={dL[WC]};end;EC[0X1]=BL[WC];EC[0X2]=1;end;end;end;end;until true;end;return;end;end;else if not(not YL[PL[5]])then else do CL=PL[4];end;end;end;else if wL<0X0010 then(YL)[PL[5]]={F({},1,PL[4])};else if wL==0X0011 then if YL[PL[0X00004]]==YL[PL[0X7]]then else CL=PL[5];end;else YL[PL[5]]=PL[4];end;end;end;else do if wL>=0X015 then if wL>=23 then if wL==0x000018 then(YL)[PL[5]]=L(YL[PL[0x00004]],YL[PL[7]]);else do for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;end;else if wL==22 then local AL=RL[1];(YL)[2]=AL[1][AL[0X00002]];PL=FL[CL];CL=CL+0X001;do YL[0x002]=YL[0X002][PL[3]];end;PL=FL[CL];do CL=CL+0X1;end;YL[2]=YL[0X2][PL[0X00003]];do CL=CL+0X001;end;(YL)[0X00002]=not YL[0X2];PL=FL[CL];do CL=CL+0x1;end;do CL=PL[4];end;else(YL)[0X2]=YL[0X01][PL[3]];CL=CL+1;CL=CL+0X001;do CL=CL+1;end;NL=2;(YL)[NL]=YL[NL]();CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;CL=PL[4];end;end;else if wL>=0X13 then do if wL==20 then local AL,dL=PL[0X4],(nil);local BL=(AL[2]);local DL=#BL;do if DL>0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[1]==0x00000 then dL[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;end;(YL)[PL[0X5]]=cn(dL,KL,AL);else YL[0x00002]=KL[PL[1]];CL=CL+0X01;CL=CL+0X001;PL=FL[CL];CL=CL+1;YL[2]=YL[0X0002][PL[3]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;CL=PL[4];end;end;else YL[PL[0X05]]=YL[PL[4]]~=YL[PL[7]];end;end;end;end;else if wL>=0x006 then do if wL>=0X9 then if not(wL<10)then if wL==0x0000b then(YL)[PL[5]]=KL[PL[0x1]];else local AL=RL[0];YL[2]=AL[1][AL[0X2]];CL=CL+0X001;CL=CL+0X01;PL=FL[CL];CL=CL+0X1;do if not YL[0X02]then CL=PL[0X4];end;end;end;else YL[PL[0X5]]=true;end;else if wL>=0x7 then if wL~=8 then CL=PL[4];else(YL)[PL[5]]=PL[1];end;else YL[PL[0x0005]]=K(YL[PL[0x4]],YL[PL[7]]);end;end;end;else do if not(wL>=3)then if wL>=0x01 then if wL==0X0002 then repeat local dL,BL,DL=mL,YL,{};for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X001]==BL and WC[2]>=0X0)then else local eC=WC[0X2];if not DL[eC]then(DL)[eC]={BL[eC]};end;WC[0X1]=DL[eC];WC[0X2]=0X1;end;end;end;until true;local AL=PL[0X5];return false,AL,AL;else do(YL)[0x001]=KL[PL[0X1]];end;do PL=FL[CL];end;do CL=CL+1;end;(YL)[1]=YL[0X1][PL[3]];do PL=FL[CL];end;CL=CL+1;YL[0X1]=YL[1][PL[0X3]];CL=CL+1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0X001;YL[0X02]=KL[PL[0X0001]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;do YL[0X00002]=YL[2][PL[3]];end;CL=CL+1;do CL=CL+1;end;CL=CL+1;YL[1]=YL[1][YL[0X2]];do CL=CL+0X0001;end;CL=CL+0X001;do PL=FL[CL];end;CL=CL+1;do if YL[1]then CL=PL[4];end;end;end;else end;else if not(wL<4)then do if wL==0x5 then YL[0X00002]=YL[1][PL[3]];CL=CL+0X1;CL=CL+1;CL=CL+0X01;NL=2;YL[NL]=YL[NL]();CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;CL=PL[4];else(YL)[3]=YL[0X1][PL[0x3]];PL=FL[CL];CL=CL+1;local AL=(2);(YL)[4]=YL[0X1][PL[0x3]];CL=CL+1;repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X0001]==BL and WC[2]>=0)then else local eC=WC[2];if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;(WC)[1]=DL[eC];WC[0x02]=1;end;end;end;until true;do return false,AL,AL+4-0X2;end;end;end;else local AL=RL[0X1];(YL)[0X2]=AL[0X1][AL[2]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+1;(YL)[2]=YL[2][PL[3]];PL=FL[CL];do CL=CL+0X1;end;(YL)[2]=YL[0x2][PL[0X3]];CL=CL+0X0001;CL=CL+1;do CL=CL+0X0001;end;YL[0X2]=not YL[0X02];PL=FL[CL];do CL=CL+0x1;end;do CL=PL[0X0004];end;end;end;end;end;end;end;end);do if nL then if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X001,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~="\115tr\i\110g"then G(TL,0X0);else if V(TL,'\097\116t\101m\p\116\ t\o y\iel\d\ \097\cro\115\s \109\et\097m\et\h\o\d\/C\%-\c\097\l\l \098\111\117n\d\097\114y')then return q();end;if not(V(TL,'^\.-\058\037\100\+\:\ '))then(G)(TL,0X0);else(G)("\L\117\114a\p\h\ \S\cri\112\116\:"..(_L[CL-0x0001]or"(int\er\110a\l)")..'\:\ '..l(TL),0);end;end;end;end;end;else do aL=function(...)local CL,YL,NL=1,{},0;local kL={[0X1]=YL,[2]=qL};local OL=Q();local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0X01;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else do break;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X2]);CL=CL+0X1;if wL>=10 then if not(wL>=0XF)then if not(wL<0X00C)then do if not(wL<0x0000D)then if wL~=14 then else do YL[0]=KL[PL[1]];end;do CL=CL+0X1;end;CL=CL+0X0001;PL=FL[CL];do CL=CL+1;end;(YL)[0]=YL[0][PL[0X3]];PL=FL[CL];CL=CL+0x1;do if not YL[0]then CL=PL[0X04];end;end;end;else local AL=PL[5];local dL=((PL[7]-0X01)*50);local BL=YL[AL];for DL=1,PL[0X4]do do(BL)[dL+DL]=YL[AL+DL];end;end;end;end;else if wL~=11 then YL[PL[5]]=YL[PL[0X4]][YL[PL[0X0007]]];else local AL=RL[PL[4]];YL[PL[5]]=AL[0x1][AL[2]];end;end;else if wL>=0x12 then do if not(wL>=19)then(YL)[0]=KL[PL[1]];PL=FL[CL];local AL=0x00;CL=CL+0X0001;do(YL)[0X001]=PL[1];end;do CL=CL+0X1;end;YL[AL](YL[AL+1]);NL=AL-0X0001;do CL=CL+0X00001;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X01;do CL=PL[0X4];end;else if wL~=0x000014 then do(YL)[PL[5]]={F({},1,PL[4])};end;else YL[PL[5]]=KL[PL[1]];end;end;end;else if wL<0x000010 then YL[0]=KL[PL[1]];CL=CL+1;do CL=CL+1;end;CL=CL+1;NL=0X00;(YL)[NL]=YL[NL]();PL=FL[CL];CL=CL+1;if not(not YL[0])then else CL=PL[4];end;else if wL==17 then local AL,dL=PL[5],(PL[0X4]);NL=AL+dL-0x01;repeat local bC=({});local BL,DL=mL,YL;do for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[0x00002]>=0X0000 then local oC=(eC[2]);if not bC[oC]then bC[oC]={DL[oC]};end;eC[0x1]=bC[oC];eC[0X2]=0X1;end;end;end;end;until true;return true,AL,dL;else(YL)[PL[0X5]]=PL[1];end;end;end;end;else if not(wL>=5)then if not(wL<2)then do if wL>=0x3 then do if wL==0X4 then YL[0X0]=KL[PL[0X1]];do PL=FL[CL];end;CL=CL+0X1;do YL[0X0]=YL[0][PL[0x3]];end;CL=CL+0X1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;YL[1]=PL[0x1];local AL=0x0000;do CL=CL+1;end;do YL[AL]=YL[AL](YL[AL+0X01]);end;NL=AL;do CL=CL+0X001;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X001;if not YL[0X0]then CL=PL[0X00004];end;else do repeat local dL,BL=mL,YL;local DL={};do for bC,uC in U,dL do for EC,WC in U,uC do do if WC[1]==BL and WC[0X2]>=0 then local eC=WC[0x2];if not(not DL[eC])then else do(DL)[eC]={BL[eC]};end;end;(WC)[0X1]=DL[eC];do(WC)[2]=0X0001;end;end;end;end;end;end;until true;end;local AL=PL[0X5];return false,AL,AL+PL[4]-0x2;end;end;else if not YL[PL[5]]then do CL=PL[0X4];end;end;end;end;else do if wL~=0x1 then YL[PL[5]]=kL[PL[0x4]];else local AL=(PL[4]);local BL,dL=AL[0X2],nil;local DL=#BL;do if DL>0X0000 then dL={};do for bC=1,DL do local uC=(BL[bC]);if uC[1]==0x00000 then(dL)[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[2]];end;end;end;(x)(mL,dL);end;end;(YL)[PL[0X05]]=cn(dL,KL,AL);end;end;end;else do if not(wL<0X07)then if not(wL>=0X0008)then(YL)[PL[0X5]]=true;else if wL==0X9 then do repeat local AL,dL=mL,YL;local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do do if EC[1]==dL and EC[0X2]>=0 then local WC=EC[0x00002];do if not BL[WC]then BL[WC]={dL[WC]};end;end;(EC)[0X1]=BL[WC];(EC)[2]=1;end;end;end;end;end;until true;end;do return;end;else YL[PL[0x5]]=YL[PL[4]]^YL[PL[7]];end;end;else if wL~=6 then for AL=PL[0X05],PL[4]do YL[AL]=nil;end;else CL=PL[0X0004];end;end;end;end;end;end;end);do if nL then if TL then if rL~=0X1 then return YL[ML](F(YL,ML+0x01,NL));else return YL[ML]();end;elseif ML then do return F(YL,ML,rL);end;end;else do if z(TL)~="\s\116r\i\110\g"then G(TL,0);else if V(TL,"\097\116\116\e\109\112t\ t\o\ \y\105\101l\100\ a\c\114\111\115\s\ \m\101\116am\e\116\h\111\d/\C\%\-\099a\l\108\032bo\117n\100a\114y")then return q();end;if not(V(TL,'\^\046\-\058\%\d\+\058\032'))then G(TL,0x0);else(G)("Lurap\104\032\Sc\114\i\112\116\058"..(_L[CL-1]or'\040int\e\114\110\097\l\041').."\:\032"..l(TL),0);end;end;end;end;end;end;end;end;end;else if not(HL>=0X00063)then do if HL~=98 then aL=function(...)local CL,YL=0x1,{};local OL=Q();local NL=0;local LL,hL=on(...);local kL={[0X1]=YL,[2]=qL};LL=LL-1;for PL=0X0000,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;local KL=((OL==_ and sL or OL));if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0x000,F(hL,XL+0X1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0X2]);CL=CL+0X1;do if wL<0XA then if wL>=5 then if not(wL<0X7)then do if not(wL>=8)then YL[0]=KL[PL[1]];CL=CL+1;CL=CL+0X0001;PL=FL[CL];CL=CL+0x1;(YL)[0X0]=YL[0][PL[0X3]];do CL=CL+1;end;CL=CL+0X0001;PL=FL[CL];do CL=CL+1;end;if not YL[0X0]then CL=PL[4];end;else if wL~=0X9 then if YL[PL[4]]==YL[PL[0X7]]then CL=PL[0X5];end;else local AL=RL[0];(YL)[0x00000]=AL[0X1][AL[0X2]];CL=CL+0X01;CL=CL+1;PL=FL[CL];CL=CL+1;do if not YL[0]then do CL=PL[4];end;end;end;end;end;end;else if wL==6 then else YL[0x000]=KL[PL[1]];CL=CL+0x00001;local dL,AL=0X1,0;if dL==0 then else do NL=AL+dL-0X00001;end;end;local DL,bC,BL=nil,nil,(0X0003);if dL~=0X1 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else DL,bC=on(YL[AL]());end;if BL==1 then NL=AL-0X001;else do if BL~=0X00 then DL=AL+BL-2;do NL=DL+0x1;end;else do DL=DL+AL-0X1;end;NL=DL;end;end;local uC=0x000;for EC=AL,DL do uC=uC+1;YL[EC]=bC[uC];end;end;PL=FL[CL];CL=CL+0X001;if not YL[0]then CL=PL[4];end;end;end;else if not(wL>=0x2)then if wL~=1 then(YL)[PL[5]]={F({},1,PL[4])};else local AL=RL[0X1];YL[0X2]=AL[1][AL[2]];do PL=FL[CL];end;CL=CL+0x00001;do(YL)[3]=PL[1];end;do PL=FL[CL];end;CL=CL+1;do YL[0x0004]=PL[0X1];end;local dL=(0x2);CL=CL+0X1;YL[dL](YL[dL+1],YL[dL+2]);NL=dL-1;PL=FL[CL];CL=CL+0X00001;do CL=PL[4];end;end;else if wL>=3 then if wL~=4 then(YL)[PL[0x5]]=YL[PL[0x4]]>YL[PL[7]];else YL[PL[0X00005]]=YL[PL[0X004]]>=YL[PL[0X7]];end;else YL[PL[5]]=PL[0x01];end;end;end;else if not(wL<0X0000F)then if wL<0X11 then if wL~=0X10 then do(YL)[PL[5]]=YL[PL[4]]/YL[PL[0X07]];end;else do CL=PL[0X0004];end;end;else if wL<18 then local AL=RL[0X0001];(YL)[0X2]=AL[1][AL[0X2]];CL=CL+0x1;CL=CL+1;PL=FL[CL];CL=CL+1;local dL=2;(YL)[3]=PL[1];CL=CL+0X1;(YL[dL])(YL[dL+0X1]);do NL=dL-0X1;end;do PL=FL[CL];end;CL=CL+0X1;do CL=PL[4];end;else if wL~=19 then do(YL)[0X00000]=KL[PL[0x1]];end;CL=CL+0X0001;CL=CL+1;do PL=FL[CL];end;CL=CL+0X01;YL[0]=YL[0X0][PL[0X3]];do CL=CL+0x0001;end;CL=CL+0x1;PL=FL[CL];local AL=0x0;CL=CL+0x1;(YL)[1]=PL[1];CL=CL+0x0001;YL[AL]=YL[AL](YL[AL+1]);NL=AL;PL=FL[CL];CL=CL+0X1;if not(not YL[0])then else CL=PL[4];end;else if YL[PL[0X04]]==PL[3]then else CL=PL[5];end;end;end;end;else if wL>=12 then if not(wL<0Xd)then if wL~=14 then do YL[PL[5]]=PL[0X004];end;else local AL=PL[0X004];local BL,dL=AL[2],(nil);local DL=#BL;if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[1]==0X0 then dL[bC-0x1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;else repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0x0001]==dL and EC[2]>=0X0)then else local WC=(EC[0X2]);do if not(not BL[WC])then else do BL[WC]={dL[WC]};end;end;end;do EC[1]=BL[WC];end;(EC)[2]=0X01;end;end;end;until true;do return;end;end;else if wL~=11 then YL[PL[5]]=KL[PL[0x00001]];else do kL[PL[4]]=YL[PL[0X05]];end;end;end;end;end;end;end;end);if nL then if TL then if rL~=0X1 then return YL[ML](F(YL,ML+0x1,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)=='s\116rin\103'then do if V(TL,"at\116\101m\pt\ t\111\ \121\i\e\l\d\032\097cr\o\s\115\ \me\116\097m\et\104\o\d\/\C%-\call\032bo\117ndar\y")then return q();end;end;if V(TL,"\^\.\-\:\%\d\043:\032")then G('\L\117rap\h Sc\114\i\112t\058'..(_L[CL-1]or"\(i\110\116\er\110al\)")..'\:\032'..l(TL),0);else G(TL,0X0);end;else G(TL,0x00);end;end;end;else aL=function(...)local YL={};local CL=1;local OL=Q();local LL,hL=on(...);local KL=(OL==_ and sL or OL);local kL={[0X1]=YL,[2]=qL};local NL=(0X0000);LL=LL-1;do for PL=0X0,LL do if not(XL>PL)then do break;end;else(YL)[PL]=hL[PL+1];end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+0X001)};end;do if KL~=OL then(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=(PL[2]);do CL=CL+0x1;end;if not(wL<9)then if wL<0XE then if wL<11 then do if wL==0X00a then local AL=(RL[1]);do(YL)[0X00]=AL[0X1][AL[2]];end;PL=FL[CL];CL=CL+0X1;(YL[0X00])[PL[0X1]]=PL[0x03];PL=FL[CL];CL=CL+0X001;CL=PL[0x004];else YL[PL[0X5]]={F({},0X01,PL[0x04])};end;end;else if not(wL>=0XC)then local AL=RL[1];YL[0X0000]=AL[1][AL[0x00002]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;YL[0X0000]=YL[0X0][PL[0X3]];PL=FL[CL];do CL=CL+1;end;if YL[0X0]==PL[0X00003]then else CL=PL[5];end;else if wL==0xd then if not YL[PL[0x5]]then CL=PL[0x4];end;else YL[PL[0X5]]=PL[0X001];end;end;end;else if wL<0X0010 then do if wL~=15 then YL[0]=KL[PL[1]];PL=FL[CL];do CL=CL+1;end;YL[0]=YL[0][PL[3]];CL=CL+0x0001;NL=0X00;(YL)[NL]=YL[NL]();CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;if not(not YL[0X0])then else CL=PL[4];end;else local AL=(RL[1]);YL[0x001]=AL[1][AL[0X2]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0X1]=YL[1][PL[0X3]];PL=FL[CL];CL=CL+0X00001;if YL[0X1]~=PL[0X3]then else do CL=PL[5];end;end;end;end;else if not(wL<17)then do if wL==0x12 then local AL=PL[0X05];local dL,BL,DL=YL[AL],YL[AL+1],YL[AL+2];YL[AL]=g(function()do for bC=dL,BL,DL do q(true,bC);end;end;end);do CL=PL[0X4];end;else end;end;else YL[0X0]=KL[PL[0x1]];CL=CL+1;CL=CL+0x01;PL=FL[CL];CL=CL+1;YL[0]=YL[0][PL[3]];PL=FL[CL];CL=CL+1;do if not(not YL[0])then else CL=PL[0X4];end;end;end;end;end;else if wL<0x004 then if not(wL>=2)then if wL~=0X1 then for AL=PL[0X5],PL[4]do YL[AL]=nil;end;else local AL=RL[PL[4]];do(YL)[PL[0X5]]=AL[1][AL[0x2]];end;end;else if wL~=3 then local AL,dL=PL[0X004],(nil);local BL=(AL[2]);local DL=#BL;if not(DL>0x0)then else do dL={};end;for bC=0X00001,DL do local uC=BL[bC];if uC[1]~=0 then do dL[bC-0x1]=RL[uC[2]];end;else(dL)[bC-0X1]={YL,uC[2]};end;end;(x)(mL,dL);end;YL[PL[0X00005]]=cn(dL,KL,AL);else YL[PL[0X5]]=YL[PL[4]]*YL[PL[0x7]];end;end;else if wL>=0x00006 then if wL<7 then(YL)[PL[0X005]]=KL[PL[1]];else if wL==0X8 then local AL=PL[5];for dL=AL,AL+(PL[0X0004]-0X001)do(YL)[dL]=hL[XL+(dL-AL)+0X001];end;else repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[0x01]==dL and EC[2]>=0 then local WC=(EC[0X2]);do if not BL[WC]then BL[WC]={dL[WC]};end;end;EC[0X1]=BL[WC];do(EC)[2]=1;end;end;end;end;until true;return;end;end;else do if wL~=5 then local AL,dL=PL[0X5],((PL[0x7]-1)*50);local BL=YL[AL];for DL=0X001,PL[0X4]do(BL)[dL+DL]=YL[AL+DL];end;else do CL=PL[0X4];end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='\s\116r\in\g'then if V(TL,'a\116\116\101\m\pt\ \116\111 \yi\e\108\d\032\097\099\114\111\s\115\032m\eta\m\101t\h\o\d/C\037-\ca\l\l\ \098\o\117\110\100a\114\y')then return q();end;do if not(V(TL,"\^\.-\:\037\d+\:\ "))then(G)(TL,0);else(G)('L\117\114a\112h\ S\c\114\105\p\116\:'..(_L[CL-1]or'\(int\er\110a\108\041')..':\032'..l(TL),0);end;end;else G(TL,0X000);end;else do if TL then do if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;end;else if HL>=100 then if HL==101 then aL=function(...)local YL,CL={},(1);local NL=0X0;local kL={[0X1]=YL,[2]=qL};local OL=Q();local LL,hL=on(...);local KL=(OL==_ and sL or OL);do LL=LL-0X1;end;do for PL=0X0,LL do if not(XL>PL)then break;else do YL[PL]=hL[PL+0x00001];end;end;end;end;if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0000,F(hL,XL+0x0001,LL+0X1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0X0002]);do CL=CL+0X1;end;if not(wL<7)then if wL<11 then do if not(wL<9)then if wL~=0XA then YL[PL[5]]=YL[PL[0x4]]<=YL[PL[7]];else local AL=(PL[0X005]);local dL,BL=YL[AL]();if not(dL)then else CL=PL[0X0004];(YL)[AL+3]=BL;end;end;else do if wL~=8 then CL=PL[4];else end;end;end;end;else if not(wL>=0Xd)then if wL~=0xc then YL[PL[0X5]][YL[PL[0x4]]]=YL[PL[7]];else(kL)[PL[0X4]]=YL[PL[5]];end;else if wL~=0XE then local AL=PL[4];local BL,dL=AL[0X2],(nil);local DL=#BL;if DL>0X0 then do dL={};end;for bC=0X1,DL do local uC=BL[bC];if uC[0X1]~=0 then(dL)[bC-0x1]=RL[uC[2]];else dL[bC-0X1]={YL,uC[0X2]};end;end;(x)(mL,dL);end;YL[PL[0X0005]]=cn(dL,KL,AL);else do YL[PL[5]]=L(YL[PL[0X4]],YL[PL[7]]);end;end;end;end;else if not(wL<0X3)then do if wL>=5 then do if wL==6 then do repeat local AL,dL,BL=mL,YL,(PL[0X5]);local DL=({});for bC,uC in U,AL do do for EC,WC in U,uC do if WC[0X1]==dL and WC[0x2]>=BL then local eC=WC[2];do if not DL[eC]then(DL)[eC]={dL[eC]};end;end;(WC)[0X1]=DL[eC];(WC)[2]=0x0001;end;end;end;end;until true;end;else(YL)[1]=KL[PL[1]];local BL=(nil);CL=CL+0x01;do CL=CL+0x1;end;CL=CL+1;YL[0x02]=YL[0];do PL=FL[CL];end;CL=CL+0X00001;local AL=(RL[0]);(YL[0X1])[PL[1]]=YL[0X2];do PL=FL[CL];end;CL=CL+0x1;YL[0X1]=KL[PL[0x1]];CL=CL+1;NL=1;YL[NL]();NL=NL-1;CL=CL+0X1;CL=CL+0X1;do CL=CL+0X1;end;YL[1]=AL[0X1][AL[0X2]];local uC=(0X01);do CL=CL+0x1;end;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;local dL=PL[0X00004];local DL=dL[0x002];local bC=(#DL);if bC>0X0 then BL={};do for EC=0X0001,bC do local WC=DL[EC];if WC[1]~=0 then(BL)[EC-1]=RL[WC[2]];else BL[EC-0X01]={YL,WC[2]};end;end;end;(x)(mL,BL);end;(YL)[0X2]=cn(BL,KL,dL);do CL=CL+1;end;YL[uC](YL[uC+0X0001]);NL=uC-1;CL=CL+1;repeat local EC,WC=mL,YL;local eC={};do for oC,jC in U,EC do for zC,lC in U,jC do do if not(lC[0X1]==WC and lC[0X2]>=0)then else local GC=(lC[2]);if not(not eC[GC])then else do eC[GC]={WC[GC]};end;end;lC[0X1]=eC[GC];lC[0X2]=0X01;end;end;end;end;end;until true;return;end;end;else if wL==4 then YL[PL[0X05]]={F({},0X1,PL[4])};else(YL)[PL[0X5]]=KL[PL[1]];end;end;end;else do if not(wL<1)then do if wL==2 then for AL=PL[5],PL[4]do YL[AL]=nil;end;else local AL=(PL[5]);local dL=(g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));dL(YL[AL],YL[AL+0X1],YL[AL+0x2]);NL=AL;(YL)[AL]=dL;CL=PL[0X4];end;end;else YL[PL[0X00005]]=PL[1];end;end;end;end;end;end);do if nL then if TL then if rL==1 then return YL[ML]();else do return YL[ML](F(YL,ML+0x1,NL));end;end;elseif ML then return F(YL,ML,rL);end;else do if z(TL)~="\s\116r\i\110\103"then G(TL,0);else do if not(V(TL,'att\e\109\pt\ t\111\ y\i\e\l\d\ \097\c\114\o\s\s\ \m\e\116a\meth\111\100\047\067\%\-\cal\l\ \098\o\117\110\dary'))then else return q();end;end;if V(TL,'^\046\045:%d\+\: ')then G("L\117ra\112\h\ \083cr\i\pt\:"..(_L[CL-0X01]or'\040i\110\116\ern\097l\041').."\:\ "..l(TL),0x0);else G(TL,0);end;end;end;end;end;end;else aL=function(...)local CL,YL=1,({});local kL={[2]=qL,[0X1]=YL};local OL=Q();local LL,hL=on(...);local KL=(OL==_ and sL or OL);LL=LL-0X1;local NL=(0x00);for PL=0X00000,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X1];end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0x0,F(hL,XL+1,LL+0x01)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+0X1;do if wL>=7 then if not(wL<0xA)then if wL>=0XC then do if wL==0X0D then local dL=nil;local AL=(PL[4]);local BL=AL[2];local DL=(#BL);if DL>0X0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[0X001]==0X0 then dL[bC-0X001]={YL,uC[0X02]};else dL[bC-1]=RL[uC[0X00002]];end;end;x(mL,dL);end;do YL[PL[0x005]]=cn(dL,KL,AL);end;else CL=PL[0X0004];end;end;else if wL~=11 then YL[PL[5]]={F({},0x1,PL[4])};else YL[PL[0X00005]]=YL[PL[4]]*YL[PL[0X7]];end;end;else do if not(wL<0X08)then if wL~=9 then YL[1]=KL[PL[1]];CL=CL+1;local uC=(0X001);CL=CL+1;CL=CL+1;local AL=RL[0];YL[0X0002]=YL[0x0000];do PL=FL[CL];end;CL=CL+0X0001;YL[0X1][PL[1]]=YL[2];PL=FL[CL];CL=CL+0x1;(YL)[1]=KL[PL[1]];CL=CL+1;CL=CL+1;CL=CL+1;NL=0X00001;(YL[NL])();NL=NL-0X01;local BL=(nil);CL=CL+1;do(YL)[1]=AL[1][AL[2]];end;PL=FL[CL];CL=CL+0X0001;local dL=(PL[0X004]);local DL=dL[2];local bC=(#DL);if bC>0 then BL={};for EC=0x1,bC do local WC=(DL[EC]);if WC[0X1]~=0x00000 then BL[EC-1]=RL[WC[0x002]];else(BL)[EC-0X01]={YL,WC[0X2]};end;end;(x)(mL,BL);end;YL[2]=cn(BL,KL,dL);CL=CL+0X01;YL[uC](YL[uC+1]);NL=uC-1;do CL=CL+0x01;end;repeat local eC=({});local EC,WC=mL,(YL);for oC,jC in U,EC do do for zC,lC in U,jC do do if not(lC[1]==WC and lC[2]>=0)then else local GC=(lC[2]);if not(not eC[GC])then else eC[GC]={WC[GC]};end;(lC)[0X0001]=eC[GC];do lC[2]=0X1;end;end;end;end;end;end;until true;return;else do YL[PL[0X05]]=M(YL[PL[4]],YL[PL[7]]);end;end;else local AL=(PL[4]);local BL=AL[0x00002];local DL,dL=#BL,nil;if DL>0X000 then dL={};for bC=1,DL do local uC=BL[bC];if uC[0X1]==0X0 then(dL)[bC-1]={YL,uC[2]};else do dL[bC-0X01]=RL[uC[2]];end;end;end;x(mL,dL);end;do(YL)[PL[0X5]]=u[PL[7]](dL);end;end;end;end;else if not(wL<3)then if not(wL<0X5)then if wL~=0X6 then do YL[PL[5]]=YL[PL[0x4]]/YL[PL[7]];end;else(YL)[PL[0X5]]=KL[PL[1]];end;else if wL==0x4 then YL[PL[5]]=#YL[PL[4]];else(YL)[PL[0X5]]=YL[PL[0x04]]+YL[PL[7]];end;end;else if not(wL<1)then do if wL~=0X002 then YL[PL[5]]=PL[1];else end;end;else local AL=(PL[0X5]);local dL,BL=YL[AL]();if not(dL)then else for DL=1,PL[0X7]do YL[AL+DL]=BL[DL];end;do CL=PL[4];end;end;end;end;end;end;end;end);if nL then do if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else do return YL[ML]();end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;else if z(TL)~='\115\116rin\103'then(G)(TL,0);else if not(V(TL,'\097t\116\e\m\112\116\ t\o y\ie\l\100\ \097\099\114\111\s\s\ \109\eta\109\et\ho\d\/\C\%-\ca\108l\032boun\d\097\114y'))then else return q();end;if not(V(TL,"\^\.\-:\%\d\+\:\032"))then(G)(TL,0);else G('L\117\114\097\112\104\ S\c\114\ipt\:'..(_L[CL-1]or"\(\in\116ern\097\l\)")..'\:\032'..l(TL),0X0);end;end;end;end;end;else aL=function(...)local NL=0;local YL=({});local OL=(Q());local LL,hL=on(...);LL=LL-0X1;local kL,CL,KL={[2]=qL,[0X1]=YL},0X1,(OL==_ and sL or OL);for PL=0X0,LL do do if not(XL>PL)then break;else do YL[PL]=hL[PL+1];end;end;end;end;if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+0X001 or 0,F(hL,XL+0X1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[2];do CL=CL+0X1;end;do if not(wL<0X8)then if not(wL<12)then if wL<14 then if wL==0X000D then(YL)[PL[0X5]]=YL[PL[4]]^YL[PL[7]];else local AL=(PL[4]);local BL=AL[0X2];local DL=(#BL);local dL=nil;if DL>0X00000 then dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[1]==0 then do(dL)[bC-0x00001]={YL,uC[0X0002]};end;else dL[bC-0x00001]=RL[uC[0X2]];end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);end;else if wL==15 then for AL=PL[0X5],PL[0X4]do YL[AL]=nil;end;else repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0X0)then else local WC=(EC[2]);if not BL[WC]then BL[WC]={dL[WC]};end;do EC[1]=BL[WC];end;EC[0x002]=0x1;end;end;end;until true;return;end;end;else do if not(wL>=0XA)then do if wL==0X9 then local AL,dL=PL[0X5],((PL[7]-1)*0X32);local BL=YL[AL];for DL=0X00001,PL[0x4]do BL[dL+DL]=YL[AL+DL];end;else CL=PL[4];end;end;else if wL==11 then if YL[PL[0x0004]]==YL[PL[7]]then else CL=PL[5];end;else YL[0]=KL[PL[0X1]];CL=CL+0x0001;do CL=CL+1;end;PL=FL[CL];local BL=(3);do CL=CL+1;end;YL[1]=PL[0X1];local AL=(0);CL=CL+0x1;local dL=0x2;if dL~=0 then NL=AL+dL-0X1;end;local DL,bC=nil,(nil);do if dL~=0X00001 then do DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;else DL,bC=on(YL[AL]());end;end;if BL~=1 then if BL~=0 then do DL=AL+BL-2;end;NL=DL+1;else DL=DL+AL-1;do NL=DL;end;end;local uC=(0);for EC=AL,DL do uC=uC+1;do YL[EC]=bC[uC];end;end;else NL=AL-1;end;CL=CL+0X1;do CL=CL+0X0001;end;PL=FL[CL];CL=CL+0X1;if not(not YL[0x00000])then else do CL=PL[0x4];end;end;end;end;end;end;else if not(wL<4)then if not(wL>=0X6)then if wL==0X5 then local AL=(PL[0X5]);local dL=g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);(dL)(YL[AL],YL[AL+1],YL[AL+2]);do NL=AL;end;YL[AL]=dL;CL=PL[0X4];else local AL=(RL[0X0000]);(YL)[2]=AL[1][AL[0X2]];CL=CL+1;local dL=(2);CL=CL+1;PL=FL[CL];CL=CL+0X0001;local BL=(YL[2]);(YL)[dL+0X1]=BL;do YL[dL]=BL[PL[3]];end;do PL=FL[CL];end;do CL=CL+1;end;YL[4]=PL[1];do CL=CL+0X1;end;YL[0X5]=YL[1];CL=CL+0X00001;dL=0X02;NL=dL+0x00004-0X1;(YL[dL])(F(YL,dL+1,NL));NL=dL-0X1;CL=CL+0x0001;CL=CL+0X1;do CL=CL+1;end;AL=RL[1];YL[2]=AL[0X1][AL[0x002]];PL=FL[CL];CL=CL+1;do YL[0x003]=PL[1];end;CL=CL+0x1;YL[0X4]=YL[1];CL=CL+1;do dL=2;end;(YL[dL])(YL[dL+0X001],YL[dL+2]);NL=dL-1;do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0X001;do(YL)[2]=KL[PL[0X001]];end;CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;YL[3]=PL[1];do CL=CL+1;end;dL=2;YL[dL](YL[dL+0X1]);NL=dL-0X1;CL=CL+0X00001;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X1;end;do CL=PL[0X004];end;end;else if wL==7 then YL[PL[0X5]]=YL[PL[0x4]]-YL[PL[0x7]];else(YL)[PL[0X5]]=PL[1];end;end;else if not(wL<2)then do if wL==3 then YL[PL[5]]=KL[PL[0X0001]];else end;end;else if wL~=0X1 then if YL[PL[0X4]]~=YL[PL[0X007]]then else CL=PL[0X005];end;else YL[PL[5]]={F({},0X1,PL[4])};end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)~="\s\116\114\i\110\g"then(G)(TL,0X0);else if not(V(TL,"\097\116t\em\p\116\032t\111\032\y\i\e\108\d\032a\cr\oss\032\me\116\097\m\et\104\o\d/\067\%\-\ca\ll\ \098\o\117nda\114y"))then else return q();end;if V(TL,'^.\-\058\037d\+:\032')then G('\L\117r\097\p\h\032Sc\114\ip\116\:'..(_L[CL-0x1]or"\(\in\116\101rnal\041")..'\:\ '..l(TL),0x00000);else G(TL,0X00);end;end;else if TL then if rL~=0X1 then return YL[ML](F(YL,ML+0x1,NL));else do return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;end;end;end;else if not(HL>=0x000059)then if HL<87 then if HL==86 then aL=function(...)local CL,YL=0X1,({});local OL=(Q());local NL,KL=0,(OL==_ and sL or OL);local LL,hL=on(...);local kL=({[0X1]=YL,[2]=qL});LL=LL-1;do for PL=0,LL do do if XL>PL then do(YL)[PL]=hL[PL+1];end;else break;end;end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X001 or 0,F(hL,XL+0X1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);do CL=CL+0X1;end;if not(wL>=0x6)then if not(wL>=0X3)then if not(wL>=1)then local AL=PL[0X5];local dL,BL=YL[AL]();if not(dL)then else for DL=1,PL[7]do YL[AL+DL]=BL[DL];end;do CL=PL[4];end;end;else if wL==2 then local dL=PL[0X4];local AL=(PL[5]);local BL=PL[0X7];do if dL==0 then else NL=AL+dL-0X1;end;end;local DL,bC=nil,nil;if dL==1 then do DL,bC=on(YL[AL]());end;else DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;if BL~=0X1 then if BL==0x0 then DL=DL+AL-1;NL=DL;else DL=AL+BL-0X2;NL=DL+0X0001;end;local uC=0X0;for EC=AL,DL do uC=uC+1;YL[EC]=bC[uC];end;else NL=AL-1;end;else local AL,dL=PL[0X00004],(nil);local BL=(AL[0X0002]);local DL=(#BL);do if DL>0X0 then dL={};do for bC=1,DL do local uC=(BL[bC]);do if uC[1]~=0 then dL[bC-1]=RL[uC[2]];else dL[bC-0X1]={YL,uC[2]};end;end;end;end;(x)(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;else do if not(wL<0X00004)then if wL==0X5 then else(YL)[PL[0x5]]={F({},1,PL[4])};end;else CL=PL[0X0004];end;end;end;else if wL>=0X9 then if not(wL>=10)then do YL[PL[0x5]]=YL[0];end;PL=FL[CL];local AL=(RL[0]);CL=CL+1;(AL[0X1])[AL[2]]=YL[PL[0X5]];do CL=CL+0x1;end;repeat local dL,BL,DL=mL,YL,({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X1]==BL and WC[0X2]>=0)then else local eC=(WC[2]);if not DL[eC]then DL[eC]={BL[eC]};end;(WC)[0X1]=DL[eC];(WC)[2]=1;end;end;end;until true;return;else if wL~=11 then local AL=YL[PL[4]]/YL[PL[0X7]];(YL)[PL[0X5]]=AL-AL%1;else(YL)[PL[0X05]]=YL[PL[0X4]]/YL[PL[0x0007]];end;end;else if wL>=7 then if wL~=0x008 then(YL)[PL[5]]=KL[PL[0x1]];else YL[PL[5]]=PL[0X1];end;else local AL=(PL[5]);local dL=g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);dL(YL[AL],YL[AL+1],YL[AL+0X2]);NL=AL;YL[AL]=dL;do CL=PL[0X0004];end;end;end;end;end;end);if not(nL)then do if z(TL)=="s\116\114i\110\103"then do if V(TL,"\097\116\116em\pt t\111\ \y\105\e\l\d\032ac\114\o\115\s \m\e\116a\m\101t\h\o\d\/\C\%\045\099\097l\l\ b\111\117\110d\097\114\y")then return q();end;end;if V(TL,'^\046-\058%\100\+\058\ ')then(G)("\076urap\104\032\S\cr\i\pt\:"..(_L[CL-1]or"\040\in\116\101r\110a\108\)")..'\058\ '..l(TL),0);else G(TL,0);end;else G(TL,0);end;end;else if TL then if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then do return F(YL,ML,rL);end;end;end;end;else aL=function(...)local YL={};local NL=(0X00);local OL=Q();local kL={[0X1]=YL,[2]=qL};local CL,KL=1,(OL==_ and sL or OL);local LL,hL=on(...);LL=LL-0X1;for PL=0X00,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+1)};end;end;do if KL~=OL then(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+0X1;if not(wL<0X7)then if not(wL<0Xb)then if wL<13 then if wL~=0X00c then if not(not(YL[PL[4]]<YL[PL[0X7]]))then else CL=PL[0X05];end;else local AL=PL[5];do for dL=AL,AL+(PL[0x4]-1)do(YL)[dL]=hL[XL+(dL-AL)+1];end;end;end;else if wL==0Xe then do if not(YL[PL[4]]<YL[PL[7]])then else do CL=PL[5];end;end;end;else local AL=(PL[0x4]);local BL=AL[0X2];local DL,dL=#BL,nil;if DL>0X0 then do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[1]~=0 then dL[bC-0x1]=RL[uC[2]];else dL[bC-1]={YL,uC[2]};end;end;x(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;end;end;else if wL<9 then do if wL~=8 then else YL[PL[0X5]]=not YL[PL[4]];end;end;else do if wL==10 then CL=PL[0x4];else YL[PL[5]][YL[PL[0X4]]]=YL[PL[0X7]];end;end;end;end;else if wL<0x3 then if wL<0x1 then do YL[PL[0X5]]=YL[PL[0X4]]>YL[PL[0x7]];end;else if wL==2 then do(YL)[PL[5]]=PL[1];end;else(YL)[PL[0x00005]]={F({},0X1,PL[0x04])};end;end;else if not(wL<5)then if wL==6 then do for AL=PL[0X05],PL[0X4]do(YL)[AL]=nil;end;end;else(YL)[PL[5]]=YL[PL[0x00004]]==YL[PL[7]];end;else if wL~=0X4 then(YL)[PL[5]]=KL[PL[1]];else(YL)[1]=KL[PL[0X00001]];do CL=CL+0X01;end;CL=CL+1;do CL=CL+0X1;end;do YL[0x2]=YL[0X00000];end;PL=FL[CL];CL=CL+1;YL[0X1][PL[1]]=YL[2];PL=FL[CL];CL=CL+1;YL[1]=KL[PL[0X1]];CL=CL+1;do NL=1;end;local uC=1;YL[NL]();do NL=NL-1;end;local AL=(RL[0]);local BL=nil;CL=CL+1;CL=CL+1;CL=CL+0X1;do(YL)[1]=AL[1][AL[0X2]];end;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;local dL=(PL[4]);local DL=dL[2];local bC=(#DL);do if bC>0 then BL={};do for EC=1,bC do local WC=(DL[EC]);do if WC[1]~=0x000 then BL[EC-0x1]=RL[WC[0X2]];else(BL)[EC-0x1]={YL,WC[0x2]};end;end;end;end;x(mL,BL);end;end;YL[2]=cn(BL,KL,dL);CL=CL+1;(YL[uC])(YL[uC+0X1]);NL=uC-0X0001;CL=CL+1;CL=CL+0x1;CL=CL+1;repeat local EC,WC=mL,YL;local eC={};for oC,jC in U,EC do do for zC,lC in U,jC do if not(lC[0X1]==WC and lC[0X02]>=0)then else local GC=(lC[0X2]);if not(not eC[GC])then else(eC)[GC]={WC[GC]};end;lC[0X00001]=eC[GC];lC[2]=1;end;end;end;end;until true;return;end;end;end;end;end;end);if not(nL)then if z(TL)=="st\114\i\110\103"then if not(V(TL,"\097t\116e\109pt\ t\o y\i\e\108d\032\097\099\114o\s\115\ \me\116a\me\116\h\o\d\/\067\%\045c\097\l\108\032\098\o\117\110\dar\y"))then else return q();end;do if not(V(TL,"^\046\-:\037d+:\032"))then G(TL,0);else(G)('L\117\114a\p\h\ S\cri\pt\058'..(_L[CL-0X00001]or'\040\i\110t\101rna\l\041')..'\:\032'..l(TL),0);end;end;else G(TL,0X0);end;else do if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0x1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;else do if HL==0X58 then aL=function(...)local YL,NL={},(0);local CL=0X001;local OL=Q();local KL,kL=(OL==_ and sL or OL),({[0X1]=YL,[2]=qL});local LL,hL=on(...);LL=LL-0X1;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0X001 or 0x0000,F(hL,XL+0X001,LL+1)};end;end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+1;do if wL>=0X00C then if wL>=18 then do if not(wL<0X15)then if not(wL>=23)then if wL==0X16 then YL[7]=YL[6][PL[3]];CL=CL+0x1;YL[0X0]=YL[7];PL=FL[CL];CL=CL+0X1;do CL=PL[0x4];end;else local AL=PL[0X05];local BL=(YL[AL+0x0001]);local dL=YL[AL];local DL=YL[AL+0x2];do YL[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);end;do CL=PL[0X4];end;end;else if wL==24 then do(YL)[4]=KL[PL[0X1]];end;CL=CL+1;(YL)[5]=YL[0x0002];local AL=(0x00004);CL=CL+1;YL[AL]=YL[AL](YL[AL+0x00001]);do NL=AL;end;do PL=FL[CL];end;CL=CL+1;do if not(not YL[0X4])then else do CL=PL[4];end;end;end;else do(YL)[PL[0X5]]=T(YL[PL[0X4]]);end;end;end;else if wL<0x013 then YL[PL[0X00005]]=true;else if wL~=20 then do if not YL[PL[0X05]]then CL=PL[4];end;end;else do(YL)[1]=KL[PL[0X1]];end;CL=CL+0X00001;CL=CL+1;PL=FL[CL];CL=CL+0x00001;(YL)[0X2]=PL[0x1];local dL=(2);CL=CL+1;local AL=0x01;local BL=(4);if dL==0X000 then else NL=AL+dL-0X0001;end;local DL,bC=nil,(nil);if dL~=0x1 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else do DL,bC=on(YL[AL]());end;end;if BL==0X1 then NL=AL-1;else do if BL~=0 then DL=AL+BL-2;NL=DL+0X1;else DL=DL+AL-1;do NL=DL;end;end;end;local uC=(0);for EC=AL,DL do uC=uC+0x1;do(YL)[EC]=bC[uC];end;end;end;PL=FL[CL];CL=CL+1;if not YL[0x0001]then CL=PL[0X00004];end;end;end;end;end;else if not(wL>=15)then if wL>=13 then do if wL==14 then(YL)[PL[5]]=PL[1];else local AL=PL[0X4];local BL,dL=AL[2],nil;local DL=#BL;if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[1]~=0 then(dL)[bC-0x1]=RL[uC[0X02]];else do dL[bC-1]={YL,uC[0x2]};end;end;end;(x)(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;end;else if YL[PL[0X00005]]then do CL=PL[4];end;end;end;else if wL>=16 then if wL==17 then YL[1]=KL[PL[0X1]];PL=FL[CL];CL=CL+0X1;(YL)[1]=YL[0X1][PL[3]];PL=FL[CL];CL=CL+0X1;if not YL[1]then CL=PL[0x4];end;else(YL)[0X4]=KL[PL[1]];CL=CL+0X1;do CL=CL+0X1;end;local AL=(RL[1]);local dL=4;CL=CL+1;YL[0X5]=AL[0x1][AL[0X2]];PL=FL[CL];local DL=(0X004);do CL=CL+1;end;(YL)[0X5]=YL[0X05][PL[3]];CL=CL+0x00001;local BL=(0X002);if BL==0x0 then else NL=dL+BL-1;end;local bC,uC=nil,nil;if BL~=0X1 then bC,uC=on(YL[dL](F(YL,dL+1,NL)));else bC,uC=on(YL[dL]());end;do if DL==0x1 then do NL=dL-1;end;else if DL~=0X0 then bC=dL+DL-2;do NL=bC+0X1;end;else bC=bC+dL-1;NL=bC;end;local WC=(0x0);for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;end;CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;dL=0X4;local EC=g(function(...)(q)();for WC,eC in...do q(true,WC,eC);end;end);EC(YL[dL],YL[dL+1],YL[dL+0x2]);do NL=dL;end;(YL)[dL]=EC;CL=PL[0X004];end;else CL=PL[4];end;end;end;else do if not(wL>=6)then if wL>=0X3 then if not(wL<0X0004)then do if wL~=5 then YL[1]=KL[PL[0X1]];do PL=FL[CL];end;CL=CL+1;(YL)[1]=YL[1][PL[3]];PL=FL[CL];CL=CL+1;(YL)[0X2]=PL[1];CL=CL+0x1;local AL=0X1;(YL)[AL]=YL[AL](YL[AL+1]);NL=AL;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;if not YL[1]then CL=PL[0X4];end;else local AL,dL=PL[0X05],(PL[4]);NL=AL+dL-1;repeat local BL,DL=mL,(YL);local bC=({});for uC,EC in U,BL do do for WC,eC in U,EC do if not(eC[0X1]==DL and eC[2]>=0)then else local oC=(eC[2]);if not bC[oC]then do bC[oC]={DL[oC]};end;end;(eC)[0x1]=bC[oC];eC[2]=1;end;end;end;end;until true;do return true,AL,dL;end;end;end;else(YL)[PL[0X5]]={F({},1,PL[0X0004])};end;else if not(wL<0X1)then if wL~=0X0002 then do(YL)[7]=YL[0X0006][PL[0X003]];end;do PL=FL[CL];end;do CL=CL+1;end;YL[0X7]=YL[7][PL[0X3]];CL=CL+0x1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X0001;if YL[7]==PL[0X03]then else CL=PL[5];end;else end;else do repeat local AL,dL,BL,DL=mL,YL,PL[0x5],({});for bC,uC in U,AL do for EC,WC in U,uC do do if WC[1]==dL and WC[0x2]>=BL then local eC=(WC[2]);if not(not DL[eC])then else do DL[eC]={dL[eC]};end;end;WC[0X001]=DL[eC];(WC)[0x2]=0X1;end;end;end;end;until true;end;end;end;else if not(wL<9)then if not(wL<0XA)then if wL~=11 then repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do do if EC[1]==dL and EC[2]>=0X00 then local WC=EC[2];if not(not BL[WC])then else BL[WC]={dL[WC]};end;(EC)[0X1]=BL[WC];(EC)[2]=1;end;end;end;end;until true;return;else(YL)[PL[5]]=KL[PL[1]];end;else local AL=RL[PL[0X00004]];(YL)[PL[0X5]]=AL[0X0001][AL[2]];end;else if not(wL>=0X007)then local AL=(RL[2]);do(YL)[0x4]=AL[1][AL[0x2]];end;CL=CL+0X1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+1;YL[4]=YL[0X4][PL[0X3]];do CL=CL+0X1;end;local BL=(0x2);CL=CL+0X1;PL=FL[CL];CL=CL+0X1;(YL)[4]=YL[0x4][PL[3]];PL=FL[CL];CL=CL+1;(YL)[4]=YL[4][PL[0X3]];CL=CL+0x01;CL=CL+0X1;CL=CL+0X00001;AL=RL[3];YL[0x5]=AL[1][AL[0X0002]];CL=CL+0X1;CL=CL+1;do PL=FL[CL];end;local dL=(5);CL=CL+0X1;do YL[6]=PL[0X1];end;CL=CL+0X1;do(YL)[7]=YL[0x00000];end;CL=CL+0X00001;(YL[dL])(YL[dL+0x1],YL[dL+0X002]);do NL=dL-1;end;do CL=CL+0X1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X00001;(YL)[0X00005]=KL[PL[0X1]];do PL=FL[CL];end;CL=CL+1;YL[0X0005]=YL[5][PL[3]];do CL=CL+1;end;NL=5;(YL[NL])();do NL=NL-1;end;CL=CL+1;(YL)[0X5]={};PL=FL[CL];do CL=CL+0X00001;end;do YL[0x005][PL[0X1]]=YL[0X000];end;PL=FL[CL];CL=CL+1;YL[5][PL[0X00001]]=YL[2];do PL=FL[CL];end;CL=CL+1;do(YL[0X0005])[PL[1]]=PL[3];end;do PL=FL[CL];end;CL=CL+1;do(YL[0X5])[PL[1]]=PL[3];end;CL=CL+1;AL=RL[3];YL[6]=AL[0x0001][AL[2]];CL=CL+1;CL=CL+0X001;PL=FL[CL];do CL=CL+0X001;end;(YL)[7]=PL[1];PL=FL[CL];CL=CL+0X1;do YL[8]=KL[PL[0X1]];end;CL=CL+1;(YL)[0x00009]=YL[0x0005];CL=CL+1;dL=0X08;local DL=0;if BL~=0X0000 then NL=dL+BL-1;end;local bC,uC=nil,(nil);do if BL==1 then do bC,uC=on(YL[dL]());end;else bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));end;end;if DL~=0X001 then if DL==0 then bC=bC+dL-0X1;do NL=bC;end;else bC=dL+DL-0X00002;do NL=bC+1;end;end;local WC=0;do for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;else NL=dL-0X1;end;CL=CL+0X01;CL=CL+1;CL=CL+0X1;do dL=0X6;end;YL[dL](F(YL,dL+0X1,NL));NL=dL-0X1;CL=CL+1;AL=RL[0X02];(YL)[0x6]=AL[1][AL[0x0002]];do PL=FL[CL];end;CL=CL+1;YL[6]=YL[0X6][PL[3]];PL=FL[CL];CL=CL+0x1;do YL[0X6]=YL[6][PL[3]];end;CL=CL+1;CL=CL+1;do CL=CL+0x0001;end;(YL)[7]=YL[4];PL=FL[CL];CL=CL+0X01;(YL[0X006])[PL[1]]=YL[7];CL=CL+1;AL=RL[4];YL[0X0006]=AL[0X1][AL[2]];do CL=CL+0X00001;end;CL=CL+1;PL=FL[CL];CL=CL+1;dL=6;local EC=(YL[0x06]);YL[dL+1]=EC;do(YL)[dL]=EC[PL[3]];end;do CL=CL+0X1;end;AL=RL[0X00005];(YL)[8]=AL[1][AL[2]];CL=CL+0x0001;do CL=CL+0X001;end;PL=FL[CL];do CL=CL+0X1;end;YL[9]=PL[1];PL=FL[CL];CL=CL+0X0001;dL=10;do EC=YL[3];end;do(YL)[dL+1]=EC;end;(YL)[dL]=EC[PL[3]];PL=FL[CL];CL=CL+0X1;do YL[0Xc]=PL[1];end;do PL=FL[CL];end;CL=CL+1;do YL[13]=PL[1];end;CL=CL+0X1;do dL=10;end;do BL=0X004;end;do DL=0x00000;end;do if BL~=0 then do NL=dL+BL-1;end;end;end;do bC,uC=nil;end;if BL~=1 then bC,uC=on(YL[dL](F(YL,dL+0x1,NL)));else do bC,uC=on(YL[dL]());end;end;do if DL==1 then NL=dL-0X001;else do if DL~=0X0 then do bC=dL+DL-0X2;end;NL=bC+0X1;else bC=bC+dL-0x00001;NL=bC;end;end;local WC=0X000;for eC=dL,bC do do WC=WC+0X1;end;(YL)[eC]=uC[WC];end;end;end;CL=CL+1;dL=0X08;BL=0;DL=0x00;if BL==0 then else NL=dL+BL-0X0001;end;bC,uC=nil;do if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0x1,NL)));end;end;if DL==1 then NL=dL-1;else if DL~=0x0 then bC=dL+DL-2;NL=bC+0X1;else bC=bC+dL-1;NL=bC;end;local WC=(0x0);for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;CL=CL+1;do dL=0X6;end;(YL[dL])(F(YL,dL+1,NL));NL=dL-0X001;CL=CL+0X1;do CL=CL+0X0001;end;CL=CL+1;do AL=RL[0X00003];end;YL[0x6]=AL[1][AL[0X2]];do PL=FL[CL];end;CL=CL+0X1;(YL)[0x7]=PL[0X01];do CL=CL+1;end;(YL)[0X8]=YL[0];CL=CL+1;dL=0X0006;(YL[dL])(YL[dL+1],YL[dL+0X02]);do NL=dL-0x1;end;PL=FL[CL];CL=CL+0X01;YL[6]=KL[PL[0X1]];PL=FL[CL];do CL=CL+0X1;end;(YL)[0X06]=YL[0x6][PL[3]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[0X7]=PL[0X0001];do CL=CL+0X1;end;dL=6;(YL[dL])(YL[dL+0X1]);NL=dL-1;do PL=FL[CL];end;CL=CL+1;CL=PL[0x04];else if wL==8 then do for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;else local AL=(PL[0X05]);local dL,BL,DL=YL[AL]();if not(dL)then else(YL)[AL+0x1]=BL;(YL)[AL+0X2]=DL;CL=PL[0X4];end;end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='str\in\g'then if not(V(TL,'a\116\116\101\109\pt\ t\o\ yi\e\l\d\ \097\c\114\111\s\s \109\e\116\097\m\101t\104\o\d\047\C\%\-\c\097\l\l \098\111\117\110da\114\y'))then else return q();end;do if not(V(TL,'^\.\-\:\037d+\:\ '))then(G)(TL,0);else(G)('\L\117r\097\p\h \S\cr\ip\116:'..(_L[CL-1]or'\(\in\116e\114\110\097\l)')..'\: '..l(TL),0X00);end;end;else G(TL,0);end;else if TL then if rL==0X1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+0X1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else aL=function(...)local YL={};local CL=(1);local NL=0X00000;local OL=(Q());local KL=((OL==_ and sL or OL));local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});do LL=LL-1;end;do for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0X0,F(hL,XL+0X001,LL+1)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];CL=CL+0X1;if wL<0X7 then if not(wL>=0X003)then if wL>=1 then if wL~=0X02 then YL[PL[0x0005]]=PL[0X1];else(YL)[PL[0X5]]=true;end;else(YL)[PL[5]]=not YL[PL[4]];end;else if wL>=5 then if wL==6 then local AL=PL[4];local dL=(nil);local BL=(AL[2]);local DL=(#BL);if DL>0X00000 then do dL={};end;do for bC=1,DL do local uC=(BL[bC]);if uC[0X001]==0X0000 then(dL)[bC-0X1]={YL,uC[2]};else dL[bC-0X01]=RL[uC[0X2]];end;end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else CL=PL[0X4];end;else if wL~=4 then YL[PL[0X5]]=KL[PL[1]];else end;end;end;else if not(wL<10)then if wL<0x00C then if wL~=11 then do if YL[PL[0X004]]<=YL[PL[7]]then do CL=PL[0X5];end;end;end;else(YL)[PL[5]]={F({},0X1,PL[4])};end;else if wL~=0XD then(YL)[0X1]=KL[PL[0X1]];CL=CL+0X1;(YL)[2]=YL[0];do PL=FL[CL];end;CL=CL+1;(YL[1])[PL[1]]=YL[0X2];do PL=FL[CL];end;CL=CL+1;YL[0x01]=KL[PL[0X01]];CL=CL+1;NL=1;YL[NL]();NL=NL-1;do CL=CL+0X1;end;repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X2]>=0 then local WC=EC[2];if not BL[WC]then BL[WC]={dL[WC]};end;do EC[1]=BL[WC];end;do(EC)[0X2]=1;end;end;end;end;until true;return;else YL[PL[5]]=PL[0x4];end;end;else if not(wL>=0x008)then do(YL)[PL[5]]=#YL[PL[4]];end;else if wL==0x9 then YL[PL[5]]=YL[PL[4]]>=YL[PL[0X007]];else do for AL=PL[0X05],PL[4]do(YL)[AL]=nil;end;end;end;end;end;end;end;end);if nL then if TL then do if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)=='\str\in\g'then if not(V(TL,"atte\109p\116\ t\o\032\y\105\101\ld\ a\099r\111\115\115 \m\e\116ame\116\h\o\d\/\C\037\-c\097l\108\032\098\o\117\110\d\097r\y"))then else return q();end;do if not(V(TL,"\^.\-:\%d\+: "))then(G)(TL,0);else G('\076\117\114\097\p\h S\cr\i\112\116\:'..(_L[CL-0x1]or'\(\105nt\e\114\110a\l)')..'\: '..l(TL),0X00);end;end;else(G)(TL,0);end;end;end;end;end;end;else if not(HL<91)then if HL==92 then do aL=function(...)local CL,YL=1,({});local kL={[2]=qL,[0X1]=YL};local OL=Q();local LL,hL=on(...);local KL=((OL==_ and sL or OL));do LL=LL-1;end;local NL=0;for PL=0X0,LL do if not(XL>PL)then do break;end;else do(YL)[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0x0,F(hL,XL+1,LL+1)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=PL[2];do CL=CL+1;end;if wL<0X9 then do if wL>=0X4 then if wL>=6 then if not(wL<0x007)then do if wL~=0X8 then if not YL[PL[5]]then CL=PL[0X004];end;else repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0X1]==dL and EC[0x2]>=0 then local WC=(EC[0x002]);if not(not BL[WC])then else BL[WC]={dL[WC]};end;(EC)[1]=BL[WC];do EC[0x2]=0X001;end;end;end;end;end;until true;do return;end;end;end;else YL[PL[0X05]]=YL[PL[0X0004]]==YL[PL[0X0007]];end;else if wL~=5 then else YL[PL[5]]=PL[1];end;end;else if wL>=0x2 then if wL==3 then local dL=(PL[0X4]);local AL=PL[5];if dL==0X00 then else NL=AL+dL-1;end;local BL,DL,bC=PL[7],nil,(nil);if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;if BL~=1 then if BL==0x00 then DL=DL+AL-0X1;NL=DL;else DL=AL+BL-2;NL=DL+1;end;local uC=(0X00);for EC=AL,DL do uC=uC+0X1;(YL)[EC]=bC[uC];end;else do NL=AL-1;end;end;else if YL[PL[0X4]]~=YL[PL[0x7]]then else CL=PL[0x05];end;end;else if wL==1 then for AL=PL[0x00005],PL[0X4]do do(YL)[AL]=nil;end;end;else YL[PL[5]]=KL[PL[1]];end;end;end;end;else if not(wL>=0XE)then if wL<0X0b then if wL~=10 then local AL,dL=PL[0X4],(nil);local BL=AL[0X002];local DL=(#BL);if not(DL>0X000)then else dL={};do for bC=0X01,DL do local uC=(BL[bC]);if uC[0X1]==0X0000 then(dL)[bC-1]={YL,uC[2]};else dL[bC-0X01]=RL[uC[2]];end;end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else do CL=PL[4];end;end;else if wL>=0XC then if wL==0X0000D then(YL)[PL[0x5]]={F({},0X1,PL[0x004])};else local AL=(PL[5]);local dL,BL,DL=YL[AL]();if not(dL)then else do(YL)[AL+0X1]=BL;end;YL[AL+2]=DL;CL=PL[0X4];end;end;else local AL=(RL[1]);YL[0X3]=AL[1][AL[2]];PL=FL[CL];local dL=(3);do CL=CL+1;end;(YL)[0X4]=YL[0X2][PL[3]];do PL=FL[CL];end;CL=CL+1;(YL)[0X04]=YL[4][PL[3]];CL=CL+1;do YL[dL]=YL[dL](YL[dL+1]);end;NL=dL;do CL=CL+1;end;do AL=RL[2];end;(YL)[4]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;(YL)[0X004]=YL[4][PL[3]];PL=FL[CL];do CL=CL+1;end;(YL)[4]=YL[4][PL[3]];PL=FL[CL];CL=CL+1;do(YL)[0X4]=YL[0x00004][PL[0X0003]];end;CL=CL+0x1;CL=CL+0X1;PL=FL[CL];CL=CL+1;if YL[0X0003]==YL[4]then else CL=PL[5];end;end;end;else if not(wL>=16)then do if wL==15 then(YL)[0X00003]=YL[2][PL[0x03]];PL=FL[CL];local AL=0X3;CL=CL+1;local dL=YL[0X3];YL[AL+0X1]=dL;(YL)[AL]=dL[PL[0X003]];do PL=FL[CL];end;CL=CL+1;(YL)[5]=PL[0X1];do CL=CL+1;end;AL=3;YL[AL]=YL[AL](YL[AL+1],YL[AL+2]);do NL=AL;end;PL=FL[CL];CL=CL+1;if not YL[0X3]then CL=PL[4];end;else local dL=PL[4];local AL=(PL[5]);NL=AL+dL-0X00001;repeat local BL,DL,bC=mL,YL,({});for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[2]>=0X00000 then local oC=(eC[0X2]);if not bC[oC]then(bC)[oC]={DL[oC]};end;(eC)[1]=bC[oC];do(eC)[2]=0X01;end;end;end;end;until true;do return true,AL,dL;end;end;end;else do if wL<17 then YL[3]=YL[0X00002][PL[3]];local AL=(3);CL=CL+0x1;CL=CL+1;do CL=CL+0X1;end;repeat local dL,BL=mL,YL;local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[0X02]>=0)then else local eC=WC[2];do if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;end;WC[0X1]=DL[eC];(WC)[2]=0x1;end;end;end;until true;return false,AL,AL;else if wL~=18 then(YL)[0]=KL[PL[1]];CL=CL+0X01;CL=CL+0X1;local dL=(0X00000);do CL=CL+1;end;local AL=(RL[0]);(YL)[0X1]=AL[1][AL[0X2]];do CL=CL+0x001;end;do CL=CL+1;end;PL=FL[CL];do CL=CL+1;end;YL[0X1]=YL[0X1][PL[3]];CL=CL+0X1;CL=CL+1;local DL=(0x4);CL=CL+0X1;local BL=(2);if BL==0X000 then else NL=dL+BL-0X1;end;local bC,uC=nil,nil;if BL~=1 then do bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;else bC,uC=on(YL[dL]());end;if DL~=0X1 then if DL==0X00 then bC=bC+dL-0X1;NL=bC;else do bC=dL+DL-0x0002;end;do NL=bC+0X1;end;end;local WC=(0);for eC=dL,bC do WC=WC+1;do YL[eC]=uC[WC];end;end;else NL=dL-1;end;PL=FL[CL];CL=CL+0X0001;dL=0;local EC=g(function(...)(q)();for WC,eC in...do q(true,WC,eC);end;end);EC(YL[dL],YL[dL+1],YL[dL+0X2]);NL=dL;do YL[dL]=EC;end;CL=PL[0X04];else local AL,dL=PL[5],YL[PL[4]];(YL)[AL+0X1]=dL;YL[AL]=dL[PL[0X3]];end;end;end;end;end;end;end;end;end);if nL then do if TL then do if rL~=0x1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;else if z(TL)~='s\116\114\i\110g'then G(TL,0);else if V(TL,'\097\116t\e\mpt\ to\ \yi\e\108\d\032\097\c\114\o\115\115\ \109\e\116\097\m\eth\111d\047\C\%\-\ca\108\108\ \098\111\117\110\da\114\121')then return q();end;if not(V(TL,'\^\046\045\:\037\d+:\ '))then G(TL,0X00000);else G('\L\117r\097\112\104\ \Sc\114\105\p\116\058'..(_L[CL-1]or'\040\105nt\e\114\110a\l)').."\:\ "..l(TL),0);end;end;end;end;end;else aL=function(...)local YL=({});local CL=0x01;local OL=(Q());local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-1;do for PL=0X00,LL do if not(XL>PL)then do break;end;else do YL[PL]=hL[PL+0X1];end;end;end;end;local NL=(0X0);if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X001 or 0x000,F(hL,XL+0x1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];do CL=CL+1;end;if not(wL>=0x8)then if wL<0X04 then do if not(wL>=2)then if wL==0X1 then if YL[PL[0X004]]~=YL[PL[0X007]]then CL=PL[0X5];end;else do(YL)[PL[5]]=YL[PL[4]]/YL[PL[0X0007]];end;end;else if wL~=3 then do(YL)[PL[0x5]]=KL[PL[1]];end;else YL[PL[5]][YL[PL[0X4]]]=YL[PL[0X07]];end;end;end;else if not(wL<6)then if wL==7 then YL[PL[5]]=YL[PL[0X00004]]^YL[PL[7]];else YL[PL[5]]={F({},0X0001,PL[4])};end;else if wL==0x005 then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else YL[PL[5]]=PL[1];end;end;end;else if wL<12 then if wL<0X0000a then if wL~=9 then CL=PL[4];else(YL)[PL[5]]=kL[PL[0X004]];end;else if wL~=11 then(YL)[1]=KL[PL[1]];CL=CL+0X1;do(YL)[2]=YL[0];end;local dL=1;PL=FL[CL];CL=CL+1;(YL[0X1])[PL[0x1]]=YL[0X2];local AL=(RL[0X0]);do PL=FL[CL];end;CL=CL+1;YL[1]=KL[PL[0X1]];CL=CL+1;do CL=CL+1;end;CL=CL+1;NL=1;(YL[NL])();do NL=NL-1;end;CL=CL+1;CL=CL+0X1;CL=CL+0X1;YL[0X001]=AL[0X0001][AL[0x2]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;local BL=(YL[1]);do YL[dL+1]=BL;end;YL[dL]=BL[PL[3]];CL=CL+0x0001;(YL)[3]=YL[0X0];CL=CL+0X1;dL=1;(YL[dL])(YL[dL+0X1],YL[dL+0x0002]);do NL=dL-0X1;end;do CL=CL+1;end;repeat local uC=({});local DL,bC=mL,(YL);for EC,WC in U,DL do for eC,oC in U,WC do if not(oC[0X00001]==bC and oC[2]>=0X0)then else local jC=(oC[0X2]);if not(not uC[jC])then else(uC)[jC]={bC[jC]};end;oC[0X1]=uC[jC];(oC)[2]=1;end;end;end;until true;do return;end;else(kL)[PL[4]]=YL[PL[5]];end;end;else if wL>=14 then if wL==15 then else do(YL)[PL[5]]=YL[PL[0X004]];end;end;else if wL~=0X00D then YL[PL[0X00005]]=-YL[PL[0x4]];else local AL,dL=PL[0X4],(nil);local BL=AL[0X2];local DL=(#BL);if not(DL>0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[1]==0X0 then dL[bC-0X00001]={YL,uC[0X002]};else(dL)[bC-0X1]=RL[uC[0x2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;end;end);if not(nL)then if z(TL)~='\s\116\114\in\103'then G(TL,0X00);else if not(V(TL,'att\101\109\p\116\ \116\o \121\105\e\l\d\032a\099r\111\s\s \meta\m\101t\h\111\d/\C\037\-ca\108\108 \098\111\117n\d\097\114y'))then else return q();end;do if V(TL,"\^\046\-:\037d\+:\ ")then(G)("\L\117\114\097p\h\ \083\cri\112\116:"..(_L[CL-1]or'(\int\er\110\097\108\)')..': '..l(TL),0X00000);else(G)(TL,0X0);end;end;end;else if TL then do if rL~=0X01 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else if HL~=0X005A then aL=function(...)local CL,YL=0X1,({});local OL=Q();local kL,NL={[0X1]=YL,[2]=qL},0x0000;local LL,hL=on(...);LL=LL-0X1;local KL=((OL==_ and sL or OL));for PL=0X0,LL do if XL>PL then(YL)[PL]=hL[PL+0x1];else break;end;end;if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+0X1)};end;end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X2]);CL=CL+1;do if wL<0X00006 then if wL>=3 then if wL<0X4 then YL[1]=KL[PL[0X1]];CL=CL+1;CL=CL+0x01;do CL=CL+1;end;do YL[0X002]=YL[0X0];end;PL=FL[CL];CL=CL+1;(YL[1])[PL[0x1]]=YL[2];PL=FL[CL];CL=CL+1;YL[1]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X1;CL=CL+0X01;NL=1;(YL[NL])();do NL=NL-0X0001;end;do CL=CL+1;end;CL=CL+1;CL=CL+1;do repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do do for uC,EC in U,bC do do if EC[0x1]==dL and EC[2]>=0 then local WC=(EC[2]);if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;do EC[0X1]=BL[WC];end;EC[0X2]=0x01;end;end;end;end;end;end;until true;end;return;else if wL==0X5 then YL[PL[5]]=KL[PL[0X1]];else local AL=(PL[0X05]);for dL=AL,AL+(PL[0X4]-0X1)do YL[dL]=hL[XL+(dL-AL)+0X1];end;end;end;else do if wL<0X1 then else do if wL~=2 then do for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;else local AL=PL[4];local BL=AL[2];local dL=(nil);local DL=(#BL);if DL>0X0 then dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0X01]==0 then dL[bC-0x0001]={YL,uC[0x00002]};else(dL)[bC-0x1]=RL[uC[0X00002]];end;end;end;(x)(mL,dL);end;(YL)[PL[0x05]]=cn(dL,KL,AL);end;end;end;end;end;else if not(wL<9)then if wL>=0Xb then do if wL==0XC then do YL[PL[5]]={F({},0X0001,PL[4])};end;else KL[PL[1]]=YL[PL[5]];end;end;else if wL~=10 then(YL)[PL[0X00005]]=YL[PL[4]]^YL[PL[0x007]];else do CL=PL[4];end;end;end;else if not(wL<7)then if wL~=0X8 then YL[PL[0X0005]]=h(YL[PL[4]],YL[PL[7]]);else if YL[PL[0X4]]<=YL[PL[0X7]]then CL=PL[5];end;end;else(YL)[PL[0X5]]=PL[1];end;end;end;end;end;end);if not(nL)then if z(TL)=="\st\114\in\g"then if not(V(TL,"\097\116\116\em\pt\032t\111\ \y\i\el\d\032a\099\114\111\115\s\ m\e\116a\m\101t\h\o\100\/\067\%\-\ca\l\l\032\098o\117\110\dar\121"))then else return q();end;do if not(V(TL,'\094\046\-\:\%\d\+:\ '))then G(TL,0X0);else(G)("\Lurap\h\ \083\cript\:"..(_L[CL-0X1]or"\(\i\110ter\110al\041").."\058 "..l(TL),0X0);end;end;else(G)(TL,0);end;else if TL then do if rL~=0X1 then do return YL[ML](F(YL,ML+0X1,NL));end;else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else aL=function(...)local YL=({});local CL=0x1;local NL=(0);local OL=Q();local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});LL=LL-0X00001;local KL=((OL==_ and sL or OL));do for PL=0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0x0,F(hL,XL+1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+0x0001;if not(wL<0Xc)then if wL>=18 then do if not(wL<21)then if not(wL>=0X17)then if wL==0X16 then YL[PL[0X005]]=PL[0X0001];else if not YL[PL[5]]then CL=PL[4];end;end;else if wL~=24 then KL[PL[1]]=YL[PL[5]];else(YL)[PL[5]]=KL[PL[1]];end;end;else if wL>=0x13 then if wL~=20 then for AL=PL[0X05],PL[4]do YL[AL]=nil;end;else local AL=RL[0X1];(YL)[1]=AL[0X1][AL[2]];CL=CL+1;CL=CL+0X0001;PL=FL[CL];CL=CL+1;(YL)[0X01]=YL[1][PL[3]];PL=FL[CL];CL=CL+1;(YL)[1]=YL[1][PL[3]];CL=CL+0X1;CL=CL+0X01;PL=FL[CL];do CL=CL+1;end;do if not(not YL[1])then else do CL=PL[4];end;end;end;end;else local AL=PL[4];local BL,dL=AL[2],(nil);local DL=#BL;do if DL>0X00000 then dL={};for bC=0X001,DL do local uC=BL[bC];if uC[0X1]==0x0 then do dL[bC-0X1]={YL,uC[2]};end;else do dL[bC-0X1]=RL[uC[2]];end;end;end;(x)(mL,dL);end;end;YL[PL[0x5]]=cn(dL,KL,AL);end;end;end;else if wL<15 then if wL<0x0000D then do(YL)[5]=YL[3][PL[3]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[0X5]=YL[0x5][PL[3]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0x001;(YL)[0X5]=YL[5][PL[0X03]];CL=CL+1;CL=CL+0x001;PL=FL[CL];CL=CL+0X1;do if YL[0X05]==PL[0X3]then else CL=PL[5];end;end;else do if wL==14 then do(YL)[PL[0x5]]={F({},1,PL[0x0004])};end;else end;end;end;else if wL>=0X10 then if wL==0X11 then local AL=RL[1];YL[0X00001]=AL[1][AL[2]];PL=FL[CL];CL=CL+0x1;(YL)[1]=YL[0X1][PL[3]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[1]=YL[0X001][PL[3]];PL=FL[CL];do CL=CL+0X1;end;if not(YL[1])then else do CL=PL[4];end;end;else local AL=PL[0X4];local dL=(YL[AL]);for BL=AL+1,PL[7]do dL=dL..YL[BL];end;YL[PL[0X5]]=dL;end;else do(YL)[4]=YL[0X3][PL[3]];end;CL=CL+0x1;CL=CL+0x1;PL=FL[CL];do CL=CL+1;end;if YL[4]==PL[3]then else do CL=PL[0x005];end;end;end;end;end;else if not(wL>=0X6)then if not(wL>=0X3)then if wL>=0x1 then do if wL==0X2 then do(YL)[PL[5]]=kL[PL[4]];end;else repeat local AL,dL,BL=mL,YL,{};do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0X00000)then else local WC=(EC[0X2]);if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];do(EC)[0X0002]=0x0001;end;end;end;end;end;until true;return;end;end;else(YL)[4]=YL[0x3][PL[3]];local BL=(RL[3]);CL=CL+1;CL=CL+0X01;PL=FL[CL];CL=CL+0X1;(YL)[4]=YL[4][PL[0x3]];CL=CL+1;CL=CL+0X1;local AL=(0X04);PL=FL[CL];CL=CL+0x1;(YL)[0X4]=YL[4][PL[0X3]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+1;local dL=(YL[4]);(YL)[AL+1]=dL;do YL[AL]=dL[PL[3]];end;do PL=FL[CL];end;CL=CL+0x001;YL[6]=PL[1];PL=FL[CL];do CL=CL+1;end;YL[7]=PL[0X00001];CL=CL+1;do AL=4;end;NL=AL+0X4-0X0001;(YL)[AL]=YL[AL](F(YL,AL+1,NL));NL=AL;do CL=CL+1;end;CL=CL+1;CL=CL+1;YL[0X5]=BL[1][BL[0x0002]];CL=CL+1;CL=CL+0X1;do CL=CL+1;end;BL=RL[0X4];(YL)[0x006]=BL[0X1][BL[2]];CL=CL+1;CL=CL+1;CL=CL+1;do YL[6]=YL[0X6][YL[4]];end;PL=FL[CL];do CL=CL+0X1;end;(YL)[0X00006]=YL[0X6][PL[3]];CL=CL+1;YL[0x005]=YL[5][YL[6]];PL=FL[CL];CL=CL+1;YL[0X5]=YL[0X0005][PL[0x3]];CL=CL+0x1;BL=RL[4];do YL[0x6]=BL[1][BL[0X2]];end;do CL=CL+1;end;CL=CL+1;CL=CL+0X0001;YL[0X06]=YL[0X00006][YL[4]];do PL=FL[CL];end;CL=CL+1;(YL)[6]=YL[6][PL[3]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X0001;(YL)[0X07]=KL[PL[1]];do CL=CL+0X00001;end;do YL[8]=YL[4];end;CL=CL+1;do AL=0X00007;end;(YL)[AL]=YL[AL](YL[AL+0x1]);do NL=AL;end;CL=CL+0X1;CL=CL+0x00001;PL=FL[CL];do CL=CL+1;end;do if not YL[0X0007]then CL=PL[0X004];end;end;end;else if wL<4 then(YL)[PL[5]]=YL[PL[0X4]]>YL[PL[0X7]];else if wL==0x5 then local AL=RL[0x0];(YL)[1]=AL[0X00001][AL[2]];do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+1;do if not(not YL[1])then else CL=PL[4];end;end;else(YL)[0X1]=KL[PL[1]];local AL=(RL[2]);CL=CL+1;do(YL)[0X2]=AL[0X1][AL[2]];end;local dL=(1);PL=FL[CL];CL=CL+0x001;YL[2]=YL[0x2][PL[0x3]];local DL=(0X00004);PL=FL[CL];CL=CL+0X1;(YL)[0x2]=YL[2][PL[0x3]];CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+1;do YL[2]=YL[0x2][PL[0X3]];end;CL=CL+1;CL=CL+1;CL=CL+1;local BL=2;if BL~=0 then NL=dL+BL-0X1;end;local bC,uC=nil,(nil);do if BL==1 then do bC,uC=on(YL[dL]());end;else bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;end;if DL==0X1 then NL=dL-1;else if DL~=0x0 then bC=dL+DL-0x2;do NL=bC+1;end;else do bC=bC+dL-1;end;NL=bC;end;local WC=0x000;for eC=dL,bC do do WC=WC+1;end;(YL)[eC]=uC[WC];end;end;PL=FL[CL];do CL=CL+1;end;do dL=1;end;local EC=g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end);EC(YL[dL],YL[dL+1],YL[dL+2]);do NL=dL;end;(YL)[dL]=EC;CL=PL[0x4];end;end;end;else if not(wL<0X09)then do if wL<0X000a then(YL)[7]=PL[1];CL=CL+1;(YL)[0x00008]=YL[0x005];local AL=(0X7);do CL=CL+0X1;end;YL[0X0009]=YL[0X6];CL=CL+0X1;YL[10]=YL[4];do CL=CL+0X1;end;repeat local dL,BL,DL=mL,YL,{};for bC,uC in U,dL do do for EC,WC in U,uC do if not(WC[0x0001]==BL and WC[2]>=0)then else local eC=WC[0X0002];do if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;end;(WC)[0X001]=DL[eC];WC[2]=0X00001;end;end;end;end;until true;return false,AL,AL+0x0005-0X2;else do if wL~=0X0000b then do YL[1]=KL[PL[1]];end;PL=FL[CL];CL=CL+0x1;YL[0X001]=YL[1][PL[0x003]];CL=CL+0X01;CL=CL+1;do PL=FL[CL];end;CL=CL+1;if not YL[1]then CL=PL[4];end;else CL=PL[4];end;end;end;end;else if not(wL>=7)then repeat local dL,BL,DL=mL,YL,({});do for bC,uC in U,dL do for EC,WC in U,uC do do if WC[1]==BL and WC[0X2]>=0X000 then local eC=(WC[2]);if not DL[eC]then do(DL)[eC]={BL[eC]};end;end;WC[1]=DL[eC];do WC[0X02]=1;end;end;end;end;end;end;until true;local AL=(PL[0X5]);return false,AL,AL;else if wL==0X8 then local AL=PL[0X5];local dL,BL,DL=YL[AL]();if not(dL)then else do(YL)[AL+1]=BL;end;(YL)[AL+2]=DL;CL=PL[0X0004];end;else if not(YL[PL[0X4]]<=YL[PL[7]])then CL=PL[0X05];end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=="\115\116\114\in\g"then if V(TL,'\097t\116\101\m\p\116\032t\o\ y\i\e\l\d\ a\cr\o\s\s \109\eta\me\116\ho\d\/\C%\045\cal\l\032\098\111\117\110\d\097\114\y')then do return q();end;end;do if V(TL,"\^\.-:%d+\: ")then G("\L\117\114ap\h\032\S\c\114\ipt:"..(_L[CL-0X1]or'\040in\116\101\114\110a\108\)').."\:\ "..l(TL),0x0000);else(G)(TL,0);end;end;else G(TL,0x0);end;end;else if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;end;end;end;else if HL>=76 then if not(HL<80)then if not(HL>=82)then if HL~=81 then do aL=function(...)local YL=({});local CL=(1);local OL=(Q());local KL,NL=(OL==_ and sL or OL),0x000;local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;for PL=0X0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+1,LL+1)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+0X001;if not(wL<0Xc)then if wL>=18 then if not(wL<0X15)then if wL<0X17 then if wL~=0x016 then YL[0x0]=KL[PL[0X0001]];PL=FL[CL];local AL=0X0;CL=CL+1;(YL)[0]=YL[0][PL[0x0003]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[0X00001]=PL[0X001];CL=CL+0x1;YL[AL]=YL[AL](YL[AL+1]);NL=AL;PL=FL[CL];CL=CL+0x001;if not YL[0]then CL=PL[0X04];end;else do YL[6]=YL[0X04][PL[0X003]];end;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+0X00001;end;do CL=PL[4];end;end;else if wL==24 then local AL=PL[0X5];local dL,BL=YL[AL]();if dL then CL=PL[4];(YL)[AL+3]=BL;end;else local AL=(PL[4]);local BL=(AL[0x2]);local dL=(nil);local DL=(#BL);do if not(DL>0x0000)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[0X00001]==0 then(dL)[bC-1]={YL,uC[0X2]};else dL[bC-0X01]=RL[uC[2]];end;end;x(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;else if not(wL>=19)then repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X01]==dL and EC[2]>=0X00000 then local WC=(EC[2]);if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;do EC[1]=BL[WC];end;EC[2]=1;end;end;end;until true;return;else if wL==20 then(YL)[3]=YL[0x2][PL[3]];PL=FL[CL];CL=CL+1;YL[0X0004]=YL[0X3][PL[0X03]];CL=CL+0x1;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;(YL)[0X5]=YL[0X2][PL[3]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X1;YL[6]=YL[0X4]~=PL[0x3];PL=FL[CL];do CL=CL+1;end;do if not YL[0X00006]then do CL=PL[4];end;end;end;else YL[PL[0X5]]=PL[0X1];end;end;end;else do if wL<0XF then if wL<0xD then CL=PL[4];else if wL==0Xe then(YL)[PL[5]]=YL[PL[0X4]]~=PL[0x03];else if not(not YL[PL[0X5]])then else CL=PL[4];end;end;end;else do if wL>=16 then if wL==0X0011 then if YL[PL[5]]then CL=PL[4];end;else end;else repeat local AL,dL,BL=mL,YL,PL[5];local DL=({});do for bC,uC in U,AL do for EC,WC in U,uC do if WC[0X01]==dL and WC[0X2]>=BL then local eC=(WC[2]);do if not(not DL[eC])then else DL[eC]={dL[eC]};end;end;(WC)[0X1]=DL[eC];WC[0X2]=0x001;end;end;end;end;until true;end;end;end;end;end;else if wL<0X006 then if not(wL>=0X3)then if wL>=0X1 then if wL==0x00002 then(YL)[0X0]=KL[PL[1]];PL=FL[CL];CL=CL+1;YL[0X0]=YL[0X0][PL[0x03]];CL=CL+0x001;CL=CL+0X1;PL=FL[CL];CL=CL+1;if not(not YL[0x0000])then else CL=PL[0X4];end;else if not(not(YL[PL[0X00004]]<=YL[PL[0X7]]))then else CL=PL[0X5];end;end;else YL[0X0]=KL[PL[0X1]];local AL=RL[0X001];CL=CL+1;YL[1]=AL[1][AL[2]];PL=FL[CL];CL=CL+0X1;do(YL)[1]=YL[1][PL[3]];end;CL=CL+1;local dL=0X0;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;(YL)[0X0001]=YL[0X1][PL[0X0003]];PL=FL[CL];CL=CL+0X1;(YL)[1]=YL[1][PL[3]];do CL=CL+0X001;end;CL=CL+1;PL=FL[CL];do CL=CL+0x00001;end;(YL)[1]=YL[1][PL[3]];CL=CL+0x01;CL=CL+1;local DL=0X4;do CL=CL+1;end;local BL=(2);if BL~=0 then NL=dL+BL-1;end;local bC,uC=nil,nil;if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0X00001,NL)));end;do if DL~=1 then do if DL~=0 then do bC=dL+DL-2;end;NL=bC+0X1;else do bC=bC+dL-0x00001;end;NL=bC;end;end;local WC=0X0;for eC=dL,bC do WC=WC+1;(YL)[eC]=uC[WC];end;else NL=dL-0X1;end;end;PL=FL[CL];CL=CL+1;dL=0;local EC=(g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end));(EC)(YL[dL],YL[dL+1],YL[dL+2]);NL=dL;(YL)[dL]=EC;CL=PL[0X4];end;else if not(wL>=4)then do YL[PL[5]]=KL[PL[1]];end;else do if wL~=5 then local AL=RL[2];(YL)[0X8]=AL[0X00001][AL[2]];CL=CL+0X001;local dL=(0X8);CL=CL+0x1;PL=FL[CL];CL=CL+0X1;do(YL)[0X9]=PL[0X1];end;CL=CL+1;(YL)[10]=YL[0x0001];CL=CL+1;YL[dL](YL[dL+0X01],YL[dL+0X2]);do NL=dL-0x01;end;CL=CL+0X1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;CL=PL[0X04];else do YL[PL[5]]=YL[PL[4]][PL[0X00003]];end;end;end;end;end;else if not(wL>=0X9)then do if not(wL>=7)then if YL[PL[0X0004]]~=YL[PL[0X7]]then else do CL=PL[5];end;end;else if wL==0x08 then YL[PL[0X5]]={F({},0x001,PL[4])};else local AL=(RL[0]);(YL)[0]=AL[1][AL[0X2]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;do if not(not YL[0])then else CL=PL[4];end;end;end;end;end;else if not(wL>=0Xa)then local AL=(PL[0X00004]);local dL=(YL[AL]);do for BL=AL+0X0001,PL[0x7]do dL=dL..YL[BL];end;end;do(YL)[PL[0X5]]=dL;end;else do if wL~=11 then local AL=PL[0x5];local dL,BL,DL=YL[AL]();do if dL then YL[AL+0x1]=BL;(YL)[AL+0X2]=DL;CL=PL[4];end;end;else for AL=PL[5],PL[0X00004]do do(YL)[AL]=nil;end;end;end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)~='s\116\114\i\110\103'then(G)(TL,0x000);else if not(V(TL,"atte\mp\116\032t\o \121\i\e\l\100\ \097\099\114\os\s\ m\e\116\097\m\e\116h\o\100\047C%\-\c\097\l\l\ bo\117\110\100\097r\121"))then else do return q();end;end;do if V(TL,"\^\.\-\:\037d\+: ")then(G)('\L\117ra\p\104\032\S\c\114\ipt:'..(_L[CL-1]or"(i\110t\e\114\110a\l\)")..'\058 '..l(TL),0X0);else G(TL,0);end;end;end;end;else if TL then if rL==0x1 then return YL[ML]();else do return YL[ML](F(YL,ML+0X1,NL));end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else aL=function(...)local YL=({});local CL=1;local OL=(Q());local KL,kL,NL=(OL==_ and sL or OL),{[2]=qL,[0X1]=YL},0X0;local LL,hL=on(...);LL=LL-0X00001;for PL=0,LL do do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;do if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0x0001 or 0,F(hL,XL+0X01,LL+1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X002];CL=CL+1;if not(wL>=7)then if wL<3 then if not(wL<1)then if wL~=0x2 then(YL)[PL[5]]=KL[PL[0X01]];else CL=PL[0X00004];end;else if YL[PL[0X4]]==YL[PL[0X07]]then CL=PL[5];end;end;else if not(wL<0X5)then if wL~=0x06 then YL[PL[0X5]]=PL[1];else YL[PL[0X5]]=YL[PL[0X4]]*YL[PL[0X7]];end;else if wL~=0X4 then(YL)[PL[0X00005]]=YL[PL[0x00004]]==YL[PL[0x007]];else end;end;end;else if wL>=10 then if wL>=0XC then if wL~=13 then do if not(YL[PL[0X04]]<=YL[PL[0X00007]])then else do CL=PL[5];end;end;end;else(YL)[PL[5]]=not YL[PL[4]];end;else do if wL~=11 then repeat local dL,BL,DL=mL,YL,({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[0x2]>=0X0)then else local eC=WC[2];if not DL[eC]then DL[eC]={BL[eC]};end;WC[1]=DL[eC];(WC)[2]=1;end;end;end;until true;local AL=PL[0X5];return false,AL,AL+PL[4]-2;else YL[0X001]=KL[PL[1]];do CL=CL+0x1;end;CL=CL+0X01;CL=CL+1;YL[2]=YL[0];PL=FL[CL];do CL=CL+1;end;YL[0X0001][PL[1]]=YL[2];PL=FL[CL];do CL=CL+0X1;end;(YL)[1]=KL[PL[0x1]];CL=CL+0X1;NL=0X1;YL[NL]();NL=NL-0X1;CL=CL+1;repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X0001]==dL and EC[0X0002]>=0X000 then local WC=(EC[0X02]);if not BL[WC]then(BL)[WC]={dL[WC]};end;(EC)[1]=BL[WC];EC[0X2]=1;end;end;end;until true;return;end;end;end;else do if wL>=0X8 then if wL==0X00009 then do(YL)[PL[5]]={F({},1,PL[4])};end;else local AL=PL[0X4];local BL=AL[2];local DL,dL=#BL,(nil);do if DL>0X0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[0x1]~=0X00000 then dL[bC-1]=RL[uC[2]];else(dL)[bC-0x01]={YL,uC[2]};end;end;(x)(mL,dL);end;end;do YL[PL[0X005]]=cn(dL,KL,AL);end;end;else do(YL)[PL[0X5]]=YL[PL[0X4]]/YL[PL[0x7]];end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\115t\114\i\110g"then if V(TL,"att\101\m\p\116 \116\o y\ie\l\d\032ac\114\o\115\115\ \m\et\097\109\101t\104\od\047\C\%\-\099a\l\l\ boun\d\097r\y")then return q();end;if V(TL,"^\046\045\:%\d+\:\032")then G('\L\117ra\p\104 \083\099r\105p\116\:'..(_L[CL-0X1]or'\040\i\110t\e\114\110a\l\)')..'\:\ '..l(TL),0);else G(TL,0X0);end;else(G)(TL,0X0);end;else if TL then do if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else if HL<0X000053 then aL=function(...)local CL,YL=1,{};local NL=0;local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);LL=LL-0x1;local KL=(OL==_ and sL or OL);for PL=0X0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X00001];end;end;if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0x001 or 0,F(hL,XL+0x1,LL+0x1)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X0002];CL=CL+1;if wL>=15 then if wL>=23 then if not(wL>=0X001B)then do if not(wL<0X19)then if wL==26 then for AL=PL[5],PL[0X00004]do(YL)[AL]=nil;end;else local AL=RL[7];(YL)[10]=AL[0x0001][AL[0X2]];CL=CL+0X0001;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[10]=YL[10][PL[0X3]];do CL=CL+0X0001;end;CL=CL+1;CL=CL+0X1;AL=RL[0X8];(YL)[0Xb]=AL[1][AL[0X2]];do CL=CL+0X1;end;local dL=(0X000B);CL=CL+0X01;CL=CL+1;do YL[12]=YL[0X007];end;CL=CL+1;YL[dL]=YL[dL](YL[dL+1]);NL=dL;do CL=CL+1;end;(YL)[10]=YL[10][YL[0X0000b]];PL=FL[CL];do CL=CL+1;end;if not(not YL[0X0000A])then else CL=PL[0X00004];end;end;else if wL==24 then local AL=(RL[1]);YL[1]=AL[0X1][AL[2]];PL=FL[CL];CL=CL+1;(YL)[0X00001]=YL[0X0001][PL[3]];CL=CL+1;CL=CL+0X001;do PL=FL[CL];end;CL=CL+1;(YL)[0X1]=YL[0X1][PL[0x3]];PL=FL[CL];CL=CL+1;if YL[0X0001]then do CL=PL[0X4];end;end;else local AL=RL[0x6];do(YL)[0X05]=AL[0x0001][AL[0X2]];end;CL=CL+0X001;YL[5]=YL[5][YL[1]];do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;(YL)[5]=YL[5][PL[0X3]];do CL=CL+1;end;CL=CL+0x001;PL=FL[CL];do CL=CL+0X1;end;YL[6]=KL[PL[1]];CL=CL+0X1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;(YL)[6]=YL[0X0006][PL[0X003]];do PL=FL[CL];end;CL=CL+1;do YL[6]=YL[0X0006][PL[3]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0X6]=YL[6][PL[3]];PL=FL[CL];do CL=CL+1;end;YL[0X6]=YL[0X6][PL[0X3]];PL=FL[CL];CL=CL+0x001;do(YL)[0X6]=YL[0X6][PL[0X3]];end;do CL=CL+0X1;end;do CL=CL+1;end;do PL=FL[CL];end;do CL=CL+0X0001;end;(YL)[0X7]=KL[PL[1]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[0x7]=YL[0X7][PL[3]];PL=FL[CL];do CL=CL+0x1;end;do YL[0X7]=YL[0X0007][PL[3]];end;local dL=10;PL=FL[CL];CL=CL+0X00001;(YL)[7]=YL[0x00007][PL[3]];PL=FL[CL];CL=CL+1;(YL)[0x00007]=YL[0X0007][PL[0X3]];PL=FL[CL];CL=CL+1;YL[7]=YL[0X00007][PL[3]];do PL=FL[CL];end;do CL=CL+0X1;end;(YL)[8]=KL[PL[1]];PL=FL[CL];CL=CL+1;(YL)[0X8]=YL[0X8][PL[3]];do PL=FL[CL];end;CL=CL+1;YL[0X8]=YL[0x8][PL[0x00003]];do CL=CL+0X00001;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[0X0008]=YL[8][PL[0x3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X0001;(YL)[0X8]=YL[8][PL[0X003]];PL=FL[CL];do CL=CL+0X1;end;(YL)[8]=YL[0X8][PL[3]];do CL=CL+1;end;CL=CL+0X1;CL=CL+0X001;AL=RL[7];YL[9]=AL[1][AL[0X2]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+0x1;end;(YL)[9]=YL[0X009][PL[0X3]];CL=CL+0X1;CL=CL+1;do CL=CL+0X0001;end;do AL=RL[0X008];end;(YL)[10]=AL[0X01][AL[2]];CL=CL+0X1;YL[11]=YL[0X6];do CL=CL+0X01;end;(YL)[dL]=YL[dL](YL[dL+1]);do NL=dL;end;CL=CL+0x1;(YL)[0X9]=YL[0x9][YL[0xA]];PL=FL[CL];CL=CL+1;if not(not YL[0X0009])then else CL=PL[0X04];end;end;end;end;else do if wL<29 then if wL==0X001c then YL[PL[5]]=KL[PL[1]];else local AL=RL[0];(YL)[0X001]=AL[1][AL[0X02]];CL=CL+0X1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X001;if not YL[0X0001]then do CL=PL[0X4];end;end;end;else if wL==0x1E then(YL)[1]=KL[PL[0X1]];PL=FL[CL];do CL=CL+0X0001;end;do YL[0X00001]=YL[0x1][PL[3]];end;PL=FL[CL];do CL=CL+1;end;if not YL[0x1]then do CL=PL[4];end;end;else local AL=(RL[0x04]);do(YL)[11]=AL[1][AL[2]];end;PL=FL[CL];CL=CL+0X1;(YL)[0Xb]=YL[0X000B][PL[0X0003]];do CL=CL+0X1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[12]=KL[PL[0x1]];do PL=FL[CL];end;CL=CL+0X1;do YL[12]=YL[12][PL[0X003]];end;PL=FL[CL];CL=CL+1;(YL)[0Xd]=YL[0X00A][PL[3]];CL=CL+1;CL=CL+0X1;local dL=(0XB);CL=CL+0X1;do YL[dL]=YL[dL](YL[dL+0X1],YL[dL+0X2]);end;NL=dL;CL=CL+0X1;CL=CL+0X0001;PL=FL[CL];CL=CL+0X1;do if not(YL[0XB])then else do CL=PL[4];end;end;end;end;end;end;end;else if wL<0x13 then if wL<17 then if wL~=0x10 then do(YL)[11]=PL[1];end;local AL=(0X0b);do PL=FL[CL];end;CL=CL+0X01;YL[0XC]=YL[4][PL[0X3]];do CL=CL+1;end;CL=CL+0x0001;PL=FL[CL];do CL=CL+0X1;end;YL[13]=YL[0X9][PL[0x003]];CL=CL+0x01;do CL=CL+1;end;CL=CL+1;repeat local dL,BL=mL,(YL);local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X1]==BL and WC[0X2]>=0)then else local eC=(WC[0X2]);if not(not DL[eC])then else do(DL)[eC]={BL[eC]};end;end;do WC[1]=DL[eC];end;WC[2]=0X1;end;end;end;until true;return false,AL,AL+0x04-0X2;else YL[PL[0X5]]=PL[0X1];end;else if wL==0X000012 then CL=PL[0X4];else local AL=RL[0X2];do YL[1]=AL[1][AL[0X2]];end;CL=CL+0X0001;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[0X1]=YL[0X0001][PL[3]];CL=CL+0X00001;CL=CL+0X0001;PL=FL[CL];CL=CL+1;(YL)[1]=YL[0X1][PL[3]];do CL=CL+1;end;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+1;(YL)[0X001]=YL[0x001][PL[0X00003]];CL=CL+0X00001;CL=CL+0x00001;PL=FL[CL];CL=CL+1;YL[0X001]=YL[0X0001][PL[3]];PL=FL[CL];do CL=CL+1;end;YL[0X1]=YL[1][PL[0X003]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X001;do(YL)[2]=KL[PL[1]];end;local dL=2;CL=CL+1;YL[3]=YL[0X01];CL=CL+0X1;do(YL)[dL]=YL[dL](YL[dL+1]);end;NL=dL;do PL=FL[CL];end;do CL=CL+0x1;end;do if YL[0X02]then CL=PL[4];end;end;end;end;else if not(wL>=0x00015)then if wL~=20 then repeat local dL,BL=mL,YL;local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X1]==BL and WC[0X02]>=0)then else local eC=WC[0X2];if not DL[eC]then(DL)[eC]={BL[eC]};end;do WC[0x1]=DL[eC];end;WC[2]=0X1;end;end;end;until true;local AL=(PL[0X5]);do return false,AL,AL;end;else local AL=PL[4];local dL=(nil);local BL=AL[0X2];local DL=(#BL);if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[0X1]==0 then dL[bC-0x1]={YL,uC[0X00002]};else dL[bC-1]=RL[uC[2]];end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;else do if wL==22 then repeat local dL,BL,DL=mL,YL,{};for bC,uC in U,dL do for EC,WC in U,uC do if WC[0X01]==BL and WC[0x00002]>=0X00 then local eC=(WC[0X2]);if not(not DL[eC])then else DL[eC]={BL[eC]};end;WC[0x001]=DL[eC];WC[0x2]=0X1;end;end;end;until true;local AL=PL[5];return false,AL,AL+PL[4]-0X2;else(YL)[PL[0x5]]=YL[PL[4]]/YL[PL[7]];end;end;end;end;end;else do if wL<0X7 then do if wL<3 then do if wL<1 then else if wL==0X2 then local AL=(RL[1]);YL[0X001]=AL[1][AL[0X2]];PL=FL[CL];CL=CL+1;(YL)[0x1]=YL[1][PL[0X3]];CL=CL+1;do CL=CL+0x0001;end;PL=FL[CL];CL=CL+0X1;YL[0X1]=YL[0X0001][PL[3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X001;if not YL[0x0001]then CL=PL[4];end;else do repeat local AL,dL=mL,YL;local BL={};do for DL,bC in U,AL do do for uC,EC in U,bC do do if not(EC[0X01]==dL and EC[2]>=0X0)then else local WC=(EC[0x00002]);do if not BL[WC]then BL[WC]={dL[WC]};end;end;EC[1]=BL[WC];EC[0X02]=1;end;end;end;end;end;end;until true;end;do return;end;end;end;end;else if not(wL<0x5)then if wL==6 then local AL=RL[0X9];YL[0X00B]=AL[1][AL[0x2]];CL=CL+1;do AL=RL[10];end;(YL)[0xC]=AL[0x001][AL[0X2]];CL=CL+0x1;local dL=11;CL=CL+1;CL=CL+0X1;(YL)[dL]=YL[dL](YL[dL+0X01]);NL=dL;PL=FL[CL];CL=CL+1;if YL[0x8]~=YL[11]then else CL=PL[5];end;else YL[PL[0x5]]=r(YL[PL[4]],YL[PL[0X7]]);end;else if wL==4 then(YL)[PL[0x5]]=YL[PL[4]]<=YL[PL[7]];else YL[2]=KL[PL[1]];local dL=(0X2);local DL,AL=4,RL[3];do CL=CL+1;end;CL=CL+1;CL=CL+1;YL[3]=AL[0X001][AL[2]];do CL=CL+0X1;end;local BL=2;if BL~=0 then NL=dL+BL-1;end;local bC,uC=nil,(nil);if BL~=1 then bC,uC=on(YL[dL](F(YL,dL+1,NL)));else do bC,uC=on(YL[dL]());end;end;if DL~=0X01 then if DL==0X0 then bC=bC+dL-0x1;NL=bC;else bC=dL+DL-2;NL=bC+0X1;end;local WC=(0);do for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;else NL=dL-0X00001;end;do PL=FL[CL];end;CL=CL+1;do dL=2;end;local EC=(g(function(...)q();for WC,eC in...do q(true,WC,eC);end;end));EC(YL[dL],YL[dL+1],YL[dL+0X0002]);NL=dL;(YL)[dL]=EC;CL=PL[4];end;end;end;end;else if not(wL>=0xB)then if wL>=9 then do if wL==0X0A then YL[PL[5]]=YL[PL[0X4]]<YL[PL[0X7]];else local AL=RL[4];(YL)[10]=AL[1][AL[2]];CL=CL+0x0001;CL=CL+0X1;PL=FL[CL];CL=CL+0x1;do YL[0xA]=YL[0X0000a][PL[3]];end;local dL=(10);PL=FL[CL];CL=CL+1;YL[0X00B]=KL[PL[1]];CL=CL+0X001;CL=CL+1;PL=FL[CL];CL=CL+0x1;(YL)[0X00B]=YL[0X0b][PL[3]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X1;YL[0XC]=YL[9][PL[3]];CL=CL+1;CL=CL+1;CL=CL+0X0001;(YL)[dL]=YL[dL](YL[dL+0X01],YL[dL+2]);NL=dL;CL=CL+1;CL=CL+0X0001;PL=FL[CL];CL=CL+1;if not(YL[10])then else CL=PL[0X04];end;end;end;else if wL==0X8 then(YL)[PL[0x5]]={F({},0x1,PL[0X0004])};else(YL)[PL[5]]=M(YL[PL[4]],YL[PL[0X7]]);end;end;else if wL>=13 then if wL==14 then(YL)[5]=KL[PL[1]];do CL=CL+0X1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[5]=YL[0X05][PL[0X3]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;(YL)[0X005]=YL[0x05][PL[0x3]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X1;(YL)[0X6]=YL[4][PL[3]];CL=CL+0X1;CL=CL+0X00001;do CL=CL+1;end;do(YL)[0X00005]=YL[5][YL[6]];end;PL=FL[CL];do CL=CL+1;end;if not(not YL[0X5])then else CL=PL[4];end;else local AL=(RL[0X4]);(YL)[0x005]=AL[0X01][AL[0X2]];CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;YL[0x5]=YL[0x5][PL[0x3]];local dL=(5);CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[0X6]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];do CL=CL+0X1;end;YL[0X0006]=YL[6][PL[3]];CL=CL+0x1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;do(YL)[0X0007]=YL[0X0004][PL[0x3]];end;do CL=CL+1;end;YL[dL]=YL[dL](YL[dL+1],YL[dL+0X00002]);do NL=dL;end;PL=FL[CL];CL=CL+1;do if YL[0X0005]then CL=PL[4];end;end;end;else do if wL==12 then local AL=RL[0X5];do YL[0X0005]=AL[0X01][AL[0X00002]];end;CL=CL+1;CL=CL+0X00001;PL=FL[CL];do CL=CL+1;end;YL[6]=KL[PL[0X1]];PL=FL[CL];do CL=CL+1;end;do YL[0x6]=YL[0X006][PL[0X3]];end;CL=CL+0x1;CL=CL+1;PL=FL[CL];CL=CL+0X1;local dL=0X5;(YL)[6]=YL[0X0006][PL[3]];PL=FL[CL];CL=CL+0X01;do(YL)[7]=YL[4][PL[0X3]];end;CL=CL+0X1;CL=CL+1;CL=CL+0X01;(YL)[6]=YL[0X06][YL[7]];CL=CL+0X001;YL[7]=YL[0X1];CL=CL+1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);do NL=dL;end;PL=FL[CL];do CL=CL+0x001;end;if not YL[0X05]then do CL=PL[4];end;end;else local AL=(PL[0X5]);local dL,BL,DL=YL[AL]();if not(dL)then else(YL)[AL+1]=BL;(YL)[AL+0x00002]=DL;do CL=PL[4];end;end;end;end;end;end;end;end;end;end;end);do if nL then if TL then do if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)=='\115\116\114in\g'then do if not(V(TL,'\097tte\mpt\032t\o\ \y\105\e\108\100\032\097\099\114\o\115\s\ \m\et\097\109\101th\o\d\/\C\%\045\099a\l\l\ \098o\117\110dar\y'))then else return q();end;end;if not(V(TL,'^.\-:%\d\+\:\ '))then(G)(TL,0X0);else(G)('\L\117r\097\112\h\ \S\cr\105\p\116\:'..(_L[CL-1]or"(i\110\116e\114n\097\l\041").."\:\ "..l(TL),0);end;else G(TL,0X0);end;end;end;end;else do if HL==0X54 then aL=function(...)local CL,YL=0X1,{};local kL=({[0X1]=YL,[2]=qL});local OL=Q();local LL,hL=on(...);LL=LL-0X0001;local KL=(OL==_ and sL or OL);for PL=0,LL do if XL>PL then do(YL)[PL]=hL[PL+1];end;else do break;end;end;end;local NL=0;do if not SL then hL=nil;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0x1,LL+0x0001)};end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0x00002]);do CL=CL+0x1;end;if wL>=0x6 then if wL<0x0009 then if wL>=0X0007 then if wL==8 then do CL=PL[4];end;else local AL=PL[0x04];local BL=(AL[2]);local dL=nil;local DL=(#BL);if not(DL>0)then else dL={};do for bC=1,DL do local uC=(BL[bC]);if uC[1]~=0 then(dL)[bC-1]=RL[uC[0x2]];else(dL)[bC-0X1]={YL,uC[2]};end;end;end;(x)(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;end;else YL[PL[5]]={F({},0X1,PL[0X4])};end;else if not(wL>=0Xa)then do if YL[PL[4]]~=YL[PL[0X07]]then CL=PL[5];end;end;else do if wL==11 then(YL)[PL[5]]=#YL[PL[0X4]];else do for AL=PL[0x0005],PL[4]do YL[AL]=nil;end;end;end;end;end;end;else if wL>=0X3 then if not(wL<0X04)then do if wL~=5 then local AL=PL[0X5];for dL=AL,AL+(PL[4]-0X1)do(YL)[dL]=hL[XL+(dL-AL)+1];end;else(YL)[1]=KL[PL[0x0001]];do CL=CL+1;end;do(YL)[2]=YL[0X0];end;PL=FL[CL];CL=CL+0x1;(YL[1])[PL[1]]=YL[2];do PL=FL[CL];end;CL=CL+0X1;do(YL)[1]=KL[PL[1]];end;CL=CL+0X01;do CL=CL+1;end;CL=CL+1;do NL=1;end;YL[NL]();NL=NL-0X001;CL=CL+0X001;CL=CL+1;CL=CL+1;repeat local AL,dL=mL,YL;local BL=({});do for DL,bC in U,AL do do for uC,EC in U,bC do do if EC[1]==dL and EC[0X00002]>=0X00000 then local WC=EC[0X2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];(EC)[0x002]=0X1;end;end;end;end;end;end;until true;return;end;end;else(YL)[PL[0x5]]=KL[PL[1]];end;else if wL<0x1 then(YL)[PL[0X00005]]=PL[1];else if wL==2 then local AL=(PL[5]);local dL,BL=YL[AL]();if not(dL)then else CL=PL[0x4];YL[AL+3]=BL;end;else end;end;end;end;end;end);do if not(nL)then if z(TL)=="\s\116r\105\110g"then if V(TL,"\097tt\em\pt\032\116\111 \yi\e\ld a\c\114\111\s\s\ \m\101t\097\109e\116h\o\d\047\067\%-\c\097\108l\032b\ound\097\114\y")then do return q();end;end;do if V(TL,"\094\.\045\:\%d\043\:\032")then(G)('\L\117\114a\112\104 \083\c\114\ipt\058'..(_L[CL-0X1]or"(\int\101\114\110\097\108\)")..'\:\ '..l(TL),0X0);else G(TL,0);end;end;else(G)(TL,0X0);end;else do if TL then if rL~=0x1 then return YL[ML](F(YL,ML+0x00001,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;else aL=function(...)local CL,YL=0x1,{};local kL=({[2]=qL,[0X1]=YL});local OL=Q();local KL=((OL==_ and sL or OL));local LL,hL=on(...);do LL=LL-1;end;local NL=0;for PL=0,LL do if XL>PL then YL[PL]=hL[PL+1];else do break;end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X01 or 0,F(hL,XL+1,LL+0x01)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+1;if not(wL<0X00B)then if not(wL<17)then do if wL<20 then if wL>=18 then do if wL==19 then CL=PL[4];else(YL)[PL[5]]=YL[PL[0x4]]>=YL[PL[0X7]];end;end;else(YL)[PL[5]]={F({},0X01,PL[0x4])};end;else do if wL>=21 then do if wL~=0X16 then(YL)[PL[0X5]]=true;else(YL)[PL[5]]=K(YL[PL[4]],YL[PL[7]]);end;end;else do YL[PL[0X5]]=PL[1];end;end;end;end;end;else if wL>=0XE then if wL<15 then local AL=RL[0];(YL)[0X0]=AL[1][AL[0X2]];CL=CL+1;CL=CL+0X1;CL=CL+0X1;AL=RL[1];do YL[1]=AL[0X1][AL[2]];end;local dL=1;CL=CL+0X001;CL=CL+1;CL=CL+1;YL[0]=YL[0X0000][YL[1]];PL=FL[CL];CL=CL+1;local BL=YL[0];(YL)[dL+0X1]=BL;do YL[dL]=BL[PL[0X3]];end;do PL=FL[CL];end;do CL=CL+1;end;(YL)[3]=PL[0X1];CL=CL+0X1;dL=0X1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);NL=dL;PL=FL[CL];do CL=CL+0x1;end;do if not(not YL[0X1])then else CL=PL[4];end;end;else if wL==16 then local AL=(PL[4]);local dL=nil;local BL=(AL[2]);local DL=#BL;if not(DL>0)then else dL={};for bC=0X1,DL do local uC=BL[bC];if uC[0X1]~=0 then do dL[bC-0X1]=RL[uC[0X2]];end;else(dL)[bC-1]={YL,uC[0X0002]};end;end;x(mL,dL);end;do(YL)[PL[5]]=cn(dL,KL,AL);end;else local AL=RL[2];(YL)[0X3]=AL[1][AL[0X0002]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;(YL)[0X3]=YL[0X3][PL[0X3]];CL=CL+0x00001;do CL=CL+1;end;CL=CL+1;local dL=(0X03);do AL=RL[3];end;YL[0x00004]=AL[1][AL[0X002]];CL=CL+1;CL=CL+0X1;CL=CL+0x01;YL[0X5]=YL[0x2];CL=CL+1;YL[dL](YL[dL+0x1],YL[dL+2]);NL=dL-0X1;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;CL=PL[4];end;end;else if not(wL>=12)then(YL)[2]=KL[PL[1]];CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X0001;end;(YL)[3]=YL[1][PL[0X0003]];PL=FL[CL];CL=CL+0X0001;YL[0x03]=YL[3][PL[3]];PL=FL[CL];CL=CL+0x1;YL[0X4]=YL[1][PL[3]];local AL=(2);CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;YL[0X4]=YL[4][PL[0X0003]];CL=CL+0x1;YL[AL]=YL[AL](YL[AL+1],YL[AL+2]);NL=AL;do PL=FL[CL];end;do CL=CL+0x1;end;if YL[2]then do CL=PL[0X4];end;end;else do if wL~=13 then YL[PL[0x05]]=-YL[PL[4]];else do YL[PL[5]]=YL[PL[4]];end;end;end;end;end;end;else if not(wL<0x5)then if wL>=8 then if not(wL>=9)then YL[PL[5]]=KL[PL[1]];else if wL==0xA then YL[PL[5]][PL[1]]=PL[0X003];else repeat local BL={};local AL,dL=mL,(YL);for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X01]==dL and EC[2]>=0X0)then else local WC=EC[2];if not(not BL[WC])then else BL[WC]={dL[WC]};end;(EC)[1]=BL[WC];EC[0X0002]=0X00001;end;end;end;until true;return;end;end;else if wL<6 then do YL[PL[5]]=YL[PL[0X4]]+YL[PL[0X7]];end;else do if wL~=0X7 then YL[2]={};CL=CL+0X1;(YL)[0X3]=YL[0];do PL=FL[CL];end;CL=CL+1;YL[0X2][PL[1]]=YL[0x3];PL=FL[CL];CL=CL+1;(YL)[0x3]=KL[PL[0x00001]];CL=CL+0X01;CL=CL+1;PL=FL[CL];CL=CL+0X1;YL[0X4]=PL[0X1];do PL=FL[CL];end;CL=CL+0X00001;do YL[5]=KL[PL[0X1]];end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;(YL)[6]=YL[0X1][PL[0X3]];CL=CL+1;do CL=CL+0X01;end;PL=FL[CL];do CL=CL+1;end;do YL[6]=YL[0X6][PL[3]];end;CL=CL+0X01;CL=CL+1;PL=FL[CL];CL=CL+0X1;YL[7]=YL[1][PL[3]];CL=CL+1;CL=CL+1;local BL=(0X0);PL=FL[CL];local AL=(0X00005);CL=CL+1;(YL)[0X07]=YL[7][PL[3]];PL=FL[CL];CL=CL+0X001;YL[7]=YL[0X7]+PL[3];CL=CL+0X01;local dL=0x3;if dL==0x0 then else NL=AL+dL-1;end;local DL,bC=nil,nil;if dL~=0x1 then DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));else DL,bC=on(YL[AL]());end;if BL~=0x1 then if BL~=0X00000 then DL=AL+BL-0x002;NL=DL+1;else DL=DL+AL-1;do NL=DL;end;end;local uC=0X0;for EC=AL,DL do uC=uC+1;YL[EC]=bC[uC];end;else NL=AL-0X1;end;CL=CL+0X1;CL=CL+0X1;CL=CL+1;AL=0x3;(YL)[AL]=YL[AL](F(YL,AL+1,NL));do NL=AL;end;CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0x1;end;YL[0X2][PL[1]]=YL[3];do PL=FL[CL];end;CL=CL+1;do YL[0X3]=KL[PL[0X1]];end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0x00001;(YL)[4]=YL[1][PL[3]];PL=FL[CL];CL=CL+0X1;(YL)[0X04]=YL[4][PL[0X0003]];CL=CL+1;CL=CL+1;CL=CL+1;do AL=0X3;end;do(YL)[AL]=YL[AL](YL[AL+1]);end;NL=AL;PL=FL[CL];CL=CL+0X0001;if not(not YL[3])then else CL=PL[4];end;else local AL=(PL[4]);local dL=YL[AL];for BL=AL+0X01,PL[0X7]do dL=dL..YL[BL];end;YL[PL[0X5]]=dL;end;end;end;end;else if not(wL<0X00002)then if not(wL>=3)then YL[PL[0X5]]=YL[PL[4]]~=YL[PL[0X7]];else if wL~=4 then for AL=PL[5],PL[0x4]do do(YL)[AL]=nil;end;end;else YL[PL[0X005]]=YL[PL[4]]-YL[PL[0X7]];end;end;else if wL~=0x001 then local AL,dL=0X00001,(YL[0]);do YL[AL+0X01]=dL;end;(YL)[AL]=dL[PL[0x3]];PL=FL[CL];do CL=CL+1;end;(YL)[0x03]=PL[1];CL=CL+1;do AL=0X1;end;(YL)[AL]=YL[AL](YL[AL+0X00001],YL[AL+0X2]);do NL=AL;end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+1;if not(not YL[1])then else do CL=PL[4];end;end;else end;end;end;end;end;end);if not(nL)then if z(TL)~="\st\114\105n\g"then(G)(TL,0X000);else do if not(V(TL,"att\empt\ \116\o\032\121\ie\l\d\ acr\111\ss\032\109\etam\e\116\104\o\100\/\C\%\-cal\108\ b\ou\110\100a\114y"))then else return q();end;end;if not(V(TL,'\^\046\-\:\037\100\+\:\ '))then(G)(TL,0);else(G)('\076\117ra\112\h\ \S\099\114\ipt\:'..(_L[CL-0X1]or'\(\in\116\erna\l\)')..'\:\ '..l(TL),0);end;end;else if TL then if rL~=0X1 then do return YL[ML](F(YL,ML+1,NL));end;else do return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;end;end;else if not(HL<0x4E)then do if HL==0x0004f then do aL=function(...)local NL=0X0;local YL=({});local CL=(1);local kL={[0X1]=YL,[2]=qL};local OL=(Q());local LL,hL=on(...);do LL=LL-1;end;for PL=0,LL do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+1];end;end;end;local KL=((OL==_ and sL or OL));do if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X01 or 0,F(hL,XL+0X001,LL+0X1)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=(PL[0X0002]);do CL=CL+1;end;if not(wL>=7)then if not(wL>=3)then if not(wL<0x1)then do if wL~=2 then else(YL)[PL[5]]=h(YL[PL[0x00004]],YL[PL[7]]);end;end;else CL=PL[4];end;else if wL>=0X5 then do if wL~=0X06 then do if not(YL[PL[4]]<=YL[PL[0x7]])then CL=PL[0X005];end;end;else(YL)[PL[5]]={F({},0X00001,PL[4])};end;end;else if wL~=4 then local AL=PL[0X5];local dL=YL[PL[4]];YL[AL+0X1]=dL;(YL)[AL]=dL[PL[3]];else do(YL)[PL[0X5]]=YL[PL[4]]+YL[PL[0x7]];end;end;end;end;else if not(wL<10)then if not(wL>=12)then if wL~=11 then(YL)[PL[5]]=kL[PL[4]];else local AL=(PL[4]);local BL=(AL[0x2]);local dL=(nil);local DL=(#BL);if DL>0 then do dL={};end;for bC=0x1,DL do local uC=BL[bC];do if uC[0X01]==0X0 then do dL[bC-1]={YL,uC[2]};end;else dL[bC-1]=RL[uC[2]];end;end;end;x(mL,dL);end;(YL)[PL[0x5]]=cn(dL,KL,AL);end;else if wL~=0xD then YL[PL[0X05]]=PL[0X01];else do YL[0x1]=KL[PL[1]];end;CL=CL+0X001;(YL)[0X0002]=YL[0X0];PL=FL[CL];CL=CL+1;do(YL[0X1])[PL[1]]=YL[0X002];end;do PL=FL[CL];end;CL=CL+1;YL[1]=KL[PL[0X01]];CL=CL+1;CL=CL+1;CL=CL+0X01;do NL=1;end;(YL[NL])();NL=NL-1;CL=CL+0X1;repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do do if EC[1]==dL and EC[0X00002]>=0X00 then local WC=EC[0x2];do if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;end;EC[0x1]=BL[WC];do(EC)[0X2]=1;end;end;end;end;end;until true;do return;end;end;end;else if wL<0x8 then do YL[PL[5]]=KL[PL[1]];end;else do if wL~=9 then YL[PL[5]]=YL[PL[0X0004]]>YL[PL[7]];else(YL)[PL[5]]=#YL[PL[4]];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\str\i\110g"then if V(TL,"\097\116\116\e\109\p\116 \116\111 \y\105\101\108\100\ a\099r\111s\115\032\metam\101t\ho\d\/C\037\-\c\097\108l \098\111\117n\d\097r\y")then return q();end;if not(V(TL,'\^\046-\:\037\d+\058\032'))then(G)(TL,0X0);else(G)('\Lur\097\p\h\ \Sc\114\105p\116\:'..(_L[CL-1]or"\040\in\116\er\110\097\l)").."\058 "..l(TL),0X00);end;else(G)(TL,0X000);end;else if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;else aL=function(...)local CL=(1);local YL=({});local OL=Q();local KL=(OL==_ and sL or OL);local LL,hL=on(...);local NL=(0);local kL=({[0X1]=YL,[2]=qL});LL=LL-0X1;for PL=0X0,LL do if XL>PL then YL[PL]=hL[PL+0x001];else do break;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+0X1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;do if wL>=7 then if wL>=0X000B then do if wL>=0XD then do if wL==0Xe then local AL=PL[0X5];local dL,BL=YL[AL]();if dL then CL=PL[4];(YL)[AL+0x003]=BL;end;else local AL=YL[PL[4]]/YL[PL[0x7]];(YL)[PL[5]]=AL-AL%1;end;end;else if wL~=12 then do(YL)[PL[0X5]]=YL[PL[0X00004]]+YL[PL[7]];end;else end;end;end;else if not(wL>=0x009)then if wL~=8 then if YL[PL[4]]<YL[PL[7]]then CL=PL[0X5];end;else CL=PL[0X4];end;else if wL==10 then YL[PL[5]]=KL[PL[0X01]];else local AL,dL=PL[4],(nil);local BL=(AL[2]);local DL=(#BL);if not(DL>0X0000)then else dL={};for bC=0X1,DL do local uC=BL[bC];if uC[1]==0 then dL[bC-1]={YL,uC[2]};else(dL)[bC-0X1]=RL[uC[2]];end;end;x(mL,dL);end;YL[PL[0X005]]=cn(dL,KL,AL);end;end;end;else do if wL>=0X003 then do if not(wL>=5)then if wL==0x04 then(YL)[PL[0x5]]=PL[1];else for AL=PL[5],PL[0X4]do YL[AL]=nil;end;end;else if wL==0x006 then(YL)[PL[0X5]]=YL[PL[0X4]]-YL[PL[7]];else YL[PL[0X00005]]=YL[PL[4]]*YL[PL[7]];end;end;end;else if wL<0x00001 then YL[0x1]=KL[PL[1]];PL=FL[CL];local AL=1;CL=CL+1;do(YL)[0X0002]=PL[0x1];end;CL=CL+1;YL[AL](YL[AL+1]);NL=AL-1;do CL=CL+0X1;end;CL=CL+0X1;do CL=CL+0X1;end;repeat local dL,BL=mL,(YL);local DL={};for bC,uC in U,dL do do for EC,WC in U,uC do if not(WC[0x1]==BL and WC[2]>=0)then else local eC=(WC[2]);do if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;end;(WC)[1]=DL[eC];do WC[2]=1;end;end;end;end;end;until true;return;else if wL~=0X2 then(YL)[PL[0x00005]]={F({},1,PL[0X00004])};else if YL[PL[4]]<=YL[PL[0X7]]then CL=PL[5];end;end;end;end;end;end;end;end;end);do if nL then if TL then do if rL~=0X00001 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;else do if z(TL)=='\st\114\in\g'then if not(V(TL,'\097tte\m\112t t\o\032\121ie\l\d\ a\099\114o\s\115\ m\eta\109\et\h\o\d\047C\037\045\ca\108\108\032\098\ounda\114\y'))then else return q();end;if not(V(TL,'\^.\-\:\%d+\:\032'))then G(TL,0x00000);else G('\Lura\ph\032\Scr\105\p\116\:'..(_L[CL-0X1]or'(\105\110\116\101rna\l\)')..'\058\ '..l(TL),0X0);end;else(G)(TL,0);end;end;end;end;end;end;end;else if HL==0X4d then aL=function(...)local CL,YL,NL=0X0001,{},(0);local OL=Q();local KL=((OL==_ and sL or OL));local LL,hL=on(...);local kL={[2]=qL,[0X1]=YL};LL=LL-1;for PL=0,LL do if not(XL>PL)then break;else do YL[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0X1,LL+1)};end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+0X1;if wL<0xB then if not(wL>=5)then if not(wL>=0X02)then do if wL~=1 then(YL)[PL[0X5]]={F({},1,PL[4])};else local AL=(PL[0X005]);local dL,BL,DL=YL[AL]();if dL then do(YL)[AL+1]=BL;end;(YL)[AL+2]=DL;do CL=PL[0X0004];end;end;end;end;else if not(wL>=3)then local AL=PL[4];local BL=(AL[0x2]);local dL=(nil);local DL=(#BL);if not(DL>0)then else do dL={};end;for bC=0X0001,DL do local uC=BL[bC];if uC[0X00001]~=0X0 then dL[bC-1]=RL[uC[2]];else(dL)[bC-0X1]={YL,uC[2]};end;end;x(mL,dL);end;do YL[PL[0x005]]=cn(dL,KL,AL);end;else if wL~=0X0004 then local AL=PL[0X0005];local dL=PL[0X4];if dL==0 then else NL=AL+dL-0X1;end;local BL=(PL[0x00007]);local DL,bC=nil,nil;do if dL==1 then do DL,bC=on(YL[AL]());end;else do DL,bC=on(YL[AL](F(YL,AL+0x00001,NL)));end;end;end;if BL~=1 then if BL~=0 then do DL=AL+BL-0X2;end;NL=DL+1;else do DL=DL+AL-1;end;do NL=DL;end;end;local uC=0;for EC=AL,DL do uC=uC+1;do(YL)[EC]=bC[uC];end;end;else do NL=AL-0x0001;end;end;else(YL)[PL[5]]=YL[PL[0x004]]+YL[PL[0X007]];end;end;end;else if not(wL<0X8)then if wL<0X9 then repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0X2]>=0)then else local WC=EC[0x2];if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[0X0001]=BL[WC];EC[0X02]=0X1;end;end;end;end;until true;return;else if wL==0xa then if not(YL[PL[0x00004]]<=YL[PL[0X7]])then else CL=PL[5];end;else local AL=(RL[1]);do YL[4]=AL[0X00001][AL[0X2]];end;do CL=CL+0X1;end;do CL=CL+0X1;end;CL=CL+1;YL[0X0004]=YL[0x4][YL[3]];PL=FL[CL];CL=CL+0x01;do(YL)[0X4]=YL[0X4][PL[0X03]];end;do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0x01;if YL[0X4]==YL[0]then else do CL=PL[0X0005];end;end;end;end;else do if not(wL<0X6)then if wL==7 then YL[PL[0X05]]=YL[PL[4]]^YL[PL[7]];else do(YL)[PL[5]]=YL[PL[4]]%YL[PL[0X0007]];end;end;else local AL=RL[0x001];(YL)[5]=AL[1][AL[0X2]];CL=CL+1;YL[5]=YL[5][YL[0X3]];local dL=0X5;do CL=CL+1;end;do CL=CL+0x1;end;do PL=FL[CL];end;CL=CL+1;do(YL)[5]=YL[5][PL[0x3]];end;CL=CL+1;CL=CL+1;CL=CL+1;repeat local BL,DL,bC=mL,YL,{};for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[1]==DL and eC[2]>=0x0)then else local oC=(eC[0X2]);do if not bC[oC]then bC[oC]={DL[oC]};end;end;(eC)[0X1]=bC[oC];eC[0x2]=1;end;end;end;until true;return false,dL,dL;end;end;end;end;else do if wL<16 then do if not(wL<13)then if not(wL>=0x000e)then do YL[0x1]=KL[PL[0X001]];end;local DL=(0x0);CL=CL+1;local dL=2;local AL=RL[0];(YL)[0X02]=AL[1][AL[0X2]];do CL=CL+0X1;end;local BL=(0X001);if BL~=0X000 then do NL=dL+BL-0X001;end;end;local bC,uC=nil,(nil);if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));end;if DL~=0X1 then if DL==0X0 then do bC=bC+dL-0X1;end;NL=bC;else do bC=dL+DL-2;end;NL=bC+1;end;local WC=(0x0);for eC=dL,bC do WC=WC+0X1;YL[eC]=uC[WC];end;else NL=dL-0X0001;end;CL=CL+0X1;do CL=CL+1;end;CL=CL+0x1;do dL=1;end;BL=0;DL=0X4;do if BL==0X0 then else NL=dL+BL-1;end;end;bC,uC=nil;do if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0x0001,NL)));end;end;if DL==0X1 then NL=dL-1;else if DL~=0X0 then bC=dL+DL-0X002;do NL=bC+1;end;else bC=bC+dL-1;NL=bC;end;local WC=0;do for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;end;do PL=FL[CL];end;CL=CL+0X1;dL=0X1;local EC=(g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end));EC(YL[dL],YL[dL+0X0001],YL[dL+2]);NL=dL;YL[dL]=EC;CL=PL[4];else if wL~=15 then local AL=PL[0X5];local BL,dL=YL[AL],((PL[0X7]-1)*50);do for DL=1,PL[4]do(BL)[dL+DL]=YL[AL+DL];end;end;else do YL[PL[5]]=KL[PL[0X1]];end;end;end;else if wL~=12 then do repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[2]>=0X0)then else local eC=WC[0X02];if not DL[eC]then(DL)[eC]={BL[eC]};end;WC[1]=DL[eC];(WC)[2]=1;end;end;end;until true;end;local AL=PL[5];return false,AL,AL;else YL[PL[5]]=M(YL[PL[4]],YL[PL[0X7]]);end;end;end;else do if not(wL>=19)then do if wL>=17 then do if wL==18 then local AL,dL=PL[0X5],PL[4];NL=AL+dL-1;do repeat local BL,DL=mL,(YL);local bC={};for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[0X1]==DL and eC[0X2]>=0x0)then else local oC=eC[0X0002];if not bC[oC]then(bC)[oC]={DL[oC]};end;(eC)[0X01]=bC[oC];do(eC)[2]=1;end;end;end;end;until true;end;return true,AL,dL;else end;end;else if YL[PL[0x4]]~=YL[PL[7]]then else CL=PL[5];end;end;end;else if not(wL>=20)then do(YL)[PL[5]]=PL[1];end;else if wL==21 then CL=PL[4];else for AL=PL[0X5],PL[0X4]do(YL)[AL]=nil;end;end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\115tr\i\110g"then G(TL,0X0);else if V(TL,'a\116\116\em\p\116 t\o \121\i\e\l\d\032a\c\114o\s\s \m\e\116\097\109\101\116\h\o\100\/\C\%\-\c\097ll\ \098\111\117\110dar\y')then return q();end;if V(TL,"^.\045:\%\100+:\032")then(G)('\076ur\097\p\104\032Sc\114\i\112\116:'..(_L[CL-1]or"\040\i\110\116\e\114n\097\108\)").."\:\ "..l(TL),0);else G(TL,0X0);end;end;else if TL then do if rL==0x1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;end;elseif ML then return F(YL,ML,rL);end;end;end;else aL=function(...)local YL=({});local CL=1;local OL=(Q());local kL={[2]=qL,[0X1]=YL};local NL=0X0;local LL,hL=on(...);local KL=(OL==_ and sL or OL);do LL=LL-0X1;end;do for PL=0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;end;end;if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+0x00001,LL+0X0001)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+0X1;if wL>=17 then if wL>=0X001A then if not(wL<0x1e)then if wL>=32 then if not(wL<0X21)then if wL~=34 then do(YL)[PL[0X5]]=KL[PL[1]];end;else YL[18]=YL[0X2];CL=CL+0x001;local AL=0X10;YL[0x13]=YL[0x00];CL=CL+0X1;YL[20]=YL[5];do CL=CL+1;end;NL=AL+0X0005-1;(YL)[AL]=YL[AL](F(YL,AL+0X0001,NL));NL=AL;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X00001;if not(not YL[16])then else CL=PL[0x4];end;end;else CL=PL[0X0004];end;else do if wL~=31 then do YL[PL[0X5]]=YL[PL[0X004]];end;else local AL=(PL[0x4]);local dL=nil;local BL=AL[0X2];local DL=#BL;if not(DL>0X00)then else do dL={};end;for bC=0X1,DL do local uC=BL[bC];do if uC[0x1]==0X00000 then(dL)[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[0x00002]];end;end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;else if not(wL>=0X1c)then if wL==0X1B then do YL[PL[5]]=PL[1];end;else if YL[PL[0x4]]==YL[PL[0X7]]then CL=PL[0X05];end;end;else do if wL~=29 then YL[0Xa]=YL[0X2];local AL=(0x8);CL=CL+1;(YL)[0XB]=YL[0X000];CL=CL+1;YL[12]=YL[0X05];CL=CL+0X0001;NL=AL+5-1;YL[AL]=YL[AL](F(YL,AL+1,NL));NL=AL;PL=FL[CL];do CL=CL+0x1;end;do if not(not YL[8])then else do CL=PL[4];end;end;end;else if YL[PL[0X4]]==YL[PL[0x7]]then else CL=PL[5];end;end;end;end;end;else if not(wL<21)then if not(wL>=23)then if wL==22 then local AL=RL[0x00008];(YL)[0X8]=AL[1][AL[2]];PL=FL[CL];local dL,uC=PL[4],(0X08);local DL=(dL[0X2]);do CL=CL+1;end;local BL,bC=nil,(#DL);if not(bC>0)then else do BL={};end;do for EC=1,bC do local WC=(DL[EC]);do if WC[0X1]~=0 then(BL)[EC-1]=RL[WC[2]];else BL[EC-1]={YL,WC[2]};end;end;end;end;x(mL,BL);end;(YL)[9]=cn(BL,KL,dL);CL=CL+1;(YL[uC])(YL[uC+1]);NL=uC-0X001;do PL=FL[CL];end;CL=CL+1;do CL=PL[0X4];end;else end;else if not(wL<0X00018)then if wL~=0X19 then local AL=RL[0X00001];(YL)[0Xa]=AL[0x1][AL[0X02]];CL=CL+1;CL=CL+0x1;do CL=CL+0X1;end;(YL)[11]=YL[0X3];PL=FL[CL];CL=CL+0X1;if not(YL[0xb])then else CL=PL[4];end;else local AL=(RL[1]);YL[0x08]=AL[1][AL[0X02]];CL=CL+1;(YL)[9]=YL[0x00003];PL=FL[CL];CL=CL+1;if YL[0x009]then CL=PL[0X0004];end;end;else do YL[14]=YL[0X0008][YL[13]];end;PL=FL[CL];do CL=CL+0x001;end;YL[15]=KL[PL[1]];CL=CL+0X1;CL=CL+0x0001;PL=FL[CL];local BL=0;CL=CL+1;do YL[0X00010]=KL[PL[1]];end;do CL=CL+0X1;end;CL=CL+0X1;do CL=CL+0X00001;end;local AL=16;YL[0X11]=YL[0Xe];do CL=CL+1;end;local dL=0X2;if dL~=0 then NL=AL+dL-1;end;local DL,bC=nil,nil;if dL==0X0001 then DL,bC=on(YL[AL]());else do DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));end;end;if BL~=0X01 then if BL~=0X0 then DL=AL+BL-0X02;NL=DL+1;else do DL=DL+AL-0X1;end;NL=DL;end;local uC=0;for EC=AL,DL do uC=uC+1;YL[EC]=bC[uC];end;else NL=AL-1;end;CL=CL+1;do AL=15;end;(YL)[AL]=YL[AL](F(YL,AL+1,NL));NL=AL;do CL=CL+1;end;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;do if YL[15]==YL[7]then else CL=PL[0X5];end;end;end;end;else if wL>=0X013 then do if wL==20 then YL[PL[5]]={F({},1,PL[4])};else local AL=RL[3];YL[10]=AL[0X1][AL[2]];CL=CL+1;local dL=10;CL=CL+1;do CL=CL+0X1;end;do YL[0Xb]=YL[0x2];end;do CL=CL+0X0001;end;do YL[12]=YL[9];end;do CL=CL+1;end;YL[dL](YL[dL+1],YL[dL+0X2]);NL=dL-0x1;PL=FL[CL];CL=CL+1;CL=PL[0X04];end;end;else if wL~=0X012 then YL[PL[5]]=kL[PL[0X04]];else local AL,dL=RL[0x0003],16;YL[16]=AL[0X01][AL[2]];CL=CL+0X1;do CL=CL+0x0001;end;CL=CL+1;do YL[0X0011]=YL[0x00002];end;CL=CL+0x0001;YL[18]=YL[14];CL=CL+1;YL[dL](YL[dL+0X1],YL[dL+2]);do NL=dL-1;end;do PL=FL[CL];end;do CL=CL+1;end;do CL=PL[4];end;end;end;end;end;else if wL>=0X08 then if not(wL>=12)then if not(wL<10)then if wL~=0X00b then do YL[8]=KL[PL[1]];end;CL=CL+1;CL=CL+1;CL=CL+1;local AL=(RL[0X0000A]);YL[9]=AL[0X001][AL[0X2]];PL=FL[CL];local DL=(0X0);CL=CL+0x1;YL[9]=YL[9][PL[0X3]];do CL=CL+0x1;end;AL=RL[0X4];YL[0X0A]=AL[0X1][AL[0X2]];PL=FL[CL];CL=CL+0x00001;(YL)[11]=PL[1];do PL=FL[CL];end;do CL=CL+1;end;local dL=(9);(YL)[0XC]=PL[1];do CL=CL+0X00001;end;local BL=4;if BL==0 then else NL=dL+BL-1;end;local bC,uC=nil,(nil);if BL==1 then bC,uC=on(YL[dL]());else do bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;end;do if DL==0X1 then do NL=dL-0X001;end;else if DL==0 then bC=bC+dL-1;NL=bC;else do bC=dL+DL-2;end;NL=bC+1;end;local EC=(0X0);for WC=dL,bC do EC=EC+1;(YL)[WC]=uC[EC];end;end;end;CL=CL+1;dL=0x8;YL[dL](F(YL,dL+1,NL));do NL=dL-1;end;CL=CL+0x1;do repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do do if lC[0X1]==WC and lC[0x02]>=0 then local GC=lC[2];do if not(not eC[GC])then else do eC[GC]={WC[GC]};end;end;end;(lC)[0X00001]=eC[GC];do lC[0X2]=1;end;end;end;end;end;until true;end;return;else do repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X1]==dL and EC[0X00002]>=0 then local WC=(EC[0X2]);if not(not BL[WC])then else BL[WC]={dL[WC]};end;(EC)[0x1]=BL[WC];do EC[2]=1;end;end;end;end;until true;end;return;end;else if wL~=9 then for AL=PL[5],PL[0X4]do YL[AL]=nil;end;else YL[0x02]=KL[PL[0X1]];do PL=FL[CL];end;CL=CL+0X1;YL[0x2]=YL[2][PL[3]];PL=FL[CL];do CL=CL+1;end;do if not(not YL[0x2])then else CL=PL[0x04];end;end;end;end;else if not(wL>=14)then if wL~=0XD then(YL)[0xC]=YL[2];CL=CL+0X00001;local AL=(10);do(YL)[0XD]=YL[0];end;CL=CL+1;YL[0x0000E]=YL[5];CL=CL+0X00001;NL=AL+0X005-1;(YL)[AL]=YL[AL](F(YL,AL+1,NL));do NL=AL;end;CL=CL+1;CL=CL+0x0001;PL=FL[CL];CL=CL+1;if not(not YL[0X000a])then else CL=PL[0x4];end;else(YL)[0X08]=KL[PL[1]];local BL=RL[5];local AL=(8);CL=CL+0X0001;CL=CL+1;PL=FL[CL];CL=CL+0X1;local dL=YL[8];YL[AL+1]=dL;YL[AL]=dL[PL[0X00003]];do CL=CL+1;end;local DL=3;do YL[10]=BL[1][BL[2]];end;PL=FL[CL];CL=CL+1;(YL)[0xB]=PL[1];CL=CL+0X1;do BL=RL[6];end;(YL)[12]=BL[1][BL[2]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0x1;do(YL)[12]=YL[0xc][PL[3]];end;CL=CL+1;CL=CL+0X1;CL=CL+0X001;AL=0X0000A;local bC=0X0000;do if DL==0 then else NL=AL+DL-1;end;end;local uC,EC=nil,(nil);if DL==0X1 then uC,EC=on(YL[AL]());else uC,EC=on(YL[AL](F(YL,AL+0X00001,NL)));end;if bC~=0x1 then do if bC~=0 then do uC=AL+bC-2;end;NL=uC+0X1;else uC=uC+AL-1;do NL=uC;end;end;end;local WC=0;for eC=AL,uC do WC=WC+1;YL[eC]=EC[WC];end;else NL=AL-1;end;do CL=CL+1;end;CL=CL+1;CL=CL+1;AL=8;(YL)[AL]=YL[AL](F(YL,AL+0X1,NL));NL=AL;CL=CL+0X1;CL=CL+1;do CL=CL+1;end;BL=RL[7];YL[0X9]=BL[0X0001][BL[0X2]];CL=CL+0X1;CL=CL+1;CL=CL+0X1;do YL[0X009]=YL[9][YL[0X0007]];end;PL=FL[CL];do CL=CL+1;end;if not(not YL[0x9])then else CL=PL[0X4];end;end;else do if not(wL<0X0000f)then if wL==0X010 then local AL=PL[0X005];local dL,BL=YL[AL]();if not(dL)then else for DL=1,PL[0x7]do YL[AL+DL]=BL[DL];end;CL=PL[4];end;else local AL=RL[0x00008];(YL)[8]=AL[1][AL[0X2]];local uC=0X8;local BL=(nil);CL=CL+0X1;CL=CL+0x00001;PL=FL[CL];CL=CL+0X00001;local dL=(PL[4]);local DL=dL[0X2];local bC=(#DL);if not(bC>0X000)then else do BL={};end;for EC=0x1,bC do local WC=(DL[EC]);if WC[1]~=0X00 then do(BL)[EC-1]=RL[WC[0X2]];end;else do(BL)[EC-0X1]={YL,WC[2]};end;end;end;(x)(mL,BL);end;YL[0X9]=cn(BL,KL,dL);do CL=CL+1;end;(YL[uC])(YL[uC+0X1]);NL=uC-1;CL=CL+1;do CL=CL+0X1;end;do PL=FL[CL];end;CL=CL+1;CL=PL[4];end;else local AL=(RL[0]);do(YL)[2]=AL[1][AL[0X2]];end;CL=CL+0X001;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;(YL)[3]=KL[PL[0X1]];PL=FL[CL];CL=CL+1;do(YL)[3]=YL[0X03][PL[0X0003]];end;do PL=FL[CL];end;CL=CL+1;if YL[2]==YL[3]then CL=PL[5];end;end;end;end;end;else if wL>=4 then if not(wL<0X006)then if wL~=7 then if YL[PL[0X4]]~=PL[3]then do CL=PL[5];end;end;else local AL=(PL[0X5]);local dL,BL=YL[AL]();if dL then CL=PL[4];YL[AL+3]=BL;end;end;else if wL~=0X00005 then local AL=(RL[2]);do YL[0X008]=AL[0X1][AL[2]];end;CL=CL+1;CL=CL+0x0001;do CL=CL+1;end;(YL)[9]=YL[0X005];do CL=CL+1;end;local dL=(8);do YL[dL]=YL[dL](YL[dL+0x1]);end;do NL=dL;end;CL=CL+0X1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;do YL[9]=KL[PL[1]];end;do CL=CL+1;end;CL=CL+1;do CL=CL+0X1;end;YL[0X0000a]=YL[6];do CL=CL+0X001;end;dL=9;do YL[dL]=YL[dL](YL[dL+1]);end;NL=dL;CL=CL+1;do AL=RL[0X3];end;do YL[10]=AL[1][AL[2]];end;PL=FL[CL];do CL=CL+1;end;(YL)[11]=PL[1];do CL=CL+0X001;end;(YL)[0X0c]=YL[0X0008];CL=CL+0x1;do YL[0Xd]=YL[9];end;CL=CL+1;dL=10;NL=dL+0X00004-1;(YL[dL])(F(YL,dL+1,NL));NL=dL-0X1;CL=CL+1;AL=RL[4];do YL[0X000a]=AL[0X1][AL[2]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X001;(YL)[10]=YL[0XA]-PL[0x3];do CL=CL+0X1;end;do AL=RL[4];end;(AL[0X1])[AL[0X2]]=YL[10];PL=FL[CL];CL=CL+0X1;(YL)[0X0A]=KL[PL[1]];PL=FL[CL];do CL=CL+1;end;YL[11]=PL[1];CL=CL+1;dL=10;(YL[dL])(YL[dL+1]);NL=dL-1;PL=FL[CL];CL=CL+0X0001;CL=PL[0X4];else local AL=(RL[7]);YL[16]=AL[1][AL[2]];CL=CL+1;CL=CL+1;CL=CL+0X1;(YL)[0x11]=YL[14];CL=CL+0x001;YL[16][YL[0X7]]=YL[0X11];do CL=CL+1;end;AL=RL[1];do(YL)[0X10]=AL[1][AL[0x2]];end;do CL=CL+0X001;end;CL=CL+1;CL=CL+0x1;(YL)[17]=YL[3];do PL=FL[CL];end;CL=CL+1;if not(YL[17])then else CL=PL[0X4];end;end;end;else do if wL<2 then if wL~=0x1 then(YL)[10]=PL[1];CL=CL+0X00001;YL[0X00b]=#YL[0X0008];PL=FL[CL];do CL=CL+0X1;end;(YL)[12]=PL[4];local AL=0Xa;PL=FL[CL];CL=CL+1;local dL=(YL[AL]);local DL=(YL[AL+0X2]);local BL=(YL[AL+0X1]);(YL)[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);CL=PL[0X4];else if YL[PL[4]]==PL[0X0003]then CL=PL[0X05];end;end;else if wL==3 then YL[2]=YL[1][PL[0x3]];CL=CL+1;CL=CL+0X01;do PL=FL[CL];end;do CL=CL+1;end;YL[3]=YL[0X00001][PL[3]];PL=FL[CL];CL=CL+0X1;(YL)[4]=YL[1][PL[3]];do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+0x1;YL[5]=YL[1][PL[3]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+0X001;do YL[6]=YL[0x1][PL[3]];end;PL=FL[CL];CL=CL+0X1;do YL[0X7]=YL[1][PL[0X00003]];end;CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;do if YL[2]==PL[0X3]then else CL=PL[5];end;end;else do(YL[PL[5]])[YL[PL[0X4]]]=YL[PL[0X0007]];end;end;end;end;end;end;end;end;end);do if nL then if TL then do if rL==0x1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;end;elseif ML then return F(YL,ML,rL);end;else if z(TL)=="st\114\i\110\103"then if not(V(TL,'\097\116t\e\m\pt\032to\ y\i\101l\d\032acr\111\115\s\ \meta\m\e\116\h\o\d/\C\%\-\ca\108\l b\ou\110\dar\121'))then else return q();end;if V(TL,'\094\046\-\:\%d\+\:\ ')then G("\Lur\097p\h\ \083\c\114\105p\116\058"..(_L[CL-0X1]or'\(\i\110t\101\114na\108\041')..':\ '..l(TL),0X0000);else G(TL,0);end;else(G)(TL,0);end;end;end;end;end;end;end;else do if not(HL<0X00048)then if HL<74 then do if HL~=0X49 then aL=function(...)local YL,NL={},0;local CL=1;local OL=(Q());local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});LL=LL-1;for PL=0,LL do if not(XL>PL)then do break;end;else do(YL)[PL]=hL[PL+0x1];end;end;end;local KL=(OL==_ and sL or OL);if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+0x001,LL+0X1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+0x001;if not(wL>=7)then if wL<0X3 then if wL<0X01 then(YL)[PL[0x5]]=YL[PL[4]]>=YL[PL[7]];else if wL~=0X002 then CL=PL[0X4];else do YL[PL[5]]=YL[PL[4]]*YL[PL[7]];end;end;end;else if wL>=5 then if wL==0X6 then else local AL=PL[4];local dL=(nil);local BL=AL[2];local DL=(#BL);if DL>0 then do dL={};end;do for bC=1,DL do local uC=(BL[bC]);if uC[1]~=0 then dL[bC-1]=RL[uC[0X2]];else dL[bC-1]={YL,uC[2]};end;end;end;(x)(mL,dL);end;do(YL)[PL[0x05]]=cn(dL,KL,AL);end;end;else if wL==4 then YL[PL[5]]={F({},1,PL[0X4])};else(YL)[PL[0X5]]=M(YL[PL[0X04]],YL[PL[0X00007]]);end;end;end;else if wL>=0Xb then do if wL<0X0000D then do if wL~=12 then local AL=(PL[5]);local dL,BL=YL[AL]();if dL then do for DL=0x0001,PL[7]do YL[AL+DL]=BL[DL];end;end;CL=PL[4];end;else if not(YL[PL[5]])then else CL=PL[4];end;end;end;else if wL==0Xe then do for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;else YL[PL[5]]=L(YL[PL[0x4]],YL[PL[7]]);end;end;end;else if not(wL<9)then if wL~=10 then(YL)[PL[5]]=KL[PL[1]];else local AL=(PL[0X4]);local BL=(AL[2]);local DL=#BL;local dL=(nil);if DL>0 then dL={};do for bC=0X1,DL do local uC=BL[bC];if uC[1]==0X00 then dL[bC-1]={YL,uC[0X2]};else(dL)[bC-0X01]=RL[uC[2]];end;end;end;x(mL,dL);end;(YL)[PL[5]]=u[PL[0x7]](dL);end;else if wL~=0X8 then do YL[1]=KL[PL[1]];end;CL=CL+1;CL=CL+0X01;do CL=CL+1;end;local AL=RL[0X0];(YL)[2]=YL[0];PL=FL[CL];CL=CL+0X0001;local uC=(1);do YL[1][PL[0X0001]]=YL[2];end;PL=FL[CL];CL=CL+0x1;do(YL)[0X00001]=KL[PL[0x0001]];end;do CL=CL+0X1;end;NL=0X1;YL[NL]();NL=NL-1;CL=CL+1;CL=CL+1;CL=CL+1;YL[1]=AL[0X1][AL[2]];CL=CL+0X1;CL=CL+0x0001;PL=FL[CL];local dL=(PL[0X4]);do CL=CL+1;end;local DL,BL=dL[0X2],(nil);local bC=(#DL);if not(bC>0X000)then else do BL={};end;for EC=0X1,bC do local WC=DL[EC];if WC[0X1]~=0 then(BL)[EC-0X1]=RL[WC[0x0002]];else do BL[EC-1]={YL,WC[2]};end;end;end;(x)(mL,BL);end;YL[0X002]=cn(BL,KL,dL);CL=CL+1;YL[uC](YL[uC+1]);NL=uC-1;do CL=CL+0x1;end;repeat local EC,WC=mL,(YL);local eC={};for oC,jC in U,EC do for zC,lC in U,jC do if lC[1]==WC and lC[0X0002]>=0X00000 then local GC=lC[0X0002];if not(not eC[GC])then else eC[GC]={WC[GC]};end;lC[1]=eC[GC];(lC)[2]=1;end;end;end;until true;return;else YL[PL[0X05]]=PL[0x001];end;end;end;end;end;end);if nL then if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;elseif ML then do return F(YL,ML,rL);end;end;else if z(TL)~='\s\116\114\105ng'then(G)(TL,0X00000);else if not(V(TL,'\097\116\116\101\m\p\116\ to\ y\ie\108\d\032a\cr\o\s\s\032\m\101\116a\m\101t\104\o\d\/\067\%-c\097l\l\032b\111\117\110\d\097ry'))then else return q();end;do if not(V(TL,'^\.\-\:%\d+\058\032'))then G(TL,0X0);else(G)('Lu\114\097\p\h\032\Sc\114\105\p\116:'..(_L[CL-0X00001]or"\040\105\110\116e\114n\097l\)")..'\058 '..l(TL),0);end;end;end;end;end;else aL=function(...)local YL=({});local CL=0x00001;local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);local KL,NL=(OL==_ and sL or OL),0X00000;LL=LL-0X0001;for PL=0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;do if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X00001,LL+0x1)};end;end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0x0002]);CL=CL+0X1;if wL>=12 then if wL>=18 then if wL<21 then if not(wL>=19)then YL[PL[5]]=YL[PL[0X4]];else if wL==20 then local AL=(PL[4]);local BL=(AL[2]);local DL,dL=#BL,(nil);if not(DL>0)then else do dL={};end;for bC=0X01,DL do local uC=(BL[bC]);if uC[0X1]==0x00000 then(dL)[bC-1]={YL,uC[2]};else dL[bC-0X1]=RL[uC[2]];end;end;(x)(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);else do repeat local dL,BL=mL,YL;local DL=({});do for bC,uC in U,dL do do for EC,WC in U,uC do do if not(WC[0X1]==BL and WC[2]>=0)then else local eC=WC[2];if not DL[eC]then DL[eC]={BL[eC]};end;WC[0X00001]=DL[eC];WC[0x2]=1;end;end;end;end;end;end;until true;end;local AL=PL[0X05];return false,AL,AL+PL[4]-0x2;end;end;else if not(wL<22)then if wL~=0x017 then local AL=(RL[PL[4]]);(YL)[PL[5]]=AL[1][AL[2]];else YL[2]=KL[PL[1]];PL=FL[CL];CL=CL+1;do(YL)[2]=YL[2][PL[0X3]];end;CL=CL+0x01;CL=CL+0X1;CL=CL+0x01;(YL)[2]=YL[1]<YL[2];PL=FL[CL];CL=CL+0x01;do CL=PL[0X4];end;end;else repeat local AL,dL=mL,(YL);local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0X00002]>=0x0)then else local WC=(EC[0X002]);if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];do EC[2]=1;end;end;end;end;end;until true;do return;end;end;end;else if not(wL>=0XF)then if wL<0XD then if not(YL[PL[0X0004]]<YL[PL[0x7]])then else CL=PL[0X5];end;else do if wL~=14 then local AL=(RL[0X00]);(YL)[1]=AL[1][AL[2]];do PL=FL[CL];end;CL=CL+0X1;(YL)[1]=YL[1][PL[0X0003]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[1]=YL[1][PL[0X3]];CL=CL+1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0X01;CL=PL[0X00004];else end;end;end;else if wL>=16 then if wL~=17 then(YL)[PL[0X00005]]=KL[PL[1]];else YL[PL[5]]=#YL[PL[4]];end;else if not(not YL[PL[0X0005]])then else CL=PL[0x0004];end;end;end;end;else if not(wL<6)then do if not(wL>=9)then if wL>=7 then if wL~=0X00008 then local AL=RL[2];(YL)[0X02]=AL[0X00001][AL[2]];CL=CL+0x01;CL=CL+1;PL=FL[CL];CL=CL+0X001;do(YL)[0X2]=YL[2][PL[0X3]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X01;(YL)[2]=YL[2][PL[3]];do CL=CL+0X00001;end;do(YL)[0X2]=not YL[2];end;PL=FL[CL];do CL=CL+1;end;CL=PL[0X4];else local AL=(PL[5]);local dL=(g(function(...)q();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));dL(YL[AL],YL[AL+0X0001],YL[AL+0X2]);NL=AL;do YL[AL]=dL;end;CL=PL[0X004];end;else if not(YL[PL[5]])then else do CL=PL[4];end;end;end;else do if wL<10 then do YL[2]=KL[PL[1]];end;CL=CL+1;CL=CL+0X001;PL=FL[CL];CL=CL+1;do YL[0x2]=YL[0X00002][PL[0X3]];end;do PL=FL[CL];end;CL=CL+0X001;CL=PL[0X0004];else if wL==0XB then local AL=(RL[0x002]);YL[2]=AL[0X1][AL[2]];do PL=FL[CL];end;CL=CL+0X1;(YL)[2]=YL[0x00002][PL[0X00003]];PL=FL[CL];CL=CL+1;YL[2]=YL[0X2][PL[3]];CL=CL+1;do CL=CL+1;end;CL=CL+1;do(YL)[0x0002]=not YL[2];end;PL=FL[CL];CL=CL+0X1;CL=PL[4];else do CL=PL[0X4];end;end;end;end;end;end;else do if not(wL>=3)then if not(wL>=1)then(YL)[PL[5]]=YL[PL[4]]~=YL[PL[7]];else do if wL==2 then local AL=(RL[0]);YL[0X1]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;YL[0X1]=YL[1][PL[0x0003]];CL=CL+0X1;do CL=CL+0X1;end;do PL=FL[CL];end;do CL=CL+0x1;end;do if not YL[0X0001]then CL=PL[0x4];end;end;else YL[PL[5]]={F({},1,PL[4])};end;end;end;else if wL>=0X4 then if wL~=5 then local AL=(PL[0x05]);local DL=(YL[AL+0x002]);local dL,BL=YL[AL],YL[AL+1];YL[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);CL=PL[4];else local AL=(PL[5]);local dL=(PL[7]-1)*0X32;local BL=(YL[AL]);for DL=1,PL[0X00004]do(BL)[dL+DL]=YL[AL+DL];end;end;else do YL[PL[0X0005]]=PL[0X1];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\s\116rin\103"then(G)(TL,0x00000);else if V(TL,"\097\116t\101\109\pt\ \116o\ \121i\e\l\d \097\099r\os\115\ \m\e\116a\m\e\116\104\111\d\/\067\%\-\099\097\ll\032b\111\117\110d\097r\y")then return q();end;if not(V(TL,'^\.\045\:\%\d\043:\ '))then(G)(TL,0X000);else G('Lu\114a\p\h\ \083\cript\:'..(_L[CL-0X1]or'(\i\110te\114\110\097\l)')..'\058\032'..l(TL),0x000);end;end;else if TL then if rL==0x1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;else if HL~=0X4b then aL=function(...)local CL=1;local YL=({});local NL=0;local kL={[2]=qL,[0X1]=YL};local OL=Q();local LL,hL=on(...);LL=LL-0X1;local KL=((OL==_ and sL or OL));for PL=0X0,LL do do if XL>PL then(YL)[PL]=hL[PL+0X0001];else do break;end;end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0X00001,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+1;do if not(wL>=0X09)then do if wL>=4 then do if not(wL<6)then do if not(wL>=7)then do repeat local AL,dL,BL,DL=mL,YL,PL[5],({});do for bC,uC in U,AL do do for EC,WC in U,uC do do if not(WC[1]==dL and WC[0X2]>=BL)then else local eC=(WC[0x002]);if not DL[eC]then do(DL)[eC]={dL[eC]};end;end;do(WC)[0X1]=DL[eC];end;(WC)[0x002]=1;end;end;end;end;end;end;until true;end;else if wL==0x00008 then YL[PL[0x5]]=YL[PL[0x4]];else local AL=PL[5];local dL=YL[AL];local DL=YL[AL+0X2];local BL=(YL[AL+1]);YL[AL]=g(function()do for bC=dL,BL,DL do q(true,bC);end;end;end);CL=PL[0x4];end;end;end;else do if wL~=0X5 then do CL=PL[0X4];end;else YL[PL[0X05]]=KL[PL[1]];end;end;end;end;else if not(wL>=0x00002)then if wL==0X1 then do YL[PL[0x5]]=YL[PL[0X4]]<YL[PL[7]];end;else YL[PL[0X00005]]=YL[PL[4]]~=YL[PL[0X7]];end;else if wL~=0X3 then do(YL)[PL[0X05]]=YL[PL[4]]%YL[PL[7]];end;else YL[PL[5]][YL[PL[0X4]]]=YL[PL[0x7]];end;end;end;end;else if not(wL>=0X000D)then if wL>=11 then if wL~=12 then(YL)[PL[0X5]]=PL[0x1];else do(YL)[PL[0X5]]=M(YL[PL[0X004]],YL[PL[0X00007]]);end;end;else if wL==10 then do for AL=PL[5],PL[0X04]do do YL[AL]=nil;end;end;end;else do YL[PL[5]]=kL[PL[0X4]];end;end;end;else if wL<0X0000f then do if wL~=0Xe then(YL)[PL[5]]={F({},1,PL[4])};else YL[PL[0X5]]=YL[PL[4]][YL[PL[0X7]]];end;end;else do if not(wL<16)then do if wL~=17 then(YL)[1]=KL[PL[0X0001]];CL=CL+0X01;do YL[2]=YL[0X0];end;PL=FL[CL];CL=CL+0X01;(YL[1])[PL[1]]=YL[0x2];PL=FL[CL];local AL=RL[0X0];CL=CL+0X00001;(YL)[0X1]=KL[PL[1]];do CL=CL+1;end;CL=CL+1;CL=CL+0X1;NL=0X1;YL[NL]();NL=NL-1;CL=CL+0X0001;CL=CL+1;do CL=CL+0X1;end;do YL[0X1]=AL[1][AL[2]];end;CL=CL+0X1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0x1;(YL)[0x00001]=YL[0x1][PL[0X3]];do CL=CL+1;end;(YL)[2]=YL[0];PL=FL[CL];CL=CL+1;(YL[1])[PL[1]]=YL[0X002];do CL=CL+0X01;end;repeat local dL,BL,DL=mL,YL,{};for bC,uC in U,dL do for EC,WC in U,uC do if WC[0X1]==BL and WC[0X2]>=0X0 then local eC=WC[2];if not DL[eC]then DL[eC]={BL[eC]};end;WC[1]=DL[eC];(WC)[0X2]=1;end;end;end;until true;return;else end;end;else local AL=(PL[0X0004]);local BL,dL=AL[0X0002],nil;local DL=(#BL);if not(DL>0X0)then else do dL={};end;for bC=0X01,DL do local uC=(BL[bC]);if uC[0X1]==0X0 then do(dL)[bC-0X1]={YL,uC[2]};end;else(dL)[bC-0X0001]=RL[uC[0X2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~='str\105\110g'then(G)(TL,0);else if V(TL,"atte\109pt\ to\032\y\105\e\108\d\032\097\099r\111\115\115\032\m\e\116a\m\et\104o\d/\C\037\-\c\097l\l\032\098\111u\110\da\114\y")then return q();end;if not(V(TL,"^\046\-\058\%\100\+\: "))then(G)(TL,0);else(G)("\Lu\114\097\p\h\032\S\c\114i\pt\:"..(_L[CL-0X1]or'(in\116ernal\)')..'\:\ '..l(TL),0);end;end;else if TL then if rL~=0X001 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;else do aL=function(...)local CL,YL=1,{};local NL=(0);local OL=(Q());local kL=({[2]=qL,[0X1]=YL});local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0X01;for PL=0X0,LL do if XL>PL then(YL)[PL]=hL[PL+0X001];else do break;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X0000,F(hL,XL+1,LL+0X001)};end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0x2]);CL=CL+0X1;do if not(wL<0X8)then do if wL<0xc then do if wL<0Xa then if wL~=0X9 then local AL=(RL[PL[4]]);(YL)[PL[5]]=AL[0X1][AL[0x2]];else if YL[PL[0x4]]~=YL[PL[0X00007]]then else CL=PL[5];end;end;else do if wL==11 then else do repeat local dL,BL,DL=mL,YL,({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[2]>=0X0)then else local eC=(WC[2]);do if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;end;WC[1]=DL[eC];(WC)[2]=0x001;end;end;end;until true;end;local AL=PL[5];return false,AL,AL+PL[0X00004]-2;end;end;end;end;else do if not(wL>=14)then if wL~=13 then local AL=RL[3];do(YL)[0X00002]=AL[1][AL[2]];end;do CL=CL+0X001;end;do AL=RL[4];end;(YL)[3]=AL[0X01][AL[0X2]];CL=CL+0x1;AL=RL[5];YL[4]=AL[1][AL[0X2]];CL=CL+0X01;local dL=0X0;do CL=CL+0X001;end;CL=CL+0X1;NL=dL+0X5-1;do(YL)[dL]=YL[dL](F(YL,dL+0X01,NL));end;NL=dL;PL=FL[CL];do CL=CL+0X00001;end;if not YL[0X0]then CL=PL[4];end;else do if not(not YL[PL[5]])then else CL=PL[0X4];end;end;end;else do if not(wL<15)then if wL==16 then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else YL[PL[5]]=KL[PL[0x1]];end;else do repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0)then else local WC=EC[2];do if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;end;(EC)[0x1]=BL[WC];(EC)[2]=0X1;end;end;end;end;until true;end;do return;end;end;end;end;end;end;end;else if not(wL<4)then do if not(wL>=6)then if wL==0x05 then local AL=RL[0];YL[0X0]=AL[1][AL[2]];CL=CL+1;CL=CL+1;CL=CL+0X1;AL=RL[1];(YL)[0X0001]=AL[0x001][AL[2]];do PL=FL[CL];end;CL=CL+0x1;if YL[1]then CL=PL[4];end;else(YL)[PL[0X00005]]=PL[1];end;else if wL==7 then(YL)[PL[0X5]]=YL[PL[4]]<YL[PL[7]];else do YL[PL[0X5]]={F({},0X1,PL[0X4])};end;end;end;end;else if not(wL>=2)then if wL~=1 then CL=PL[4];else local AL=(PL[4]);local BL,dL=AL[2],nil;local DL=#BL;do if DL>0X0 then dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[1]~=0 then(dL)[bC-1]=RL[uC[0X2]];else dL[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);end;else do if wL~=3 then(YL)[PL[0X005]]=YL[PL[4]]<=YL[PL[7]];else local AL=RL[0X06];do(YL)[0x0]=AL[0X1][AL[2]];end;local dL=0x00000;PL=FL[CL];do CL=CL+0x00001;end;(YL)[0X01]=PL[1];CL=CL+0x0001;YL[dL](YL[dL+0X1]);NL=dL-1;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;CL=PL[0X0004];end;end;end;end;end;end;end;end);if nL then if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X001,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~="\s\116r\i\110\103"then G(TL,0x00);else if not(V(TL,"att\e\109\p\116 \116\111 \yie\l\100\ \097\c\114\os\s\032\109\101\116a\m\e\116\104o\100\047\067\%\-\c\097\ll\ \098\111\117n\dar\y"))then else return q();end;if V(TL,"\094.\-:\%\100\043: ")then G("Lur\097\p\h\ \Sc\114\ipt\:"..(_L[CL-0X1]or"\(\i\110\116\er\110\097\108\)").."\058\ "..l(TL),0x0);else G(TL,0);end;end;end;end;end;end;end;else if HL<0X00046 then do if HL~=69 then aL=function(...)local CL=1;local YL,NL={},0X0;local OL=Q();local kL=({[0X1]=YL,[2]=qL});local LL,hL=on(...);do LL=LL-0X1;end;for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0X1];end;end;local KL=(OL==_ and sL or OL);do if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X000,F(hL,XL+1,LL+1)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+1;if wL>=13 then if wL>=20 then if wL>=0X0017 then if not(wL<25)then if wL==26 then YL[0]=KL[PL[0X001]];CL=CL+0X1;CL=CL+0X01;PL=FL[CL];do CL=CL+0x1;end;do(YL)[0]=YL[0X0][PL[0X3]];end;CL=CL+0x1;NL=0;do(YL)[NL]=YL[NL]();end;do PL=FL[CL];end;CL=CL+1;if not(not YL[0])then else CL=PL[0X4];end;else local AL=(RL[4]);YL[0X07]=AL[0X1][AL[2]];local dL=7;PL=FL[CL];CL=CL+1;(YL)[0x8]=PL[1];PL=FL[CL];CL=CL+1;do(YL)[0x9]=YL[6][PL[3]];end;CL=CL+0x1;CL=CL+1;CL=CL+1;(YL[dL])(YL[dL+0X1],YL[dL+2]);NL=dL-0X00001;do CL=CL+0x1;end;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;CL=PL[0X4];end;else if wL==24 then do(YL)[PL[0X005]]=PL[0x1];end;else YL[0X0]=KL[PL[0X1]];do PL=FL[CL];end;do CL=CL+1;end;(YL)[0X0]=YL[0X0][PL[3]];CL=CL+0X1;CL=CL+0X0001;do PL=FL[CL];end;CL=CL+0X1;if not(not YL[0])then else do CL=PL[4];end;end;end;end;else if wL<21 then else do if wL~=22 then YL[6]=YL[0X001][YL[0X05]];CL=CL+0X1;do CL=CL+0X01;end;PL=FL[CL];CL=CL+0X1;YL[7]=KL[PL[0X1]];local AL=0X7;do PL=FL[CL];end;CL=CL+0X1;YL[8]=PL[0X0001];do CL=CL+1;end;YL[AL]=YL[AL](YL[AL+1]);NL=AL;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;do YL[8]=YL[6][PL[3]];end;CL=CL+0x01;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0X1;if not(YL[8]<=YL[0x7])then CL=PL[5];end;else do YL[PL[0X05]]=not YL[PL[4]];end;end;end;end;end;else if not(wL<16)then if wL>=18 then do if wL~=19 then for AL=PL[5],PL[4]do do YL[AL]=nil;end;end;else local AL=(YL[PL[4]]/YL[PL[7]]);YL[PL[0X5]]=AL-AL%1;end;end;else if wL==17 then do YL[6]=KL[PL[0X00001]];end;CL=CL+1;CL=CL+0X00001;PL=FL[CL];local AL=PL[0X0004];CL=CL+1;local dL=(nil);local BL=(AL[2]);local DL=(#BL);if not(DL>0X00000)then else dL={};for uC=1,DL do local EC=(BL[uC]);if EC[1]==0X0 then do(dL)[uC-0X1]={YL,EC[0X2]};end;else do(dL)[uC-1]=RL[EC[0X2]];end;end;end;(x)(mL,dL);end;local bC=0X6;(YL)[0x0007]=cn(dL,KL,AL);CL=CL+0X1;(YL[bC])(YL[bC+0X1]);NL=bC-1;do CL=CL+1;end;repeat local uC,EC,WC=mL,YL,({});for eC,oC in U,uC do for jC,zC in U,oC do if zC[0x001]==EC and zC[2]>=0x2 then local lC=(zC[0x2]);if not WC[lC]then do WC[lC]={EC[lC]};end;end;zC[0x0001]=WC[lC];(zC)[2]=1;end;end;end;until true;do PL=FL[CL];end;do CL=CL+0X1;end;CL=PL[0X4];else repeat local BL=({});local AL,dL=mL,YL;for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0X001]==dL and EC[0X2]>=0 then local WC=EC[0X2];do if not BL[WC]then BL[WC]={dL[WC]};end;end;(EC)[0X1]=BL[WC];EC[0X02]=1;end;end;end;end;until true;return;end;end;else if not(wL>=0XE)then(YL)[PL[5]]=KL[PL[0X1]];else if wL==15 then repeat local AL,dL,BL=mL,YL,PL[5];local DL=({});for bC,uC in U,AL do do for EC,WC in U,uC do if not(WC[0X0001]==dL and WC[2]>=BL)then else local eC=WC[2];do if not(not DL[eC])then else(DL)[eC]={dL[eC]};end;end;(WC)[1]=DL[eC];do WC[0X2]=1;end;end;end;end;end;until true;else(YL)[0]=KL[PL[1]];CL=CL+1;CL=CL+0X0001;local AL=0X00000;local BL=(RL[0X001]);PL=FL[CL];do CL=CL+1;end;local dL=YL[0];do YL[AL+1]=dL;end;do YL[AL]=dL[PL[0x00003]];end;CL=CL+1;YL[0x2]=BL[0X1][BL[2]];do CL=CL+1;end;CL=CL+0X00001;PL=FL[CL];CL=CL+1;YL[3]=PL[0X00001];local WC=(2);CL=CL+1;BL=RL[2];YL[0x4]=BL[1][BL[2]];PL=FL[CL];do CL=CL+1;end;do(YL)[0X00004]=YL[4][PL[0X0003]];end;do CL=CL+0X1;end;CL=CL+1;CL=CL+0X1;local DL=0X3;do AL=2;end;local bC=(0);if DL~=0 then NL=AL+DL-1;end;local uC,EC=nil,(nil);if DL==0X0001 then uC,EC=on(YL[AL]());else uC,EC=on(YL[AL](F(YL,AL+1,NL)));end;if bC~=1 then if bC~=0X00 then do uC=AL+bC-2;end;do NL=uC+1;end;else do uC=uC+AL-1;end;NL=uC;end;local oC=0;for jC=AL,uC do do oC=oC+1;end;do(YL)[jC]=EC[oC];end;end;else do NL=AL-0X00001;end;end;CL=CL+0X01;do CL=CL+1;end;CL=CL+1;AL=0X000;(YL)[AL]=YL[AL](F(YL,AL+1,NL));do NL=AL;end;CL=CL+0X1;CL=CL+0x0001;CL=CL+0X001;YL[1]={};PL=FL[CL];do CL=CL+1;end;(YL)[2]=PL[0X1];CL=CL+0X1;(YL)[0x3]=#YL[0X00];PL=FL[CL];CL=CL+1;(YL)[0X04]=PL[0X00004];PL=FL[CL];CL=CL+1;AL=YL[WC];uC=YL[WC+0X01];local eC=(YL[WC+2]);(YL)[WC]=g(function()for oC=AL,uC,eC do q(true,oC);end;end);CL=PL[4];end;end;end;end;else do if not(wL>=6)then if wL>=3 then if wL>=0X4 then if wL~=5 then local AL=(PL[0x5]);local dL,BL=YL[AL]();if not(dL)then else for DL=1,PL[0X7]do(YL)[AL+DL]=BL[DL];end;CL=PL[4];end;else if not YL[PL[0x5]]then CL=PL[4];end;end;else YL[PL[5]]=YL[PL[0X0004]]-YL[PL[7]];end;else if wL<1 then local AL=PL[4];local dL=(nil);local BL=(AL[0X2]);local DL=(#BL);do if DL>0X0 then dL={};do for bC=1,DL do local uC=BL[bC];do if uC[0X001]==0 then do dL[bC-0X1]={YL,uC[0x2]};end;else(dL)[bC-1]=RL[uC[0X00002]];end;end;end;end;x(mL,dL);end;end;do(YL)[PL[5]]=cn(dL,KL,AL);end;else if wL==2 then local AL=(RL[PL[0X4]]);(YL)[PL[0x00005]]=AL[1][AL[0X002]];else(YL)[0]=KL[PL[1]];local AL=(0X00);CL=CL+1;NL=0X0;(YL[NL])();NL=NL-0X1;CL=CL+1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0x1;end;(YL)[0]=KL[PL[1]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];do CL=CL+1;end;(YL)[0x1]=KL[PL[0X01]];CL=CL+1;CL=CL+0X001;PL=FL[CL];CL=CL+0X001;(YL)[0X1]=YL[1][PL[0X03]];CL=CL+1;do YL[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;if not YL[0]then CL=PL[0x004];end;end;end;end;else if wL<9 then if not(wL<7)then if wL==0X0008 then local AL=RL[3];YL[2]=AL[1][AL[2]];local EC=2;local uC=(2);PL=FL[CL];do CL=CL+0x01;end;do YL[2]=YL[0X0002][PL[0X3]];end;CL=CL+1;CL=CL+1;CL=CL+1;(YL)[3]=YL[1];do PL=FL[CL];end;local dL=PL[0x004];local DL=(dL[2]);CL=CL+1;local BL,bC=nil,#DL;if bC>0 then BL={};for oC=0X1,bC do local jC=(DL[oC]);if jC[1]~=0X0 then BL[oC-0X1]=RL[jC[0x2]];else do(BL)[oC-0X0001]={YL,jC[0x2]};end;end;end;(x)(mL,BL);end;YL[4]=cn(BL,KL,dL);do CL=CL+1;end;YL[uC](YL[uC+1],YL[uC+0X02]);do NL=uC-1;end;CL=CL+0X00001;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0X02]=PL[1];CL=CL+0X1;YL[0x3]=#YL[1];PL=FL[CL];CL=CL+0X1;do(YL)[0X4]=PL[4];end;PL=FL[CL];do CL=CL+0X1;end;uC=YL[EC];local WC,eC=YL[EC+1],(YL[EC+2]);(YL)[EC]=g(function()for oC=uC,WC,eC do q(true,oC);end;end);do CL=PL[0X4];end;else local AL=PL[4];local BL,dL=AL[0X02],nil;local DL=#BL;if not(DL>0)then else dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0X01]~=0 then dL[bC-1]=RL[uC[2]];else dL[bC-0X1]={YL,uC[2]};end;end;end;(x)(mL,dL);end;do YL[PL[0X05]]=u[PL[0X7]](dL);end;end;else if YL[PL[4]]<YL[PL[7]]then do CL=PL[0X5];end;end;end;else if wL>=11 then if wL==12 then CL=PL[4];else local AL=PL[5];local dL=PL[0X00004];NL=AL+dL-0X01;repeat local BL,DL,bC=mL,YL,({});for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[1]==DL and eC[0x02]>=0)then else local oC=eC[2];if not(not bC[oC])then else(bC)[oC]={DL[oC]};end;do(eC)[0x01]=bC[oC];end;eC[2]=0X1;end;end;end;until true;return true,AL,dL;end;else if wL~=10 then local AL=(PL[5]);local dL,BL=YL[AL]();if not(dL)then else CL=PL[0X4];(YL)[AL+3]=BL;end;else(YL)[PL[0x5]]={F({},1,PL[0X4])};end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)~='\115t\114i\110\g'then(G)(TL,0);else if not(V(TL,"\097tt\em\p\116\ t\111 \yi\e\ld \097\099\114\o\s\115 m\eta\m\e\116\104\od\/\C\%\-\c\097\108\l\032bou\110dar\y"))then else do return q();end;end;do if not(V(TL,"\094\.-\058\%d\+\:\ "))then(G)(TL,0X0);else(G)("\L\117ra\ph \083\099r\105\p\116:"..(_L[CL-0X001]or"(\int\er\110a\l\)")..'\:\ '..l(TL),0X00000);end;end;end;end;else if TL then if rL~=0X1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;else do aL=function(...)local CL,YL=0X001,({});local OL=(Q());local LL,hL=on(...);local kL={[2]=qL,[0X1]=YL};LL=LL-0X1;for PL=0,LL do do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;end;local KL=(OL==_ and sL or OL);do if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0X0000,F(hL,XL+1,LL+1)};end;end;local NL=0X0;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];do CL=CL+0x1;end;if not(wL<0X7)then if not(wL>=11)then if wL>=9 then if wL~=10 then YL[PL[5]]=PL[1];else YL[PL[0x5]]=KL[PL[0X1]];end;else if wL==0X00008 then(YL)[PL[5]]=YL[PL[4]]+YL[PL[7]];else for AL=PL[0X5],PL[0X00004]do(YL)[AL]=nil;end;end;end;else do if wL<0X0D then do if wL==0XC then do CL=PL[0X4];end;else do(YL)[0X0000C]=KL[PL[0X1]];end;PL=FL[CL];local AL=(12);CL=CL+1;local dL=YL[0X0000C];(YL)[AL+0X1]=dL;local BL=RL[0X3];YL[AL]=dL[PL[0X3]];do CL=CL+0x0001;end;YL[0Xe]=BL[1][BL[2]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;do YL[0X0f]=PL[1];end;do PL=FL[CL];end;CL=CL+1;do YL[0x010]=KL[PL[1]];end;PL=FL[CL];CL=CL+0X1;YL[16]=YL[0X10][PL[3]];do CL=CL+1;end;do CL=CL+1;end;CL=CL+1;(YL)[17]=YL[1];CL=CL+0X1;YL[18]=YL[1];PL=FL[CL];CL=CL+0X1;(YL)[19]=PL[0X0001];PL=FL[CL];CL=CL+1;YL[0x14]=PL[0x1];local DL=0X7;CL=CL+1;AL=0Xe;local bC=0;if DL~=0X0 then NL=AL+DL-0X0001;end;local uC,EC=nil,nil;if DL==1 then uC,EC=on(YL[AL]());else uC,EC=on(YL[AL](F(YL,AL+1,NL)));end;if bC==1 then NL=AL-0X0001;else if bC~=0X0000 then do uC=AL+bC-0x2;end;NL=uC+1;else do uC=uC+AL-0x1;end;NL=uC;end;local WC=0;for eC=AL,uC do WC=WC+0X1;(YL)[eC]=EC[WC];end;end;CL=CL+1;AL=12;(YL[AL])(F(YL,AL+1,NL));do NL=AL-1;end;CL=CL+1;repeat local WC,eC=mL,YL;local oC=({});for jC,zC in U,WC do for lC,GC in U,zC do if not(GC[1]==eC and GC[0X00002]>=0X0000)then else local vC=GC[0X0002];if not oC[vC]then(oC)[vC]={eC[vC]};end;do(GC)[1]=oC[vC];end;GC[2]=0x1;end;end;end;until true;return;end;end;else if wL~=14 then do if not(YL[PL[0X4]]<YL[PL[0X0007]])then CL=PL[0X5];end;end;else(YL)[0]=KL[PL[0X1]];PL=FL[CL];CL=CL+1;do YL[0X0]=YL[0][PL[3]];end;PL=FL[CL];local AL=(0X001);CL=CL+1;do YL[0x0001]=KL[PL[0X1]];end;do CL=CL+0x001;end;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;YL[0X2]=KL[PL[1]];CL=CL+0X1;CL=CL+0X0001;PL=FL[CL];do CL=CL+0X1;end;(YL)[2]=YL[0x2][PL[0x003]];do CL=CL+0X01;end;CL=CL+0X1;CL=CL+0X00001;(YL)[AL]=YL[AL](YL[AL+0X001]);NL=AL;PL=FL[CL];CL=CL+0X1;YL[0X2]=PL[0x0001];PL=FL[CL];CL=CL+1;(YL)[0X0003]=KL[PL[0X1]];CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+1;YL[3]=YL[0X3][PL[0X3]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0x1;do YL[4]=PL[1];end;CL=CL+0X01;YL[0x5]={};CL=CL+1;(YL)[0X6]={};PL=FL[CL];CL=CL+0X1;do YL[0X0006][PL[1]]=PL[0X03];end;do PL=FL[CL];end;CL=CL+1;do YL[0X006][PL[0x0001]]=PL[0X003];end;PL=FL[CL];CL=CL+1;(YL[0X6])[PL[1]]=PL[3];PL=FL[CL];CL=CL+0x001;(YL[5])[PL[0X01]]=YL[0x6];CL=CL+1;(YL)[6]={};PL=FL[CL];CL=CL+1;do(YL[6])[PL[0X01]]=PL[0X3];end;PL=FL[CL];CL=CL+1;YL[6][PL[1]]=PL[3];PL=FL[CL];do CL=CL+0X1;end;(YL[6])[PL[1]]=PL[0X3];do PL=FL[CL];end;CL=CL+1;(YL[0X5])[PL[1]]=YL[0X6];CL=CL+0X1;(YL)[0X6]={};PL=FL[CL];CL=CL+0X1;(YL[0X6])[PL[1]]=PL[0X0003];PL=FL[CL];CL=CL+1;YL[0X6][PL[0X0001]]=PL[3];PL=FL[CL];do CL=CL+1;end;YL[6][PL[1]]=PL[3];do PL=FL[CL];end;CL=CL+1;YL[5][PL[1]]=YL[0X6];do CL=CL+0X1;end;do(YL)[6]={};end;PL=FL[CL];CL=CL+1;do YL[0X6][PL[0x1]]=PL[0X003];end;do PL=FL[CL];end;local uC=(0xC);do CL=CL+0X1;end;YL[0X6][PL[1]]=PL[3];do PL=FL[CL];end;CL=CL+0X1;(YL[0X6])[PL[0x0001]]=PL[3];PL=FL[CL];CL=CL+1;YL[5][PL[0X001]]=YL[6];CL=CL+0X00001;(YL)[0X006]={};do PL=FL[CL];end;local dL=(PL[4]);CL=CL+0X00001;local BL,DL=nil,(dL[0x2]);local bC=#DL;if not(bC>0x0)then else do BL={};end;for eC=1,bC do local oC=DL[eC];if oC[1]~=0 then(BL)[eC-0x001]=RL[oC[0X2]];else(BL)[eC-0X1]={YL,oC[2]};end;end;x(mL,BL);end;YL[7]=cn(BL,KL,dL);do PL=FL[CL];end;CL=CL+0x1;do dL=PL[4];end;BL=nil;DL=dL[2];do bC=#DL;end;if bC>0X0 then BL={};do for eC=0X1,bC do local oC=DL[eC];if oC[1]==0 then BL[eC-0X001]={YL,oC[0X002]};else BL[eC-0X1]=RL[oC[2]];end;end;end;x(mL,BL);end;(YL)[8]=cn(BL,KL,dL);PL=FL[CL];CL=CL+0X0001;dL=PL[0X4];BL=nil;DL=dL[0x002];bC=#DL;if bC>0 then do BL={};end;do for eC=0X1,bC do local oC=(DL[eC]);do if oC[1]~=0 then do(BL)[eC-1]=RL[oC[0x2]];end;else BL[eC-0X01]={YL,oC[2]};end;end;end;end;x(mL,BL);end;YL[9]=cn(BL,KL,dL);do PL=FL[CL];end;do CL=CL+1;end;dL=PL[4];BL=nil;DL=dL[2];do bC=#DL;end;if bC>0 then BL={};for eC=0X001,bC do local oC=DL[eC];if oC[0X001]==0 then(BL)[eC-1]={YL,oC[2]};else(BL)[eC-1]=RL[oC[2]];end;end;x(mL,BL);end;(YL)[0Xa]=cn(BL,KL,dL);PL=FL[CL];CL=CL+1;do dL=PL[4];end;BL=nil;DL=dL[2];bC=#DL;if not(bC>0)then else BL={};do for eC=0X00001,bC do local oC=DL[eC];if oC[1]~=0X0 then BL[eC-0X1]=RL[oC[0X0002]];else BL[eC-1]={YL,oC[2]};end;end;end;(x)(mL,BL);end;do YL[0Xb]=cn(BL,KL,dL);end;PL=FL[CL];CL=CL+0X1;YL[0XC]=PL[1];CL=CL+0X1;do YL[13]=YL[0X1];end;PL=FL[CL];do CL=CL+1;end;do(YL)[0X0E]=PL[0X4];end;do PL=FL[CL];end;do CL=CL+0x1;end;AL=YL[uC];local EC,WC=YL[uC+1],YL[uC+0X002];do YL[uC]=g(function()for eC=AL,EC,WC do(q)(true,eC);end;end);end;do CL=PL[0X004];end;end;end;end;end;else do if not(wL>=3)then if not(wL>=0X1)then YL[PL[5]]=YL[PL[0x4]]<YL[PL[0X7]];else if wL~=0x2 then(YL)[16]=KL[PL[1]];PL=FL[CL];CL=CL+0X1;local AL=(RL[0X9]);do YL[0X010]=YL[0X10][PL[3]];end;do CL=CL+1;end;CL=CL+1;CL=CL+1;(YL)[0X011]=AL[1][AL[0X2]];CL=CL+0X1;local dL=0X0011;CL=CL+1;do CL=CL+1;end;(YL)[18]=YL[15];CL=CL+1;do(YL)[dL]=YL[dL](YL[dL+0X1]);end;NL=dL;do CL=CL+0X0001;end;CL=CL+1;CL=CL+1;do(YL)[0X10]=YL[0X00010][YL[0x11]];end;do CL=CL+1;end;do AL=RL[0x0000a];end;do YL[0x011]=AL[0X1][AL[0X2]];end;CL=CL+0X0001;CL=CL+1;PL=FL[CL];local BL=PL[0X004];local bC=BL[2];CL=CL+0x00001;local DL=nil;local uC=(#bC);do if not(uC>0)then else DL={};for EC=0X1,uC do local WC=(bC[EC]);if WC[1]~=0X000 then(DL)[EC-0X1]=RL[WC[2]];else(DL)[EC-1]={YL,WC[0X2]};end;end;(x)(mL,DL);end;end;(YL)[0X12]=cn(DL,KL,BL);CL=CL+1;do dL=17;end;(YL[dL])(YL[dL+1]);do NL=dL-1;end;do CL=CL+0X00001;end;CL=CL+1;CL=CL+1;repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do do if lC[0X1]==WC and lC[0X2]>=12 then local GC=lC[2];if not(not eC[GC])then else(eC)[GC]={WC[GC]};end;lC[1]=eC[GC];do lC[2]=1;end;end;end;end;end;until true;do PL=FL[CL];end;CL=CL+0x1;CL=PL[0X00004];else local AL=PL[4];local dL=(nil);local BL=(AL[0x0002]);local DL=(#BL);if DL>0x0 then do dL={};end;do for bC=1,DL do local uC=BL[bC];do if uC[0X00001]==0 then(dL)[bC-0X1]={YL,uC[0X2]};else dL[bC-0X1]=RL[uC[2]];end;end;end;end;x(mL,dL);end;do(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;else if not(wL>=5)then if wL==0X4 then local AL=PL[0X5];local dL,BL=YL[AL]();if not(dL)then else do CL=PL[4];end;do YL[AL+0X3]=BL;end;end;else end;else if wL==6 then YL[PL[5]]={F({},1,PL[4])};else YL[0X0]=KL[PL[1]];CL=CL+0x00001;CL=CL+1;do CL=CL+0X00001;end;do NL=0X00;end;(YL[NL])();NL=NL-0x00001;do PL=FL[CL];end;CL=CL+0x1;(YL)[0]=KL[PL[0X1]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X01;if not(not YL[0x00])then else CL=PL[0x4];end;end;end;end;end;end;end;end);do if nL then if TL then if rL~=1 then return YL[ML](F(YL,ML+0X0001,NL));else do return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;else if z(TL)=="s\116\114in\103"then if V(TL,"atte\109p\116\032t\o\032\y\i\101ld\ ac\114o\ss \m\101\116\097\109\e\116\104\od\/C%\045\c\097\108\l\ b\oun\d\097\114y")then do return q();end;end;if V(TL,"^\.\045:\%d\+\:\ ")then(G)("\Lura\ph \083c\114\ip\116\:"..(_L[CL-0x001]or"\(\105n\116er\110a\l)")..':\ '..l(TL),0);else(G)(TL,0X0);end;else(G)(TL,0);end;end;end;end;end;end;end;else if HL==71 then aL=function(...)local CL,YL=1,{};local OL=Q();local LL,hL=on(...);local NL,KL,kL=0X00000,(OL==_ and sL or OL),{[0X1]=YL,[2]=qL};LL=LL-1;for PL=0x0000,LL do if XL>PL then YL[PL]=hL[PL+0X001];else break;end;end;if not SL then do hL=nil;end;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+0X00001)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X2]);CL=CL+0X00001;if wL>=9 then if wL>=14 then if wL>=0x00010 then do if not(wL<17)then do if wL~=18 then YL[PL[0X5]]=YL[PL[4]]>YL[PL[0X7]];else YL[PL[0X5]]=YL[PL[4]]+YL[PL[7]];end;end;else local AL=RL[0X2];do YL[4]=AL[1][AL[2]];end;CL=CL+1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0X1;YL[0X5]=KL[PL[0X1]];do PL=FL[CL];end;do CL=CL+1;end;(YL)[0X0005]=YL[5][PL[0X0003]];CL=CL+0x001;do CL=CL+0X1;end;CL=CL+1;(YL)[4]=YL[4]==YL[5];PL=FL[CL];CL=CL+1;do CL=PL[0x4];end;end;end;else if wL~=15 then if YL[PL[0X05]]then CL=PL[0X0004];end;else do(YL[PL[0x5]])[YL[PL[0X00004]]]=YL[PL[0x7]];end;end;end;else if not(wL>=0X0b)then if wL==10 then repeat local dL,BL=mL,YL;local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0x1]==BL and WC[0X2]>=0X0)then else local eC=(WC[2]);if not DL[eC]then DL[eC]={BL[eC]};end;WC[0X00001]=DL[eC];(WC)[0x2]=1;end;end;end;until true;local AL=PL[0X05];return false,AL,AL;else end;else if not(wL<12)then do if wL==13 then do(YL)[PL[0X005]]=KL[PL[1]];end;else YL[PL[0x5]]=PL[0X1];end;end;else YL[4]=KL[PL[1]];PL=FL[CL];CL=CL+0x0001;(YL)[0X4]=YL[4][PL[0X3]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0X01;do if not(not YL[0X4])then else CL=PL[4];end;end;end;end;end;else do if not(wL<0x4)then if wL>=0X6 then if not(wL<7)then if wL~=8 then local dL=nil;local AL=PL[4];local BL=(AL[2]);local DL=(#BL);if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[1]==0 then(dL)[bC-0x1]={YL,uC[2]};else dL[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else(YL)[PL[5]]={F({},1,PL[4])};end;else(YL)[PL[5]]=YL[PL[0x4]]*YL[PL[7]];end;else if wL~=5 then repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0X0)then else local WC=EC[0x2];do if not BL[WC]then BL[WC]={dL[WC]};end;end;do EC[0x001]=BL[WC];end;do(EC)[0x2]=0X00001;end;end;end;end;until true;return;else local AL=RL[0X2];(YL)[4]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;(YL)[0x0005]=KL[PL[0x1]];PL=FL[CL];do CL=CL+0X1;end;do(YL)[0x05]=YL[5][PL[3]];end;CL=CL+1;CL=CL+0X01;PL=FL[CL];CL=CL+0x01;do if YL[0X0004]~=YL[0X5]then else do CL=PL[0X5];end;end;end;end;end;else do if wL<0X002 then if wL==1 then local AL=(PL[0X005]);local dL,BL=YL[AL]();if not(dL)then else for DL=0x1,PL[7]do(YL)[AL+DL]=BL[DL];end;do CL=PL[0x4];end;end;else(YL)[4]=KL[PL[1]];PL=FL[CL];local AL=0X004;CL=CL+1;(YL)[5]=PL[1];CL=CL+1;local dL=RL[0x0];(YL[AL])(YL[AL+1]);do NL=AL-1;end;do CL=CL+0X1;end;(YL)[0X4]=dL[0x1][dL[2]];CL=CL+1;CL=CL+1;CL=CL+1;do YL[0X005]=YL[0X000];end;CL=CL+0X1;AL=4;YL[AL]=YL[AL](YL[AL+0X1]);NL=AL;PL=FL[CL];do CL=CL+0X01;end;KL[PL[0x001]]=YL[0x4];CL=CL+1;dL=RL[0X00001];YL[4]=dL[0x1][dL[2]];do CL=CL+0X1;end;CL=CL+1;CL=CL+0X1;YL[5]=YL[1];PL=FL[CL];CL=CL+1;(YL)[6]=KL[PL[1]];CL=CL+0X00001;(YL)[7]=YL[0];do CL=CL+1;end;(YL)[0X0008]=YL[0X2];CL=CL+1;do(YL)[9]=YL[0X3];end;do CL=CL+0x1;end;AL=4;NL=AL+6-0X1;(YL[AL])(F(YL,AL+1,NL));NL=AL-1;PL=FL[CL];do CL=CL+0X00001;end;YL[4]=KL[PL[0X001]];do PL=FL[CL];end;do CL=CL+1;end;if YL[0X004]then CL=PL[0X0004];end;end;else do if wL==3 then CL=PL[4];else(YL)[4]=KL[PL[1]];PL=FL[CL];CL=CL+1;(YL)[4]=YL[0X4][PL[3]];CL=CL+1;do CL=CL+0X01;end;PL=FL[CL];CL=CL+0X1;if not YL[4]then CL=PL[4];end;end;end;end;end;end;end;end;end;end);if nL then if TL then do if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;else do if z(TL)=="str\in\103"then do if not(V(TL,'a\116t\e\109\p\116\ t\o\ \121i\e\108\d\ a\cr\111\s\s\ \109\e\116\097me\116\h\od\047\067\%\-\099\097\ll\ b\111u\110\dar\y'))then else return q();end;end;do if not(V(TL,'\094\.\045\:\%d\+\: '))then(G)(TL,0X00);else G("\Lura\p\104 \083\cr\i\112\116\:"..(_L[CL-1]or'\(in\116\e\114\110\097\l)').."\:\ "..l(TL),0X00);end;end;else G(TL,0);end;end;end;end;else do aL=function(...)local NL=0X0000;local YL={};local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);LL=LL-1;local KL=(OL==_ and sL or OL);for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;local CL=(1);if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+0x1)};end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+1;if not(wL>=14)then do if wL<0x7 then if wL<3 then do if not(wL<0x1)then if wL~=0X0002 then local AL=(PL[0X5]);local dL,BL,DL=YL[AL]();if not(dL)then else do(YL)[AL+0X1]=BL;end;(YL)[AL+0X00002]=DL;do CL=PL[0X4];end;end;else do if YL[PL[0X4]]==YL[PL[7]]then else CL=PL[5];end;end;end;else if not YL[PL[0x005]]then CL=PL[4];end;end;end;else if wL<5 then do if wL~=0X4 then(YL)[PL[5]]=YL[PL[4]]<=YL[PL[7]];else local AL=RL[PL[4]];do(YL)[PL[0x005]]=AL[0X0001][AL[2]];end;end;end;else do if wL==0X6 then(YL)[PL[0X05]]=YL[PL[4]]<YL[PL[7]];else(YL)[0X0008]=PL[0X1];do CL=CL+1;end;(YL)[4]=YL[8];PL=FL[CL];CL=CL+1;CL=PL[0X0004];end;end;end;end;else if wL<10 then if not(wL<0X8)then if wL~=0X9 then do(YL)[PL[5]]=YL[PL[0X4]]*YL[PL[7]];end;else YL[PL[5]]=true;end;else YL[0]=KL[PL[1]];PL=FL[CL];CL=CL+1;local AL=(0);do(YL)[0x1]=KL[PL[1]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;local BL=(4);(YL)[1]=YL[1][PL[0X03]];CL=CL+0x01;do CL=CL+0X1;end;CL=CL+0x1;local dL=(2);do if dL==0X000 then else do NL=AL+dL-1;end;end;end;local DL,bC=nil,(nil);if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else DL,bC=on(YL[AL]());end;if BL==1 then do NL=AL-1;end;else if BL==0 then DL=DL+AL-1;NL=DL;else DL=AL+BL-0x2;NL=DL+1;end;local EC=0x000;for WC=AL,DL do do EC=EC+1;end;do YL[WC]=bC[EC];end;end;end;CL=CL+0X1;do CL=CL+0x01;end;do PL=FL[CL];end;CL=CL+0x0001;AL=0;local uC=(g(function(...)(q)();do for EC,WC in...do q(true,EC,WC);end;end;end));(uC)(YL[AL],YL[AL+1],YL[AL+2]);NL=AL;do YL[AL]=uC;end;CL=PL[4];end;else if wL>=12 then if wL~=13 then(YL)[PL[0X05]]=KL[PL[1]];else YL[0X0]=KL[PL[0X1]];CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+1;(YL)[0]=YL[0][PL[0X3]];PL=FL[CL];CL=CL+0x1;if not YL[0]then do CL=PL[4];end;end;end;else do if wL==0XB then do(YL)[PL[5]]=PL[1];end;else for AL=PL[5],PL[0X4]do YL[AL]=nil;end;end;end;end;end;end;end;else do if wL<0X000015 then if not(wL>=0X00011)then if not(wL<0x00F)then do if wL==16 then(YL)[PL[5]]={F({},0X1,PL[0X0004])};else do repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do do for uC,EC in U,bC do do if not(EC[0X1]==dL and EC[2]>=0X0)then else local WC=(EC[2]);do if not BL[WC]then(BL)[WC]={dL[WC]};end;end;EC[1]=BL[WC];(EC)[0X02]=0X001;end;end;end;end;end;until true;end;return;end;end;else end;else if wL>=19 then do if wL~=0X00014 then CL=PL[4];else local AL=(PL[5]);local dL,BL=YL[AL],YL[AL+0x1];local DL=(YL[AL+2]);do(YL)[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);end;CL=PL[0x4];end;end;else if wL==18 then do(YL)[PL[5]]=r(YL[PL[4]],YL[PL[0x7]]);end;else local AL=(RL[1]);(YL)[3]=AL[0X1][AL[0x2]];CL=CL+0X1;CL=CL+0X1;CL=CL+1;YL[3]=YL[3][YL[0x2]];PL=FL[CL];CL=CL+1;YL[4]=KL[PL[1]];CL=CL+0x1;local dL=(0X4);CL=CL+1;PL=FL[CL];CL=CL+0x1;do YL[5]=PL[1];end;CL=CL+0X1;(YL)[dL]=YL[dL](YL[dL+0X00001]);NL=dL;CL=CL+0x00001;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[0X5]=YL[0X3][PL[0X00003]];CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;do if not(not(YL[5]<=YL[0X4]))then else do CL=PL[0x5];end;end;end;end;end;end;else if wL>=24 then do if wL>=0X1A then if wL~=0x1b then local AL=RL[0X2];(YL)[0x5]=AL[1][AL[0X00002]];do PL=FL[CL];end;do CL=CL+0X1;end;(YL)[0x6]=PL[0X01];local dL=0X5;PL=FL[CL];CL=CL+0x001;(YL)[0x07]=YL[0X00003][PL[0X00003]];CL=CL+1;CL=CL+0x001;PL=FL[CL];CL=CL+1;(YL)[0X00008]=PL[1];CL=CL+0X001;NL=dL+0x004-0X001;(YL[dL])(F(YL,dL+1,NL));do NL=dL-0X001;end;PL=FL[CL];CL=CL+1;CL=PL[0x4];else(YL)[4]=PL[0x01];PL=FL[CL];CL=CL+0X1;YL[5]=KL[PL[0X00001]];local AL=0X00005;CL=CL+1;local BL=(4);do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[0X6]=YL[3][PL[0X3]];CL=CL+1;do CL=CL+1;end;CL=CL+1;local dL=(0X002);if dL==0X0 then else do NL=AL+dL-0X1;end;end;local DL,bC=nil,nil;do if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else do DL,bC=on(YL[AL]());end;end;end;do if BL~=1 then do if BL~=0X000 then DL=AL+BL-2;NL=DL+0X01;else DL=DL+AL-1;NL=DL;end;end;local EC=(0);for WC=AL,DL do EC=EC+0X1;(YL)[WC]=bC[EC];end;else NL=AL-0X1;end;end;PL=FL[CL];do CL=CL+1;end;AL=5;local uC=(g(function(...)(q)();for EC,WC in...do q(true,EC,WC);end;end));(uC)(YL[AL],YL[AL+1],YL[AL+2]);NL=AL;YL[AL]=uC;do CL=PL[4];end;end;else if wL==0X19 then local AL=(PL[0X4]);local dL=nil;local BL=(AL[0X002]);local DL=(#BL);do if not(DL>0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);do if uC[0x1]~=0X00000 then(dL)[bC-1]=RL[uC[0X02]];else dL[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);else YL[0X0]=KL[PL[1]];CL=CL+0x0001;local AL=(0X0);CL=CL+0X1;PL=FL[CL];CL=CL+0x0001;YL[0]=YL[0][PL[0X3]];do PL=FL[CL];end;CL=CL+1;(YL)[1]=PL[0X1];CL=CL+1;do YL[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;CL=CL+1;do CL=CL+0X01;end;do PL=FL[CL];end;CL=CL+0X00001;if not(not YL[0X0])then else CL=PL[4];end;end;end;end;else do if wL<22 then local AL=PL[0X5];for dL=AL,AL+(PL[0x4]-1)do(YL)[dL]=hL[XL+(dL-AL)+1];end;else if wL~=0X17 then YL[8]=KL[PL[0X00001]];CL=CL+1;CL=CL+0X1;local AL=0X8;CL=CL+0X01;(YL)[0x9]=YL[0X006];CL=CL+1;do YL[AL]=YL[AL](YL[AL+1]);end;NL=AL;do PL=FL[CL];end;do CL=CL+1;end;if not(YL[0x08]<YL[0x0007])then CL=PL[5];end;else(YL)[PL[5]]=not YL[PL[0x4]];end;end;end;end;end;end;end;end;end;end);if nL then if TL then if rL==1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;else if z(TL)=="\s\116\114\105n\g"then if V(TL,'\097\116\116e\mpt\ \116\o yi\101ld\ acro\s\s\ \109\et\097m\et\h\od/\C%\-\c\097\ll\ \098\ou\110\100\097r\y')then do return q();end;end;do if V(TL,"\094.\-\:%\d\043\:\ ")then(G)("\L\117\114ap\h\ \Sc\114i\112\116\:"..(_L[CL-0X001]or'(\105\110\116\101\114\110a\108\)').."\:\ "..l(TL),0X00);else G(TL,0X000);end;end;else G(TL,0);end;end;end;end;end;end;end;end;end;end;else do if HL<0x77 then if not(HL<0X6e)then if HL<114 then if HL<0X70 then if HL==0x6f then aL=function(...)local NL=0X0;local CL=(1);local YL={};local OL=Q();local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-1;do for PL=0x0,LL do if XL>PL then(YL)[PL]=hL[PL+0X1];else do break;end;end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0x01 or 0X0,F(hL,XL+1,LL+1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=PL[0X0002];CL=CL+1;if not(wL<17)then if wL<0X1A then if wL>=21 then if not(wL>=0x17)then if wL~=22 then local AL=(RL[0X1]);do(YL)[0X1]=AL[1][AL[0X2]];end;CL=CL+0X1;CL=CL+0X00001;do PL=FL[CL];end;CL=CL+1;YL[1]=YL[0X01][PL[3]];CL=CL+0X0001;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;if not YL[1]then CL=PL[4];end;else local AL=(RL[0x2]);(YL)[4]=AL[1][AL[2]];do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];do CL=CL+1;end;(YL)[4]=YL[4][PL[0X3]];PL=FL[CL];CL=CL+0x01;(YL)[0X4]=YL[0X0004][PL[3]];CL=CL+1;CL=CL+0X1;CL=CL+0X1;(YL)[0X00004]=YL[0x4][YL[2]];do CL=CL+1;end;CL=CL+0X00001;PL=FL[CL];CL=CL+1;if not(YL[4])then else CL=PL[4];end;end;else if wL>=24 then if wL==0X19 then(YL)[PL[5]]=YL[PL[0X0004]]~=YL[PL[7]];else YL[PL[0X5]]=M(YL[PL[0X4]],YL[PL[7]]);end;else local AL=(RL[5]);YL[7]=AL[0X0001][AL[0X2]];PL=FL[CL];CL=CL+1;YL[0X7]=YL[0X7][PL[0X3]];CL=CL+0X1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;(YL)[0X8]=KL[PL[0X00001]];PL=FL[CL];do CL=CL+0X001;end;YL[0X08]=YL[0X08][PL[3]];do CL=CL+0X1;end;do CL=CL+0X01;end;local dL=(7);do CL=CL+0X01;end;YL[9]=YL[5];CL=CL+1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);NL=dL;PL=FL[CL];CL=CL+1;do if not YL[0X00007]then CL=PL[4];end;end;end;end;else if not(wL>=19)then do if wL~=18 then local AL=(0X06);NL=AL+0X00004-0X01;YL[AL]=YL[AL](F(YL,AL+0X1,NL));NL=AL;CL=CL+0x1;CL=CL+1;PL=FL[CL];CL=CL+0X01;(YL)[0x7]=KL[PL[1]];CL=CL+0X1;YL[8]=YL[4];CL=CL+0X00001;AL=7;do YL[AL]=YL[AL](YL[AL+1]);end;NL=AL;PL=FL[CL];CL=CL+0X1;if YL[0x7]then do CL=PL[0X00004];end;end;else local AL=(PL[5]);local dL,BL,DL=YL[AL]();if dL then(YL)[AL+0X00001]=BL;YL[AL+2]=DL;CL=PL[0x4];end;end;end;else if wL==0X14 then(YL)[PL[5]]=KL[PL[0x00001]];else YL[7]=KL[PL[0X00001]];do PL=FL[CL];end;CL=CL+0X1;(YL)[8]=PL[0X1];CL=CL+0x1;local AL=(7);YL[AL]=YL[AL](YL[AL+1]);NL=AL;PL=FL[CL];do CL=CL+1;end;(YL)[0x8]=YL[3][PL[0X0003]];CL=CL+0X1;CL=CL+0X001;PL=FL[CL];do CL=CL+1;end;do if YL[0X8]<=YL[7]then CL=PL[5];end;end;end;end;end;else if not(wL>=30)then if wL<0x001C then if wL==0X01b then local AL=PL[5];do for dL=AL,AL+(PL[0x4]-0x0001)do YL[dL]=hL[XL+(dL-AL)+0x001];end;end;else do(YL)[PL[0X5]]=r(YL[PL[4]],YL[PL[0X7]]);end;end;else if wL~=0x1d then local AL=(RL[0x6]);do(YL)[7]=AL[0X1][AL[2]];end;do PL=FL[CL];end;CL=CL+1;do(YL)[0X8]=PL[1];end;CL=CL+1;local dL=7;(YL)[0X9]=YL[0X002];do CL=CL+1;end;(YL[dL])(YL[dL+0X00001],YL[dL+2]);NL=dL-0X1;PL=FL[CL];CL=CL+0X1;do(YL)[0X7]=KL[PL[0x01]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0x0001;YL[0x7]=YL[7][PL[3]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;do(YL)[0X8]=PL[1];end;do CL=CL+1;end;do dL=7;end;YL[dL](YL[dL+1]);NL=dL-1;PL=FL[CL];CL=CL+1;YL[0X7]=KL[PL[1]];PL=FL[CL];do CL=CL+1;end;YL[8]=PL[1];CL=CL+1;(YL)[0x00009]=YL[0X5];CL=CL+0x01;(YL)[0X00A]=YL[6];CL=CL+1;dL=0X7;do NL=dL+0X4-1;end;(YL[dL])(F(YL,dL+0X1,NL));do NL=dL-1;end;PL=FL[CL];CL=CL+1;CL=PL[4];else(YL)[7]=YL[3][PL[0x0003]];CL=CL+0X1;CL=CL+1;PL=FL[CL];do CL=CL+0X01;end;if not(not YL[0X07])then else CL=PL[4];end;end;end;else if not(wL>=32)then do if wL==31 then do(YL)[0X9]=YL[0x3][PL[3]];end;PL=FL[CL];do CL=CL+0X1;end;(YL)[9]=YL[0X09]~=PL[3];PL=FL[CL];CL=CL+0X00001;if not(not YL[0x0009])then else CL=PL[4];end;else YL[PL[0X005]]={F({},1,PL[0X004])};end;end;else if wL>=33 then if wL==34 then(YL)[PL[0X5]]=YL[PL[4]][PL[3]];else local AL=PL[4];local BL=AL[2];local DL=#BL;local dL=(nil);if not(DL>0)then else do dL={};end;do for bC=1,DL do local uC=(BL[bC]);if uC[0X1]~=0 then dL[bC-0X01]=RL[uC[0X02]];else(dL)[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;do YL[PL[0X5]]=cn(dL,KL,AL);end;end;else end;end;end;end;else do if not(wL<0X08)then do if not(wL>=12)then do if not(wL>=0xA)then if wL==0x9 then do(YL)[PL[0X5]]=YL[PL[4]]<YL[PL[7]];end;else do YL[1]=KL[PL[1]];end;PL=FL[CL];CL=CL+1;(YL)[0X0001]=YL[1][PL[0x00003]];do PL=FL[CL];end;local AL=1;CL=CL+1;(YL)[2]=PL[1];CL=CL+0X1;YL[AL]=YL[AL](YL[AL+1]);NL=AL;CL=CL+0X001;CL=CL+1;PL=FL[CL];do CL=CL+1;end;if not(not YL[0X1])then else CL=PL[0X4];end;end;else do if wL==11 then CL=PL[4];else do(YL)[0x0001]=KL[PL[0X00001]];end;do CL=CL+0x1;end;local AL=(RL[0X1]);YL[0X02]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;YL[0X2]=YL[0X2][PL[3]];do CL=CL+0X1;end;CL=CL+0X1;local dL=0x001;CL=CL+0X001;local BL=(0x2);if BL~=0x0 then NL=dL+BL-0X1;end;local DL=0X04;local bC,uC=nil,(nil);do if BL~=1 then do bC,uC=on(YL[dL](F(YL,dL+0X01,NL)));end;else do bC,uC=on(YL[dL]());end;end;end;if DL==1 then NL=dL-0X1;else if DL~=0x0 then bC=dL+DL-0X002;NL=bC+0x1;else bC=bC+dL-0X001;do NL=bC;end;end;local WC=(0);do for eC=dL,bC do WC=WC+1;(YL)[eC]=uC[WC];end;end;end;PL=FL[CL];do CL=CL+1;end;dL=0X1;local EC=(g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end));EC(YL[dL],YL[dL+0X1],YL[dL+0x0002]);NL=dL;(YL)[dL]=EC;CL=PL[0X004];end;end;end;end;else do if wL>=14 then if wL<0X000f then(YL)[4]=YL[3][PL[0X3]];do CL=CL+1;end;CL=CL+1;local AL=(RL[0X00003]);do CL=CL+0x001;end;(YL)[0X5]=AL[0x1][AL[0X0002]];do CL=CL+0X1;end;do(YL)[0x005]=YL[5][YL[4]];end;PL=FL[CL];CL=CL+1;do(YL)[5]=YL[0X5][PL[0X03]];end;CL=CL+1;AL=RL[4];do(YL)[6]=AL[0X1][AL[0x00002]];end;PL=FL[CL];CL=CL+1;(YL)[0x7]=PL[1];do PL=FL[CL];end;CL=CL+1;do YL[8]=YL[3][PL[3]];end;PL=FL[CL];do CL=CL+0X001;end;if not(YL[8])then else CL=PL[0x0004];end;else if wL~=0X00010 then local AL=(RL[0x0]);(YL)[1]=AL[0x1][AL[0X0002]];CL=CL+0X1;CL=CL+0X0001;PL=FL[CL];do CL=CL+0x1;end;do if not YL[1]then CL=PL[4];end;end;else YL[PL[0x005]]=h(YL[PL[0X4]],YL[PL[7]]);end;end;else if wL==13 then(kL)[PL[4]]=YL[PL[0x5]];else(YL)[PL[5]]=PL[1];end;end;end;end;end;else if wL<4 then do if not(wL<0X002)then if wL==0X003 then YL[0X7]=KL[PL[1]];CL=CL+0x1;CL=CL+0X1;local AL=(0x00007);do PL=FL[CL];end;CL=CL+0X1;YL[8]=PL[1];CL=CL+0X0001;do(YL)[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0x1;YL[0X8]=YL[0x3][PL[0X3]];PL=FL[CL];CL=CL+1;do if not(YL[0X8]<=YL[0X7])then else CL=PL[5];end;end;else if not(not YL[PL[5]])then else do CL=PL[4];end;end;end;else if wL~=1 then do repeat local BL=({});local AL,dL=mL,YL;do for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X1]==dL and EC[0X2]>=0x00000 then local WC=EC[0X2];do if not BL[WC]then BL[WC]={dL[WC]};end;end;(EC)[0X0001]=BL[WC];(EC)[0X2]=0X1;end;end;end;end;until true;end;do return;end;else local AL=PL[0X5];local dL,BL=YL[AL]();if not(dL)then else for DL=1,PL[0X007]do(YL)[AL+DL]=BL[DL];end;CL=PL[4];end;end;end;end;else do if not(wL>=6)then if wL==0X5 then(YL)[0X00001]=KL[PL[1]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];do CL=CL+1;end;YL[1]=YL[0X1][PL[3]];CL=CL+0x00001;do CL=CL+0X01;end;PL=FL[CL];CL=CL+1;do if not(not YL[1])then else CL=PL[4];end;end;else do for AL=PL[0X05],PL[4]do(YL)[AL]=nil;end;end;end;else do if wL==0x7 then YL[PL[0x5]]=YL[PL[4]]+YL[PL[7]];else if not(YL[PL[0X05]])then else CL=PL[4];end;end;end;end;end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=="s\116r\in\g"then if not(V(TL,'\097\116\116\e\m\pt \116\o\032\y\105\101l\d\032a\cr\o\s\s m\101\116amet\h\o\d\/\C\%\-\099\097ll\ b\111u\110\d\097\114\y'))then else return q();end;if V(TL,"^\046-\:\%d\043\:\032")then(G)('\Lur\097\p\h \S\c\114i\pt\058'..(_L[CL-0X1]or"\(\in\116\e\114na\l\041").."\:\032"..l(TL),0X000);else(G)(TL,0x0);end;else G(TL,0X0);end;end;else do if TL then if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL,YL,NL=1,{},(0);local OL=Q();local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;for PL=0X0,LL do if XL>PL then YL[PL]=hL[PL+0X00001];else break;end;end;local KL=(OL==_ and sL or OL);if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+1,LL+0X1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];do CL=CL+1;end;if not(wL<8)then if not(wL>=0xC)then if not(wL>=0xa)then if wL~=9 then local AL=(YL[PL[0X004]]/YL[PL[7]]);YL[PL[0X5]]=AL-AL%0X01;else CL=PL[4];end;else if wL==0xb then local AL=PL[0x5];local dL=(g(function(...)q();do for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end;end));dL(YL[AL],YL[AL+0x1],YL[AL+2]);do NL=AL;end;(YL)[AL]=dL;CL=PL[0X4];else do(kL)[PL[4]]=YL[PL[0x5]];end;end;end;else if not(wL>=14)then if wL==0X000D then else local AL=(PL[0X4]);local dL=nil;local BL=AL[2];local DL=(#BL);if not(DL>0)then else dL={};for bC=0x1,DL do local uC=(BL[bC]);if uC[1]~=0 then do(dL)[bC-0X1]=RL[uC[0X2]];end;else dL[bC-0X1]={YL,uC[2]};end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;else if wL~=0Xf then(YL)[0X1]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X0001;CL=CL+1;do NL=1;end;(YL[NL])();NL=NL-1;CL=CL+0X1;repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0x1]==dL and EC[2]>=0)then else local WC=EC[2];if not(not BL[WC])then else BL[WC]={dL[WC]};end;(EC)[1]=BL[WC];(EC)[2]=0X01;end;end;end;end;until true;return;else if YL[PL[4]]==YL[PL[0X7]]then CL=PL[5];end;end;end;end;else if not(wL<4)then do if not(wL<0X6)then if wL==7 then if not(YL[PL[4]]<YL[PL[7]])then do CL=PL[5];end;end;else(YL)[0x1]=KL[PL[1]];CL=CL+1;do CL=CL+0X0001;end;do CL=CL+0X1;end;NL=1;(YL[NL])();NL=NL-1;PL=FL[CL];CL=CL+1;CL=PL[0X4];end;else if wL==0X05 then YL[0X1]=KL[PL[1]];CL=CL+0X01;do CL=CL+1;end;local AL=RL[0X00000];CL=CL+1;(YL)[2]=AL[1][AL[2]];CL=CL+0X1;do(YL)[0X3]=YL[0X00];end;CL=CL+1;(YL[0X1])[YL[0X2]]=YL[0X3];PL=FL[CL];CL=CL+1;YL[0X1]=KL[PL[1]];CL=CL+1;do CL=CL+0X001;end;PL=FL[CL];CL=CL+0X1;if not YL[1]then do CL=PL[0X004];end;end;else for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;end;end;end;else do if wL>=2 then if wL~=3 then do YL[PL[5]]={F({},0X1,PL[0X0004])};end;else(YL)[PL[5]]=KL[PL[0X1]];end;else if wL~=0X1 then(YL)[PL[5]]=PL[0x1];else local AL=PL[5];local dL=(PL[0X0004]);NL=AL+dL-0X0001;repeat local BL,DL=mL,YL;local bC={};for uC,EC in U,BL do for WC,eC in U,EC do do if eC[1]==DL and eC[2]>=0X0 then local oC=(eC[2]);if not bC[oC]then bC[oC]={DL[oC]};end;(eC)[1]=bC[oC];do(eC)[0X00002]=1;end;end;end;end;end;until true;return true,AL,dL;end;end;end;end;end;end;end);if not(nL)then do if z(TL)~="s\116\114\in\g"then G(TL,0X0);else if V(TL,"\097t\116\em\112t\ t\111\ y\i\101\108\100\ \097\cr\o\115\115 m\101tam\et\104\od\/\067\%\-\c\097ll\032b\111\117\110\dar\121")then return q();end;do if not(V(TL,"\^\.\-\058%\d\+\: "))then(G)(TL,0);else(G)('\076ur\097\112h \Scr\ipt\:'..(_L[CL-0X1]or'\040i\110\116\e\114\110\097\l\)').."\: "..l(TL),0);end;end;end;end;else if TL then do if rL~=1 then return YL[ML](F(YL,ML+0X01,NL));else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else do if HL~=0X71 then aL=function(...)local YL={};local CL=0x1;local OL=(Q());local NL=0;local LL,hL=on(...);local KL=((OL==_ and sL or OL));local kL=({[2]=qL,[0X1]=YL});do LL=LL-0X1;end;do for PL=0X0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X00001 or 0X0,F(hL,XL+1,LL+1)};end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+1;if not(wL<7)then if wL>=10 then if wL<12 then do if wL~=0XB then do(YL)[PL[5]]=#YL[PL[0x4]];end;else YL[PL[0x5]]=YL[PL[4]]/YL[PL[7]];end;end;else do if wL==0XD then else(YL)[PL[0x5]]=KL[PL[0x1]];end;end;end;else if not(wL<8)then if wL~=9 then CL=PL[0X4];else do YL[PL[5]]=YL[PL[4]]%YL[PL[7]];end;end;else local AL=(PL[4]);local BL=(AL[0X2]);local DL,dL=#BL,(nil);do if not(DL>0X0000)then else do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[1]==0X0 then dL[bC-0x1]={YL,uC[0X2]};else dL[bC-0X0001]=RL[uC[0X002]];end;end;x(mL,dL);end;end;(YL)[PL[0X5]]=cn(dL,KL,AL);end;end;else if not(wL<3)then do if not(wL<0X5)then if wL~=6 then YL[PL[5]]=PL[0x00001];else(YL)[PL[5]]=YL[PL[0x4]]+YL[PL[7]];end;else do if wL~=4 then if not YL[PL[5]]then do CL=PL[0X4];end;end;else do KL[PL[1]]=YL[PL[0X5]];end;end;end;end;end;else if not(wL>=0X1)then do(YL)[PL[0X0005]]=M(YL[PL[4]],YL[PL[7]]);end;else do if wL~=2 then(YL)[PL[0X5]]={F({},0x1,PL[0x4])};else YL[1]=KL[PL[0X1]];local BL=(nil);CL=CL+0x00001;CL=CL+1;CL=CL+0X00001;local AL=RL[0X000];YL[0X0002]=YL[0];local uC=1;PL=FL[CL];CL=CL+0X1;(YL[0x00001])[PL[1]]=YL[2];PL=FL[CL];CL=CL+0X01;(YL)[0X1]=KL[PL[0X1]];CL=CL+1;CL=CL+1;CL=CL+1;do NL=0X1;end;(YL[NL])();do NL=NL-0X1;end;CL=CL+0x0001;(YL)[0X01]=AL[1][AL[0X0002]];CL=CL+0X0001;CL=CL+0X1;PL=FL[CL];CL=CL+0X01;local dL=PL[0X4];local DL=(dL[0X2]);local bC=(#DL);do if bC>0 then BL={};for EC=1,bC do local WC=DL[EC];do if WC[0X00001]~=0 then do BL[EC-0x1]=RL[WC[0X0002]];end;else(BL)[EC-1]={YL,WC[2]};end;end;end;x(mL,BL);end;end;(YL)[2]=cn(BL,KL,dL);do CL=CL+1;end;(YL[uC])(YL[uC+0X0001]);NL=uC-1;do CL=CL+0X1;end;repeat local eC=({});local EC,WC=mL,(YL);for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[1]==WC and lC[0X2]>=0)then else local GC=(lC[2]);if not(not eC[GC])then else eC[GC]={WC[GC]};end;lC[0x1]=eC[GC];(lC)[2]=1;end;end;end;until true;return;end;end;end;end;end;end;end);if not(nL)then if z(TL)~='st\114ing'then G(TL,0);else do if V(TL,'a\116\116\101\m\p\116 \116\111\ \yi\101\ld\ \097\cr\111\115\115\ \m\e\116\097\109\e\116\h\o\d/\C\%\045\ca\108\108\032bo\117n\da\114\y')then return q();end;end;if V(TL,'\^.-\:%d\043\:\ ')then G("\076ur\097p\104\032\S\cr\i\p\116\:"..(_L[CL-1]or"\040int\101\114\110\097\108)").."\:\ "..l(TL),0);else G(TL,0);end;end;else if TL then if rL~=0X0001 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL=(1);local YL={};local NL=(0);local kL={[2]=qL,[0X1]=YL};local OL=Q();local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-1;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+0X0001,LL+0X01)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);do CL=CL+0X1;end;if not(wL<7)then if wL<11 then if wL>=9 then if wL==0XA then local AL,dL=PL[0X4],nil;local BL=AL[0x2];local DL=(#BL);if DL>0 then dL={};for bC=0X1,DL do local uC=BL[bC];if uC[0x00001]~=0X0 then dL[bC-1]=RL[uC[2]];else dL[bC-1]={YL,uC[2]};end;end;(x)(mL,dL);end;(YL)[PL[0X00005]]=cn(dL,KL,AL);else local AL,dL=PL[0X5],((PL[7]-0x1)*0x32);local BL=YL[AL];do for DL=0X1,PL[4]do BL[dL+DL]=YL[AL+DL];end;end;end;else if wL~=0X8 then(YL)[1]=KL[PL[0x1]];local AL=RL[0];CL=CL+0x0001;(YL)[2]=YL[0X00000];PL=FL[CL];CL=CL+0X1;do YL[1][PL[0X1]]=YL[0x2];end;PL=FL[CL];do CL=CL+1;end;YL[1]=KL[PL[0X01]];CL=CL+0X01;CL=CL+1;CL=CL+1;do NL=0X1;end;(YL[NL])();NL=NL-1;CL=CL+1;CL=CL+1;CL=CL+0x1;do YL[0X1]=AL[0X00001][AL[0x2]];end;do CL=CL+0X00001;end;CL=CL+0X1;PL=FL[CL];CL=CL+1;do YL[0X0001]=YL[1][PL[3]];end;CL=CL+0X1;(YL)[0X00002]=YL[0X00];do PL=FL[CL];end;do CL=CL+0X1;end;YL[1][PL[0x00001]]=YL[0X00002];CL=CL+1;repeat local dL,BL,DL=mL,YL,({});do for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[0X2]>=0X0)then else local eC=WC[0X2];if not DL[eC]then DL[eC]={BL[eC]};end;(WC)[0X1]=DL[eC];do(WC)[0X2]=0X00001;end;end;end;end;end;until true;return;else do YL[PL[5]]=PL[1];end;end;end;else if not(wL>=0Xd)then if wL==0Xc then(YL)[PL[0X5]]=YL[PL[4]]-YL[PL[7]];else do if not(not YL[PL[5]])then else CL=PL[4];end;end;end;else if wL==0Xe then YL[PL[5]]=YL[PL[4]]<=YL[PL[0X7]];else for AL=PL[0X00005],PL[4]do do YL[AL]=nil;end;end;end;end;end;else if wL>=3 then if not(wL<5)then if wL~=6 then else(YL)[PL[0x05]]={F({},0X1,PL[4])};end;else if wL==4 then CL=PL[4];else(YL)[PL[0X5]]=-YL[PL[4]];end;end;else if wL>=0X1 then if wL==0X2 then do if YL[PL[0X4]]<=YL[PL[0X7]]then CL=PL[0X005];end;end;else(YL)[PL[0X5]]=r(YL[PL[0x4]],YL[PL[0x007]]);end;else do YL[PL[0X05]]=KL[PL[1]];end;end;end;end;end;end);if not(nL)then if z(TL)=="\115\116\114i\110\g"then do if V(TL,'\097\116t\e\mpt \116o\032\yi\el\d\ a\c\114\111\ss \m\e\116\097met\ho\100\/C\%\-\099a\l\l\ \098\111un\100\097ry')then return q();end;end;if not(V(TL,"\^\.-:\%d\043\:\ "))then(G)(TL,0);else G('\Lu\114a\p\h Scr\i\p\116\:'..(_L[CL-0X1]or"\040in\116\e\114\110a\l\041").."\:\ "..l(TL),0);end;else(G)(TL,0);end;else if TL then if rL==1 then return YL[ML]();else do return YL[ML](F(YL,ML+1,NL));end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;end;end;else do if HL>=0X74 then do if HL<0X75 then do aL=function(...)local YL={};local CL,NL=1,(0X0);local OL=Q();local LL,hL=on(...);local kL,KL={[2]=qL,[0X1]=YL},((OL==_ and sL or OL));LL=LL-0X1;do for PL=0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+0X1)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=(PL[2]);do CL=CL+0X1;end;if not(wL<0XA)then do if not(wL<0xF)then if wL<0X11 then if wL==16 then(YL)[PL[5]]=YL[PL[0X4]]^YL[PL[7]];else(YL)[PL[5]]=YL[PL[4]]<=YL[PL[7]];end;else if not(wL<18)then if wL~=19 then YL[PL[0X05]]=KL[PL[1]];else YL[PL[5]]=kL[PL[4]];end;else local AL=PL[0X5];local dL,BL=YL[AL]();if not(dL)then else do CL=PL[0x0004];end;YL[AL+3]=BL;end;end;end;else do if not(wL<0XC)then if wL>=13 then if wL~=0X0000E then local AL=RL[0X1];do(YL)[4]=AL[1][AL[2]];end;CL=CL+0X1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X001;(YL)[0X005]=PL[1];CL=CL+1;AL=RL[0x2];do(YL)[0X6]=AL[1][AL[0x00002]];end;PL=FL[CL];do CL=CL+0X001;end;(YL)[0x7]=PL[0X001];local dL=(0x4);CL=CL+0X1;NL=dL+4-1;YL[dL](F(YL,dL+1,NL));do NL=dL-1;end;CL=CL+0X1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X1;do(YL)[4]=KL[PL[1]];end;CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;do(YL)[0X5]=PL[1];end;CL=CL+0X0001;dL=0X04;YL[dL](YL[dL+0x01]);NL=dL-0x1;CL=CL+1;CL=CL+0X00001;do PL=FL[CL];end;CL=CL+0X1;CL=PL[4];else do(YL)[PL[0X005]]=PL[1];end;end;else do(YL)[PL[5]]=not YL[PL[4]];end;end;else if wL==11 then do CL=PL[0X4];end;else(YL)[PL[0X05]]=YL[PL[0X4]];end;end;end;end;end;else if not(wL>=0X00005)then if not(wL>=0X02)then do if wL~=0X00001 then local AL=PL[0X4];local BL,dL=AL[0X002],(nil);local DL=#BL;do if not(DL>0X0)then else dL={};do for bC=0X1,DL do local uC=BL[bC];do if uC[1]==0X00 then do dL[bC-0X001]={YL,uC[0X2]};end;else(dL)[bC-0X1]=RL[uC[2]];end;end;end;end;(x)(mL,dL);end;end;do YL[PL[5]]=cn(dL,KL,AL);end;else YL[PL[5]]={F({},0X1,PL[0X004])};end;end;else if wL>=0X3 then if wL~=4 then local dL=PL[0X4];local AL=PL[5];do if dL==0x000 then else NL=AL+dL-1;end;end;local BL,DL,bC=PL[7],nil,nil;do if dL~=0X1 then do DL,bC=on(YL[AL](F(YL,AL+0X001,NL)));end;else DL,bC=on(YL[AL]());end;end;if BL~=1 then if BL==0X0 then do DL=DL+AL-0X0001;end;do NL=DL;end;else DL=AL+BL-0X002;NL=DL+1;end;local uC=0;for EC=AL,DL do do uC=uC+0X1;end;(YL)[EC]=bC[uC];end;else do NL=AL-0X1;end;end;else repeat local BL={};local AL,dL=mL,YL;for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X00002]>=0 then local WC=EC[2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[0X1]=BL[WC];(EC)[2]=1;end;end;end;until true;return;end;else(YL)[PL[5]]=L(YL[PL[4]],YL[PL[0X07]]);end;end;else if wL<7 then do if wL~=6 then for AL=PL[0X5],PL[0X4]do(YL)[AL]=nil;end;else end;end;else do if wL<0x8 then(YL)[PL[5]]=YL[PL[4]]/YL[PL[0x07]];else if wL~=9 then YL[0]=KL[PL[0X01]];CL=CL+1;CL=CL+0X001;PL=FL[CL];CL=CL+1;(YL)[0x0]=YL[0][PL[3]];CL=CL+1;do CL=CL+0X01;end;do PL=FL[CL];end;do CL=CL+0X1;end;if not(not YL[0X000])then else CL=PL[0X00004];end;else do YL[0X0]=PL[0x1];end;CL=CL+1;local AL=(RL[0]);YL[1]=AL[1][AL[0X02]];CL=CL+0X1;CL=CL+0X0001;local dL=0X000;do PL=FL[CL];end;do CL=CL+0X001;end;(YL)[2]=PL[0X4];PL=FL[CL];do CL=CL+1;end;local BL=YL[dL];local DL,bC=YL[dL+0X0001],(YL[dL+0x002]);do YL[dL]=g(function()for uC=BL,DL,bC do(q)(true,uC);end;end);end;CL=PL[4];end;end;end;end;end;end;end;end;end);do if nL then if TL then if rL==0X001 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else do return F(YL,ML,rL);end;end;else if z(TL)~="\115tr\i\110\g"then G(TL,0);else do if not(V(TL,'a\116\116\101\m\pt \116\o\ y\105\101\ld a\c\114\o\ss \m\et\097\109\101\116\h\111d\/\067\%\045\ca\ll\ b\111\117nda\114\121'))then else do return q();end;end;end;if V(TL,"\094\.\045\:\%\100\+:\ ")then(G)("\L\117ra\p\104\032\S\c\114i\p\116:"..(_L[CL-1]or"\(i\110\116\e\114na\108\)").."\:\ "..l(TL),0);else(G)(TL,0X00);end;end;end;end;end;end;else do if HL~=0X00076 then aL=function(...)local YL=({});local NL=(0);local OL=(Q());local kL={[0X1]=YL,[2]=qL};local KL=(OL==_ and sL or OL);local LL,hL=on(...);LL=LL-0x1;local CL=1;for PL=0,LL do if XL>PL then YL[PL]=hL[PL+0X1];else break;end;end;if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0X0001 or 0x0,F(hL,XL+1,LL+0X1)};end;end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+1;do if not(wL<7)then if not(wL<11)then if wL>=13 then if wL==14 then CL=PL[4];else YL[PL[0x005]]=KL[PL[1]];end;else if wL==12 then local AL=(PL[0X5]);local BL=YL[AL];local dL=(PL[7]-0x001)*0X32;for DL=1,PL[4]do BL[dL+DL]=YL[AL+DL];end;else local AL,dL=PL[0X5],PL[0X4];NL=AL+dL-0X0001;repeat local BL,DL=mL,YL;local bC={};for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[1]==DL and eC[2]>=0X0)then else local oC=eC[2];if not bC[oC]then bC[oC]={DL[oC]};end;eC[1]=bC[oC];eC[2]=1;end;end;end;until true;return true,AL,dL;end;end;else if not(wL<9)then do if wL==0Xa then local AL=PL[5];local dL=g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);(dL)(YL[AL],YL[AL+0X1],YL[AL+2]);do NL=AL;end;do(YL)[AL]=dL;end;CL=PL[0X004];else YL[1]=KL[PL[1]];do CL=CL+1;end;do YL[2]=YL[0X0];end;do PL=FL[CL];end;do CL=CL+1;end;(YL[0X1])[PL[1]]=YL[2];PL=FL[CL];CL=CL+1;(YL)[0x01]=KL[PL[0X1]];CL=CL+0X001;NL=0X1;YL[NL]();NL=NL-0x001;CL=CL+0X001;repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0)then else local WC=EC[0X002];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];(EC)[2]=0X1;end;end;end;until true;return;end;end;else if wL~=0X8 then do YL[PL[0x00005]]=M(YL[PL[0X4]],YL[PL[7]]);end;else(YL)[PL[5]]={F({},0X1,PL[4])};end;end;end;else if wL<0x003 then if wL<1 then(YL)[PL[0X0005]]=L(YL[PL[4]],YL[PL[7]]);else do if wL==0x2 then do repeat local dL,BL=mL,(YL);local DL=({});do for bC,uC in U,dL do do for EC,WC in U,uC do if not(WC[0X001]==BL and WC[2]>=0)then else local eC=WC[0X2];do if not DL[eC]then DL[eC]={BL[eC]};end;end;(WC)[0X0001]=DL[eC];do WC[0X2]=1;end;end;end;end;end;end;until true;end;local AL=(PL[5]);return false,AL,AL+PL[4]-0X002;else(YL)[PL[0X5]]=PL[1];end;end;end;else if not(wL<0X5)then if wL~=6 then local AL=(PL[0x0004]);local BL,dL=AL[2],(nil);local DL=(#BL);if not(DL>0)then else dL={};do for bC=0x01,DL do local uC=BL[bC];if uC[1]==0 then(dL)[bC-1]={YL,uC[0X2]};else do(dL)[bC-1]=RL[uC[0X2]];end;end;end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else if not(YL[PL[4]]<YL[PL[7]])then else CL=PL[5];end;end;else if wL==0X04 then else YL[PL[0X5]]=YL[PL[0X4]]*YL[PL[0x7]];end;end;end;end;end;end;end);do if not(nL)then if z(TL)~='\s\116\114\i\110\g'then(G)(TL,0X00000);else if V(TL,"\097t\116\e\m\p\116\ \116\o y\105e\ld\ acr\o\s\s\ m\eta\m\101tho\d\/C\%\-\c\097l\108\ \098\ou\110\da\114\y")then return q();end;if V(TL,"\094.\045:%\d+:\ ")then G('\076\117r\097\p\104\ \S\099\114\ipt\:'..(_L[CL-0X1]or'(\i\110te\114na\l)')..'\:\ '..l(TL),0);else(G)(TL,0);end;end;else do if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;end;else do aL=function(...)local YL=({});local NL=0;local CL=0X01;local OL=Q();local LL,hL=on(...);local kL={[2]=qL,[0X1]=YL};do LL=LL-0X1;end;local KL=((OL==_ and sL or OL));for PL=0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+0X001];end;end;end;do if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+0X001,LL+1)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];do CL=CL+1;end;if not(wL<0X7)then if not(wL>=0XA)then if not(wL<0X008)then if wL~=0X9 then local AL=PL[0x04];local BL,dL=AL[0x2],nil;local DL=#BL;if not(DL>0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[0X0001]~=0 then(dL)[bC-1]=RL[uC[2]];else dL[bC-0X1]={YL,uC[0x0002]};end;end;x(mL,dL);end;do YL[PL[0x5]]=cn(dL,KL,AL);end;else kL[PL[0X4]]=YL[PL[0X0005]];end;else(YL)[PL[0X5]]=PL[1];end;else if wL<12 then if wL==11 then YL[PL[0x0005]]=YL[PL[0X4]]>=YL[PL[7]];else do CL=PL[0x004];end;end;else do if wL==0Xd then local AL=(PL[0X0005]);local BL,dL=YL[AL],((PL[0X07]-1)*0x32);for DL=1,PL[0X4]do(BL)[dL+DL]=YL[AL+DL];end;else end;end;end;end;else if not(wL<3)then if wL>=0X5 then if wL~=0X6 then YL[PL[5]]=KL[PL[0X1]];else if YL[PL[5]]then CL=PL[0X4];end;end;else if wL~=4 then YL[PL[0X005]]={F({},0X1,PL[4])};else YL[PL[5]]=YL[PL[0x4]]<YL[PL[0X0007]];end;end;else if wL>=1 then if wL~=2 then(YL)[1]=KL[PL[1]];CL=CL+1;do(YL)[0X2]=YL[0X0000];end;PL=FL[CL];do CL=CL+0x1;end;do(YL[1])[PL[0x1]]=YL[0x2];end;do PL=FL[CL];end;CL=CL+1;YL[1]=KL[PL[0X1]];CL=CL+0x1;CL=CL+0x001;CL=CL+1;NL=0X1;YL[NL]();NL=NL-0X1;do CL=CL+1;end;repeat local AL,dL=mL,YL;local BL=({});do for DL,bC in U,AL do do for uC,EC in U,bC do do if not(EC[0X00001]==dL and EC[0X0002]>=0)then else local WC=EC[2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;(EC)[0X1]=BL[WC];EC[0X002]=0X1;end;end;end;end;end;end;until true;return;else(YL)[PL[5]]=YL[PL[4]]+YL[PL[0X7]];end;else do YL[PL[0x05]]=h(YL[PL[0x004]],YL[PL[0X007]]);end;end;end;end;end;end);if nL then do if TL then if rL==0X1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;else do if z(TL)~="s\116\114\105n\g"then G(TL,0);else do if V(TL,"a\116\116\101\mp\116\ t\o \yi\e\108\d\ \097\099r\111\s\115 \m\e\116\097\me\116\h\111\100\/\C%\-\ca\l\l\ b\o\117n\dar\121")then return q();end;end;do if not(V(TL,'^\.\045:\037\100\043\:\ '))then G(TL,0);else G('\076ura\112\h\ Scr\ipt\058'..(_L[CL-0x1]or"\(i\110te\114\110\097\108)").."\: "..l(TL),0x0);end;end;end;end;end;end;end;end;end;end;end;else do if HL==0X73 then aL=function(...)local CL=(0X1);local YL=({});local OL=Q();local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);do LL=LL-1;end;for PL=0X0000,LL do if XL>PL then(YL)[PL]=hL[PL+0X1];else break;end;end;local NL=0;local KL=(OL==_ and sL or OL);do if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0X01)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=(PL[0x02]);CL=CL+0X1;if not(wL>=8)then if wL<0x0004 then if wL>=0X02 then if wL==0x03 then CL=PL[4];else for AL=PL[0X5],PL[0X0004]do(YL)[AL]=nil;end;end;else if wL==1 then local dL=YL[0X00001];local AL=(2);(YL)[AL+0X0001]=dL;YL[AL]=dL[PL[0X3]];do PL=FL[CL];end;CL=CL+0x0001;YL[4]=PL[0X1];CL=CL+1;AL=0X00002;do YL[AL]=YL[AL](YL[AL+0X01],YL[AL+2]);end;NL=AL;PL=FL[CL];do CL=CL+0X1;end;if not(not YL[2])then else CL=PL[4];end;else end;end;else do if wL<6 then do if wL==0X0005 then YL[0X02]=KL[PL[0x1]];do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];do CL=CL+0x01;end;YL[0X03]=YL[1][PL[3]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[0X003]=YL[3][PL[0X3]];CL=CL+0x1;CL=CL+1;local AL=2;CL=CL+0x1;YL[AL]=YL[AL](YL[AL+1]);NL=AL;PL=FL[CL];CL=CL+0X1;if not(YL[2])then else CL=PL[0x4];end;else if not YL[PL[0X5]]then CL=PL[4];end;end;end;else if wL==7 then(YL)[PL[0X5]]=YL[PL[0x4]]>YL[PL[7]];else local AL=RL[2];do YL[0X0002]=AL[1][AL[2]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[3]=PL[0x1];CL=CL+0X1;do YL[4]=YL[0];end;CL=CL+1;local dL=(2);YL[dL](YL[dL+1],YL[dL+0X2]);NL=dL-0x1;CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+0X0001;CL=PL[4];end;end;end;end;else if wL>=0x0C then do if wL<14 then if wL==0Xd then local AL=RL[0];(YL)[0]=AL[1][AL[0X2]];CL=CL+0X0001;CL=CL+0x1;CL=CL+0x01;AL=RL[0X0001];YL[0x1]=AL[0X00001][AL[2]];CL=CL+0x1;CL=CL+0X1;CL=CL+1;YL[0X0000]=YL[0x0][YL[1]];PL=FL[CL];local dL=1;CL=CL+0X01;local BL=(YL[0]);do YL[dL+0X1]=BL;end;do YL[dL]=BL[PL[0X003]];end;do PL=FL[CL];end;do CL=CL+0X1;end;do(YL)[0X3]=PL[0x1];end;CL=CL+0X1;dL=0X1;YL[dL]=YL[dL](YL[dL+0X00001],YL[dL+0x2]);do NL=dL;end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;do if not YL[1]then CL=PL[4];end;end;else(YL)[PL[0X5]]={F({},0X00001,PL[4])};end;else if not(wL>=0Xf)then if not(YL[PL[0X00004]]<=YL[PL[7]])then else CL=PL[0X00005];end;else if wL~=16 then local AL=PL[4];local BL=(AL[0X2]);local dL=(nil);local DL=#BL;if not(DL>0)then else dL={};for bC=1,DL do local uC=(BL[bC]);if uC[1]~=0 then(dL)[bC-0X001]=RL[uC[0X2]];else(dL)[bC-1]={YL,uC[0X2]};end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else repeat local AL,dL,BL=mL,YL,(PL[0X0005]);local DL=({});do for bC,uC in U,AL do for EC,WC in U,uC do if WC[0X1]==dL and WC[2]>=BL then local eC=WC[2];if not(not DL[eC])then else DL[eC]={dL[eC]};end;(WC)[0X01]=DL[eC];do WC[2]=1;end;end;end;end;end;until true;end;end;end;end;else do if not(wL<0XA)then if wL~=0xB then do(YL)[PL[0X5]]=kL[PL[4]];end;else YL[PL[0X05]]=KL[PL[0X0001]];end;else if wL==0X00009 then repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0 then local WC=EC[0X2];if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;EC[0X1]=BL[WC];EC[2]=1;end;end;end;until true;return;else do(YL)[PL[5]]=PL[0X1];end;end;end;end;end;end;end;end;end);if nL then if TL then if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;else if z(TL)=='\115t\114\in\103'then do if not(V(TL,'a\116\116e\109\pt\032t\o\032y\105\e\l\100\ a\c\114\os\s\ \109e\116am\e\116\h\111d\/\C\%\045\cal\108\ \098\111\117\110\100\097r\121'))then else return q();end;end;if V(TL,"\^.\-\058\%\d\043:\ ")then G("\Lura\112\104\ S\099\114\105p\116\058"..(_L[CL-1]or"\(\in\116\e\114\110a\l\)")..'\:\ '..l(TL),0x000);else G(TL,0);end;else G(TL,0X0);end;end;end;else aL=function(...)local CL,YL=0X1,({});local OL=Q();local NL,kL=0X000,{[0X1]=YL,[2]=qL};local LL,hL=on(...);do LL=LL-1;end;local KL=(OL==_ and sL or OL);do for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;do if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+0X1;if wL>=0X8 then if wL>=12 then do if not(wL<0xE)then do if wL~=0X0F then else YL[1]=KL[PL[1]];CL=CL+1;CL=CL+1;CL=CL+0X1;do YL[0x0002]={};end;do PL=FL[CL];end;do CL=CL+1;end;(YL[1])[PL[0X001]]=YL[0x2];CL=CL+0X001;repeat local AL,dL=mL,YL;local BL=({});do for DL,bC in U,AL do do for uC,EC in U,bC do if EC[0x1]==dL and EC[0x2]>=0X0 then local WC=EC[2];do if not BL[WC]then(BL)[WC]={dL[WC]};end;end;EC[0X1]=BL[WC];EC[0X02]=1;end;end;end;end;end;until true;return;end;end;else if wL==0XD then(YL)[PL[0X5]]={F({},0X0001,PL[4])};else(KL)[PL[1]]=YL[PL[0X00005]];end;end;end;else do if wL>=0XA then do if wL==0X0000b then do(YL)[PL[0X00005]]=PL[1];end;else YL[PL[0X05]]=YL[PL[0X0004]]>YL[PL[7]];end;end;else if wL==0x0009 then local AL=PL[0X5];local DL=(YL[AL+0x2]);local dL,BL=YL[AL],(YL[AL+0x001]);YL[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);CL=PL[4];else local dL=(nil);local AL=PL[4];local BL=AL[2];local DL=(#BL);do if not(DL>0)then else dL={};for bC=0x1,DL do local uC=(BL[bC]);if uC[0X0001]==0X00 then dL[bC-0x1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;else if not(wL>=4)then do if wL>=0x2 then if wL==3 then do(YL)[0x0001]=KL[PL[1]];end;do CL=CL+1;end;(YL)[0X02]=YL[0];do PL=FL[CL];end;CL=CL+1;YL[1][PL[1]]=YL[0X002];PL=FL[CL];CL=CL+0x1;YL[0x001]=KL[PL[0X01]];do CL=CL+1;end;CL=CL+1;CL=CL+1;NL=0X1;(YL[NL])();NL=NL-0X1;CL=CL+0X1;CL=CL+0X1;CL=CL+1;repeat local BL={};local AL,dL=mL,(YL);for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0x00)then else local WC=EC[2];do if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;end;EC[1]=BL[WC];(EC)[2]=0x0001;end;end;end;end;until true;do return;end;else local AL=RL[0x00];do(YL)[0X00001]=AL[0X1][AL[0X0002]];end;CL=CL+0X01;local dL=(1);(YL)[0X00002]=YL[0X0];CL=CL+0x01;do YL[dL]=YL[dL](YL[dL+0X1]);end;do NL=dL;end;CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;if YL[1]~=PL[3]then CL=PL[5];end;end;else if wL~=1 then CL=PL[0X4];else(YL)[PL[0x5]]=YL[PL[4]]<YL[PL[0X7]];end;end;end;else if not(wL<0X6)then if wL==0X7 then if not(YL[PL[0X4]]<YL[PL[7]])then CL=PL[5];end;else local AL,dL=PL[0X5],(PL[0X4]);NL=AL+dL-0X01;repeat local BL,DL,bC=mL,YL,{};do for uC,EC in U,BL do do for WC,eC in U,EC do if not(eC[0X1]==DL and eC[2]>=0X0)then else local oC=eC[0X00002];do if not bC[oC]then bC[oC]={DL[oC]};end;end;do eC[0X1]=bC[oC];end;do(eC)[2]=0X1;end;end;end;end;end;end;until true;return true,AL,dL;end;else if wL~=0X05 then(YL)[PL[0X05]]=KL[PL[1]];else do for AL=PL[5],PL[0X004]do YL[AL]=nil;end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=='str\105n\103'then do if V(TL,"a\116\116\e\m\pt\ \116\111\032\121i\el\100\ \097\c\114\111s\s\ \metam\101t\104\111\d\047C\%\-\099\097\108\l \098o\117n\da\114\y")then return q();end;end;if V(TL,'\094.\-\058\%d\043\: ')then G('\Lu\114\097\ph\ \S\cr\i\p\116:'..(_L[CL-1]or"\040\int\erna\l)")..'\:\ '..l(TL),0);else(G)(TL,0);end;else G(TL,0X0);end;end;else if TL then if rL==0X1 then do return YL[ML]();end;else do return YL[ML](F(YL,ML+0X1,NL));end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;end;end;end;else if not(HL<106)then if HL<0x6C then if HL~=0X6b then aL=function(...)local CL,YL=0x1,({});local OL=Q();local KL=(OL==_ and sL or OL);local LL,hL=on(...);local NL,kL=0,{[2]=qL,[0X1]=YL};LL=LL-0x1;for PL=0X0,LL do do if XL>PL then do YL[PL]=hL[PL+0X0001];end;else break;end;end;end;do if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0X00001,LL+0X01)};end;end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=PL[2];CL=CL+1;if wL<12 then if wL<6 then if not(wL>=0x3)then if wL>=1 then do if wL~=0X2 then if YL[PL[5]]then do CL=PL[0X4];end;end;else local AL=(PL[4]);local BL,dL=AL[0x2],nil;local DL=(#BL);if DL>0x00000 then dL={};for bC=0x1,DL do local uC=(BL[bC]);if uC[1]~=0x0000 then dL[bC-0x1]=RL[uC[0X00002]];else do(dL)[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;YL[PL[0x0005]]=cn(dL,KL,AL);end;end;else local AL=RL[0X02];(YL)[7]=AL[0X0001][AL[2]];PL=FL[CL];do CL=CL+0X1;end;(YL)[8]=PL[0X1];PL=FL[CL];local dL=(0X9);CL=CL+1;local BL=YL[0x2];(YL)[dL+0x1]=BL;do YL[dL]=BL[PL[0X03]];end;local DL=(0x3);PL=FL[CL];do CL=CL+1;end;YL[0X0b]=PL[0x01];CL=CL+0X1;do dL=0X9;end;local bC=0;if DL~=0 then do NL=dL+DL-0X001;end;end;local uC,EC=nil,nil;if DL==1 then uC,EC=on(YL[dL]());else uC,EC=on(YL[dL](F(YL,dL+0x01,NL)));end;if bC~=0X00001 then do if bC==0X0 then uC=uC+dL-1;do NL=uC;end;else uC=dL+bC-2;NL=uC+0X1;end;end;local WC=(0x00);for eC=dL,uC do WC=WC+1;YL[eC]=EC[WC];end;else NL=dL-0X1;end;CL=CL+0X01;dL=0x7;YL[dL]=YL[dL](F(YL,dL+0X1,NL));NL=dL;do CL=CL+0X1;end;CL=CL+0X1;PL=FL[CL];CL=CL+0x1;CL=PL[0X0004];end;else if wL<4 then local AL=(RL[0]);(YL)[6]=AL[1][AL[2]];do CL=CL+1;end;CL=CL+1;CL=CL+0x1;YL[0X0006]=YL[0X6][YL[0X0]];do PL=FL[CL];end;CL=CL+1;if not(YL[0X00006])then else CL=PL[0X00004];end;else if wL~=5 then CL=PL[4];else(YL)[PL[5]]={F({},1,PL[4])};end;end;end;else if wL>=0X009 then if wL<0xA then local AL=RL[0X3];do(YL)[0X9]=AL[0X0001][AL[2]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;do if YL[8]==YL[0X00009]then CL=PL[0x5];end;end;else if wL==11 then do for AL=PL[5],PL[0X0004]do(YL)[AL]=nil;end;end;else(YL)[PL[5]]=KL[PL[1]];end;end;else if not(wL<7)then if wL==8 then YL[8]=YL[0X7];PL=FL[CL];CL=CL+0x0001;YL[0X9]=PL[1];local dL,AL=0X0A,(RL[0x00002]);CL=CL+0X1;local BL=8;YL[10]=AL[1][AL[2]];do CL=CL+1;end;do YL[0x000B]=YL[6][YL[5]];end;do CL=CL+1;end;(YL)[0XC]=YL[4];CL=CL+1;YL[dL]=YL[dL](YL[dL+0x1],YL[dL+2]);NL=dL;CL=CL+1;local DL=(YL[BL]);for bC=BL+1,10 do DL=DL..YL[bC];end;do YL[8]=DL;end;PL=FL[CL];do CL=CL+0x0001;end;do CL=PL[0X4];end;else if YL[PL[0x4]]==YL[PL[0X00007]]then else CL=PL[0X00005];end;end;else local AL=(RL[0X2]);(YL)[0X7]=AL[0X1][AL[0X2]];PL=FL[CL];CL=CL+0X01;YL[0X8]=PL[0X001];CL=CL+1;do YL[9]=YL[2];end;local dL=7;CL=CL+1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+0X2]);do NL=dL;end;PL=FL[CL];CL=CL+0x0001;do CL=PL[0X04];end;end;end;end;else if not(wL>=18)then if not(wL>=0XF)then if not(wL<0X0000d)then if wL~=0X0e then if not YL[PL[5]]then CL=PL[4];end;else YL[PL[5]]=K(YL[PL[4]],YL[PL[7]]);end;else repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0X2]>=0X0)then else local WC=(EC[0X2]);do if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];EC[0X0002]=0x01;end;end;end;end;until true;return;end;else do if not(wL>=0X10)then(YL)[PL[0x5]]=YL[PL[0x0004]]==PL[3];else if wL==17 then do(YL)[PL[5]]=YL[PL[0X4]]<=YL[PL[0X7]];end;else local dL=7;local AL=RL[1];do(YL)[0X7]=AL[0X0001][AL[2]];end;CL=CL+0X1;(YL)[8]=YL[0X002];CL=CL+1;do(YL)[dL]=YL[dL](YL[dL+0X1]);end;NL=dL;PL=FL[CL];do CL=CL+0X1;end;if not(not YL[0X0007])then else CL=PL[4];end;end;end;end;end;else if wL<0X015 then if wL<19 then(YL)[0x0009]=KL[PL[1]];do PL=FL[CL];end;local AL=9;CL=CL+0x01;local dL=YL[9];local BL=(RL[2]);(YL)[AL+0X1]=dL;(YL)[AL]=dL[PL[3]];CL=CL+1;(YL)[11]=BL[0X0001][BL[0X0002]];do CL=CL+1;end;BL=RL[0X004];do YL[12]=BL[1][BL[0X2]];end;CL=CL+1;CL=CL+0X1;do CL=CL+1;end;BL=RL[5];YL[0XD]=BL[0X1][BL[2]];CL=CL+0X1;YL[0XE]=YL[0x003];CL=CL+0X1;BL=RL[0X006];do(YL)[15]=BL[0x00001][BL[0X0002]];end;CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;(YL)[16]=YL[6][PL[3]];do CL=CL+1;end;YL[0X000011]=YL[0x008];local DL=(0X0007);do CL=CL+0X1;end;AL=11;local bC=(0x0);if DL==0x0 then else NL=AL+DL-0x00001;end;local uC,EC=nil,(nil);if DL~=1 then uC,EC=on(YL[AL](F(YL,AL+0X1,NL)));else uC,EC=on(YL[AL]());end;do if bC~=1 then if bC~=0 then uC=AL+bC-0X002;NL=uC+0x1;else do uC=uC+AL-1;end;NL=uC;end;local WC=0X0;for eC=AL,uC do WC=WC+0X1;(YL)[eC]=EC[WC];end;else NL=AL-1;end;end;do CL=CL+1;end;AL=0X00009;(YL[AL])(F(YL,AL+1,NL));NL=AL-1;PL=FL[CL];CL=CL+1;CL=PL[0X0004];else if wL==20 then local AL=(RL[2]);YL[0X0008]=AL[0X0001][AL[2]];do CL=CL+1;end;CL=CL+1;CL=CL+0X0001;do YL[0X9]=YL[6][YL[5]];end;do CL=CL+1;end;(YL)[0Xa]=YL[4];local dL=(8);CL=CL+1;do(YL)[dL]=YL[dL](YL[dL+0X1],YL[dL+0X0002]);end;do NL=dL;end;CL=CL+1;CL=CL+0X0001;do PL=FL[CL];end;do CL=CL+1;end;do CL=PL[4];end;else(YL)[PL[0x5]]=YL[PL[0X4]];end;end;else if wL<0X17 then if wL==22 then do(YL)[PL[0x5]]=PL[0X001];end;else YL[PL[5]]=-YL[PL[4]];end;else if wL==24 then(YL)[PL[5]]=YL[PL[4]]^YL[PL[7]];else end;end;end;end;end;end;end;end);do if not(nL)then do if z(TL)=='st\114\in\g'then if V(TL,'\097\116t\e\m\pt\ to\ \121i\101l\d\032\097c\114\o\s\115\032me\116\097m\101\116\104\o\100\/\C%\-\c\097l\108 \098\o\117n\100\097\114\y')then return q();end;if not(V(TL,'\^\046\-\058\%\d+\:\032'))then G(TL,0);else(G)("\076u\114a\ph\ S\099ri\112\116\:"..(_L[CL-1]or"\040\i\110\116\101\114\110al\)")..":\032"..l(TL),0X000);end;else(G)(TL,0X000);end;end;else if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;else do aL=function(...)local CL=(0x0001);local YL={};local OL=(Q());local KL=((OL==_ and sL or OL));local LL,hL=on(...);local kL={[2]=qL,[0X1]=YL};LL=LL-0X00001;for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0X1];end;end;local NL=(0);do if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X00001 or 0x0,F(hL,XL+0X1,LL+1)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X02];CL=CL+1;if wL>=0X9 then do if wL>=0Xe then do if not(wL<0X000010)then do if not(wL<17)then if wL==18 then YL[0X0]=KL[PL[1]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;YL[0X0]=YL[0][PL[0X3]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;do if not(not YL[0])then else do CL=PL[0X4];end;end;end;else do if not(not(YL[PL[4]]<=YL[PL[7]]))then else CL=PL[5];end;end;end;else YL[PL[5]]=KL[PL[1]];end;end;else if wL==0xf then do CL=PL[0X00004];end;else(YL)[PL[5]]=-YL[PL[0x004]];end;end;end;else if not(wL<0Xb)then if wL>=0XC then do if wL==13 then do YL[PL[5]]={F({},0X1,PL[4])};end;else(kL)[PL[0x4]]=YL[PL[5]];end;end;else repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0)then else local WC=(EC[0X0002]);if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[0x00001]=BL[WC];(EC)[0X0002]=1;end;end;end;until true;do return;end;end;else if wL~=0xa then local AL=RL[0X0];YL[0]=AL[1][AL[0X2]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[0x0]=YL[0X00][PL[3]];CL=CL+1;do CL=CL+0x0001;end;PL=FL[CL];local dL=0X0;CL=CL+1;YL[0]=YL[0X0][PL[3]];PL=FL[CL];CL=CL+1;local BL=(YL[0]);(YL)[dL+1]=BL;YL[dL]=BL[PL[3]];PL=FL[CL];CL=CL+0X1;YL[0X2]=PL[0X1];CL=CL+0X1;dL=0;(YL)[dL]=YL[dL](YL[dL+0x0001],YL[dL+0x00002]);NL=dL;CL=CL+1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X00001;end;do if YL[0X0]then do CL=PL[4];end;end;end;else do YL[PL[5]]=kL[PL[4]];end;end;end;end;end;else if not(wL>=0X04)then if not(wL<0X2)then if wL==0X03 then do for AL=PL[5],PL[4]do YL[AL]=nil;end;end;else local AL=YL[PL[4]]/YL[PL[7]];YL[PL[0X00005]]=AL-AL%1;end;else do if wL==1 then(YL)[0X0]=KL[PL[0X1]];CL=CL+1;CL=CL+0x0001;PL=FL[CL];local AL=(0);CL=CL+1;do YL[1]=PL[0X1];end;CL=CL+1;do YL[AL]=YL[AL](YL[AL+1]);end;do NL=AL;end;PL=FL[CL];CL=CL+1;if not(PL[0x1]<=YL[0])then CL=PL[0X00005];end;else(YL)[PL[0X5]]=PL[0X00001];end;end;end;else if wL>=6 then if wL>=0X07 then if wL~=0x00008 then local AL=(RL[0X001]);YL[0x0]=AL[1][AL[2]];local dL=(0X0);CL=CL+0x1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X1;end;do(YL)[0X1]=PL[0X0001];end;PL=FL[CL];CL=CL+0X1;do YL[2]=PL[1];end;CL=CL+1;YL[dL](YL[dL+0X1],YL[dL+0X2]);do NL=dL-0X01;end;do PL=FL[CL];end;CL=CL+1;(YL)[0X00]=KL[PL[0X1]];CL=CL+1;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;(YL)[1]=PL[0X0001];do CL=CL+1;end;dL=0;(YL[dL])(YL[dL+0X001]);do NL=dL-0X1;end;PL=FL[CL];CL=CL+1;CL=PL[4];else local AL=(PL[4]);local BL=(AL[2]);local DL=#BL;local dL=nil;do if not(DL>0x0)then else dL={};do for bC=0X1,DL do local uC=BL[bC];do if uC[0X1]~=0 then(dL)[bC-0X01]=RL[uC[0X00002]];else(dL)[bC-0x0001]={YL,uC[0x2]};end;end;end;end;x(mL,dL);end;end;(YL)[PL[0x5]]=cn(dL,KL,AL);end;else end;else if wL~=0X00005 then local AL,dL=PL[0X005],YL[PL[4]];(YL)[AL+1]=dL;YL[AL]=dL[PL[3]];else do(YL)[PL[5]]=M(YL[PL[4]],YL[PL[0X7]]);end;end;end;end;end;end;end);if nL then do if TL then do if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)=='\115\116\114\in\g'then if V(TL,'a\116\116\e\m\pt\032\116\111\ \yi\101ld\ \097\c\114\o\s\s\ \109\e\116a\109\e\116\ho\100/C\%\-ca\108\108 \098ou\110d\097r\y')then return q();end;if not(V(TL,"\^\.\045\058\%\d\+:\032"))then(G)(TL,0);else(G)('\076urap\h\ \S\c\114ipt\058'..(_L[CL-1]or"\040\105\110\116\e\114n\097l)")..':\ '..l(TL),0X00);end;else G(TL,0X00);end;end;end;end;end;else if HL~=0x6D then aL=function(...)local CL,YL=0x1,({});local NL=0X0;local kL=({[0X1]=YL,[2]=qL});local OL=Q();local LL,hL=on(...);do LL=LL-0X1;end;for PL=0,LL do if not(XL>PL)then do break;end;else(YL)[PL]=hL[PL+0X0001];end;end;local KL=(OL==_ and sL or OL);if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0X0001)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+0X001;if not(wL<0X7)then if not(wL<0XB)then do if wL>=13 then if wL==14 then do CL=PL[0X4];end;else local AL=YL[PL[4]]/YL[PL[7]];(YL)[PL[0x0005]]=AL-AL%1;end;else if wL==0X000C then else local AL,dL=PL[5],((PL[0X7]-0X01)*50);local BL=(YL[AL]);do for DL=0X1,PL[4]do BL[dL+DL]=YL[AL+DL];end;end;end;end;end;else if wL<9 then if wL==0X008 then local AL=PL[4];local BL=AL[2];local dL=(nil);local DL=#BL;if DL>0x0000 then dL={};do for bC=0X001,DL do local uC=BL[bC];do if uC[1]~=0X0 then do(dL)[bC-0X1]=RL[uC[0X2]];end;else dL[bC-0X1]={YL,uC[0X2]};end;end;end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else(YL)[PL[5]]={F({},0X1,PL[0X4])};end;else do if wL~=0X00A then YL[PL[0X005]]=KL[PL[1]];else do YL[1]=KL[PL[0x01]];end;CL=CL+0X1;local AL=RL[0X0];do CL=CL+1;end;local BL=(nil);CL=CL+1;do YL[2]=YL[0];end;PL=FL[CL];do CL=CL+0x001;end;YL[1][PL[1]]=YL[2];PL=FL[CL];CL=CL+0X01;(YL)[1]=KL[PL[0X00001]];CL=CL+0x1;CL=CL+1;CL=CL+0x00001;NL=1;(YL[NL])();do NL=NL-1;end;CL=CL+0X1;do CL=CL+1;end;do CL=CL+0X0001;end;(YL)[0X00001]=AL[0X01][AL[0X2]];PL=FL[CL];CL=CL+1;local dL=(PL[0X4]);local DL=(dL[0X2]);local uC=(1);local bC=(#DL);if not(bC>0X0)then else do BL={};end;for EC=0X1,bC do local WC=DL[EC];if WC[0x1]==0x0 then do(BL)[EC-1]={YL,WC[2]};end;else do BL[EC-0X00001]=RL[WC[2]];end;end;end;x(mL,BL);end;do(YL)[2]=cn(BL,KL,dL);end;CL=CL+1;YL[uC](YL[uC+1]);do NL=uC-1;end;CL=CL+0X1;CL=CL+0X1;CL=CL+0x1;repeat local eC=({});local EC,WC=mL,(YL);do for oC,jC in U,EC do for zC,lC in U,jC do do if lC[0X1]==WC and lC[0X00002]>=0 then local GC=(lC[2]);do if not eC[GC]then eC[GC]={WC[GC]};end;end;(lC)[0x1]=eC[GC];lC[0X0002]=1;end;end;end;end;end;until true;return;end;end;end;end;else if wL>=0x003 then if not(wL>=0X5)then if wL==4 then local BL=PL[0x0007];local AL=PL[5];local dL=PL[0X004];if dL~=0x0000 then NL=AL+dL-1;end;local DL,bC=nil,nil;if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;if BL~=0X001 then if BL~=0X0 then DL=AL+BL-2;NL=DL+1;else DL=DL+AL-0x1;do NL=DL;end;end;local uC=0;for EC=AL,DL do uC=uC+1;do(YL)[EC]=bC[uC];end;end;else do NL=AL-1;end;end;else if not(YL[PL[4]]<YL[PL[7]])then else CL=PL[0X5];end;end;else if wL==6 then for AL=PL[5],PL[4]do YL[AL]=nil;end;else(YL)[PL[0x5]]=PL[1];end;end;else if not(wL<1)then do if wL==0x2 then local AL=(PL[5]);do for dL=AL,AL+(PL[4]-1)do(YL)[dL]=hL[XL+(dL-AL)+0x001];end;end;else(kL)[PL[4]]=YL[PL[0x00005]];end;end;else KL[PL[0x1]]=YL[PL[5]];end;end;end;end;end);do if nL then do if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)~="st\114\i\110\103"then(G)(TL,0x00000);else do if not(V(TL,'att\empt \116\o\ \121\105\e\l\d\032\097\099\114\o\ss\032\m\101t\097\me\116\h\o\d\/C%\-\ca\108\l\032b\o\117n\d\097r\y'))then else return q();end;end;if V(TL,"\^\046\-\:\%\d\+\058\ ")then(G)("\076\117r\097\p\h \S\099\114\105\p\116\:"..(_L[CL-0X1]or'(\i\110t\erna\l)')..': '..l(TL),0X0);else(G)(TL,0x0);end;end;end;end;end;else do aL=function(...)local CL,YL=1,({});local kL=({[2]=qL,[0X1]=YL});local OL=Q();local KL=(OL==_ and sL or OL);local LL,hL=on(...);LL=LL-0X01;do for PL=0x0,LL do do if XL>PL then(YL)[PL]=hL[PL+0X01];else break;end;end;end;end;local NL=(0X0);do if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0x1 or 0X0,F(hL,XL+0x1,LL+1)};end;end;end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0x2];CL=CL+1;if wL>=8 then if not(wL<12)then if wL<0XE then if wL==0x0D then YL[PL[5]]={F({},0x00001,PL[0X4])};else local AL=(PL[4]);local BL=(AL[0X0002]);local DL,dL=#BL,nil;if not(DL>0X0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[1]~=0X0 then dL[bC-1]=RL[uC[2]];else dL[bC-0X1]={YL,uC[2]};end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;else if wL<15 then do CL=PL[0x4];end;else do if wL==0X10 then local AL=PL[4];local dL=YL[AL];for BL=AL+0x1,PL[7]do dL=dL..YL[BL];end;do(YL)[PL[0X5]]=dL;end;else do YL[PL[5]]=YL[PL[0X4]]+YL[PL[0X07]];end;end;end;end;end;else do if not(wL>=10)then if wL~=0X9 then for AL=PL[0X00005],PL[4]do do(YL)[AL]=nil;end;end;else local AL,dL=PL[0X005],(YL[PL[0X0004]]);(YL)[AL+1]=dL;do(YL)[AL]=dL[PL[0x00003]];end;end;else if wL==11 then local AL=RL[0X0];YL[1]=AL[0X1][AL[2]];CL=CL+0X1;do CL=CL+0X1;end;CL=CL+1;local dL=(1);do(YL)[2]=YL[0x0000];end;CL=CL+1;(YL[dL])(YL[dL+1]);NL=dL-1;CL=CL+0X1;CL=CL+0x00001;do PL=FL[CL];end;do CL=CL+1;end;(YL)[0X1]=KL[PL[1]];CL=CL+1;do CL=CL+0x1;end;CL=CL+1;do YL[0X00002]=YL[0];end;CL=CL+1;dL=0X1;YL[dL]=YL[dL](YL[dL+1]);NL=dL;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;if YL[0x001]then CL=PL[4];end;else YL[PL[5]]=KL[PL[0x1]];end;end;end;end;else do if wL>=0X04 then if not(wL<0X6)then if wL~=7 then(YL)[PL[5]]=PL[0x0001];else YL[1]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X00001;PL=FL[CL];CL=CL+0X001;YL[1]=YL[0X1][PL[3]];local AL=(0x1);do CL=CL+0X1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0x0001;local dL=(YL[1]);(YL)[AL+1]=dL;do YL[AL]=dL[PL[0X3]];end;local BL=RL[0X1];PL=FL[CL];CL=CL+0X0001;(YL)[3]=KL[PL[1]];CL=CL+0x1;CL=CL+0x00001;PL=FL[CL];do CL=CL+0X00001;end;YL[3]=YL[0X3][PL[3]];CL=CL+0x1;CL=CL+0X01;CL=CL+0X0001;AL=0X1;YL[AL]=YL[AL](YL[AL+0x0001],YL[AL+0x2]);NL=AL;CL=CL+0X0001;(YL)[0X002]=BL[0X1][BL[0X00002]];do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+0X01;AL=2;dL=YL[2];YL[AL+0X001]=dL;YL[AL]=dL[PL[3]];PL=FL[CL];CL=CL+0X0001;do YL[4]=PL[0X1];end;CL=CL+1;local DL=(3);do AL=2;end;local bC=0x00000;if DL==0X0 then else NL=AL+DL-1;end;local uC,EC=nil,nil;if DL==0x1 then uC,EC=on(YL[AL]());else do uC,EC=on(YL[AL](F(YL,AL+0X1,NL)));end;end;if bC~=0X00001 then do if bC==0X0 then uC=uC+AL-1;NL=uC;else uC=AL+bC-2;NL=uC+1;end;end;local WC=(0);for eC=AL,uC do WC=WC+0X0001;YL[eC]=EC[WC];end;else NL=AL-0X1;end;CL=CL+1;do repeat local WC,eC=mL,YL;local oC={};for jC,zC in U,WC do for lC,GC in U,zC do do if GC[0X1]==eC and GC[2]>=0 then local vC=(GC[0X2]);if not oC[vC]then oC[vC]={eC[vC]};end;do(GC)[0X01]=oC[vC];end;do(GC)[2]=1;end;end;end;end;end;until true;end;return false,0X1,NL;end;else if wL==0X00005 then kL[PL[4]]=YL[PL[5]];else end;end;else if not(wL<0x2)then do if wL~=0X3 then do repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[0X002]>=0x0)then else local eC=WC[2];if not DL[eC]then(DL)[eC]={BL[eC]};end;do(WC)[0X0001]=DL[eC];end;(WC)[2]=1;end;end;end;until true;end;local AL=PL[5];return false,AL,AL+PL[0x4]-0X002;else do if YL[PL[0x4]]~=YL[PL[7]]then do CL=PL[0X5];end;end;end;end;end;else if wL==0X1 then(YL)[0X1]=KL[PL[0X1]];CL=CL+0x0001;do YL[0X002]=YL[0X0];end;PL=FL[CL];CL=CL+0X1;local BL=(0x3);(YL[0X1])[PL[0X1]]=YL[2];PL=FL[CL];CL=CL+1;YL[0X1]=KL[PL[1]];do CL=CL+0X1;end;CL=CL+0x1;PL=FL[CL];CL=CL+0X1;YL[1]=YL[1][PL[3]];CL=CL+0X1;do CL=CL+0x1;end;local AL=1;do PL=FL[CL];end;CL=CL+1;local dL=(YL[0X1]);YL[AL+0x1]=dL;(YL)[AL]=dL[PL[3]];PL=FL[CL];CL=CL+1;YL[0X3]=KL[PL[0x00001]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;YL[0X04]=KL[PL[0X00001]];PL=FL[CL];CL=CL+1;do YL[0X4]=YL[0X4][PL[0X3]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0x04]=YL[4][PL[0X3]];CL=CL+1;YL[4]=YL[0X4][YL[0]];CL=CL+1;CL=CL+0x1;do PL=FL[CL];end;CL=CL+0X1;(YL)[5]=PL[1];CL=CL+1;AL=3;local DL=(0);do if BL==0 then else do NL=AL+BL-0X0001;end;end;end;local bC,uC=nil,nil;if BL~=1 then bC,uC=on(YL[AL](F(YL,AL+0X1,NL)));else do bC,uC=on(YL[AL]());end;end;if DL==0x1 then NL=AL-0x01;else if DL~=0 then bC=AL+DL-0X0002;do NL=bC+0X1;end;else do bC=bC+AL-1;end;NL=bC;end;local EC=0;for WC=AL,bC do do EC=EC+1;end;YL[WC]=uC[EC];end;end;CL=CL+0x0001;do AL=1;end;YL[AL](F(YL,AL+1,NL));NL=AL-0X1;CL=CL+0X1;CL=CL+0x1;PL=FL[CL];CL=CL+0x1;(YL)[1]=KL[PL[0X1]];CL=CL+0X1;CL=CL+1;CL=CL+1;NL=0X1;YL[NL]();NL=NL-0X1;CL=CL+1;do CL=CL+1;end;do CL=CL+1;end;do repeat local EC,WC,eC=mL,YL,({});for oC,jC in U,EC do for zC,lC in U,jC do if lC[1]==WC and lC[0X2]>=0 then local GC=lC[2];if not(not eC[GC])then else do eC[GC]={WC[GC]};end;end;do lC[1]=eC[GC];end;(lC)[0x02]=0X1;end;end;end;until true;end;return;else local AL=YL[PL[0X00004]]/YL[PL[0X7]];YL[PL[0X05]]=AL-AL%1;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=='s\116\114\105n\g'then if not(V(TL,'\097\116\116\e\m\pt\ \116o\032\121\i\e\108\d\ \097\099ro\s\s\032\m\eta\m\e\116\ho\100\/\C\%\-\ca\l\108\032\098\ou\110\d\097ry'))then else return q();end;if not(V(TL,'^\.\045\:\037\d\+\058 '))then(G)(TL,0);else G('\076u\114\097\p\h\ \083c\114\105p\116:'..(_L[CL-0X0001]or'\040\int\erna\108\)')..'\058\032'..l(TL),0x00000);end;else(G)(TL,0x00);end;end;else if TL then do if rL~=1 then do return YL[ML](F(YL,ML+0x1,NL));end;else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;end;else if HL>=104 then if HL==0X69 then do aL=function(...)local YL=({});local CL=(1);local OL=Q();local KL,kL=(OL==_ and sL or OL),{[0X1]=YL,[2]=qL};local LL,hL=on(...);do LL=LL-0X1;end;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+0X0001];else break;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+0X001)};end;local NL=(0);do if KL~=OL then(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0X2]);do CL=CL+0X1;end;if not(wL>=8)then if wL>=0X4 then do if wL<6 then if wL==5 then local AL=(PL[0X5]);local dL=g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);dL(YL[AL],YL[AL+0X00001],YL[AL+0X002]);NL=AL;YL[AL]=dL;CL=PL[4];else end;else if wL==0X7 then local AL=YL[PL[0X4]]/YL[PL[7]];(YL)[PL[0X5]]=AL-AL%0X1;else do(YL)[PL[5]]=true;end;end;end;end;else if not(wL<0x2)then if wL~=0X3 then(YL)[PL[5]]=YL[PL[0x04]]-YL[PL[0X07]];else local AL=(PL[0X4]);local dL=nil;local BL=(AL[2]);local DL=(#BL);if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[0X1]~=0 then do(dL)[bC-1]=RL[uC[0X2]];end;else(dL)[bC-1]={YL,uC[0X2]};end;end;x(mL,dL);end;YL[PL[0X0005]]=cn(dL,KL,AL);end;else do if wL==1 then do YL[PL[5]]=h(YL[PL[4]],YL[PL[7]]);end;else local AL=PL[5];local dL,BL=YL[AL]();do if dL then CL=PL[4];YL[AL+3]=BL;end;end;end;end;end;end;else do if not(wL<12)then if not(wL<0x00E)then if wL~=15 then YL[1]=KL[PL[1]];do CL=CL+0X1;end;(YL)[2]=YL[0];PL=FL[CL];CL=CL+0X00001;(YL[0x1])[PL[1]]=YL[2];PL=FL[CL];do CL=CL+1;end;YL[1]=KL[PL[1]];CL=CL+0X1;NL=0X0001;YL[NL]();NL=NL-0X01;do CL=CL+1;end;CL=CL+0X1;do CL=CL+0X1;end;repeat local AL,dL=mL,(YL);local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0X0)then else local WC=EC[0X2];if not BL[WC]then BL[WC]={dL[WC]};end;do EC[1]=BL[WC];end;(EC)[0x00002]=1;end;end;end;end;until true;return;else do YL[PL[5]]=KL[PL[0X1]];end;end;else if wL~=0XD then do CL=PL[4];end;else(YL)[PL[0x05]]=PL[0x1];end;end;else do if not(wL<0X0A)then if wL==0XB then(YL)[PL[5]]={F({},0X1,PL[4])};else do YL[PL[0x5]]=T(YL[PL[0x4]]);end;end;else if wL~=9 then if YL[PL[0X4]]==YL[PL[0X00007]]then else CL=PL[0x5];end;else for AL=PL[5],PL[0X4]do(YL)[AL]=nil;end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='\115t\114\105\110\g'then if V(TL,'att\em\p\116\032\116o\ \121\105e\l\100\032a\c\114\os\s\ \m\e\116\097\m\et\h\o\d/\067\%-\ca\108l\ \098\o\117ndar\121')then return q();end;do if not(V(TL,'\^\.-\058\%\100\+\:\ '))then(G)(TL,0);else(G)("\Lu\114\097\112\104 \S\c\114ip\116\:"..(_L[CL-1]or'(\inter\110\097l)')..'\:\ '..l(TL),0x0);end;end;else G(TL,0);end;else do if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;end;else aL=function(...)local CL,YL,NL=0x1,{},0X0;local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-0X1;for PL=0x0,LL do if XL>PL then YL[PL]=hL[PL+0X0001];else break;end;end;if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0x00,F(hL,XL+0X001,LL+0X1)};end;do if KL~=OL then(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+0X0001;if not(wL>=6)then if not(wL>=3)then if not(wL>=0X01)then YL[PL[0x5]]=h(YL[PL[4]],YL[PL[0X7]]);else if wL==2 then(YL)[PL[0x05]]=YL[PL[4]]==YL[PL[0X00007]];else if YL[PL[5]]then do CL=PL[0X4];end;end;end;end;else do if not(wL<0X4)then if wL==5 then do(YL)[PL[5]]=K(YL[PL[4]],YL[PL[7]]);end;else YL[PL[0X05]]={F({},0X1,PL[4])};end;else for AL=PL[5],PL[0X4]do do(YL)[AL]=nil;end;end;end;end;end;else do if not(wL<9)then do if not(wL<0Xb)then if wL~=0XC then else do(YL)[PL[0X0005]]=KL[PL[1]];end;end;else if wL==0X0A then local AL=(PL[0X5]);do for dL=AL,AL+(PL[4]-0X1)do YL[dL]=hL[XL+(dL-AL)+0X1];end;end;else YL[0x00001]=KL[PL[0X1]];CL=CL+1;CL=CL+1;do CL=CL+0x1;end;(YL)[0X2]=YL[0X0];PL=FL[CL];CL=CL+0X1;(YL[0x01])[PL[0X1]]=YL[2];local uC=(1);do PL=FL[CL];end;CL=CL+0x1;YL[1]=KL[PL[0X01]];CL=CL+0X1;do CL=CL+1;end;CL=CL+0X00001;NL=1;YL[NL]();do NL=NL-0X1;end;local AL=(RL[0X0000]);CL=CL+0x00001;CL=CL+1;CL=CL+1;do YL[1]=AL[0X1][AL[2]];end;PL=FL[CL];local dL=PL[4];local DL=(dL[2]);CL=CL+1;local BL,bC=nil,#DL;if not(bC>0)then else BL={};for EC=0X1,bC do local WC=DL[EC];if WC[0x00001]~=0X00 then do BL[EC-0X1]=RL[WC[2]];end;else BL[EC-1]={YL,WC[2]};end;end;(x)(mL,BL);end;(YL)[2]=cn(BL,KL,dL);do CL=CL+0X1;end;(YL[uC])(YL[uC+0X1]);do NL=uC-1;end;do CL=CL+1;end;CL=CL+1;CL=CL+1;repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do do for zC,lC in U,jC do do if lC[0X1]==WC and lC[2]>=0X0 then local GC=(lC[0X00002]);if not eC[GC]then eC[GC]={WC[GC]};end;lC[0X1]=eC[GC];(lC)[2]=1;end;end;end;end;end;until true;return;end;end;end;else if wL<7 then CL=PL[0X00004];else if wL==8 then(YL)[PL[0X5]]=PL[1];else local AL=(PL[0X0004]);local BL=AL[2];local dL=(nil);local DL=#BL;if DL>0 then do dL={};end;for bC=0x1,DL do local uC=BL[bC];if uC[0X0001]~=0X0 then do dL[bC-1]=RL[uC[0X002]];end;else(dL)[bC-0X1]={YL,uC[2]};end;end;(x)(mL,dL);end;(YL)[PL[0X0005]]=cn(dL,KL,AL);end;end;end;end;end;end;end);if nL then if TL then do if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~="\s\116\114\105\110g"then(G)(TL,0X0);else if V(TL,'att\101\m\pt\ t\o \121\i\e\l\100\032\097\c\114\o\s\115\032\m\e\116a\me\116\h\od\/\C%\-\099a\108\108 \098oun\100ar\y')then return q();end;if V(TL,"\094\046\-\058\%d\+\:\ ")then G("\Lura\p\104\ Scr\105\112t\058"..(_L[CL-0x00001]or"(int\e\114na\108\041")..'\058\ '..l(TL),0);else G(TL,0x00);end;end;end;end;end;else if HL==0X67 then aL=function(...)local CL=(0x1);local YL=({});local OL=(Q());local NL=(0);local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});LL=LL-1;for PL=0,LL do if XL>PL then do YL[PL]=hL[PL+1];end;else break;end;end;local KL=((OL==_ and sL or OL));if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0X0,F(hL,XL+0X1,LL+0x1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+1;if not(wL>=10)then if not(wL<5)then if not(wL<7)then if not(wL<0X0008)then if wL~=9 then for AL=PL[0x5],PL[4]do YL[AL]=nil;end;else repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0X2]>=0X0)then else local WC=(EC[0X2]);if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[0X1]=BL[WC];(EC)[2]=0X1;end;end;end;until true;return;end;else YL[0X0000]=KL[PL[1]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[0]=YL[0X00][PL[3]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X001;do if not YL[0x0000]then CL=PL[4];end;end;end;else if wL~=6 then do CL=PL[4];end;else local AL=RL[0X0];YL[0]=AL[1][AL[0x2]];do CL=CL+0X00001;end;CL=CL+0x1;do PL=FL[CL];end;do CL=CL+1;end;if not(not YL[0])then else CL=PL[0X004];end;end;end;else if wL<2 then if wL==1 then if YL[PL[0X4]]~=YL[PL[7]]then do CL=PL[5];end;end;else do YL[PL[5]]=PL[1];end;end;else if wL>=0X003 then if wL==4 then YL[0]=KL[PL[1]];do PL=FL[CL];end;CL=CL+0x01;do YL[0x0]=YL[0x00000][PL[0X03]];end;CL=CL+1;CL=CL+0x01;CL=CL+1;do NL=0;end;do YL[NL]=YL[NL]();end;do PL=FL[CL];end;CL=CL+1;do if not(not YL[0X0])then else CL=PL[0X004];end;end;else(YL)[PL[5]]=KL[PL[0X1]];end;else do repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0x00001]==BL and WC[0X2]>=0X0 then local eC=WC[2];if not DL[eC]then DL[eC]={BL[eC]};end;do(WC)[1]=DL[eC];end;do(WC)[2]=0x001;end;end;end;end;end;until true;end;local AL=(PL[0x005]);do return false,AL,AL+PL[4]-2;end;end;end;end;else if not(wL<0X0F)then do if not(wL>=18)then do if wL<0X10 then local AL,dL=PL[0X4],nil;local BL=AL[0X2];local DL=(#BL);do if not(DL>0x00)then else dL={};do for bC=0x1,DL do local uC=(BL[bC]);if uC[1]~=0 then do dL[bC-1]=RL[uC[2]];end;else do dL[bC-1]={YL,uC[0x2]};end;end;end;end;x(mL,dL);end;end;do(YL)[PL[0X5]]=cn(dL,KL,AL);end;else if wL==0x11 then else do if not(YL[PL[4]]<=YL[PL[7]])then else CL=PL[0X5];end;end;end;end;end;else if not(wL>=19)then do YL[0X0000]=KL[PL[0X1]];end;PL=FL[CL];CL=CL+1;YL[1]=PL[1];CL=CL+1;local AL=0X00;do YL[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;CL=CL+1;do CL=CL+0X001;end;PL=FL[CL];CL=CL+1;do if not(not YL[0])then else CL=PL[0X04];end;end;else if wL~=20 then do YL[PL[5]]=T(YL[PL[0x4]]);end;else do(YL)[PL[5]]=YL[PL[4]]==YL[PL[7]];end;end;end;end;end;else if not(wL>=12)then if wL==11 then local AL=(RL[1]);local dL=0X00;YL[0]=AL[0X0001][AL[2]];CL=CL+0X01;CL=CL+0X01;PL=FL[CL];CL=CL+0X1;local BL=(YL[0]);YL[dL+0X1]=BL;(YL)[dL]=BL[PL[3]];PL=FL[CL];CL=CL+0x01;do YL[0x2]=PL[0X00001];end;CL=CL+1;AL=RL[2];YL[3]=AL[0x1][AL[2]];CL=CL+0X1;CL=CL+1;CL=CL+0x01;dL=0;NL=dL+4-0X1;(YL[dL])(F(YL,dL+0X0001,NL));NL=dL-1;do PL=FL[CL];end;do CL=CL+0x0001;end;(YL)[0]=KL[PL[0x1]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;(YL)[0x1]=PL[1];CL=CL+0X01;dL=0;YL[dL](YL[dL+1]);NL=dL-1;PL=FL[CL];CL=CL+0x1;CL=PL[0X4];else YL[PL[0x005]]={F({},1,PL[4])};end;else if not(wL<13)then if wL~=14 then local AL=PL[4];local dL=YL[AL];for BL=AL+0X1,PL[7]do dL=dL..YL[BL];end;YL[PL[5]]=dL;else YL[0X0]=KL[PL[0x1]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];do CL=CL+0X0001;end;do(YL)[0X01]=KL[PL[0X00001]];end;PL=FL[CL];CL=CL+1;do(YL)[0X1]=YL[0X1][PL[3]];end;CL=CL+0X00001;do CL=CL+1;end;local AL=(0);do CL=CL+1;end;(YL)[AL]=YL[AL](YL[AL+1]);do NL=AL;end;CL=CL+0x0001;CL=CL+0X001;do PL=FL[CL];end;CL=CL+1;if not(not YL[0])then else do CL=PL[4];end;end;end;else YL[PL[0X5]]=kL[PL[0X4]];end;end;end;end;end;end;end);do if nL then if TL then do if rL==1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+0X1,NL));end;end;elseif ML then return F(YL,ML,rL);end;else if z(TL)~="\115\116\114\in\g"then(G)(TL,0x0000);else if not(V(TL,"\097t\116\e\m\112\116 \116\o\ \y\i\e\l\100\032a\cro\ss\ \m\eta\m\101th\o\d\/\C\037\-\c\097\ll bo\117\110d\097\114\y"))then else return q();end;if V(TL,"\^.\-\:%\d+: ")then(G)('\076ura\ph S\crip\116:'..(_L[CL-0X1]or'\(\i\110t\er\110a\108\)')..':\ '..l(TL),0);else G(TL,0);end;end;end;end;end;else do aL=function(...)local NL,YL=0X0,({});local OL=Q();local kL={[2]=qL,[0X1]=YL};local LL,hL=on(...);local CL=1;LL=LL-1;for PL=0X0,LL do do if XL>PL then do YL[PL]=hL[PL+1];end;else break;end;end;end;local KL=((OL==_ and sL or OL));if not SL then do hL=nil;end;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0X00,F(hL,XL+1,LL+1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);do CL=CL+0X0001;end;do if not(wL>=12)then if not(wL<0X6)then do if wL>=0X9 then if not(wL>=10)then for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;else if wL~=0x00b then local AL=(RL[7]);YL[0X005]=AL[0X001][AL[0x002]];do CL=CL+0X001;end;do CL=CL+0X1;end;PL=FL[CL];local dL=(0X5);do CL=CL+1;end;YL[6]=PL[0X1];do PL=FL[CL];end;CL=CL+1;YL[0X7]=PL[1];do CL=CL+1;end;do(YL)[0x0008]={};end;PL=FL[CL];CL=CL+0X1;(YL[0X8])[PL[0X001]]=YL[0X2];CL=CL+1;NL=dL+0x00004-1;(YL[dL])(F(YL,dL+1,NL));NL=dL-0X1;PL=FL[CL];CL=CL+1;YL[0x005]=KL[PL[1]];PL=FL[CL];do CL=CL+1;end;YL[0X6]=PL[1];do CL=CL+0X00001;end;dL=0x5;YL[dL](YL[dL+0x1]);NL=dL-1;CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+1;CL=PL[0X04];else local AL=(RL[4]);(YL)[1]=AL[1][AL[0X2]];CL=CL+0X1;do CL=CL+0X001;end;PL=FL[CL];CL=CL+1;if not YL[0X0001]then CL=PL[0X04];end;end;end;else if not(wL>=7)then else do if wL==8 then local AL=RL[3];do YL[0X01]=AL[0X1][AL[0x00002]];end;do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];do CL=CL+0x01;end;if not(YL[1])then else CL=PL[4];end;else(YL)[PL[0x0005]]=YL[PL[0x0004]];end;end;end;end;end;else if not(wL<0x3)then do if not(wL>=0X4)then local AL=RL[0X05];(YL)[5]=AL[0X01][AL[2]];CL=CL+0X1;CL=CL+1;PL=FL[CL];local BL=(YL[5]);CL=CL+1;local dL=(0X5);YL[dL+0x1]=BL;YL[dL]=BL[PL[0X3]];CL=CL+0X1;AL=RL[6];(YL)[0x07]=AL[1][AL[0X00002]];PL=FL[CL];CL=CL+0x1;(YL)[8]=PL[1];CL=CL+1;(YL)[9]=YL[3];CL=CL+1;local DL=4;do YL[0xa]=YL[0x4];end;CL=CL+1;do dL=7;end;local bC=0x000;if DL==0X00 then else NL=dL+DL-1;end;local uC,EC=nil,(nil);if DL~=0x0001 then uC,EC=on(YL[dL](F(YL,dL+0x01,NL)));else uC,EC=on(YL[dL]());end;do if bC==0X00001 then NL=dL-0X1;else if bC==0X000 then uC=uC+dL-0X1;NL=uC;else uC=dL+bC-0X2;NL=uC+0X1;end;local WC=(0X0);for eC=dL,uC do do WC=WC+1;end;(YL)[eC]=EC[WC];end;end;end;CL=CL+0X1;CL=CL+1;CL=CL+1;dL=5;YL[dL](F(YL,dL+0X0001,NL));NL=dL-1;CL=CL+1;CL=CL+1;CL=CL+0x001;AL=RL[0X00003];YL[0X5]=AL[0X1][AL[2]];CL=CL+1;CL=CL+0X00001;do PL=FL[CL];end;CL=CL+0x1;if not YL[0X00005]then do CL=PL[4];end;end;else if wL~=5 then do(YL)[PL[0X5]]=KL[PL[1]];end;else do YL[PL[0X5]]=YL[PL[4]][YL[PL[7]]];end;end;end;end;else if wL>=1 then if wL~=0X2 then YL[PL[5]]=L(YL[PL[0X00004]],YL[PL[7]]);else do(YL)[PL[0x005]]=YL[PL[0X4]]<YL[PL[0X7]];end;end;else do YL[PL[5]]={F({},0X0001,PL[0X00004])};end;end;end;end;else if not(wL>=18)then if not(wL<15)then if not(wL<16)then if wL==0X11 then YL[1]=KL[PL[1]];CL=CL+1;CL=CL+0x001;do PL=FL[CL];end;CL=CL+0X1;do YL[1]=YL[0X001][PL[0X3]];end;PL=FL[CL];CL=CL+0X1;if not YL[1]then CL=PL[0X4];end;else local AL=(RL[0X7]);do(YL)[5]=AL[0X01][AL[2]];end;local dL=5;do PL=FL[CL];end;CL=CL+0X1;(YL)[0X6]=PL[0X1];CL=CL+0X001;(YL)[7]=YL[0X0002];do CL=CL+1;end;(YL)[8]={};PL=FL[CL];CL=CL+1;do YL[0X8][PL[0X01]]=PL[0x3];end;CL=CL+1;NL=dL+4-1;YL[dL](F(YL,dL+0x001,NL));NL=dL-1;CL=CL+1;CL=CL+0X1;CL=CL+0X0001;AL=RL[7];(YL)[0x05]=AL[1][AL[0X00002]];do PL=FL[CL];end;CL=CL+1;YL[0x6]=PL[0X001];do CL=CL+1;end;dL=5;(YL[dL])(YL[dL+1]);NL=dL-0x1;PL=FL[CL];CL=CL+1;do YL[5]=KL[PL[1]];end;CL=CL+1;CL=CL+0x1;PL=FL[CL];do CL=CL+1;end;(YL)[0x0005]=YL[0x5][PL[3]];PL=FL[CL];CL=CL+0X00001;do(YL)[0X0006]=PL[1];end;CL=CL+0X0001;do dL=5;end;YL[dL](YL[dL+0X0001]);NL=dL-0X001;CL=CL+0X0001;CL=CL+1;CL=CL+1;AL=RL[0X7];YL[5]=AL[1][AL[0X00002]];PL=FL[CL];CL=CL+0X001;do(YL)[0X0006]=PL[1];end;do CL=CL+0X0001;end;YL[7]=YL[0];do CL=CL+1;end;local BL=(0X1);do dL=7;end;local DL=0;if BL==0 then else do NL=dL+BL-1;end;end;local bC,uC=nil,nil;if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));end;do if DL~=0X1 then do if DL==0X00 then bC=bC+dL-0X1;NL=bC;else bC=dL+DL-0X00002;NL=bC+0X001;end;end;local EC=(0x00);for WC=dL,bC do EC=EC+0X1;YL[WC]=uC[EC];end;else do NL=dL-0X1;end;end;end;CL=CL+0x1;dL=5;YL[dL](F(YL,dL+1,NL));NL=dL-1;PL=FL[CL];CL=CL+0X1;CL=PL[0x4];end;else YL[1]=KL[PL[0X1]];CL=CL+1;local AL=0X001;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X0001;(YL)[2]=PL[0X0001];CL=CL+1;local BL=(0X5);local dL=(0X02);if dL~=0X000 then do NL=AL+dL-0x00001;end;end;local DL,bC=nil,(nil);if dL==0X001 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));end;if BL~=0X1 then if BL==0 then DL=DL+AL-0X1;NL=DL;else DL=AL+BL-2;NL=DL+1;end;local uC=0;for EC=AL,DL do do uC=uC+1;end;YL[EC]=bC[uC];end;else NL=AL-1;end;PL=FL[CL];do CL=CL+1;end;if not YL[1]then do CL=PL[0X0004];end;end;end;else if not(wL<0Xd)then if wL==0x000E then if YL[PL[4]]<YL[PL[7]]then CL=PL[0X00005];end;else if not(not(YL[PL[4]]<=YL[PL[0X7]]))then else CL=PL[5];end;end;else repeat local BL={};local AL,dL=mL,YL;for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[0X2]>=0)then else local WC=(EC[0X2]);if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;do(EC)[0X00001]=BL[WC];end;EC[2]=1;end;end;end;end;until true;return;end;end;else if wL>=21 then if not(wL>=22)then do CL=PL[0X4];end;else if wL~=0x000017 then YL[1]=KL[PL[0X00001]];CL=CL+1;CL=CL+0X001;do PL=FL[CL];end;CL=CL+1;YL[1]=YL[0x1][PL[0x3]];CL=CL+0x1;CL=CL+1;do PL=FL[CL];end;local AL=0X1;do CL=CL+1;end;do(YL)[0x2]=PL[1];end;CL=CL+1;(YL)[AL]=YL[AL](YL[AL+0X1]);NL=AL;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;if not(not YL[0X1])then else CL=PL[4];end;else(YL)[PL[0X05]]=r(YL[PL[0X4]],YL[PL[7]]);end;end;else if wL<0x13 then local AL=(PL[0X4]);local BL,dL=AL[2],(nil);local DL=(#BL);if not(DL>0X0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[0X01]~=0x000 then do(dL)[bC-1]=RL[uC[2]];end;else(dL)[bC-0X1]={YL,uC[2]};end;end;(x)(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);else if wL==20 then KL[PL[0X00001]]=YL[PL[5]];else do(YL)[PL[0x5]]=PL[0X1];end;end;end;end;end;end;end;end;end);if nL then do if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)~='\string'then(G)(TL,0);else if V(TL,'a\116t\101m\112t \116\o\ \121\105\e\108\d\ a\cr\o\ss \m\101tam\e\116\104\111\100/C\%\-\ca\l\l\032\098\oun\d\097\114\y')then return q();end;if not(V(TL,'\094.-\058\037\100\+\: '))then(G)(TL,0X0);else(G)("\Lur\097\112h \Sc\114\i\112t\058"..(_L[CL-1]or"\(\i\110terna\108\)").."\:\ "..l(TL),0X0);end;end;end;end;end;end;end;end;end;elseif HL<0X7F then if HL<0X7B then if not(HL<121)then if HL==122 then do aL=function(...)local CL,YL=0x1,{};local OL=(Q());local LL,hL=on(...);local KL=((OL==_ and sL or OL));local kL,NL={[2]=qL,[0X1]=YL},0X00;LL=LL-0X001;do for PL=0,LL do if XL>PL then YL[PL]=hL[PL+0X1];else break;end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X00001 or 0,F(hL,XL+1,LL+0X0001)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X00002];CL=CL+0x1;if not(wL<8)then if wL>=12 then if not(wL>=14)then do if wL~=13 then YL[1]=KL[PL[0X1]];CL=CL+1;YL[0X2]=YL[0X0];do PL=FL[CL];end;CL=CL+1;do(YL[1])[PL[0X1]]=YL[2];end;PL=FL[CL];CL=CL+1;(YL)[0X1]=KL[PL[0X01]];CL=CL+0X1;do CL=CL+0X1;end;CL=CL+0X00001;NL=1;YL[NL]();NL=NL-1;CL=CL+1;repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0X0000)then else local WC=(EC[2]);do if not(not BL[WC])then else do BL[WC]={dL[WC]};end;end;end;EC[0X00001]=BL[WC];do(EC)[2]=0X1;end;end;end;end;until true;return;else YL[PL[0X5]]={F({},1,PL[4])};end;end;else if wL==15 then YL[PL[0x5]]=kL[PL[4]];else YL[PL[0X5]]=KL[PL[1]];end;end;else do if not(wL>=10)then do if wL~=0X9 then do if YL[PL[0X4]]<YL[PL[7]]then do CL=PL[0X005];end;end;end;else CL=PL[0X4];end;end;else if wL~=11 then else do YL[PL[5]]=YL[PL[4]]<YL[PL[0X00007]];end;end;end;end;end;else do if not(wL<4)then if not(wL<0X6)then do if wL~=0X007 then local AL=(PL[0X005]);local dL,BL=YL[AL]();do if not(dL)then else for DL=1,PL[0X7]do(YL)[AL+DL]=BL[DL];end;do CL=PL[4];end;end;end;else local AL=(PL[0X5]);local dL=(YL[AL]);local BL,DL=YL[AL+0X1],YL[AL+0X0002];YL[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);do CL=PL[4];end;end;end;else if wL==0X5 then local AL=(PL[4]);local BL=AL[2];local DL,dL=#BL,(nil);do if DL>0X0 then do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[1]~=0 then dL[bC-0x1]=RL[uC[0x2]];else do(dL)[bC-0x1]={YL,uC[2]};end;end;end;(x)(mL,dL);end;end;(YL)[PL[0X005]]=cn(dL,KL,AL);else local dL=PL[0X004];local AL=PL[5];do if dL~=0 then NL=AL+dL-1;end;end;local DL,bC=nil,nil;local BL=PL[0X007];if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;do if BL~=0X1 then if BL~=0 then DL=AL+BL-0X0002;NL=DL+0X00001;else DL=DL+AL-0X001;NL=DL;end;local uC=0X0;do for EC=AL,DL do do uC=uC+0x00001;end;(YL)[EC]=bC[uC];end;end;else NL=AL-1;end;end;end;end;else if wL>=2 then do if wL~=0X3 then if not(YL[PL[0X4]]<=YL[PL[7]])then do CL=PL[0x0005];end;end;else do(YL)[PL[0X5]]=#YL[PL[4]];end;end;end;else do if wL==1 then(YL)[PL[0X05]]=PL[1];else YL[PL[0X5]]=YL[PL[0X4]]+YL[PL[0X07]];end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=="s\116\114\105\110\g"then if V(TL,'\097\116\116e\m\pt\ \116\111\ \y\i\e\ld\032ac\114\111\s\s\032m\e\116\097\met\ho\d\/\C\%\-\ca\108\l b\ou\110\100ar\y')then return q();end;do if not(V(TL,"\^\.\045\058%\d\+\058\032"))then G(TL,0);else(G)('\L\117r\097\ph \S\099r\105p\116:'..(_L[CL-0X1]or'\040\intern\097l\)').."\: "..l(TL),0X00000);end;end;else(G)(TL,0X00000);end;end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+0X0001,NL));else do return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else aL=function(...)local NL=0;local CL=(1);local YL=({});local OL=Q();local kL=({[0X1]=YL,[2]=qL});local LL,hL=on(...);LL=LL-1;local KL=(OL==_ and sL or OL);for PL=0,LL do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+0x001];end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];do CL=CL+0X1;end;if wL<5 then if not(wL>=2)then if wL~=0X001 then local AL=PL[4];local BL=AL[2];local DL,dL=#BL,nil;do if not(DL>0)then else do dL={};end;do for bC=1,DL do local uC=BL[bC];if uC[0X1]==0X0 then(dL)[bC-0X0001]={YL,uC[2]};else dL[bC-1]=RL[uC[0X2]];end;end;end;x(mL,dL);end;end;do YL[PL[5]]=cn(dL,KL,AL);end;else YL[PL[5]]=not YL[PL[0X4]];end;else do if not(wL>=0x3)then(YL)[PL[0x5]]=KL[PL[0X0001]];else if wL~=0X004 then YL[PL[5]]=M(YL[PL[4]],YL[PL[7]]);else(kL)[PL[0X4]]=YL[PL[5]];end;end;end;end;else if wL<0X00008 then if wL<6 then(YL)[PL[5]]={F({},0X1,PL[4])};else do if wL==0X7 then do(YL)[PL[0x5]]=r(YL[PL[4]],YL[PL[7]]);end;else end;end;end;else if not(wL<9)then do if wL==10 then CL=PL[4];else(YL)[PL[5]]=PL[1];end;end;else(YL)[1]=KL[PL[0X001]];do CL=CL+1;end;do(YL)[2]=YL[0X0];end;PL=FL[CL];local AL=(RL[0]);CL=CL+1;do(YL[0X1])[PL[0X1]]=YL[2];end;PL=FL[CL];CL=CL+1;(YL)[0X1]=KL[PL[0X01]];CL=CL+1;CL=CL+1;CL=CL+0X1;NL=1;local uC=0x001;(YL[NL])();do NL=NL-0X1;end;CL=CL+0X1;(YL)[1]=AL[1][AL[0X02]];CL=CL+1;CL=CL+0X1;local BL=(nil);do PL=FL[CL];end;do CL=CL+1;end;local dL=(PL[4]);local DL=dL[0x2];local bC=#DL;if not(bC>0)then else BL={};do for EC=0X0001,bC do local WC=(DL[EC]);do if WC[0X01]==0 then(BL)[EC-1]={YL,WC[0X002]};else(BL)[EC-0X1]=RL[WC[0X0002]];end;end;end;end;(x)(mL,BL);end;do(YL)[2]=cn(BL,KL,dL);end;CL=CL+1;YL[uC](YL[uC+1]);NL=uC-0X001;do CL=CL+1;end;repeat local EC,WC=mL,(YL);local eC={};for oC,jC in U,EC do for zC,lC in U,jC do if lC[1]==WC and lC[2]>=0x0 then local GC=lC[0X0002];do if not eC[GC]then eC[GC]={WC[GC]};end;end;(lC)[1]=eC[GC];lC[0X00002]=0X1;end;end;end;until true;return;end;end;end;end;end);if nL then do if TL then if rL~=0X001 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;end;else if z(TL)~="\115t\114i\110\103"then(G)(TL,0);else do if not(V(TL,'\097tt\101\109\112\116\032\116\111\ \y\ie\l\d acro\s\115\ me\116\097\109\etho\100\/\C\%-ca\l\108\032\098\o\117n\da\114\y'))then else return q();end;end;if V(TL,"\^\.-:\%d\+\: ")then(G)("\076\117r\097\p\104 S\099\114\i\pt\:"..(_L[CL-1]or'\(\105\110\116e\114\110\097l\041')..'\: '..l(TL),0x0);else(G)(TL,0);end;end;end;end;end;else if HL==120 then aL=function(...)local CL,NL,YL=1,0X0,({});local OL=Q();local kL={[2]=qL,[0X1]=YL};local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0X01;do for PL=0X0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+1];end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0X00000,F(hL,XL+1,LL+0x01)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0x2];do CL=CL+0x1;end;if wL<0X00007 then if not(wL<3)then if wL<0X5 then if wL~=0X0004 then(YL)[PL[0x5]]=true;else CL=PL[0X4];end;else if wL~=0X6 then if not(not(YL[PL[0X0004]]<=YL[PL[0X007]]))then else do CL=PL[5];end;end;else do YL[0x01]=KL[PL[1]];end;local AL=(RL[0]);CL=CL+1;CL=CL+0X01;do CL=CL+1;end;local dL=(2);(YL)[0X00002]=AL[1][AL[0x2]];CL=CL+0x1;YL[0X00003]=YL[0X0];do CL=CL+0X1;end;(YL)[dL]=YL[dL](YL[dL+0X1]);NL=dL;do PL=FL[CL];end;CL=CL+0x1;YL[0x1][PL[0X0001]]=YL[0X0002];PL=FL[CL];CL=CL+1;YL[0X1]=KL[PL[0x0001]];do CL=CL+1;end;CL=CL+0x1;CL=CL+1;NL=1;(YL[NL])();do NL=NL-1;end;CL=CL+0X001;CL=CL+1;CL=CL+0X1;repeat local BL,DL=mL,YL;local bC=({});for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[0X2]>=0X000 then local oC=(eC[0X2]);if not(not bC[oC])then else(bC)[oC]={DL[oC]};end;(eC)[0X1]=bC[oC];(eC)[0x2]=1;end;end;end;until true;do return;end;end;end;else do if not(wL<1)then if wL~=2 then YL[PL[0X5]]={F({},1,PL[0X4])};else local AL=PL[4];local BL,dL=AL[0x00002],(nil);local DL=(#BL);do if DL>0x0 then do dL={};end;for bC=0x1,DL do local uC=(BL[bC]);do if uC[0x1]~=0X000 then dL[bC-1]=RL[uC[2]];else dL[bC-1]={YL,uC[0X2]};end;end;end;x(mL,dL);end;end;do(YL)[PL[5]]=u[PL[0x7]](dL);end;end;else do YL[PL[5]]=KL[PL[1]];end;end;end;end;else if not(wL<0XA)then if wL>=12 then if wL~=13 then YL[PL[5]]=PL[0X01];else end;else if wL~=0xB then do YL[PL[5]]=YL[PL[4]]+YL[PL[0x7]];end;else local AL,dL=PL[4],(nil);local BL=(AL[0X2]);local DL=(#BL);if DL>0x0 then do dL={};end;do for bC=0X001,DL do local uC=(BL[bC]);if uC[0x1]~=0X0 then dL[bC-0X0001]=RL[uC[2]];else(dL)[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;end;end;else do if wL>=8 then do if wL~=0X9 then YL[PL[5]]=YL[PL[0X4]]~=YL[PL[7]];else for AL=PL[0X05],PL[4]do(YL)[AL]=nil;end;end;end;else local AL=PL[0x5];local dL=(PL[0X4]);NL=AL+dL-0X1;repeat local BL,DL=mL,(YL);local bC={};for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[2]>=0x0 then local oC=eC[2];if not(not bC[oC])then else do(bC)[oC]={DL[oC]};end;end;eC[1]=bC[oC];do eC[0x2]=1;end;end;end;end;until true;return true,AL,dL;end;end;end;end;end;end);if nL then if TL then do if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;else do if z(TL)=='\st\114\105\110\g'then if V(TL,"at\116em\112\116\032\116o\ \y\105\e\l\d\ \097\cross\ m\e\116\097\m\101\116\hod\/\067\%\-\099al\l\032\098\111\117nd\097\114\y")then return q();end;if V(TL,"\^.\-\:\%\100\043:\ ")then G('\076ur\097\112\104\ S\c\114\i\p\116\058'..(_L[CL-1]or"\(\inte\114\110\097\108\)")..'\058 '..l(TL),0);else(G)(TL,0X0);end;else(G)(TL,0X0);end;end;end;end;else aL=function(...)local YL={};local CL=(0X001);local OL=(Q());local kL=({[0X1]=YL,[2]=qL});local LL,hL=on(...);LL=LL-0X0001;local KL=((OL==_ and sL or OL));for PL=0x0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;do if not SL then hL=nil;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+0X0001,LL+0X1)};end;end;end;local NL=0;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0X2]);CL=CL+1;do if wL<13 then if wL<0x6 then if not(wL<0X0003)then if not(wL<0X4)then if wL==5 then do(YL)[PL[0X5]]=#YL[PL[0x4]];end;else do(YL)[PL[5]]={F({},1,PL[0X00004])};end;end;else local AL=(RL[0X5]);YL[0x0002]=AL[1][AL[2]];do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];local dL=2;CL=CL+1;YL[3]=PL[0X0001];do CL=CL+1;end;YL[0x4]=YL[1];CL=CL+0X1;(YL[dL])(YL[dL+1],YL[dL+2]);do NL=dL-1;end;PL=FL[CL];CL=CL+1;CL=PL[4];end;else if wL>=0X1 then if wL==2 then repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if EC[0x1]==dL and EC[0X2]>=0X000 then local WC=(EC[2]);do if not(not BL[WC])then else BL[WC]={dL[WC]};end;end;(EC)[0X1]=BL[WC];(EC)[0x02]=1;end;end;end;until true;do return;end;else local AL=PL[0X04];local BL=(AL[2]);local DL,dL=#BL,(nil);do if DL>0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[0x1]==0X000 then dL[bC-0x1]={YL,uC[0X00002]};else dL[bC-1]=RL[uC[0X00002]];end;end;x(mL,dL);end;end;YL[PL[5]]=cn(dL,KL,AL);end;else if YL[PL[4]]~=PL[0x3]then CL=PL[0x5];end;end;end;else do if not(wL<9)then if not(wL<0XB)then if wL==0XC then(YL)[PL[0X5]]=YL[PL[0X04]]+YL[PL[7]];else(YL)[1]=KL[PL[0X1]];PL=FL[CL];do CL=CL+1;end;YL[1]=YL[0X1][PL[0x03]];PL=FL[CL];CL=CL+1;YL[0X002]=PL[0X1];CL=CL+1;local AL=0X0001;do(YL)[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;PL=FL[CL];CL=CL+0x01;if not YL[1]then do CL=PL[4];end;end;end;else if wL~=10 then(YL)[PL[0x5]]=YL[PL[0X0004]][PL[0x3]];else local AL=(RL[0X2]);do(YL)[6]=AL[0x0001][AL[2]];end;CL=CL+0X001;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;do YL[0X6]=YL[6][PL[3]];end;CL=CL+0x1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;do YL[0x00007]=KL[PL[1]];end;CL=CL+0x1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;YL[0X7]=YL[7][PL[3]];CL=CL+0X001;CL=CL+1;CL=CL+0x001;AL=RL[0x00003];(YL)[0X8]=AL[0X1][AL[0X2]];PL=FL[CL];CL=CL+0X001;(YL)[0x9]=YL[4][PL[3]];CL=CL+1;CL=CL+0x001;CL=CL+1;(YL)[0X8]=YL[8][YL[9]];CL=CL+0x1;do CL=CL+1;end;PL=FL[CL];local dL=6;do CL=CL+1;end;(YL)[8]=YL[0X8][PL[3]];CL=CL+0X1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);do NL=dL;end;PL=FL[CL];CL=CL+0X1;if not YL[0X6]then do CL=PL[4];end;end;end;end;else if wL<0x007 then(YL)[PL[0x5]]=YL[PL[4]]~=YL[PL[7]];else if wL~=0X8 then if not(not(PL[1]<=YL[PL[0X07]]))then else CL=PL[5];end;else local AL=RL[0x0];YL[0x1]=AL[0X1][AL[0X2]];CL=CL+1;do CL=CL+0X00001;end;PL=FL[CL];CL=CL+1;if not YL[0X1]then CL=PL[4];end;end;end;end;end;end;else if wL<20 then do if not(wL<0X10)then if not(wL>=18)then if wL~=17 then do YL[PL[5]]=YL[PL[4]]-YL[PL[7]];end;else local AL=(RL[0X4]);(YL)[5]=AL[1][AL[2]];CL=CL+0X001;CL=CL+0X0001;CL=CL+1;(YL)[6]=YL[0X0001];PL=FL[CL];do CL=CL+0X00001;end;YL[0X0007]=YL[4][PL[0X03]];do CL=CL+1;end;local dL=0X5;do CL=CL+1;end;CL=CL+0X1;(YL[dL])(YL[dL+1],YL[dL+0X2]);NL=dL-1;CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+0x1;CL=PL[4];end;else if wL==19 then do YL[PL[5]]=PL[1];end;else end;end;else if wL>=14 then do if wL==0Xf then local AL=(PL[0x00005]);local dL=(PL[7]-0x1)*0X0032;local BL=YL[AL];for DL=0X1,PL[0X4]do BL[dL+DL]=YL[AL+DL];end;else(YL)[1]={};PL=FL[CL];CL=CL+0x01;local AL=RL[1];(YL)[2]=KL[PL[1]];do CL=CL+1;end;local dL=(3);CL=CL+0x1;local DL=(0x00000);do CL=CL+1;end;do(YL)[0X3]=AL[0X00001][AL[2]];end;CL=CL+0X00001;CL=CL+1;do CL=CL+0x01;end;local BL=(0X1);if BL~=0X00 then do NL=dL+BL-0X0001;end;end;local bC,uC=nil,(nil);do if BL~=0X00001 then bC,uC=on(YL[dL](F(YL,dL+1,NL)));else bC,uC=on(YL[dL]());end;end;if DL~=0X1 then if DL~=0 then bC=dL+DL-0x2;NL=bC+0x1;else do bC=bC+dL-0x001;end;do NL=bC;end;end;local WC=0x0;for eC=dL,bC do WC=WC+0x1;do YL[eC]=uC[WC];end;end;else NL=dL-1;end;CL=CL+1;do dL=0X2;end;BL=0X00;DL=0X0004;do if BL==0X0 then else do NL=dL+BL-1;end;end;end;bC,uC=nil;if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;if DL==0X1 then NL=dL-0x01;else if DL~=0 then bC=dL+DL-0X2;do NL=bC+0x1;end;else do bC=bC+dL-1;end;NL=bC;end;local WC=(0x00);for eC=dL,bC do WC=WC+0x001;(YL)[eC]=uC[WC];end;end;PL=FL[CL];do CL=CL+0x1;end;dL=2;local EC=(g(function(...)(q)();do for WC,eC in...do(q)(true,WC,eC);end;end;end));EC(YL[dL],YL[dL+1],YL[dL+2]);NL=dL;do(YL)[dL]=EC;end;CL=PL[0X0004];end;end;else do CL=PL[0x00004];end;end;end;end;else do if not(wL<0X17)then if not(wL>=25)then if wL==24 then local AL=PL[0X5];local dL=g(function(...)q();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);dL(YL[AL],YL[AL+0X1],YL[AL+0X02]);do NL=AL;end;(YL)[AL]=dL;CL=PL[0X4];else local AL=(PL[5]);local dL,BL,DL=YL[AL]();if dL then(YL)[AL+1]=BL;YL[AL+0X002]=DL;do CL=PL[4];end;end;end;else do if wL==0x1a then(YL)[1]=KL[PL[0X001]];do PL=FL[CL];end;do CL=CL+0X001;end;YL[0X1]=YL[1][PL[3]];PL=FL[CL];CL=CL+1;if not(not YL[0X1])then else do CL=PL[0X4];end;end;else do YL[PL[5]]=KL[PL[0X1]];end;end;end;end;else if not(wL>=0X15)then for AL=PL[5],PL[4]do do YL[AL]=nil;end;end;else do if wL==22 then KL[PL[1]]=YL[PL[5]];else kL[PL[4]]=YL[PL[0X005]];end;end;end;end;end;end;end;end;end;end);if nL then if TL then if rL~=0X001 then return YL[ML](F(YL,ML+0X001,NL));else return YL[ML]();end;elseif ML then do return F(YL,ML,rL);end;end;else if z(TL)~='\115t\114\105\110\g'then(G)(TL,0);else if V(TL,"\097t\116\e\mp\116\ \116\o\ \y\105\eld\032\097c\114\111\ss\ \m\e\116a\m\101\116\104o\d\/\067%\-\ca\108\108 b\111\117\110\da\114y")then return q();end;if not(V(TL,'^.\-\:%\d\+\058\ '))then G(TL,0X000);else(G)('\076u\114ap\h\032\083cr\i\p\116\058'..(_L[CL-1]or"\(\in\116e\114n\097l\)")..'\: '..l(TL),0);end;end;end;end;end;end;else if HL>=125 then if HL==0X0007e then aL=function(...)local YL={};local NL=0X0;local OL=(Q());local LL,hL=on(...);do LL=LL-1;end;local kL,CL={[2]=qL,[0X1]=YL},0X1;for PL=0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+0x0001];end;end;end;local KL=(OL==_ and sL or OL);do if not SL then do hL=nil;end;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+0x1)};end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0x2]);CL=CL+1;if wL<0X07 then if wL>=0X3 then do if not(wL>=0X0005)then if wL~=4 then YL[PL[5]]=YL[PL[0x4]]/YL[PL[0X7]];else if YL[PL[0X00004]]==YL[PL[0X7]]then else CL=PL[5];end;end;else do if wL==6 then local AL=(PL[4]);local BL,dL=AL[0X00002],(nil);local DL=(#BL);if DL>0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[0X1]==0 then(dL)[bC-1]={YL,uC[0X0002]};else(dL)[bC-0X001]=RL[uC[2]];end;end;(x)(mL,dL);end;(YL)[PL[0X005]]=cn(dL,KL,AL);else YL[PL[0x0005]]=PL[1];end;end;end;end;else if wL>=0X00001 then do if wL==2 then CL=PL[0X4];else(YL)[PL[5]]=YL[PL[4]][YL[PL[0x7]]];end;end;else YL[PL[5]]=not YL[PL[0X4]];end;end;else if not(wL<10)then do if wL<0Xc then if wL~=0Xb then local AL=RL[0x0];(YL)[0]=AL[1][AL[2]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[0X1]=PL[1];CL=CL+1;do AL=RL[0x1];end;do YL[2]=AL[0X1][AL[0x2]];end;PL=FL[CL];CL=CL+1;YL[2]=YL[0X2][PL[3]];PL=FL[CL];CL=CL+0X01;(YL)[2]=YL[0x2][PL[3]];do PL=FL[CL];end;CL=CL+1;YL[2]=YL[2][PL[3]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+0x1;(YL)[0X2]=YL[0X2][PL[0X3]];local dL=(0x0000);do CL=CL+1;end;(YL[dL])(YL[dL+0X01],YL[dL+0X2]);do NL=dL-0X1;end;CL=CL+1;repeat local BL,DL,bC=mL,YL,({});for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[0x1]==DL and eC[0X2]>=0x0)then else local oC=(eC[0X2]);do if not(not bC[oC])then else(bC)[oC]={DL[oC]};end;end;eC[1]=bC[oC];do eC[2]=0x1;end;end;end;end;until true;return;else(YL)[PL[5]]=KL[PL[1]];end;else if wL==13 then do if YL[PL[0X4]]~=YL[PL[7]]then else CL=PL[5];end;end;else local AL=(PL[0X0005]);local dL=(PL[7]-0X1)*0X000032;local BL=(YL[AL]);do for DL=1,PL[0X4]do BL[dL+DL]=YL[AL+DL];end;end;end;end;end;else if not(wL<0X8)then if wL~=0X009 then do(YL)[PL[5]]=kL[PL[0X4]];end;else do YL[PL[0X5]]={F({},1,PL[4])};end;end;else end;end;end;end;end);if not(nL)then do if z(TL)=='\115\116\114\ing'then if not(V(TL,"at\116\e\m\112t t\o\ y\i\101l\d \097\099ro\s\115\032\m\e\116\097\109\101\116\h\111\100\/C\%-\c\097l\l b\111\117\110\100\097r\y"))then else do return q();end;end;if V(TL,'\^.-\058%\100\+\:\ ')then(G)("\Lu\114\097\p\104\032\S\099\114i\112t:"..(_L[CL-1]or"\040\i\110\116e\114\110a\l\041").."\:\ "..l(TL),0);else(G)(TL,0);end;else G(TL,0);end;end;else do if TL then do if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0x1,NL));end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL=(0x001);local YL={};local OL=(Q());local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);LL=LL-1;local KL=(OL==_ and sL or OL);for PL=0x00000,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0x1];end;end;do if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X00001,LL+1)};end;end;end;local NL=0;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0x2];do CL=CL+0X1;end;do if wL>=6 then if not(wL<9)then do if wL<0xB then do if wL==0X0000a then CL=PL[0x04];else YL[PL[5]]=KL[PL[0X1]];end;end;else if wL~=12 then local AL=PL[0X04];local BL=(AL[0X2]);local dL=nil;local DL=#BL;do if DL>0 then dL={};do for bC=0X1,DL do local uC=(BL[bC]);if uC[0x001]==0 then dL[bC-0X1]={YL,uC[2]};else dL[bC-1]=RL[uC[0X2]];end;end;end;x(mL,dL);end;end;YL[PL[5]]=cn(dL,KL,AL);else end;end;end;else do if wL>=7 then if wL~=8 then YL[PL[0X5]]=YL[PL[4]];else(YL)[PL[5]]=PL[0X1];end;else(YL)[PL[0X0005]]={F({},0X1,PL[0x4])};end;end;end;else if wL<3 then do if wL>=1 then if wL==0X2 then(YL[PL[0X5]])[YL[PL[0X0004]]]=YL[PL[0x7]];else(YL)[PL[5]]=YL[PL[4]]*YL[PL[7]];end;else(YL)[1]=KL[PL[1]];do CL=CL+1;end;do CL=CL+0x1;end;do CL=CL+0X1;end;YL[0X2]=YL[0X0];PL=FL[CL];CL=CL+0X1;YL[1][PL[0x1]]=YL[2];do PL=FL[CL];end;do CL=CL+0X1;end;YL[1]=KL[PL[0X1]];do CL=CL+1;end;CL=CL+0x1;CL=CL+1;NL=1;(YL[NL])();NL=NL-1;CL=CL+0X001;do repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X2]>=0 then local WC=(EC[2]);if not BL[WC]then do BL[WC]={dL[WC]};end;end;EC[0X1]=BL[WC];(EC)[2]=0X1;end;end;end;until true;end;return;end;end;else do if not(wL<4)then if wL==5 then YL[PL[5]]=kL[PL[4]];else do repeat local dL,BL=mL,YL;local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[2]>=0)then else local eC=WC[0X2];do if not DL[eC]then do(DL)[eC]={BL[eC]};end;end;end;(WC)[0X1]=DL[eC];WC[2]=1;end;end;end;until true;end;local AL=(PL[0X0005]);return false,AL,AL+PL[4]-0X0002;end;else local AL=(PL[0x4]);local dL=(nil);local BL=(AL[2]);local DL=#BL;if DL>0X00000 then dL={};for bC=0X1,DL do local uC=BL[bC];if uC[1]==0 then do dL[bC-1]={YL,uC[0x2]};end;else do(dL)[bC-0x00001]=RL[uC[0x2]];end;end;end;x(mL,dL);end;(YL)[PL[5]]=u[PL[0x07]](dL);end;end;end;end;end;end;end);if nL then if TL then if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~='\115\116\114\i\110\103'then G(TL,0);else do if V(TL,"\097\116\116\101\109pt\032\116\o\ \121\105eld a\cr\111\115\115 \m\e\116a\me\116\104o\100\/C%\-\c\097\l\108\032\098\oun\100a\114y")then return q();end;end;do if V(TL,'^\046\-\:%\d\043: ')then G('\076ura\p\h \S\c\114ip\116:'..(_L[CL-1]or"(int\erna\108)").."\:\ "..l(TL),0);else(G)(TL,0);end;end;end;end;end;end;else if HL==124 then aL=function(...)local CL,YL=1,{};local OL=Q();local kL,NL={[2]=qL,[0X1]=YL},(0);local LL,hL=on(...);local KL=(OL==_ and sL or OL);LL=LL-1;do for PL=0,LL do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+0X01];end;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+1,LL+0x01)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];do CL=CL+0X0001;end;if not(wL>=6)then if wL>=3 then do if not(wL<0X4)then do if wL~=5 then do(YL)[PL[0x5]]=KL[PL[0X1]];end;else local AL=(PL[4]);local BL=AL[0x002];local dL=(nil);local DL=(#BL);do if DL>0X0 then do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[0x1]==0 then do(dL)[bC-1]={YL,uC[2]};end;else do(dL)[bC-0x1]=RL[uC[2]];end;end;end;x(mL,dL);end;end;YL[PL[5]]=cn(dL,KL,AL);end;end;else do(YL)[PL[5]]=-YL[PL[4]];end;end;end;else if not(wL<0X1)then if wL==0X02 then do YL[PL[0X005]]=YL[PL[4]]-YL[PL[7]];end;else CL=PL[4];end;else YL[PL[5]]=L(YL[PL[0X04]],YL[PL[7]]);end;end;else if not(wL>=9)then if not(wL<7)then if wL~=8 then do YL[PL[0X5]]={F({},1,PL[0X04])};end;else YL[PL[5]]=PL[1];end;else do YL[1]=KL[PL[0X1]];end;CL=CL+1;(YL)[0X2]=YL[0];PL=FL[CL];CL=CL+0X001;(YL[1])[PL[1]]=YL[0X2];PL=FL[CL];do CL=CL+0x0001;end;local AL=RL[0];(YL)[1]=KL[PL[0X1]];do CL=CL+0x001;end;NL=1;local BL=nil;YL[NL]();NL=NL-0X1;CL=CL+1;(YL)[0X001]=AL[1][AL[0X2]];CL=CL+0X001;CL=CL+0x1;PL=FL[CL];do CL=CL+1;end;local dL=(PL[4]);local DL=dL[0X2];local uC=(0X0001);local bC=(#DL);if bC>0 then BL={};for EC=0x001,bC do local WC=DL[EC];if WC[0X00001]~=0 then do(BL)[EC-1]=RL[WC[0X2]];end;else BL[EC-1]={YL,WC[2]};end;end;(x)(mL,BL);end;YL[2]=cn(BL,KL,dL);CL=CL+1;(YL[uC])(YL[uC+0X001]);NL=uC-0X1;CL=CL+1;repeat local EC,WC=mL,(YL);local eC={};for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[0X1]==WC and lC[2]>=0X0000)then else local GC=(lC[2]);if not eC[GC]then(eC)[GC]={WC[GC]};end;(lC)[1]=eC[GC];(lC)[0x2]=0X01;end;end;end;until true;return;end;else if wL<0Xb then if wL~=0xa then else local AL=PL[5];do for dL=AL,AL+(PL[0x04]-1)do(YL)[dL]=hL[XL+(dL-AL)+1];end;end;end;else if wL~=12 then(YL)[PL[0X5]]=YL[PL[4]]^YL[PL[7]];else if YL[PL[5]]then CL=PL[4];end;end;end;end;end;end;end);if nL then if TL then do if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;end;elseif not(ML)then else return F(YL,ML,rL);end;else do if z(TL)=='\115t\114\i\110\103'then if not(V(TL,"att\e\m\112t t\o \yiel\d\032a\099\114\o\s\115\032m\eta\met\h\o\d\/C\%\-\cal\l\ b\111u\110dar\y"))then else do return q();end;end;if V(TL,"\^\046\045:\%\d\+\:\032")then G('\076\117r\097\p\h\ \S\099\114i\pt\058'..(_L[CL-0X0001]or"\040\in\116erna\108\041")..'\:\ '..l(TL),0X00);else(G)(TL,0x0);end;else(G)(TL,0X0);end;end;end;end;else aL=function(...)local CL=(0x1);local YL={};local kL={[0X1]=YL,[2]=qL};local OL=(Q());local KL=(OL==_ and sL or OL);local LL,hL=on(...);LL=LL-0X001;for PL=0,LL do do if XL>PL then(YL)[PL]=hL[PL+0X00001];else break;end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+0X1,LL+1)};end;local NL=(0);if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X002];CL=CL+0X001;if wL<0X6 then if wL>=3 then if wL>=0X4 then if wL~=0X5 then else(YL)[PL[0x5]]=KL[PL[1]];end;else local AL=(YL[PL[4]]/YL[PL[0X7]]);(YL)[PL[0X05]]=AL-AL%1;end;else if wL<0X00001 then if not(YL[PL[4]]<YL[PL[7]])then CL=PL[0X0005];end;else if wL~=2 then if YL[PL[0x5]]then CL=PL[4];end;else if not(YL[PL[0X4]]<=YL[PL[0X7]])then CL=PL[5];end;end;end;end;else do if not(wL>=9)then if not(wL<0X7)then if wL~=8 then do CL=PL[4];end;else local AL,dL=PL[0x5],(PL[0X4]);NL=AL+dL-0x0001;do repeat local BL,DL=mL,YL;local bC={};do for uC,EC in U,BL do for WC,eC in U,EC do if eC[0X1]==DL and eC[0X2]>=0 then local oC=(eC[2]);do if not(not bC[oC])then else bC[oC]={DL[oC]};end;end;(eC)[1]=bC[oC];eC[2]=0x1;end;end;end;end;until true;end;return true,AL,dL;end;else local AL=PL[0X4];local BL=(AL[0x2]);local dL=(nil);local DL=#BL;if not(DL>0x0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);do if uC[0X01]==0 then(dL)[bC-0X1]={YL,uC[0X2]};else do(dL)[bC-0x001]=RL[uC[0x2]];end;end;end;end;(x)(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;else do if wL<11 then do if wL==10 then(YL)[PL[5]]={F({},0X1,PL[4])};else(YL)[0X00001]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X01;CL=CL+1;(YL)[2]=YL[0X0];PL=FL[CL];CL=CL+0X1;YL[0X01][PL[1]]=YL[2];do PL=FL[CL];end;do CL=CL+1;end;(YL)[1]=KL[PL[1]];CL=CL+0X1;NL=0x001;YL[NL]();NL=NL-0X1;CL=CL+1;repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do do if EC[1]==dL and EC[0x2]>=0X00000 then local WC=(EC[0X002]);if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];EC[2]=0X01;end;end;end;end;end;until true;return;end;end;else if wL~=12 then do(YL)[PL[0x5]]=h(YL[PL[0X4]],YL[PL[7]]);end;else(YL)[PL[5]]=PL[0X1];end;end;end;end;end;end;end;end);do if nL then if TL then if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)=="\s\116\114\in\103"then if V(TL,'\097t\116e\m\p\116\ to\ \y\i\101\ld\ ac\114\o\115\s\032\m\e\116amet\104od\/\C\%\-\c\097\l\108\ b\111\117\110\d\097r\y')then return q();end;do if not(V(TL,"\^\046\045\:\%d+: "))then(G)(TL,0X000);else G('\Lu\114\097p\h\ S\cr\i\pt\:'..(_L[CL-1]or"(i\110t\e\114\110a\108)")..'\058\ '..l(TL),0);end;end;else G(TL,0X0);end;end;end;end;end;end;end;else do if not(HL>=0X000083)then do if HL<0X81 then if HL==0X80 then do aL=function(...)local CL=(0X1);local NL=0;local YL={};local OL=(Q());local LL,hL=on(...);local kL={[0X1]=YL,[2]=qL};LL=LL-0x1;for PL=0X00000,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;local KL=((OL==_ and sL or OL));if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+0X1;if wL>=0X008 then if wL>=0X0000C then if wL<14 then if wL~=0XD then YL[PL[5]]=YL[PL[0X4]]~=YL[PL[7]];else local AL=(PL[5]);for dL=AL,AL+(PL[0x004]-1)do(YL)[dL]=hL[XL+(dL-AL)+1];end;end;else do if wL<0Xf then(YL)[PL[5]]=PL[1];else if wL~=16 then repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do do for uC,EC in U,bC do do if not(EC[1]==dL and EC[0X2]>=0x0)then else local WC=(EC[2]);do if not BL[WC]then BL[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];do EC[2]=0X01;end;end;end;end;end;end;end;until true;return;else local AL=PL[4];local dL=(nil);local BL=(AL[2]);local DL=(#BL);if not(DL>0x0)then else dL={};for bC=1,DL do local uC=(BL[bC]);if uC[1]==0X0 then dL[bC-1]={YL,uC[2]};else dL[bC-0X001]=RL[uC[2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;else if wL<0Xa then do if wL==0X00009 then(YL)[PL[5]]=KL[PL[1]];else(YL)[PL[0x5]]=T(YL[PL[0X04]]);end;end;else if wL~=0XB then(YL)[PL[0X0005]]={F({},0X1,PL[4])};else(YL)[PL[5]]=h(YL[PL[4]],YL[PL[0X07]]);end;end;end;else do if wL>=0X4 then do if not(wL<6)then do if wL~=7 then do YL[0]=KL[PL[1]];end;CL=CL+0X00001;CL=CL+0x1;do CL=CL+0X1;end;NL=0;local AL=RL[0];(YL[NL])();NL=NL-1;CL=CL+1;do CL=CL+0X001;end;local dL=0x0;CL=CL+0X0001;(YL)[0]=AL[0X00001][AL[0X2]];CL=CL+0x1;CL=CL+0X1;PL=FL[CL];CL=CL+0x0001;YL[0X0001]=PL[0x1];CL=CL+1;(YL[dL])(YL[dL+1]);NL=dL-1;CL=CL+0X1;CL=CL+1;CL=CL+1;AL=RL[0X001];(YL)[0]=AL[1][AL[2]];CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+1;end;(YL)[0X0]=YL[0][PL[0X3]];do CL=CL+0X1;end;CL=CL+0X00001;PL=FL[CL];CL=CL+0x0001;YL[0]=YL[0][PL[0X3]];PL=FL[CL];CL=CL+1;if YL[0X0]==PL[0X0003]then else CL=PL[5];end;else repeat local dL,BL=mL,(YL);local DL={};do for bC,uC in U,dL do for EC,WC in U,uC do do if not(WC[1]==BL and WC[0X02]>=0)then else local eC=(WC[2]);if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;do(WC)[1]=DL[eC];end;do WC[2]=1;end;end;end;end;end;end;until true;local AL=PL[0x5];return false,AL,AL+PL[0X4]-0X00002;end;end;else if wL~=0X0005 then repeat local DL={};local AL,dL,BL=mL,YL,PL[0X5];do for bC,uC in U,AL do do for EC,WC in U,uC do do if not(WC[1]==dL and WC[0x02]>=BL)then else local eC=WC[2];do if not DL[eC]then(DL)[eC]={dL[eC]};end;end;do WC[1]=DL[eC];end;WC[0X2]=0X1;end;end;end;end;end;end;until true;else CL=PL[4];end;end;end;else if not(wL<0x2)then if wL==3 then else for AL=PL[5],PL[0x4]do YL[AL]=nil;end;end;else do if wL~=1 then local AL=(PL[5]);local dL,BL=YL[AL]();if not(dL)then else CL=PL[4];do(YL)[AL+0X3]=BL;end;end;else local AL=PL[5];local dL,BL,DL=YL[AL],YL[AL+1],(YL[AL+2]);do(YL)[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);end;CL=PL[4];end;end;end;end;end;end;end;end);if nL then if TL then if rL~=0X0001 then return YL[ML](F(YL,ML+0X00001,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;else if z(TL)~="\st\114in\103"then G(TL,0X0);else if not(V(TL,'\097tt\101\m\112\116\ \116o\032\y\i\el\d \097\099\114o\115\115 \met\097m\e\116h\o\100\/C\037-\c\097\l\l\ \098\ound\097\114\y'))then else do return q();end;end;if V(TL,'\^\046-\:\%d+\:\032')then(G)('\Lu\114aph\032\083\c\114\i\pt\058'..(_L[CL-1]or"\(\i\110t\e\114nal\041")..'\:\ '..l(TL),0);else G(TL,0);end;end;end;end;end;else do aL=function(...)local YL=({});local CL=(1);local OL=(Q());local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);local KL=(OL==_ and sL or OL);LL=LL-0X1;do for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0x00001];end;end;end;local NL=(0X00);if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+0x1)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0x2];CL=CL+1;if not(wL<0X0008)then if wL<12 then if not(wL<0Xa)then if wL==0xb then else do if YL[PL[0X05]]then CL=PL[0X00004];end;end;end;else if wL~=0X09 then YL[PL[5]]=not YL[PL[4]];else(YL)[PL[5]]={F({},1,PL[0X04])};end;end;else if wL>=14 then do if not(wL>=15)then YL[PL[0x5]]=PL[1];else if wL~=0X000010 then CL=PL[4];else YL[PL[5]]=KL[PL[1]];end;end;end;else if wL~=0Xd then if not YL[PL[0X0005]]then CL=PL[4];end;else(YL)[PL[5]]=YL[PL[4]]*YL[PL[7]];end;end;end;else do if wL>=4 then if wL<6 then if wL~=5 then repeat local dL,BL=mL,(YL);local DL={};do for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0X01]==BL and WC[2]>=0x000 then local eC=(WC[2]);if not DL[eC]then DL[eC]={BL[eC]};end;(WC)[1]=DL[eC];(WC)[2]=1;end;end;end;end;end;until true;local AL=PL[5];return false,AL,AL+PL[0X4]-2;else do(YL)[PL[0X5]]=r(YL[PL[0X4]],YL[PL[7]]);end;end;else do if wL~=0X007 then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else YL[PL[5]][YL[PL[4]]]=YL[PL[0X7]];end;end;end;else if not(wL>=0x002)then do if wL==1 then(YL)[PL[0X5]]=YL[PL[0x4]]-YL[PL[0X7]];else local AL=PL[0X00004];local dL=(nil);local BL=(AL[0X2]);local DL=#BL;do if DL>0 then dL={};for bC=1,DL do local uC=(BL[bC]);if uC[0X1]==0 then do dL[bC-0X0001]={YL,uC[0X2]};end;else(dL)[bC-0X1]=RL[uC[0X2]];end;end;x(mL,dL);end;end;YL[PL[0X00005]]=cn(dL,KL,AL);end;end;else if wL==3 then do(YL)[1]=KL[PL[1]];end;do CL=CL+0X00001;end;CL=CL+1;CL=CL+0X00001;do(YL)[0X2]=YL[0X0];end;PL=FL[CL];CL=CL+0X1;(YL[0X1])[PL[1]]=YL[2];local AL=(RL[0]);PL=FL[CL];do CL=CL+0X1;end;(YL)[1]=KL[PL[0X01]];CL=CL+1;CL=CL+0X1;CL=CL+1;NL=0X01;YL[NL]();local uC=1;NL=NL-0X0001;do CL=CL+1;end;do CL=CL+0X1;end;CL=CL+0x1;do(YL)[0X1]=AL[1][AL[0x002]];end;CL=CL+0X0001;do CL=CL+1;end;do PL=FL[CL];end;local BL=(nil);CL=CL+1;local dL=(PL[0X4]);local DL=dL[0X02];local bC=#DL;if bC>0 then BL={};for EC=1,bC do local WC=DL[EC];if WC[0X1]==0X0000 then(BL)[EC-1]={YL,WC[2]};else BL[EC-0X1]=RL[WC[2]];end;end;x(mL,BL);end;YL[2]=cn(BL,KL,dL);CL=CL+0X00001;(YL[uC])(YL[uC+1]);NL=uC-0x001;CL=CL+0X1;CL=CL+0x1;CL=CL+1;repeat local EC,WC=mL,YL;local eC=({});do for oC,jC in U,EC do do for zC,lC in U,jC do if not(lC[0x00001]==WC and lC[0X00002]>=0x00)then else local GC=(lC[0X2]);if not eC[GC]then(eC)[GC]={WC[GC]};end;lC[1]=eC[GC];lC[2]=1;end;end;end;end;end;until true;return;else do(YL)[PL[5]]=#YL[PL[0x4]];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\str\in\103"then G(TL,0);else if V(TL,'\097\116t\empt\ to\032\y\i\e\l\100\ \097\c\114\o\s\s \m\eta\109\e\116h\o\100/\C%\045\c\097\108\l\ \098\o\117n\d\097r\y')then return q();end;if V(TL,"\094\.\045\058%\d+:\032")then(G)("\L\117\114\097\p\104\ \S\cr\i\112t:"..(_L[CL-1]or'\040\inte\114n\097\l\)').."\:\ "..l(TL),0);else G(TL,0X000);end;end;else if TL then if rL~=0X1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;else if HL~=0X000082 then aL=function(...)local CL=1;local YL={};local OL=(Q());local NL=(0X0);local LL,hL=on(...);local kL={[0X1]=YL,[2]=qL};LL=LL-1;do for PL=0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;end;local KL=((OL==_ and sL or OL));if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0x0,F(hL,XL+0X01,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+1;if wL>=13 then do if not(wL<20)then if not(wL<0x17)then do if not(wL<25)then if wL==0X00001a then(YL)[PL[5]]=PL[0x1];else YL[1]=KL[PL[1]];do CL=CL+1;end;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0X00001;do(YL)[1]=YL[1][PL[3]];end;do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];do CL=CL+1;end;(YL)[0X01]=YL[0X01][PL[0X003]];PL=FL[CL];CL=CL+0X1;YL[2]=KL[PL[0X0001]];CL=CL+1;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;do(YL)[2]=YL[0X2][PL[3]];end;do CL=CL+1;end;CL=CL+0x00001;CL=CL+0X001;YL[3]=YL[1][YL[2]];PL=FL[CL];CL=CL+0x1;if YL[0X3]then CL=PL[0x4];end;end;else if wL~=24 then do(YL)[0X1]=KL[PL[0X0001]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X0001;(YL)[0X001]=YL[0X1][PL[3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;if not YL[1]then CL=PL[4];end;else local AL,dL=PL[4],nil;local BL=AL[0X0002];local DL=#BL;if not(DL>0X0)then else dL={};do for bC=0X1,DL do local uC=(BL[bC]);do if uC[0X1]~=0 then dL[bC-0X1]=RL[uC[2]];else(dL)[bC-0X1]={YL,uC[2]};end;end;end;end;(x)(mL,dL);end;YL[PL[0X5]]=u[PL[0X7]](dL);end;end;end;else if not(wL>=21)then if YL[PL[5]]then CL=PL[4];end;else do if wL~=0X16 then repeat local AL,dL,BL,DL=mL,YL,PL[5],({});for bC,uC in U,AL do do for EC,WC in U,uC do if WC[1]==dL and WC[2]>=BL then local eC=WC[2];if not DL[eC]then do(DL)[eC]={dL[eC]};end;end;(WC)[1]=DL[eC];do(WC)[2]=0X01;end;end;end;end;end;until true;else(YL)[PL[0x005]]=YL[PL[4]][PL[0x0003]];end;end;end;end;else do if wL<0X10 then do if wL>=14 then if wL~=0xf then do YL[PL[0X5]]=YL[PL[4]]*YL[PL[7]];end;else repeat local dL,BL=mL,(YL);local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0X1]==BL and WC[2]>=0X0000 then local eC=(WC[2]);if not(not DL[eC])then else DL[eC]={BL[eC]};end;do(WC)[1]=DL[eC];end;WC[2]=0x001;end;end;end;end;until true;local AL=(PL[5]);return false,AL,AL;end;else local AL,dL=PL[5],(PL[0X4]);NL=AL+dL-1;do repeat local BL,DL=mL,YL;local bC=({});for uC,EC in U,BL do do for WC,eC in U,EC do if eC[1]==DL and eC[0X0002]>=0X0 then local oC=eC[0x00002];do if not bC[oC]then bC[oC]={DL[oC]};end;end;(eC)[0x1]=bC[oC];do(eC)[2]=1;end;end;end;end;end;until true;end;do return true,AL,dL;end;end;end;else do if wL>=18 then if wL~=19 then else do CL=PL[4];end;end;else do if wL~=0X0011 then for AL=PL[0X005],PL[0X004]do do YL[AL]=nil;end;end;else YL[PL[0x5]]={F({},1,PL[0x4])};end;end;end;end;end;end;end;end;else if not(wL>=0X6)then if not(wL>=0X00003)then if not(wL>=1)then repeat local BL=({});local AL,dL=mL,YL;for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X1]==dL and EC[0X2]>=0X00 then local WC=EC[0X2];do if not BL[WC]then(BL)[WC]={dL[WC]};end;end;do(EC)[1]=BL[WC];end;(EC)[0x2]=0X1;end;end;end;until true;return;else if wL==0X0002 then local AL=RL[1];YL[0X03]=AL[1][AL[0X002]];CL=CL+1;do(YL)[4]=YL[0X1][YL[2]];end;do CL=CL+0X1;end;CL=CL+1;do CL=CL+0X0001;end;(YL)[3]=YL[3][YL[4]];CL=CL+1;AL=RL[0X2];YL[4]=AL[1][AL[0X0002]];CL=CL+0X1;CL=CL+0X001;PL=FL[CL];CL=CL+0X1;local dL=(4);do YL[0X00005]=KL[PL[1]];end;CL=CL+0x01;do CL=CL+1;end;PL=FL[CL];CL=CL+1;do(YL)[0X005]=YL[5][PL[0X3]];end;CL=CL+1;CL=CL+0X1;do CL=CL+0X1;end;(YL)[dL]=YL[dL](YL[dL+1]);NL=dL;CL=CL+0x1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;do(YL)[5]=YL[0x3][PL[0x3]];end;CL=CL+1;CL=CL+1;CL=CL+0x0001;YL[5]=YL[0X0005][YL[0X04]];CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+1;end;if YL[5]then CL=PL[0X4];end;else local AL,dL=PL[0x5],(PL[0X7]-1)*50;local BL=(YL[AL]);do for DL=0x1,PL[0X4]do(BL)[dL+DL]=YL[AL+DL];end;end;end;end;else do if wL>=4 then if wL==0X5 then local AL=PL[0X5];for dL=AL,AL+(PL[0X4]-0X1)do YL[dL]=hL[XL+(dL-AL)+1];end;else local AL,dL=PL[0x5],YL[PL[4]];do(YL)[AL+1]=dL;end;YL[AL]=dL[PL[3]];end;else(YL)[6]=YL[5][PL[3]];local AL=RL[0x3];CL=CL+0X00001;CL=CL+0X1;CL=CL+0x001;(YL)[0X7]=AL[0X0001][AL[2]];do CL=CL+1;end;CL=CL+1;CL=CL+0X1;YL[0x7]=YL[7][YL[0X06]];CL=CL+1;CL=CL+1;CL=CL+0X1;AL=RL[4];(YL)[8]=AL[0X1][AL[2]];PL=FL[CL];CL=CL+1;YL[8]=YL[0X8][PL[0x3]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+0X1;end;YL[0X00008]=YL[8][PL[0X3]];PL=FL[CL];CL=CL+1;(YL)[0X8]=YL[8][PL[3]];CL=CL+1;(YL)[0x00008]=YL[0x008][YL[0x6]];PL=FL[CL];CL=CL+1;if not(YL[8])then else CL=PL[4];end;end;end;end;else if wL>=0X9 then if not(wL>=11)then if wL==10 then YL[PL[0X05]]=true;else local AL=(RL[0]);do(YL)[0x1]=AL[0X1][AL[0x02]];end;CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+1;do if not(not YL[0X1])then else do CL=PL[0x4];end;end;end;end;else if wL~=12 then do(YL)[11]=PL[1];end;do PL=FL[CL];end;CL=CL+1;(YL)[0X0000C]=YL[7][PL[3]];do PL=FL[CL];end;CL=CL+1;(YL)[13]=YL[7][PL[3]];local AL=(11);CL=CL+1;do CL=CL+0X01;end;CL=CL+1;repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do do for EC,WC in U,uC do if WC[1]==BL and WC[0X2]>=0X0 then local eC=WC[0X2];if not(not DL[eC])then else DL[eC]={BL[eC]};end;WC[0X1]=DL[eC];(WC)[0X002]=1;end;end;end;end;until true;return false,AL,AL+4-2;else(YL)[PL[0X5]]=YL[PL[0x04]]-YL[PL[7]];end;end;else if not(wL>=0X7)then local AL=PL[0x4];local BL,dL=AL[2],(nil);local DL=(#BL);if DL>0X00 then dL={};for bC=1,DL do local uC=BL[bC];if uC[0X1]==0 then(dL)[bC-1]={YL,uC[0X00002]};else dL[bC-0X00001]=RL[uC[2]];end;end;(x)(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);else do if wL~=8 then if not(not(PL[1]<YL[PL[0X7]]))then else CL=PL[0X005];end;else(YL)[PL[5]]=KL[PL[0X1]];end;end;end;end;end;end;end;end;end);if nL then do if TL then if rL~=0x1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)=="\s\116\114\105\110g"then if V(TL,'a\116\116em\p\116\032to\ \121\105\e\l\d \097\099r\oss\032\m\101tam\101t\h\111\d\/\067%\045\cal\108\032\098\o\117n\100\097\114\y')then return q();end;do if V(TL,'\094.-\:%d\043\:\ ')then G("\L\117\114\097\112\h \S\cri\p\116\:"..(_L[CL-0X1]or"\040\i\110\116\ern\097\l)").."\:\ "..l(TL),0X000);else(G)(TL,0x0);end;end;else(G)(TL,0);end;end;end;else aL=function(...)local CL,YL,NL=0X001,{},0;local kL={[2]=qL,[0X1]=YL};local OL=Q();local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-1;for PL=0X0000,LL do do if XL>PL then do YL[PL]=hL[PL+1];end;else break;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X0001 or 0,F(hL,XL+0X1,LL+1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);do CL=CL+1;end;do if not(wL>=0x7)then do if not(wL>=3)then if not(wL<0X1)then do if wL==0X002 then for AL=PL[5],PL[0X004]do YL[AL]=nil;end;else end;end;else local AL=PL[4];local BL=AL[2];local dL=nil;local DL=(#BL);if DL>0 then do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[1]==0 then dL[bC-1]={YL,uC[2]};else(dL)[bC-0x1]=RL[uC[0X00002]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;else if wL<5 then if wL==4 then(YL)[PL[0x5]]=KL[PL[1]];else local AL=YL[PL[4]]/YL[PL[0X7]];(YL)[PL[0x5]]=AL-AL%0X1;end;else do if wL~=0X6 then YL[PL[5]]=PL[1];else CL=PL[4];end;end;end;end;end;else if not(wL>=0X0000B)then if not(wL>=0x9)then if wL~=0X8 then(YL)[PL[5]]=YL[PL[0x04]];else do if not(YL[PL[0X4]]<=YL[PL[7]])then do CL=PL[5];end;end;end;end;else if wL==0Xa then(YL)[PL[0X05]]=PL[0X00004];else do if not(YL[PL[0X4]]<=YL[PL[7]])then else CL=PL[5];end;end;end;end;else do if not(wL<13)then if wL~=0XE then YL[PL[5]]=L(YL[PL[4]],YL[PL[7]]);else YL[PL[0X5]]={F({},1,PL[0X0004])};end;else do if wL==0Xc then(YL)[1]=KL[PL[0X1]];CL=CL+1;local AL=RL[0];do(YL)[2]=YL[0];end;PL=FL[CL];CL=CL+1;YL[0X1][PL[1]]=YL[2];local BL=(nil);PL=FL[CL];CL=CL+1;do(YL)[0X1]=KL[PL[0X001]];end;do CL=CL+0x1;end;NL=0X0001;YL[NL]();do NL=NL-1;end;CL=CL+0X001;CL=CL+0x1;do CL=CL+0x1;end;do(YL)[1]=AL[0x1][AL[0X002]];end;CL=CL+0X1;CL=CL+1;do PL=FL[CL];end;do CL=CL+0X00001;end;local dL=(PL[4]);local DL=(dL[0X0002]);local bC=#DL;if not(bC>0)then else do BL={};end;for EC=1,bC do local WC=DL[EC];if WC[1]~=0 then do BL[EC-0X1]=RL[WC[0X2]];end;else(BL)[EC-0X1]={YL,WC[0X002]};end;end;x(mL,BL);end;local uC=(0X1);do YL[0X02]=cn(BL,KL,dL);end;do CL=CL+0X1;end;YL[uC](YL[uC+1]);NL=uC-1;do CL=CL+0X1;end;do repeat local EC,WC,eC=mL,YL,{};for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[1]==WC and lC[0X0002]>=0)then else local GC=(lC[0X2]);if not(not eC[GC])then else do(eC)[GC]={WC[GC]};end;end;(lC)[0X1]=eC[GC];do lC[2]=0X0001;end;end;end;end;until true;end;return;else(YL[PL[5]])[YL[PL[0X4]]]=YL[PL[7]];end;end;end;end;end;end;end;end;end);if nL then do if TL then if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)~="strin\103"then(G)(TL,0);else if V(TL,"a\116t\e\m\112\116\032t\111\032\121\105el\d\032\097\099r\o\s\s\ meta\me\116\h\111d\/\067\%\-\c\097l\108\032bou\110d\097\114\121")then do return q();end;end;if not(V(TL,"\094.\-:\037d+\: "))then(G)(TL,0);else G("\L\117\114\097\112\h\ \083cr\105\p\116\:"..(_L[CL-0x1]or'\040\int\erna\l\)')..':\ '..l(TL),0x0);end;end;end;end;end;end;end;else do if HL>=0X85 then if not(HL<0X00086)then if HL~=0X087 then aL=function(...)local CL=1;local YL={};local OL=(Q());local LL,hL=on(...);local KL=(OL==_ and sL or OL);local NL,kL=0x0,({[2]=qL,[0X1]=YL});LL=LL-1;for PL=0X0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+0X01,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+1;do if wL<8 then if not(wL<4)then if wL>=0X00006 then do if wL==0x07 then do(YL)[PL[0X5]]=YL[PL[0X4]]-YL[PL[7]];end;else do(YL)[PL[0X00005]]=YL[PL[4]][YL[PL[7]]];end;end;end;else if wL~=0x5 then else local AL=(PL[0X5]);do for dL=AL,AL+(PL[4]-0x01)do YL[dL]=hL[XL+(dL-AL)+0x1];end;end;end;end;else if wL>=0x2 then if wL==0x3 then YL[PL[0X5]]=KL[PL[1]];else do(YL)[PL[0X5]]=PL[0X1];end;end;else do if wL~=0X001 then do if not(not YL[PL[5]])then else do CL=PL[4];end;end;end;else if YL[PL[0X4]]<=YL[PL[0X07]]then CL=PL[0X5];end;end;end;end;end;else if wL>=12 then if wL<0Xe then do if wL~=13 then YL[PL[5]]=YL[PL[4]]>YL[PL[7]];else CL=PL[4];end;end;else if not(wL>=15)then(YL)[1]=KL[PL[1]];CL=CL+1;do(YL)[0X2]=YL[0X000];end;do PL=FL[CL];end;CL=CL+0X1;do YL[1][PL[0X1]]=YL[2];end;do PL=FL[CL];end;CL=CL+0X1;(YL)[1]=KL[PL[0X1]];CL=CL+1;NL=1;YL[NL]();NL=NL-0X1;CL=CL+1;repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0x1]==dL and EC[0X0002]>=0x0)then else local WC=EC[0X2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];EC[2]=1;end;end;end;until true;return;else do if wL==0X00010 then local dL=(PL[0x4]);local AL=PL[0X00005];do if dL==0x0 then else NL=AL+dL-0x00001;end;end;local DL,bC,BL=nil,nil,(PL[0X007]);if dL~=0x1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else do DL,bC=on(YL[AL]());end;end;if BL~=1 then do if BL~=0 then DL=AL+BL-0X2;NL=DL+0X00001;else DL=DL+AL-1;NL=DL;end;end;local uC=(0);do for EC=AL,DL do uC=uC+0x1;do YL[EC]=bC[uC];end;end;end;else NL=AL-1;end;else local AL=(PL[0X0004]);local BL,dL=AL[0X002],nil;local DL=#BL;do if not(DL>0x00)then else dL={};for bC=0X1,DL do local uC=BL[bC];if uC[0X0001]~=0 then dL[bC-0X1]=RL[uC[0x2]];else do dL[bC-0X00001]={YL,uC[0x2]};end;end;end;(x)(mL,dL);end;end;do(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;end;else if wL>=0XA then if wL~=11 then YL[PL[5]]={F({},0X1,PL[4])};else do YL[PL[5]]=YL[PL[4]]^YL[PL[7]];end;end;else if wL~=0X0009 then local AL=PL[0X00004];local dL=YL[AL];for BL=AL+0X1,PL[0X007]do do dL=dL..YL[BL];end;end;do(YL)[PL[5]]=dL;end;else if not(YL[PL[0X4]]<YL[PL[0X7]])then else CL=PL[0x0005];end;end;end;end;end;end;end;end);if nL then if TL then if rL~=0x1 then return YL[ML](F(YL,ML+0X01,NL));else return YL[ML]();end;elseif ML then do return F(YL,ML,rL);end;end;else if z(TL)=='\115\116r\105\110g'then if not(V(TL,'\097\116t\101\mpt\ \116o \121\i\e\l\100\ \097\099\114o\115\s\ \met\097\met\h\o\d/C\%\045\ca\108\108 \098o\117\110\d\097r\121'))then else do return q();end;end;if V(TL,'^\.\-:%d+\:\ ')then G('L\117\114a\ph\ S\cri\112t:'..(_L[CL-0x1]or"\(\int\101\114na\l\)")..'\: '..l(TL),0X0);else(G)(TL,0X0);end;else G(TL,0);end;end;end;else aL=function(...)local CL,YL=0x1,{};local kL=({[2]=qL,[0X1]=YL});local OL=(Q());local NL,KL=0,((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-1;for PL=0,LL do do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0x0,F(hL,XL+1,LL+0X1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+1;do if wL<8 then if not(wL>=4)then if wL>=2 then if wL==0X3 then(KL)[PL[1]]=YL[PL[5]];else YL[PL[0X5]]={F({},0X1,PL[0X004])};end;else do if wL~=0X1 then do(kL)[PL[4]]=YL[PL[0X5]];end;else(YL)[PL[5]]=KL[PL[1]];end;end;end;else if wL>=0x0006 then if wL==0X7 then for AL=PL[0X05],PL[4]do YL[AL]=nil;end;else local dL=nil;local AL=(PL[0X4]);local BL=AL[0X2];local DL=(#BL);if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[1]~=0 then do dL[bC-1]=RL[uC[2]];end;else(dL)[bC-1]={YL,uC[0X2]};end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;else if wL==0X00005 then(YL)[PL[5]]=true;else CL=PL[4];end;end;end;else if not(wL<12)then do if not(wL>=14)then do if wL~=13 then do(YL)[PL[0X005]]=YL[PL[0X4]]<YL[PL[0X7]];end;else YL[PL[5]]=YL[PL[4]][YL[PL[7]]];end;end;else if wL==15 then else if not(not(YL[PL[4]]<YL[PL[7]]))then else CL=PL[5];end;end;end;end;else if not(wL<10)then if wL==0xb then do repeat local AL,dL,BL,DL=mL,YL,PL[5],{};for bC,uC in U,AL do for EC,WC in U,uC do if not(WC[1]==dL and WC[2]>=BL)then else local eC=(WC[2]);if not(not DL[eC])then else DL[eC]={dL[eC]};end;(WC)[0X001]=DL[eC];(WC)[2]=0X1;end;end;end;until true;end;else YL[PL[5]]=PL[1];end;else if wL~=0x09 then YL[1]=KL[PL[1]];CL=CL+0X1;CL=CL+0X01;CL=CL+1;(YL)[2]=YL[0X0];PL=FL[CL];CL=CL+0X0001;(YL[0X1])[PL[0X1]]=YL[0x2];PL=FL[CL];do CL=CL+0X1;end;(YL)[1]=KL[PL[1]];CL=CL+1;NL=0X00001;YL[NL]();do NL=NL-0x1;end;CL=CL+0x001;do CL=CL+1;end;CL=CL+1;do repeat local AL,dL,BL=mL,YL,({});do for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[0X0002]>=0)then else local WC=(EC[0X2]);if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[0X1]=BL[WC];(EC)[0X2]=0x1;end;end;end;end;end;until true;end;return;else local AL=(PL[5]);local BL=YL[AL+0X0001];local DL=YL[AL+2];local dL=YL[AL];(YL)[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);CL=PL[4];end;end;end;end;end;end;end);if not(nL)then if z(TL)~='s\116\114\105\110\g'then G(TL,0);else if V(TL,'\097\116\116\em\p\116\032t\111\032\121\i\101ld\032a\cr\os\s\ \m\e\116\097me\116h\o\100/C\%-\ca\l\108\032b\111un\dar\121')then do return q();end;end;if V(TL,"\094\046-:\%d\+\058 ")then(G)('\L\117rap\104\ \083\c\114\ipt\058'..(_L[CL-0x00001]or'\(i\110t\101r\110\097l)')..":\ "..l(TL),0x0);else G(TL,0X000);end;end;else if TL then if rL==1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+0X1,NL));end;elseif ML then return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL,YL=1,{};local OL=(Q());local KL=(OL==_ and sL or OL);local kL=({[0X1]=YL,[2]=qL});local LL,hL=on(...);LL=LL-0X01;do for PL=0,LL do if not(XL>PL)then do break;end;else do YL[PL]=hL[PL+1];end;end;end;end;local NL=0X0;if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+1 or 0X00000,F(hL,XL+1,LL+1)};end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=(PL[2]);do CL=CL+0X1;end;if wL>=0X8 then if not(wL<12)then if wL<14 then if wL==0X000d then do YL[PL[0X5]]=PL[1];end;else end;else if wL==0XF then YL[PL[5]]={F({},0X1,PL[4])};else(YL)[2]=YL[0X000][PL[0X03]];CL=CL+0x00001;CL=CL+0x1;PL=FL[CL];CL=CL+1;do YL[2]=YL[0X002]==PL[3];end;CL=CL+0X1;repeat local dL,BL=mL,YL;local DL=({});do for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[0x02]>=0 then local eC=(WC[2]);do if not(not DL[eC])then else DL[eC]={BL[eC]};end;end;(WC)[0X1]=DL[eC];WC[0X002]=1;end;end;end;end;until true;local AL=(2);return false,AL,AL;end;end;else if not(wL>=0Xa)then if wL==9 then local AL=(PL[4]);local BL,dL=AL[2],nil;local DL=#BL;if DL>0 then do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[0X01]==0 then do(dL)[bC-0x1]={YL,uC[0X02]};end;else dL[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);else CL=PL[0X4];end;else if wL~=11 then(YL)[PL[5]]=YL[PL[4]]==YL[PL[7]];else repeat local dL,BL=mL,(YL);local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[2]>=0X00 then local eC=WC[2];if not(not DL[eC])then else do DL[eC]={BL[eC]};end;end;do(WC)[0X01]=DL[eC];end;(WC)[0X2]=0X1;end;end;end;until true;local AL=(PL[5]);return false,AL,AL+PL[4]-2;end;end;end;else if wL>=4 then if wL>=6 then if wL==0X007 then(YL)[PL[5]]=KL[PL[1]];else YL[0x02]=YL[0X00000][PL[0X003]];PL=FL[CL];do CL=CL+0X1;end;(YL)[0X3]=YL[1][PL[3]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+0x1;if YL[0X02]==YL[3]then CL=PL[0X5];end;end;else if wL~=5 then do(YL)[2]=YL[0X0][PL[3]];end;PL=FL[CL];CL=CL+0X1;YL[0X3]=YL[1][PL[0x0003]];local AL=0X2;CL=CL+0X00001;YL[0X2]=YL[2]<YL[3];CL=CL+1;repeat local DL={};local dL,BL=mL,(YL);for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[0X2]>=0 then local eC=(WC[0X0002]);if not DL[eC]then DL[eC]={BL[eC]};end;(WC)[0X001]=DL[eC];(WC)[0X2]=0X00001;end;end;end;until true;do return false,AL,AL;end;else repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do do for uC,EC in U,bC do do if EC[0x00001]==dL and EC[0x2]>=0X0000 then local WC=EC[2];do if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;end;(EC)[0X1]=BL[WC];EC[2]=1;end;end;end;end;end;until true;return;end;end;else if not(wL<2)then if wL~=3 then local AL=(PL[0X5]);local dL=g(function(...)(q)();do for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end;end);(dL)(YL[AL],YL[AL+1],YL[AL+0X2]);NL=AL;YL[AL]=dL;do CL=PL[4];end;else YL[PL[5]]=PL[4];end;else if wL~=1 then do if YL[PL[0x4]]<=YL[PL[0X7]]then do CL=PL[5];end;end;end;else if not(YL[PL[0X4]]<YL[PL[7]])then CL=PL[5];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='\st\114in\g'then if not(V(TL,"\097t\116\101\mp\116\ \116o\ \y\i\101\108d\ a\c\114o\ss\ \m\e\116\097metho\d/\067\037\045ca\l\l\ \098\ou\110\d\097r\y"))then else return q();end;if not(V(TL,"\^\.-\:\%d\+\:\ "))then G(TL,0X0);else(G)("Lu\114a\ph\ S\099r\ip\116\:"..(_L[CL-0X1]or"\(\in\116e\114\110a\l\041")..'\: '..l(TL),0X0);end;else G(TL,0);end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;end;else if HL~=132 then aL=function(...)local NL,YL=0x00,{};local CL=0X1;local OL=(Q());local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-1;for PL=0x000,LL do if XL>PL then(YL)[PL]=hL[PL+0X00001];else break;end;end;if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+0X0001,LL+0X1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+0X001;if not(wL<0X7)then if wL>=11 then if not(wL>=13)then if wL==12 then for AL=PL[5],PL[0x00004]do(YL)[AL]=nil;end;else if YL[PL[0X4]]<YL[PL[0X7]]then CL=PL[5];end;end;else if wL~=14 then(YL)[PL[5]]=YL[PL[0X04]]<YL[PL[0X007]];else(KL)[PL[1]]=YL[PL[0X5]];end;end;else if wL>=9 then if wL==0XA then(YL)[1]=KL[PL[0X01]];CL=CL+0X1;CL=CL+0X00001;do CL=CL+0X00001;end;(YL)[0X00002]=YL[0];do PL=FL[CL];end;do CL=CL+1;end;(YL[0X1])[PL[0X1]]=YL[2];PL=FL[CL];do CL=CL+0X1;end;(YL)[0X1]=KL[PL[0x1]];do CL=CL+1;end;NL=1;YL[NL]();do NL=NL-1;end;CL=CL+0X001;do CL=CL+1;end;CL=CL+1;do repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0X01]==dL and EC[2]>=0X0)then else local WC=(EC[0X2]);if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];do EC[0X02]=0X00001;end;end;end;end;end;end;until true;end;return;else(YL)[PL[0X005]]={F({},1,PL[4])};end;else if wL==8 then local AL=PL[4];local dL=(nil);local BL=AL[0X02];local DL=#BL;do if not(DL>0X00000)then else dL={};do for bC=1,DL do local uC=BL[bC];if uC[1]==0 then(dL)[bC-0x1]={YL,uC[2]};else dL[bC-1]=RL[uC[0X2]];end;end;end;(x)(mL,dL);end;end;(YL)[PL[0X00005]]=cn(dL,KL,AL);else do(YL)[PL[0X05]]=KL[PL[1]];end;end;end;end;else do if not(wL>=3)then do if wL<0X1 then else if wL==2 then YL[PL[0X5]]=YL[PL[0X4]]==YL[PL[0X7]];else YL[PL[5]]=K(YL[PL[0X004]],YL[PL[7]]);end;end;end;else if not(wL<0X5)then if wL==0X6 then local dL=(PL[0x004]);local AL=PL[5];do NL=AL+dL-1;end;repeat local bC={};local BL,DL=mL,(YL);for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[1]==DL and eC[0X002]>=0)then else local oC=eC[2];do if not(not bC[oC])then else bC[oC]={DL[oC]};end;end;eC[1]=bC[oC];(eC)[0X2]=0X1;end;end;end;until true;return true,AL,dL;else if not(YL[PL[0X4]]<=YL[PL[7]])then else CL=PL[5];end;end;else do if wL~=0X4 then do CL=PL[4];end;else(YL)[PL[5]]=PL[1];end;end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)~="\115t\114\105\110\103"then G(TL,0X0);else do if V(TL,'\097\116\116\101\109\pt\ t\111\ y\ie\l\100\ ac\114\os\s\ \109et\097\m\et\h\111\d\/\C%\-\cal\l\ boun\100a\114\y')then do return q();end;end;end;if V(TL,'\^\046\-\058\037\100\+\:\ ')then(G)('Lur\097ph\ S\099r\i\pt\:'..(_L[CL-1]or'\(\105\110terna\l\)')..'\058\ '..l(TL),0X0);else(G)(TL,0x00);end;end;else do if TL then if rL==0X0001 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;end;else aL=function(...)local YL={};local NL=0X0000;local OL=(Q());local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-0X1;local KL=((OL==_ and sL or OL));do for PL=0,LL do if XL>PL then YL[PL]=hL[PL+1];else do break;end;end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0x0000,F(hL,XL+0x1,LL+1)};end;local CL=1;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X0002];do CL=CL+1;end;if wL<0X9 then if not(wL>=4)then if wL<0X0002 then if wL==1 then local AL=(PL[5]);local BL,DL=YL[AL+0X0001],(YL[AL+0X2]);local dL=YL[AL];YL[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);CL=PL[4];else repeat local DL=({});local dL,BL=mL,YL;for bC,uC in U,dL do do for EC,WC in U,uC do if WC[1]==BL and WC[0x2]>=0X0 then local eC=(WC[0X2]);if not DL[eC]then do(DL)[eC]={BL[eC]};end;end;(WC)[0x1]=DL[eC];WC[0x02]=0x0001;end;end;end;end;until true;local AL=PL[5];do return false,AL,AL+PL[4]-2;end;end;else if wL==0x03 then(YL)[PL[0X5]]=PL[1];else YL[0X01]=KL[PL[1]];do CL=CL+1;end;do CL=CL+1;end;CL=CL+0X001;YL[0X02]={};PL=FL[CL];CL=CL+0X1;do(YL[1])[PL[1]]=YL[2];end;CL=CL+1;do repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X002]>=0X00000 then local WC=EC[0X2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[0x01]=BL[WC];(EC)[0x2]=0X1;end;end;end;until true;end;return;end;end;else if not(wL<6)then do if not(wL>=7)then CL=PL[0X4];else if wL~=0x8 then YL[PL[5]]=T(YL[PL[4]]);else local AL,dL=PL[5],PL[0X004];NL=AL+dL-1;repeat local BL,DL=mL,(YL);local bC={};for uC,EC in U,BL do for WC,eC in U,EC do if eC[0X00001]==DL and eC[2]>=0X0 then local oC=(eC[2]);if not(not bC[oC])then else(bC)[oC]={DL[oC]};end;(eC)[1]=bC[oC];(eC)[2]=0X001;end;end;end;until true;do return true,AL,dL;end;end;end;end;else if wL~=5 then local AL=PL[0X5];for dL=AL,AL+(PL[0x4]-0X00001)do YL[dL]=hL[XL+(dL-AL)+0X1];end;else for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;end;end;else do if wL>=13 then if wL<0Xf then if wL==14 then(YL)[PL[5]]=r(YL[PL[4]],YL[PL[0X7]]);else local AL,dL=PL[4],nil;local BL=(AL[2]);local DL=#BL;if not(DL>0)then else dL={};do for bC=0X1,DL do local uC=(BL[bC]);if uC[1]==0X00 then do dL[bC-1]={YL,uC[0X02]};end;else(dL)[bC-0x1]=RL[uC[2]];end;end;end;x(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);end;else if not(wL<0X0010)then if wL==17 then else local AL=RL[0];do YL[1]=AL[1][AL[2]];end;CL=CL+1;CL=CL+1;local dL=(1);CL=CL+0x1;(YL)[2]=YL[0X000];CL=CL+0X01;YL[dL]=YL[dL](YL[dL+0X1]);NL=dL;CL=CL+0x01;do CL=CL+0X001;end;do PL=FL[CL];end;CL=CL+1;if YL[1]~=PL[3]then CL=PL[5];end;end;else do YL[1]=KL[PL[0X1]];end;CL=CL+0X1;do(YL)[0X02]=YL[0];end;PL=FL[CL];CL=CL+1;do(YL[0X00001])[PL[0x01]]=YL[0X2];end;PL=FL[CL];CL=CL+0X1;(YL)[1]=KL[PL[0X1]];CL=CL+0X1;CL=CL+1;CL=CL+0X1;do NL=1;end;YL[NL]();NL=NL-0X001;CL=CL+0x1;repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0X0 then local WC=(EC[2]);if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;do EC[0x0001]=BL[WC];end;EC[2]=0X1;end;end;end;end;until true;return;end;end;else if wL>=0X0000B then do if wL==0Xc then YL[PL[0X00005]]={F({},0X1,PL[4])};else YL[PL[5]]=KL[PL[0x00001]];end;end;else if wL==10 then local AL,dL=PL[0x5],(PL[4]);do if dL==0 then else NL=AL+dL-1;end;end;local BL=PL[0x7];local DL,bC=nil,(nil);if dL==0x1 then do DL,bC=on(YL[AL]());end;else DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));end;if BL==1 then NL=AL-0X1;else if BL==0x0000 then DL=DL+AL-0x1;NL=DL;else do DL=AL+BL-2;end;NL=DL+1;end;local uC=(0X0);for EC=AL,DL do uC=uC+1;do(YL)[EC]=bC[uC];end;end;end;else do(YL)[PL[5]]=YL[PL[0X04]]%YL[PL[7]];end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=="\s\116r\i\110\103"then do if V(TL,'at\116\101\109\pt t\o\ \121\105\e\l\100\ \097\c\114\111\s\s \m\101t\097meth\o\d/\C%\-c\097l\108\ boun\100ar\121')then return q();end;end;if not(V(TL,"\^\.\-\058\%\100\+\: "))then G(TL,0x00000);else G('L\117\114\097p\h S\cr\105\pt\:'..(_L[CL-0X1]or"\(\i\110te\114n\097\l)")..': '..l(TL),0);end;else(G)(TL,0);end;end;else do if TL then do if rL==0X1 then return YL[ML]();else do return YL[ML](F(YL,ML+0X001,NL));end;end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;end;end;end;end;end;end;end;else do if HL>=0X22 then do if HL<51 then if not(HL>=42)then do if HL>=0X26 then if HL>=40 then if HL~=41 then aL=function(...)local YL=({});local CL=0x1;local OL=(Q());local NL=0;local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;do for PL=0X0000,LL do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;end;local KL=((OL==_ and sL or OL));if not SL then do hL=nil;end;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X000,F(hL,XL+0X00001,LL+1)};end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X2]);CL=CL+0X0001;if wL>=0x7 then if wL<10 then if not(wL>=0X8)then YL[PL[0x005]]=YL[PL[4]]>=YL[PL[0x7]];else if wL~=9 then YL[PL[0x5]]=KL[PL[1]];else(YL)[0x1]=KL[PL[1]];CL=CL+1;YL[0X2]=YL[0x0000];PL=FL[CL];CL=CL+1;YL[1][PL[0X1]]=YL[0X02];do PL=FL[CL];end;do CL=CL+0x1;end;(YL)[0X1]=KL[PL[1]];CL=CL+1;NL=1;(YL[NL])();NL=NL-1;CL=CL+0x1;CL=CL+1;do CL=CL+1;end;repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X2]>=0 then local WC=(EC[0x2]);if not(not BL[WC])then else do BL[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];EC[0x002]=0X001;end;end;end;until true;do return;end;end;end;else if wL<0X0C then if wL==11 then YL[PL[5]]={F({},0X1,PL[4])};else for AL=PL[0X05],PL[0x04]do YL[AL]=nil;end;end;else do if wL==13 then(KL)[PL[0X1]]=YL[PL[0x5]];else(YL)[PL[5]]=h(YL[PL[0X4]],YL[PL[0X7]]);end;end;end;end;else if not(wL>=0X3)then if not(wL<0X1)then if wL==0X02 then local AL=PL[4];local BL=(AL[2]);local dL=nil;local DL=#BL;if DL>0x0 then dL={};for bC=0X1,DL do local uC=BL[bC];if uC[1]==0x0 then dL[bC-1]={YL,uC[2]};else dL[bC-0x1]=RL[uC[2]];end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else CL=PL[4];end;else repeat local dL,BL,DL=mL,YL,({});for bC,uC in U,dL do do for EC,WC in U,uC do if WC[1]==BL and WC[2]>=0X0 then local eC=(WC[2]);if not DL[eC]then(DL)[eC]={BL[eC]};end;WC[1]=DL[eC];WC[2]=1;end;end;end;end;until true;local AL=(PL[5]);return false,AL,AL+PL[0X00004]-0X2;end;else if not(wL<5)then if wL==0X06 then else YL[PL[0X5]]=YL[PL[4]]^YL[PL[7]];end;else do if wL~=0x4 then do(YL)[PL[5]]=PL[1];end;else local dL=(nil);local AL=(PL[4]);local BL=(AL[0X02]);local DL=#BL;if not(DL>0)then else dL={};for bC=0X1,DL do local uC=BL[bC];if uC[0X00001]~=0X0 then(dL)[bC-0X1]=RL[uC[2]];else do dL[bC-0x01]={YL,uC[0X2]};end;end;end;x(mL,dL);end;do(YL)[PL[0X05]]=u[PL[0X7]](dL);end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\st\114\105\110g"then G(TL,0);else if V(TL,"\097\116t\emp\116\032\116\111\ \yi\e\l\d ac\114\o\ss \meta\m\101\116\104\o\d\047C\%\045\099a\l\l\ \098\111\117\110\da\114y")then do return q();end;end;if V(TL,'\^\.\045:\037d\043\:\032')then(G)("\Lur\097p\h\ \Sc\114\105\pt\058"..(_L[CL-1]or'\(\105\110t\e\114\110\097\108)').."\058\032"..l(TL),0x0);else G(TL,0);end;end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else aL=function(...)local CL,YL,NL=0x00001,{},0X0;local kL={[0X1]=YL,[2]=qL};local OL=Q();local LL,hL=on(...);local KL=((OL==_ and sL or OL));do LL=LL-0X01;end;for PL=0,LL do do if XL>PL then(YL)[PL]=hL[PL+0X00001];else do break;end;end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X001 or 0X0,F(hL,XL+1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0x2];CL=CL+0X0001;do if wL<0x6 then if wL>=0X3 then if not(wL>=4)then YL[PL[0X5]]=r(YL[PL[0X004]],YL[PL[7]]);else if wL==0X05 then for AL=PL[0X005],PL[4]do do(YL)[AL]=nil;end;end;else YL[PL[5]]={F({},1,PL[0X4])};end;end;else do if not(wL>=0x00001)then CL=PL[0X4];else if wL~=0X2 then local AL=PL[4];local dL=nil;local BL=AL[2];local DL=#BL;if DL>0x0 then dL={};do for bC=0X001,DL do local uC=BL[bC];if uC[1]==0X0 then(dL)[bC-0X1]={YL,uC[2]};else do(dL)[bC-0X1]=RL[uC[2]];end;end;end;end;x(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);else(YL)[PL[5]]=PL[0X0001];end;end;end;end;else if not(wL<9)then if wL<0Xb then if wL~=10 then(KL)[PL[0x001]]=YL[PL[5]];else(YL)[PL[0x5]]=K(YL[PL[0X4]],YL[PL[0x007]]);end;else if wL==0X000c then(YL)[PL[0X005]]=KL[PL[1]];else end;end;else if wL<7 then YL[PL[0X5]]=YL[PL[4]]%YL[PL[7]];else if wL~=8 then local AL,dL=PL[5],(PL[0x4]);if dL~=0X0 then NL=AL+dL-0x1;end;local DL,bC=nil,(nil);local BL=(PL[0x7]);if dL~=0X001 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else DL,bC=on(YL[AL]());end;if BL~=1 then do if BL==0 then DL=DL+AL-0X01;do NL=DL;end;else do DL=AL+BL-2;end;do NL=DL+0x1;end;end;end;local uC=0;for EC=AL,DL do uC=uC+1;(YL)[EC]=bC[uC];end;else NL=AL-0X1;end;else YL[0x0001]=KL[PL[0X1]];CL=CL+1;local uC=1;CL=CL+0x001;CL=CL+1;YL[2]=YL[0];PL=FL[CL];do CL=CL+0X1;end;(YL[1])[PL[0X00001]]=YL[0X00002];do PL=FL[CL];end;CL=CL+1;do(YL)[0X0001]=KL[PL[0X1]];end;CL=CL+0x001;do NL=0X1;end;YL[NL]();NL=NL-0X1;do CL=CL+0x1;end;local AL=RL[0X0];CL=CL+1;do CL=CL+0x00001;end;do(YL)[1]=AL[1][AL[0x00002]];end;PL=FL[CL];CL=CL+0x1;local dL=PL[0X4];local BL=nil;local DL=dL[0x2];local bC=#DL;if bC>0 then BL={};do for EC=0X1,bC do local WC=DL[EC];if WC[1]==0 then(BL)[EC-0X1]={YL,WC[2]};else(BL)[EC-0X1]=RL[WC[2]];end;end;end;x(mL,BL);end;YL[2]=cn(BL,KL,dL);CL=CL+1;YL[uC](YL[uC+0X1]);do NL=uC-0X1;end;CL=CL+0X00001;repeat local eC={};local EC,WC=mL,(YL);for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[0X001]==WC and lC[0x2]>=0X0000)then else local GC=lC[2];if not(not eC[GC])then else(eC)[GC]={WC[GC]};end;(lC)[0X001]=eC[GC];lC[2]=1;end;end;end;until true;return;end;end;end;end;end;end;end);if nL then if TL then if rL~=0X1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;else if z(TL)~="\str\in\g"then(G)(TL,0);else do if V(TL,"\097t\116\e\m\p\116\ \116o\ \yi\e\l\d\032a\cr\o\s\s\032\109e\116a\m\101t\104\o\100\/\C\%\-\c\097\l\l\ b\o\117\110\d\097ry")then return q();end;end;if not(V(TL,'\^\046\-\:\%\d\+\:\ '))then G(TL,0);else(G)("\076\117\114\097\p\h\ \083\c\114\105pt\058"..(_L[CL-0X0001]or'\(\in\116ern\097\108\)')..'\:\ '..l(TL),0X00);end;end;end;end;end;else if HL~=39 then aL=function(...)local CL,YL,NL=1,{},(0X0);local OL=(Q());local kL=({[0X1]=YL,[2]=qL});local KL=(OL==_ and sL or OL);local LL,hL=on(...);do LL=LL-1;end;do for PL=0X0,LL do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0x00001 or 0X0,F(hL,XL+0X0001,LL+0X00001)};end;end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X02]);do CL=CL+1;end;do if not(wL<0X03c)then if not(wL>=0X5A)then if not(wL<75)then do if wL>=0X52 then if wL<86 then if not(wL<84)then if wL==0X55 then YL[PL[0X5]]=YL[PL[0X00004]]*YL[PL[0X7]];else repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do do if not(EC[1]==dL and EC[0x2]>=0X0)then else local WC=(EC[0X0002]);do if not BL[WC]then do BL[WC]={dL[WC]};end;end;end;do EC[1]=BL[WC];end;(EC)[0X002]=1;end;end;end;end;until true;return true,PL[5],0X0001;end;else do if wL~=83 then repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do do for uC,EC in U,bC do if EC[0x1]==dL and EC[2]>=0 then local WC=EC[2];if not BL[WC]then(BL)[WC]={dL[WC]};end;(EC)[1]=BL[WC];do(EC)[0x002]=1;end;end;end;end;end;until true;return;else local AL=(PL[5]);local BL,dL=YL[AL],((PL[0x7]-1)*50);for DL=1,NL-AL do do(BL)[dL+DL]=YL[AL+DL];end;end;end;end;end;else do if wL>=88 then do if wL==0X0059 then if not(YL[PL[0X004]]<PL[3])then CL=PL[5];end;else do(ln)[PL[0X00004]]=YL[PL[5]];end;end;end;else do if wL==0X57 then if not(not YL[PL[5]])then else CL=PL[0X4];end;else NL=PL[0x5];YL[NL]();NL=NL-1;end;end;end;end;end;else if wL>=78 then if not(wL>=80)then if wL~=0X00004F then YL[PL[0X5]]=YL[PL[0X4]]<=YL[PL[7]];else YL[PL[0X05]]=ln[PL[4]];end;else if wL==81 then(YL)[PL[5]]=K(YL[PL[4]],YL[PL[0x7]]);else(YL)[PL[0X5]]=YL[PL[0X4]]<PL[0X0003];end;end;else if not(wL>=0X4C)then if not(YL[PL[5]])then else CL=PL[4];end;else do if wL==77 then do YL[PL[5]]=YL[PL[4]]>YL[PL[7]];end;else(YL)[PL[0x5]]=PL[0X00001];end;end;end;end;end;end;else if wL>=0x000043 then if not(wL>=0x47)then do if not(wL<0x45)then if wL==70 then YL[PL[5]]=PL[1]~=PL[3];else(YL)[PL[0x5]]=PL[0X1]<=YL[PL[7]];end;else do if wL==0x00044 then local AL=(PL[5]);local dL,BL=YL[AL],YL[AL+0x0001];local DL=YL[AL+0X02];YL[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);CL=PL[0x004];else(YL[PL[0X5]])[PL[1]]=YL[PL[0x7]];end;end;end;end;else if not(wL<0X49)then do if wL~=74 then do(YL)[PL[5]]=r(YL[PL[4]],YL[PL[0X7]]);end;else do YL[PL[0X5]][YL[PL[4]]]=YL[PL[7]];end;end;end;else if wL==0X048 then YL[PL[5]]=PL[1]<PL[3];else YL[PL[5]]=YL[PL[4]]~=YL[PL[0X7]];end;end;end;else do if not(wL<0X3F)then if wL>=0x41 then if wL==0x42 then do(YL)[PL[0X5]]=YL[PL[0X4]]-YL[PL[7]];end;else local AL=(PL[0X05]);local dL,BL,DL=YL[AL]();if dL then YL[AL+0X1]=BL;do(YL)[AL+2]=DL;end;do CL=PL[4];end;end;end;else if wL~=64 then YL[PL[0X0005]]=PL[0X00001]^YL[PL[7]];else local AL=PL[5];NL=AL+PL[0x4]-0X1;YL[AL](F(YL,AL+1,NL));do NL=AL-1;end;end;end;else if wL<0x03D then local AL=PL[5];local dL,BL=YL[AL]();if not(dL)then else for DL=0x0001,PL[7]do do YL[AL+DL]=BL[DL];end;end;CL=PL[0X04];end;else if wL~=0x3E then if YL[PL[4]]~=PL[3]then do CL=PL[0X0005];end;end;else do YL[PL[5]]=YL[PL[0X0004]]<YL[PL[0x7]];end;end;end;end;end;end;end;else if not(wL>=105)then if wL>=0X61 then do if not(wL<0X65)then do if wL>=103 then if wL==0X68 then local AL=PL[5];local dL,BL=YL[AL]();do if dL then do CL=PL[0x4];end;YL[AL+0X3]=BL;end;end;else if not(YL[PL[4]]<=YL[PL[0X00007]])then else CL=PL[5];end;end;else if wL==102 then YL[PL[5]]=YL[PL[4]]<=PL[3];else YL[PL[0X5]]=YL[PL[0X04]]~=PL[0X3];end;end;end;else if wL>=99 then if wL==0X64 then local AL=(PL[0X5]);local dL=((PL[7]-0X1)*0X32);local BL=YL[AL];for DL=1,PL[4]do(BL)[dL+DL]=YL[AL+DL];end;else if YL[PL[0x4]]==YL[PL[7]]then else CL=PL[5];end;end;else if wL==98 then(YL)[PL[5]]=M(YL[PL[0X4]],YL[PL[0x007]]);else if not(not(YL[PL[4]]<YL[PL[7]]))then else CL=PL[5];end;end;end;end;end;else if wL>=0X005D then if not(wL<0X005f)then do if wL~=0x60 then local AL=(PL[5]);YL[AL]=YL[AL](YL[AL+1]);do NL=AL;end;else YL[PL[5]]=T(YL[PL[4]]);end;end;else if wL~=94 then if PL[0X7]==191 then CL=CL-0X1;(FL)[CL]={[0X0004]=(PL[4]-173),[0X2]=105,[5]=(PL[0X05]-0X0aD)};elseif PL[0X007]==0X0001C then do CL=CL-0x1;end;(FL)[CL]={[5]=(PL[0X5]-0XAf),[0X4]=(PL[4]-175),[2]=0x017};else(YL)[PL[0X0005]]=-YL[PL[4]];end;else YL[PL[5]]=PL[1]-PL[0X0003];end;end;else if wL>=91 then do if wL~=92 then(YL[PL[5]])[PL[1]]=PL[0x3];else local AL,dL=PL[0X05],(PL[0x4]);local BL=PL[0X7];if dL~=0X00 then do NL=AL+dL-1;end;end;local DL,bC=nil,nil;if dL~=0X001 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;if BL~=0X1 then if BL==0 then DL=DL+AL-0X1;NL=DL;else DL=AL+BL-0X2;NL=DL+1;end;local uC=(0X0);for EC=AL,DL do do uC=uC+1;end;do YL[EC]=bC[uC];end;end;else NL=AL-0X001;end;end;end;else(YL)[PL[0x05]]=YL[PL[0X4]][PL[0x0003]];end;end;end;else do if wL>=0X0071 then if not(wL<0X075)then do if wL>=119 then do if wL~=0X78 then do YL[PL[0X5]]={};end;else(YL)[PL[5]]=YL[PL[0X4]]/YL[PL[7]];end;end;else if wL~=0X76 then do YL[PL[5]]=YL[PL[4]]^YL[PL[0X07]];end;else if not(not(PL[0X01]<YL[PL[7]]))then else do CL=PL[5];end;end;end;end;end;else if not(wL>=0x073)then if wL~=0X00072 then do if PL[7]==66 then CL=CL-1;do(FL)[CL]={[2]=15,[0X04]=(PL[4]-100),[0X0005]=(PL[5]-100)};end;elseif PL[0X007]~=235 then local AL,dL=PL[5],LL-XL;if dL<0 then do dL=-1;end;end;for BL=AL,AL+dL do(YL)[BL]=hL[XL+(BL-AL)+1];end;NL=AL+dL;else do CL=CL-0X1;end;(FL)[CL]={[2]=0X0002B,[5]=(PL[0x5]-13),[4]=(PL[4]-13)};end;end;else if YL[PL[0X4]]<YL[PL[7]]then CL=PL[5];end;end;else if wL==116 then YL[PL[5]]=KL[PL[0X0001]];else YL[PL[0X5]]=YL[PL[4]]+PL[0X0003];end;end;end;else if not(wL>=0X6d)then if wL>=107 then if wL==108 then if YL[PL[4]]~=YL[PL[7]]then else CL=PL[0X005];end;else YL[PL[0X5]]=PL[0X1]+YL[PL[0X00007]];end;else if wL~=0X6A then for AL=PL[0X00005],PL[0X00004]do do YL[AL]=nil;end;end;else local AL=PL[0X5];local dL=(g(function(...)(q)();for BL,DL in...do(q)(true,BL,DL);end;end));(dL)(YL[AL],YL[AL+1],YL[AL+2]);NL=AL;do(YL)[AL]=dL;end;CL=PL[4];end;end;else if wL<0x6f then if wL~=110 then(YL)[PL[5]]={F({},1,PL[0X4])};else local AL=(PL[5]);local dL=(g(function(...)(q)();for BL in...do q(true,BL);end;end));dL(YL[AL],YL[AL+0X1],YL[AL+0X0002]);NL=AL;YL[AL]=dL;do CL=PL[4];end;end;else if wL~=0X070 then YL[PL[5]][YL[PL[0x4]]]=PL[3];else do(KL)[PL[1]]=YL[PL[5]];end;end;end;end;end;end;end;end;else if not(wL>=0X001E)then do if not(wL>=0XF)then do if not(wL<7)then if wL>=11 then if wL<13 then if wL~=0Xc then do repeat local dL,BL=mL,(YL);local DL={};for bC,uC in U,dL do do for EC,WC in U,uC do if WC[1]==BL and WC[2]>=0 then local eC=(WC[0X002]);if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;WC[0X1]=DL[eC];(WC)[0X2]=0X01;end;end;end;end;until true;end;local AL=(PL[5]);NL=AL+0x00001;return true,AL,0X2;else CL=PL[0x4];end;else if wL==14 then(YL)[PL[5]]=PL[0X1]>=PL[3];else local AL=(PL[0X4]);local BL=AL[2];local dL=(nil);local DL=(#BL);if DL>0 then dL={};for bC=1,DL do local uC=(BL[bC]);if uC[0X0001]~=0 then dL[bC-1]=RL[uC[2]];else do dL[bC-0X1]={YL,uC[2]};end;end;end;x(mL,dL);end;YL[PL[0X05]]=u[PL[7]](dL);end;end;else do if not(wL<0X09)then if wL~=10 then if not(not(PL[1]<=YL[PL[7]]))then else CL=PL[0X00005];end;else local AL=PL[4];local dL=nil;local BL=(AL[0x2]);local DL=(#BL);if not(DL>0X0)then else dL={};for bC=0X01,DL do local uC=BL[bC];if uC[0x1]==0X0 then dL[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[2]];end;end;x(mL,dL);end;do YL[PL[0X5]]=cn(dL,KL,AL);end;end;else if wL~=8 then local AL=(PL[0X5]);YL[AL](F(YL,AL+0X001,NL));do NL=AL-1;end;else YL[PL[5]]=YL[PL[0X4]]*PL[0x0003];end;end;end;end;else if wL<0X03 then if wL>=1 then do if wL==0X00002 then(YL)[PL[5]]=YL[PL[0X004]]>=YL[PL[7]];else local AL=PL[0X5];do(YL)[AL]=YL[AL](YL[AL+0X1],YL[AL+0X2]);end;NL=AL;end;end;else local AL=(PL[4]);do(YL)[PL[0X5]]=YL[AL]..YL[AL+0X1];end;end;else if not(wL>=5)then if wL~=0X004 then do(YL)[PL[0X5]]=YL[PL[0X4]]==PL[3];end;else local AL=(PL[4]);local dL=YL[AL];do for BL=AL+1,PL[0X7]do do dL=dL..YL[BL];end;end;end;do(YL)[PL[5]]=dL;end;end;else if wL==6 then(YL)[PL[5]]=false;else(YL)[PL[5]]=YL[PL[0X4]]>=PL[0X3];end;end;end;end;end;else if not(wL>=0X16)then if not(wL>=18)then if not(wL<0X00010)then do if wL~=17 then do(YL)[PL[0X5]]=YL[PL[4]]%YL[PL[7]];end;else YL[PL[0X005]]=YL[PL[4]][YL[PL[0X7]]];end;end;else if PL[7]==0xd2 then CL=CL-0X0001;do FL[CL]={[0x00005]=(PL[0x05]-0X05b),[2]=0X25,[0X00004]=(PL[0X00004]-0X5b)};end;else YL[PL[5]]=#YL[PL[0X4]];end;end;else do if wL<20 then if wL==0X13 then if YL[PL[0X4]]==PL[3]then CL=PL[5];end;else YL[PL[5]]=YL[PL[4]]/PL[3];end;else if wL~=0X15 then YL[PL[5]]=true;else(YL)[PL[0X005]]=YL[PL[4]]-PL[3];end;end;end;end;else if not(wL<0X1A)then if wL<0x1c then do if wL~=27 then local AL=(PL[5]);local dL,BL=YL[AL]();if not(dL)then else do(YL)[AL+1]=BL;end;CL=PL[0X4];end;else do YL[PL[0X5]]=PL[1]-YL[PL[0X07]];end;end;end;else if wL==29 then local dL=YL[PL[4]];local AL=(PL[0X5]);YL[AL+0x1]=dL;YL[AL]=dL[PL[0X3]];else if PL[0X0007]==0XA1 then do CL=CL-0x1;end;FL[CL]={[0X05]=(PL[5]-0X79),[0x2]=105,[4]=(PL[0X00004]-0X79)};elseif PL[7]==73 then CL=CL-0x1;(FL)[CL]={[2]=0X0052,[5]=(PL[0X5]-0),[0x04]=(PL[4]-0X00)};else YL[PL[0X5]]=not YL[PL[0X4]];end;end;end;else if wL<24 then if wL~=0x17 then YL[PL[0X5]]=hL[XL+1];else do if PL[0X7]==0X024 then CL=CL-0X1;FL[CL]={[4]=(PL[0X4]-217),[5]=(PL[5]-217),[0x002]=0X3a};else YL[PL[0X05]]=nil;end;end;end;else if wL~=25 then do if not(YL[PL[4]]<=YL[PL[7]])then CL=PL[0x5];end;end;else kL[PL[0X4]]=YL[PL[0X005]];end;end;end;end;end;end;else if wL<0x00002d then do if not(wL>=0X25)then if wL<33 then do if not(wL<0X1f)then if wL==32 then YL[PL[5]]=PL[1]~=YL[PL[0x7]];else local AL=PL[0X0005];NL=AL+PL[4]-1;YL[AL]=YL[AL](F(YL,AL+0X001,NL));do NL=AL;end;end;else local AL=PL[0X0005];(YL[AL])(YL[AL+0X1],YL[AL+0X00002]);NL=AL-1;end;end;else if wL<35 then if wL==34 then YL[PL[5]]=PL[0X4];else NL=PL[5];(YL)[NL]=YL[NL]();end;else do if wL==0X24 then(YL)[PL[5]]=h(YL[PL[0X0004]],YL[PL[0x007]]);else local AL=(PL[0X5]);do(YL)[AL]=YL[AL](F(YL,AL+1,NL));end;do NL=AL;end;end;end;end;end;else if not(wL<0X29)then do if wL>=0x002b then if wL~=44 then if PL[0x07]==39 then CL=CL-1;do FL[CL]={[0X004]=(PL[4]-157),[0x5]=(PL[0X05]-0X9d),[0X2]=58};end;elseif PL[0X7]==6 then do CL=CL-1;end;(FL)[CL]={[0x4]=(PL[0X4]-81),[0x2]=105,[0x00005]=(PL[5]-0X000051)};elseif PL[0X7]==211 then do CL=CL-0X1;end;(FL)[CL]={[2]=28,[4]=(PL[0X4]-90),[0x5]=(PL[0X5]-90)};else repeat local AL,dL,BL,DL=mL,YL,PL[5],({});do for bC,uC in U,AL do for EC,WC in U,uC do do if not(WC[0X00001]==dL and WC[0X2]>=BL)then else local eC=WC[0X2];if not(not DL[eC])then else(DL)[eC]={dL[eC]};end;WC[0X00001]=DL[eC];do WC[2]=1;end;end;end;end;end;end;until true;end;else(YL)[PL[5]]=L(YL[PL[4]],YL[PL[7]]);end;else if wL==0x2A then local AL=PL[0X5];local dL=g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);(dL)(YL[AL],YL[AL+1],YL[AL+0x2]);NL=AL;do YL[AL]=dL;end;do CL=PL[4];end;else local AL,dL=PL[0x5],PL[4];do NL=AL+dL-1;end;repeat local BL,DL=mL,YL;local bC=({});do for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[1]==DL and eC[2]>=0X0)then else local oC=eC[2];if not(not bC[oC])then else do(bC)[oC]={DL[oC]};end;end;(eC)[1]=bC[oC];eC[2]=1;end;end;end;end;until true;do return true,AL,dL;end;end;end;end;else do if not(wL>=0X27)then if wL==38 then repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X01]==dL and EC[0X2]>=0X00)then else local WC=EC[0X2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;(EC)[0X001]=BL[WC];EC[0X2]=1;end;end;end;until true;return true,PL[5],0x0;else if PL[7]==0xbb then CL=CL-1;do(FL)[CL]={[0X5]=(PL[0X05]-138),[4]=(PL[4]-0X8a),[0X0002]=0x36};end;elseif PL[0x7]==0xfD then CL=CL-0X1;do FL[CL]={[5]=(PL[5]-156),[0X2]=22,[4]=(PL[0X004]-0X009C)};end;elseif PL[0X7]==78 then CL=CL-1;FL[CL]={[0X2]=58,[5]=(PL[5]-0xF5),[0x04]=(PL[0x4]-245)};else repeat local dL,BL=mL,(YL);local DL=({});do for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0X1]==BL and WC[2]>=0X0 then local eC=(WC[2]);if not DL[eC]then DL[eC]={BL[eC]};end;(WC)[1]=DL[eC];do(WC)[2]=0X1;end;end;end;end;end;end;until true;local AL=PL[5];return false,AL,AL+PL[4]-2;end;end;else if wL==40 then YL[PL[0X5]]=YL[PL[4]]+YL[PL[0X7]];else local AL=(YL[PL[4]]/YL[PL[7]]);(YL)[PL[0X00005]]=AL-AL%1;end;end;end;end;end;end;else if not(wL<0X00034)then if wL<0X38 then do if wL>=0X36 then if wL~=0x00037 then if PL[0x0007]==0X00080 then do CL=CL-0X1;end;(FL)[CL]={[4]=(PL[0X4]-0X00004b),[0x05]=(PL[5]-75),[2]=0X00035};elseif PL[0X07]==8 then CL=CL-0X001;do(FL)[CL]={[0X5]=(PL[0x5]-73),[2]=0X52,[4]=(PL[4]-73)};end;else repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X001]==BL and WC[2]>=0)then else local eC=(WC[0x2]);if not DL[eC]then do(DL)[eC]={BL[eC]};end;end;WC[1]=DL[eC];WC[2]=0X00001;end;end;end;until true;local AL=(PL[5]);do return false,AL,AL;end;end;else local AL=(RL[PL[0X4]]);do(AL[1])[AL[2]]=YL[PL[0x0005]];end;end;else do if wL==0X0035 then if PL[7]==213 then do CL=CL-0X0001;end;(FL)[CL]={[0X5]=(PL[5]-167),[2]=28,[0X0004]=(PL[0X00004]-167)};elseif PL[0X7]==44 then do CL=CL-1;end;(FL)[CL]={[5]=(PL[5]-14),[0X4]=(PL[4]-0Xe),[0X2]=0X16};else(YL)[PL[5]]=YL[PL[0X4]];end;else YL[PL[0X5]]=PL[1]>YL[PL[7]];end;end;end;end;else do if wL>=58 then if wL~=0X3B then if PL[0X7]~=173 then repeat local AL,dL=mL,(YL);local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0X0 then local WC=EC[2];if not(not BL[WC])then else BL[WC]={dL[WC]};end;do(EC)[1]=BL[WC];end;EC[2]=0X1;end;end;end;end;until true;return false,PL[0X00005],NL;else CL=CL-1;(FL)[CL]={[0X04]=(PL[0X4]-95),[5]=(PL[5]-95),[0X00002]=0xF};end;else YL[PL[5]]=YL[PL[4]]==YL[PL[0X7]];end;else if wL~=57 then do(YL)[PL[5]]=PL[1]*YL[PL[7]];end;else if not(PL[0X1]<=YL[PL[0X7]])then else CL=PL[0x5];end;end;end;end;end;else if not(wL<48)then if not(wL<0X00032)then do if wL==51 then local AL=(RL[PL[4]]);do YL[PL[0X5]]=AL[1][AL[0X2]];end;else if PL[0X7]~=0Xa then local AL=PL[5];do for dL=AL,AL+(PL[4]-0X1)do YL[dL]=hL[XL+(dL-AL)+0x0001];end;end;else CL=CL-1;(FL)[CL]={[4]=(PL[4]-35),[5]=(PL[0X0005]-35),[0X02]=0X01C};end;end;end;else if wL==49 then(YL)[PL[0X05]]=PL[1]+PL[3];else do YL[PL[0X5]]=YL[PL[0X4]]%PL[0X3];end;end;end;else do if wL>=0x2E then do if wL~=47 then local AL=(PL[5]);(YL[AL])(YL[AL+0x00001]);NL=AL-0X1;else(YL)[PL[5]]=kL[PL[0X4]];end;end;else YL[PL[0x5]]=YL[PL[0x4]]>PL[3];end;end;end;end;end;end;end;end;end;end);do if nL then if TL then if rL~=0X01 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;else do if z(TL)~='\115t\114\105\110\103'then G(TL,0X0);else if V(TL,"\097\116\116\e\m\p\116\ t\111 \y\ie\l\d\ \097\099\114\os\115\032\109e\116a\109\e\116\h\o\d/\067\%\-\c\097\ll\ \098\o\117\110\100\097\114\y")then return q();end;if not(V(TL,'^.\-\:\%d\+\058\032'))then G(TL,0);else G("\Lura\112\h \083c\114\ipt\058"..(_L[CL-1]or'\040\in\116\erna\108\)').."\:\032"..l(TL),0x0000);end;end;end;end;end;end;else aL=function(...)local NL=0;local CL,YL=0X1,({});local kL=({[2]=qL,[0X1]=YL});local OL=(Q());local LL,hL=on(...);do LL=LL-1;end;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;local KL=(OL==_ and sL or OL);if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+0x1 or 0,F(hL,XL+1,LL+1)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+0X001;do if wL<6 then if wL>=3 then if wL>=4 then if wL~=0X0005 then local dL,BL=PL[0x4],(PL[7]);local AL=(PL[5]);do if dL==0X0 then else NL=AL+dL-1;end;end;local DL,bC=nil,(nil);if dL==1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;if BL==1 then NL=AL-1;else if BL~=0 then DL=AL+BL-2;NL=DL+0X00001;else DL=DL+AL-1;NL=DL;end;local uC=(0);for EC=AL,DL do uC=uC+1;do(YL)[EC]=bC[uC];end;end;end;else(YL)[PL[0X5]]=YL[PL[4]];PL=FL[CL];CL=CL+0X1;do(YL)[PL[0X5]]=YL[PL[0X004]];end;PL=FL[CL];do CL=CL+1;end;local AL=2;do repeat local dL,BL=mL,(YL);local DL=({});do for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[0X002]>=0 then local eC=WC[0X2];if not(not DL[eC])then else DL[eC]={BL[eC]};end;(WC)[0X001]=DL[eC];WC[2]=1;end;end;end;end;until true;end;do return false,AL,AL+PL[0X04]-2;end;end;else repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do do for uC,EC in U,bC do if EC[0X001]==dL and EC[2]>=0 then local WC=EC[0X2];if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];EC[0X2]=1;end;end;end;end;until true;return;end;else if wL>=1 then if wL==2 then(YL)[PL[0x5]]={F({},0x1,PL[0X04])};else(YL)[PL[5]]=KL[PL[0X1]];end;else local AL=(PL[4]);local BL,dL=AL[0X2],(nil);local DL=(#BL);if DL>0X0 then dL={};for bC=1,DL do local uC=(BL[bC]);if uC[0X1]~=0x0 then(dL)[bC-1]=RL[uC[0X2]];else dL[bC-0X1]={YL,uC[2]};end;end;x(mL,dL);end;YL[PL[5]]=u[PL[0X7]](dL);end;end;else if not(wL>=0X9)then if not(wL>=0X7)then else if wL~=8 then YL[PL[0X5]]=PL[4];else local AL=(PL[4]);local dL=nil;local BL=(AL[2]);local DL=(#BL);do if not(DL>0X000)then else dL={};for bC=0X01,DL do local uC=(BL[bC]);if uC[0x01]==0X00000 then(dL)[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[0X2]];end;end;(x)(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;else if wL>=10 then do if wL~=11 then YL[PL[0X5]]=#YL[PL[4]];else(YL)[PL[0x5]]=PL[0X1];end;end;else do CL=PL[4];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\s\116\114i\110g"then(G)(TL,0);else do if not(V(TL,"\097tt\e\m\p\116\032t\o\ \y\105e\ld\ \097\cr\111s\s\ \109\eta\me\116\104\111\d\/\C%\-\c\097\108l\ b\ou\110\da\114y"))then else return q();end;end;do if V(TL,'\^.\-\:\037d\043:\032')then(G)("Lur\097\ph \S\c\114\105\pt:"..(_L[CL-0X001]or'\(\in\116erna\l\041').."\:\032"..l(TL),0X000);else G(TL,0X0);end;end;end;else if TL then do if rL~=0x1 then do return YL[ML](F(YL,ML+0X0001,NL));end;else do return YL[ML]();end;end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;else if HL>=0x00024 then if HL==37 then do aL=function(...)local NL=0;local CL,YL=0X1,({});local OL=(Q());local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);local KL=(OL==_ and sL or OL);LL=LL-0x1;for PL=0X00,LL do do if not(XL>PL)then break;else do YL[PL]=hL[PL+1];end;end;end;end;do if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X0001 or 0,F(hL,XL+0X1,LL+1)};end;end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X2]);CL=CL+0x1;if not(wL<7)then if wL<11 then do if not(wL>=0x09)then if wL==8 then KL[PL[1]]=YL[PL[5]];else do YL[PL[0X5]]=YL[PL[4]]+YL[PL[7]];end;end;else if wL==0Xa then(YL)[PL[5]]=#YL[PL[4]];else(YL)[PL[0X5]]={F({},1,PL[0X4])};end;end;end;else do if wL>=0XD then if wL~=0X000e then do for AL=PL[5],PL[0x4]do(YL)[AL]=nil;end;end;else(YL)[PL[5]]=YL[PL[0X4]]~=YL[PL[7]];end;else do if wL~=12 then(YL)[PL[5]]=PL[1];else YL[PL[0x5]]=K(YL[PL[0x00004]],YL[PL[7]]);end;end;end;end;end;else do if wL>=0X3 then if wL<0x00005 then do if wL==4 then else if not(not YL[PL[5]])then else CL=PL[0X4];end;end;end;else do if wL~=6 then YL[0X1]=KL[PL[0X1]];CL=CL+0x1;YL[2]=YL[0];PL=FL[CL];CL=CL+0X1;YL[1][PL[0X1]]=YL[0X2];do PL=FL[CL];end;CL=CL+1;(YL)[1]=KL[PL[1]];CL=CL+1;NL=0X01;(YL[NL])();NL=NL-0X001;CL=CL+0x00001;CL=CL+1;CL=CL+0X001;repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0X2]>=0X00000)then else local WC=(EC[0X0002]);if not BL[WC]then(BL)[WC]={dL[WC]};end;EC[0X1]=BL[WC];EC[0X2]=0X1;end;end;end;until true;do return;end;else CL=PL[4];end;end;end;else if wL<1 then YL[PL[0X00005]]=KL[PL[1]];else if wL==2 then(kL)[PL[4]]=YL[PL[5]];else local AL=PL[0X0004];local BL,dL=AL[2],nil;local DL=(#BL);if DL>0 then do dL={};end;for bC=1,DL do local uC=BL[bC];do if uC[0X1]==0 then do(dL)[bC-1]={YL,uC[2]};end;else dL[bC-1]=RL[uC[2]];end;end;end;x(mL,dL);end;YL[PL[0x005]]=cn(dL,KL,AL);end;end;end;end;end;end;end);if nL then if TL then if rL==0X001 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;else do if z(TL)~="\115\116\114\105\110\g"then(G)(TL,0);else if V(TL,'att\e\m\112\116\032\116\o\ y\105e\108\100\032\097\c\114\111\ss\032\109e\116\097\m\e\116\104\111d\047\C\%\045\ca\l\108\032\098\o\117n\da\114y')then return q();end;if V(TL,'\^.\045\058\%\100\+:\032')then G('L\117r\097\p\104 \S\099\114\105p\116\:'..(_L[CL-1]or"\(\105\110t\101r\110a\l\041")..'\:\032'..l(TL),0X00000);else(G)(TL,0X0);end;end;end;end;end;end;else aL=function(...)local CL,YL=1,{};local NL=0;local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);do LL=LL-1;end;do for PL=0X0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+0X00001];end;end;end;local KL=((OL==_ and sL or OL));do if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X001 or 0,F(hL,XL+0X1,LL+0X1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X2]);do CL=CL+1;end;if not(wL<0X0009)then do if wL>=0Xd then if not(wL<15)then do if wL>=16 then if wL==17 then for AL=PL[5],PL[0X4]do(YL)[AL]=nil;end;else do YL[0]=KL[PL[0X01]];end;CL=CL+0X001;CL=CL+1;PL=FL[CL];CL=CL+0X01;do(YL)[0]=YL[0X00][PL[3]];end;PL=FL[CL];CL=CL+1;if not YL[0]then CL=PL[0X4];end;end;else do YL[PL[0x0005]]=KL[PL[0x1]];end;end;end;else do if wL~=14 then if YL[PL[0X00004]]~=YL[PL[7]]then else CL=PL[0X5];end;else YL[PL[5]]=YL[PL[4]]~=YL[PL[7]];end;end;end;else if not(wL>=0x00B)then if wL~=10 then do YL[PL[0x5]]=true;end;else YL[PL[0x5]]={F({},0X01,PL[0x04])};end;else if wL==12 then(KL)[PL[1]]=YL[PL[5]];else local AL=(RL[1]);(YL)[0]=AL[1][AL[0X2]];CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X001;YL[0X0]=YL[0X000][PL[3]];PL=FL[CL];CL=CL+1;do(YL)[0X0]=YL[0][PL[3]];end;CL=CL+0X00001;CL=CL+1;do PL=FL[CL];end;CL=CL+1;if YL[0X00000]~=PL[0X03]then CL=PL[0x5];end;end;end;end;end;else do if wL<0X4 then if not(wL>=2)then if wL~=0X1 then CL=PL[0x04];else YL[PL[5]]=PL[1];end;else if wL==3 then else local AL=(RL[0]);(YL)[0X0]=AL[1][AL[0x02]];CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+1;if not(not YL[0])then else CL=PL[4];end;end;end;else do if wL<0X6 then do if wL==0X5 then YL[PL[0X5]]=#YL[PL[4]];else local dL=nil;local AL=(PL[4]);local BL=AL[0x2];local DL=#BL;do if DL>0X0 then do dL={};end;do for bC=0x01,DL do local uC=BL[bC];if uC[0X1]==0 then(dL)[bC-0X1]={YL,uC[2]};else dL[bC-1]=RL[uC[0X0002]];end;end;end;x(mL,dL);end;end;(YL)[PL[0x005]]=cn(dL,KL,AL);end;end;else if wL<0X00007 then YL[0]=KL[PL[0x1]];CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+1;(YL)[0X0]=YL[0x0][PL[3]];PL=FL[CL];local AL=(0X0);CL=CL+0X00001;do(YL)[1]=PL[0X1];end;CL=CL+1;YL[AL]=YL[AL](YL[AL+1]);NL=AL;PL=FL[CL];CL=CL+1;if not(not YL[0])then else CL=PL[0X4];end;else if wL~=0X8 then repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do for uC,EC in U,bC do do if not(EC[1]==dL and EC[0X2]>=0X00000)then else local WC=(EC[0X2]);if not BL[WC]then(BL)[WC]={dL[WC]};end;do EC[0X1]=BL[WC];end;do(EC)[0X2]=0X1;end;end;end;end;end;until true;return;else local AL=RL[0X2];(YL)[0x0]=AL[0X0001][AL[0X2]];CL=CL+0X01;local dL=0X00;CL=CL+0X0001;PL=FL[CL];do CL=CL+0X00001;end;do(YL)[0X1]=PL[0x1];end;CL=CL+0X1;(YL[dL])(YL[dL+1]);NL=dL-0X1;do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+1;CL=PL[4];end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\s\116\114\in\103"then G(TL,0X00);else if V(TL,"\097tt\101m\pt t\o \yie\l\d\032\097\cr\111\s\s\032\109\e\116ame\116\h\o\100\/\C%\045\099\097\ll\ \098\o\117n\100a\114\y")then return q();end;do if V(TL,"\^\.\045:%\100\+\:\ ")then G("\L\117\114a\112h\032S\099ri\pt\:"..(_L[CL-0X1]or'\(\105n\116\101\114na\108\)').."\:\ "..l(TL),0);else(G)(TL,0);end;end;end;else do if TL then do if rL==0x01 then do return YL[ML]();end;else return YL[ML](F(YL,ML+1,NL));end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;else do if HL~=35 then aL=function(...)local YL=({});local CL=1;local NL=0;local kL={[0X1]=YL,[2]=qL};local OL=(Q());local LL,hL=on(...);LL=LL-0X1;local KL=((OL==_ and sL or OL));do for PL=0X0,LL do if XL>PL then YL[PL]=hL[PL+1];else do break;end;end;end;end;if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0x0001 or 0,F(hL,XL+0X00001,LL+0X1)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[0X2];do CL=CL+0X1;end;if not(wL>=0X13)then do if not(wL>=0x09)then if not(wL<0x0004)then do if not(wL>=6)then do if wL==0X0005 then(YL)[6]=YL[0X005];do PL=FL[CL];end;CL=CL+1;local AL=(RL[6]);(YL)[0X7]=PL[0x1];CL=CL+0X1;(YL)[8]=AL[1][AL[0X00002]];CL=CL+0X00001;CL=CL+1;do CL=CL+0x01;end;do YL[0X08]=YL[0X8][YL[4]];end;CL=CL+0x1;CL=CL+0X0001;PL=FL[CL];do CL=CL+1;end;if not(YL[8])then else CL=PL[0X4];end;else YL[0X6]=YL[5];do PL=FL[CL];end;CL=CL+1;local AL=(0X8);do(YL)[0X7]=PL[1];end;PL=FL[CL];local BL=(0);CL=CL+0X1;YL[8]=KL[PL[1]];CL=CL+1;local dL=(0X1);if dL==0X0 then else NL=AL+dL-0X00001;end;local DL,bC=nil,nil;if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;do if BL~=1 then if BL==0 then do DL=DL+AL-0X1;end;NL=DL;else DL=AL+BL-2;NL=DL+0X1;end;local uC=(0x000);for EC=AL,DL do uC=uC+0X0001;(YL)[EC]=bC[uC];end;else NL=AL-1;end;end;CL=CL+1;do CL=CL+1;end;CL=CL+0X01;AL=6;(YL[AL])(F(YL,AL+1,NL));NL=AL-1;do PL=FL[CL];end;CL=CL+1;CL=PL[0X00004];end;end;else if wL<7 then YL[PL[0X5]]=L(YL[PL[0x4]],YL[PL[0X007]]);else do if wL==8 then for AL=PL[5],PL[0X0004]do YL[AL]=nil;end;else do YL[0X06]=KL[PL[1]];end;do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+1;(YL)[0X006]=YL[6][PL[3]];PL=FL[CL];do CL=CL+1;end;if YL[6]==PL[0x00003]then else CL=PL[5];end;end;end;end;end;end;else do if not(wL>=0X2)then if wL==0x1 then(YL)[PL[5]]=r(YL[PL[4]],YL[PL[0X7]]);else YL[6]=YL[5];do PL=FL[CL];end;local AL=(0x00006);CL=CL+0X0001;do YL[0X7]=PL[0X01];end;PL=FL[CL];CL=CL+0X1;(YL)[8]=PL[1];CL=CL+0X1;(YL[AL])(YL[AL+1],YL[AL+0x2]);NL=AL-0x001;PL=FL[CL];CL=CL+1;CL=PL[4];end;else if wL==0X00003 then CL=PL[0x4];else do if YL[PL[4]]~=PL[0x3]then CL=PL[0X00005];end;end;end;end;end;end;else if wL<14 then if wL>=0XB then if not(wL<12)then if wL~=0XD then local AL=RL[7];(YL)[0X3]=AL[0X1][AL[0x2]];CL=CL+0x01;YL[4]=YL[0X0];local dL=(5);CL=CL+1;local BL=LL-XL;if BL<0 then BL=-0X001;end;for DL=dL,dL+BL do do YL[DL]=hL[XL+(DL-dL)+0X1];end;end;NL=dL+BL;do CL=CL+1;end;do repeat local DL,bC=mL,YL;local uC=({});do for EC,WC in U,DL do for eC,oC in U,WC do do if oC[0X01]==bC and oC[2]>=0X0 then local jC=(oC[0X0002]);do if not uC[jC]then uC[jC]={bC[jC]};end;end;(oC)[1]=uC[jC];(oC)[2]=0X1;end;end;end;end;end;until true;end;do return true,3,0;end;else repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0X00)then else local WC=(EC[0X02]);if not BL[WC]then(BL)[WC]={dL[WC]};end;(EC)[0X1]=BL[WC];EC[0X2]=0X1;end;end;end;end;until true;return false,PL[0X005],NL;end;else local AL=(RL[0X4]);(YL)[6]=AL[1][AL[0X2]];CL=CL+1;CL=CL+0x1;do PL=FL[CL];end;CL=CL+0X1;do YL[0X00007]=YL[0x3][PL[0X0003]];end;do CL=CL+1;end;local dL=7;(YL)[0X0006]=YL[6][YL[7]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;do YL[0X6]=YL[0X06][PL[0X3]];end;CL=CL+0X1;CL=CL+1;CL=CL+0X1;do AL=RL[0X00002];end;(YL)[0X00007]=AL[1][AL[2]];do CL=CL+0X1;end;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+1;(YL)[0X008]=YL[0x3][PL[3]];do CL=CL+0X1;end;CL=CL+0X1;CL=CL+0X001;YL[dL]=YL[dL](YL[dL+0X1]);NL=dL;CL=CL+1;YL[8]=YL[0x5];do PL=FL[CL];end;CL=CL+0x0001;YL[9]=PL[0x01];CL=CL+0X1;YL[10]=YL[6];do CL=CL+0X1;end;dL=0X08;(YL[dL])(YL[dL+1],YL[dL+0X2]);NL=dL-1;CL=CL+1;do CL=CL+1;end;CL=CL+1;YL[0x0008]=YL[5];PL=FL[CL];do CL=CL+1;end;do(YL)[0X9]=PL[1];end;do CL=CL+1;end;YL[10]=YL[0X7];CL=CL+1;dL=8;(YL[dL])(YL[dL+1],YL[dL+0X2]);do NL=dL-0X1;end;PL=FL[CL];do CL=CL+1;end;CL=PL[0X4];end;else if wL~=0X0000A then local AL=6;(YL[AL])(YL[AL+1],YL[AL+2]);NL=AL-0X1;CL=CL+0x00001;do CL=CL+0X1;end;do PL=FL[CL];end;do CL=CL+0X1;end;CL=PL[0x04];else KL[PL[0X0001]]=YL[PL[0X05]];end;end;else do if wL<0X00010 then do if wL~=15 then local dL=(nil);local AL=(PL[4]);local BL=AL[2];local DL=(#BL);do if DL>0 then dL={};for bC=0x1,DL do local uC=(BL[bC]);if uC[1]~=0 then dL[bC-1]=RL[uC[0X2]];else dL[bC-0X1]={YL,uC[2]};end;end;(x)(mL,dL);end;end;do YL[PL[0X00005]]=cn(dL,KL,AL);end;else repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do do for uC,EC in U,bC do do if not(EC[1]==dL and EC[0X2]>=0X0)then else local WC=(EC[0X002]);do if not BL[WC]then(BL)[WC]={dL[WC]};end;end;do EC[0X1]=BL[WC];end;do EC[0x0002]=0X1;end;end;end;end;end;end;until true;return;end;end;else do if not(wL>=17)then YL[0X6]=YL[0X5];PL=FL[CL];CL=CL+0X01;do(YL)[0X007]=PL[1];end;local AL=RL[0X0005];do CL=CL+1;end;YL[8]=AL[1][AL[0X0002]];CL=CL+0X1;CL=CL+0X1;PL=FL[CL];local dL=0X8;CL=CL+1;(YL)[9]=PL[1];PL=FL[CL];CL=CL+1;(YL)[0X00a]=PL[1];PL=FL[CL];CL=CL+0X001;(YL)[0xb]=PL[0x1];CL=CL+1;local BL,DL=0X4,(0X0);do if BL~=0 then do NL=dL+BL-0X1;end;end;end;local bC,uC=nil,(nil);do if BL~=1 then bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));else do bC,uC=on(YL[dL]());end;end;end;if DL==0x1 then NL=dL-0X1;else if DL~=0 then do bC=dL+DL-2;end;do NL=bC+0X01;end;else bC=bC+dL-0X00001;do NL=bC;end;end;local EC=(0);for WC=dL,bC do EC=EC+1;do(YL)[WC]=uC[EC];end;end;end;CL=CL+0X1;CL=CL+1;do CL=CL+0x0001;end;dL=0x6;YL[dL](F(YL,dL+1,NL));NL=dL-1;PL=FL[CL];CL=CL+1;CL=PL[4];else do if wL~=0x012 then(YL)[PL[0x05]]={F({},0X1,PL[4])};else repeat local AL,dL,BL,DL=mL,YL,PL[5],({});for bC,uC in U,AL do do for EC,WC in U,uC do if not(WC[1]==dL and WC[0x2]>=BL)then else local eC=(WC[2]);if not DL[eC]then(DL)[eC]={dL[eC]};end;WC[1]=DL[eC];(WC)[0X0002]=0X1;end;end;end;end;until true;end;end;end;end;end;end;end;end;end;else if not(wL>=28)then if wL<23 then if wL>=0X0015 then do if wL~=22 then do if not(YL[PL[5]])then else CL=PL[4];end;end;else YL[PL[5]]=KL[PL[0X1]];end;end;else if wL~=20 then(YL)[0X6]=KL[PL[1]];do PL=FL[CL];end;do CL=CL+1;end;do YL[0X6]=YL[0X6][PL[3]];end;do PL=FL[CL];end;do CL=CL+0x1;end;if YL[0X0006]==PL[3]then else CL=PL[5];end;else YL[2]=YL[0][PL[0X3]];PL=FL[CL];CL=CL+0x1;(YL)[3]=KL[PL[1]];do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;if not YL[3]then CL=PL[4];end;end;end;else if not(wL>=0X19)then if wL~=0X18 then YL[6]=KL[PL[0X1]];CL=CL+0x0001;CL=CL+1;PL=FL[CL];CL=CL+0x0001;(YL)[6]=YL[0X06][PL[3]];CL=CL+0X01;CL=CL+0X1;PL=FL[CL];local AL=(PL[0X00004]);CL=CL+0X01;local BL=(AL[2]);local bC,dL=6,nil;local DL=(#BL);do if not(DL>0X0)then else dL={};for uC=1,DL do local EC=BL[uC];if EC[0X01]==0 then dL[uC-1]={YL,EC[0X2]};else(dL)[uC-0X01]=RL[EC[2]];end;end;(x)(mL,dL);end;end;do(YL)[0X0007]=cn(dL,KL,AL);end;do CL=CL+0X1;end;YL[bC](YL[bC+1]);NL=bC-1;do CL=CL+0X1;end;do CL=CL+1;end;PL=FL[CL];do CL=CL+1;end;CL=PL[4];else(YL)[0X6]=YL[0X005];local AL=8;PL=FL[CL];CL=CL+1;local BL=(0X0);do(YL)[0X007]=PL[0X00001];end;PL=FL[CL];CL=CL+1;(YL)[8]=KL[PL[1]];PL=FL[CL];CL=CL+0X001;YL[0x9]=PL[1];do CL=CL+1;end;local dL=0X2;if dL~=0 then NL=AL+dL-1;end;local DL,bC=nil,(nil);do if dL==0X1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;end;if BL~=1 then if BL~=0X0 then DL=AL+BL-2;NL=DL+0x1;else DL=DL+AL-1;NL=DL;end;local uC=(0X000);for EC=AL,DL do uC=uC+0X1;YL[EC]=bC[uC];end;else NL=AL-0X001;end;CL=CL+0X1;AL=0X00006;YL[AL](F(YL,AL+1,NL));NL=AL-0X1;CL=CL+0x1;do CL=CL+0X001;end;PL=FL[CL];CL=CL+0X1;CL=PL[4];end;else if wL<26 then(YL)[6]=YL[0X5];PL=FL[CL];CL=CL+1;(YL)[0x00007]=PL[1];do PL=FL[CL];end;CL=CL+1;(YL)[0X8]=KL[PL[0X00001]];CL=CL+0x1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[0X9]=PL[1];do CL=CL+0x0001;end;local AL,BL=8,(0x0);local dL=0x00002;if dL==0X0 then else NL=AL+dL-1;end;local DL,bC=nil,nil;if dL==1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;do if BL~=0X00001 then if BL~=0 then DL=AL+BL-0X002;NL=DL+0X1;else DL=DL+AL-1;NL=DL;end;local uC=0;for EC=AL,DL do uC=uC+0X001;YL[EC]=bC[uC];end;else do NL=AL-1;end;end;end;do CL=CL+0x01;end;do AL=6;end;YL[AL](F(YL,AL+0x1,NL));NL=AL-1;PL=FL[CL];CL=CL+0X01;CL=PL[0x0004];else if wL==27 then if YL[PL[0X04]]==PL[0X3]then CL=PL[0X00005];end;else local AL=RL[6];YL[0x6]=AL[0x1][AL[2]];CL=CL+1;CL=CL+0x1;CL=CL+0x1;YL[6]=YL[6][YL[0x4]];do CL=CL+0x1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+1;if not YL[0x6]then CL=PL[0x4];end;end;end;end;end;else if wL>=0X21 then do if wL<35 then if wL==34 then(YL)[PL[0X5]]=PL[1];else if YL[PL[4]]<YL[PL[7]]then CL=PL[5];end;end;else if not(wL>=0X0024)then else if wL~=0x25 then do(YL)[0x006]=YL[0X00005];end;local BL=0X0000;PL=FL[CL];do CL=CL+1;end;(YL)[0x7]=PL[0X1];local AL=(8);do PL=FL[CL];end;CL=CL+1;(YL)[0X00008]=KL[PL[0X1]];CL=CL+1;CL=CL+1;CL=CL+1;local dL=1;do if dL==0 then else NL=AL+dL-0x1;end;end;local DL,bC=nil,nil;do if dL~=0X0001 then DL,bC=on(YL[AL](F(YL,AL+0x00001,NL)));else do DL,bC=on(YL[AL]());end;end;end;if BL==1 then do NL=AL-0X001;end;else if BL==0 then DL=DL+AL-1;NL=DL;else DL=AL+BL-2;NL=DL+1;end;local uC=0x00000;for EC=AL,DL do do uC=uC+1;end;YL[EC]=bC[uC];end;end;do CL=CL+1;end;do CL=CL+0x01;end;CL=CL+0x1;AL=6;(YL[AL])(F(YL,AL+1,NL));NL=AL-0X01;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0x1;do CL=PL[4];end;else do YL[6]=KL[PL[1]];end;CL=CL+1;CL=CL+0X1;PL=FL[CL];local AL=6;CL=CL+0X001;do(YL)[7]=YL[0X3][PL[0X3]];end;PL=FL[CL];CL=CL+1;do(YL)[0X7]=YL[0X7][PL[0X3]];end;CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[0X007]=YL[7][PL[3]];CL=CL+0X01;YL[AL]=YL[AL](YL[AL+0X001]);NL=AL;CL=CL+1;YL[7]=YL[5];PL=FL[CL];CL=CL+1;(YL)[0X008]=PL[0X1];CL=CL+1;(YL)[9]=YL[0X6];do CL=CL+1;end;AL=0X7;YL[AL](YL[AL+1],YL[AL+2]);NL=AL-0X1;PL=FL[CL];CL=CL+1;do CL=PL[0X004];end;end;end;end;end;else if not(wL<0x1e)then if not(wL>=31)then local AL=(RL[0x000]);do YL[3]=AL[0X1][AL[2]];end;CL=CL+0x1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;local dL=0x003;do(YL)[0x3]=YL[3][PL[3]];end;CL=CL+0X1;CL=CL+1;CL=CL+1;AL=RL[1];(YL)[0X00004]=AL[0X1][AL[2]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;YL[5]=YL[0][PL[0X00003]];do CL=CL+0X01;end;do CL=CL+0X1;end;do CL=CL+0X1;end;(YL)[dL]=YL[dL](YL[dL+0X0001],YL[dL+0X02]);NL=dL;PL=FL[CL];CL=CL+1;if not YL[3]then do CL=PL[4];end;end;else if wL~=0X020 then YL[6]=YL[0x5];PL=FL[CL];CL=CL+1;(YL)[0X7]=PL[1];PL=FL[CL];do CL=CL+1;end;local AL=(6);YL[8]=PL[1];CL=CL+0X00001;YL[AL](YL[AL+1],YL[AL+0X2]);NL=AL-1;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;CL=PL[0x0004];else(YL)[6]=KL[PL[1]];PL=FL[CL];do CL=CL+1;end;do(YL)[0X6]=YL[0X6][PL[0X3]];end;PL=FL[CL];CL=CL+1;if YL[0x6]==PL[3]then else do CL=PL[0X5];end;end;end;end;else if wL~=0X1d then YL[0X3]={};CL=CL+1;local AL=(4);local dL,BL=LL-XL,((1-1)*0X32);do if dL<0X0 then dL=-0X01;end;end;for oC=AL,AL+dL do(YL)[oC]=hL[XL+(oC-AL)+0x00001];end;do NL=AL+dL;end;CL=CL+0X1;AL=3;local DL=YL[AL];for oC=0X1,NL-AL do DL[BL+oC]=YL[AL+oC];end;local bC=(RL[2]);CL=CL+1;YL[0x04]=bC[1][bC[2]];CL=CL+0X01;CL=CL+0X1;CL=CL+0x1;bC=RL[0x0003];YL[5]=bC[0X00001][bC[2]];do PL=FL[CL];end;CL=CL+0X001;YL[0X6]=KL[PL[1]];PL=FL[CL];CL=CL+0X1;(YL)[6]=YL[0X6][PL[3]];do CL=CL+1;end;CL=CL+0X1;CL=CL+0X1;AL=5;do YL[AL]=YL[AL](YL[AL+1]);end;NL=AL;CL=CL+1;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;do YL[5]=YL[0x0005]+PL[3];end;do CL=CL+1;end;AL=4;YL[AL]=YL[AL](YL[AL+0X1]);NL=AL;PL=FL[CL];CL=CL+1;do YL[5]=KL[PL[1]];end;CL=CL+0X1;do CL=CL+1;end;CL=CL+0x1;(YL)[6]=YL[4];do PL=FL[CL];end;CL=CL+0X0001;(YL[0X5])[PL[0X00001]]=YL[0X06];PL=FL[CL];local uC=(PL[0X4]);do CL=CL+0X1;end;local WC=uC[0x00002];local EC=(nil);local eC=#WC;if eC>0 then EC={};for oC=1,eC do local jC=WC[oC];do if jC[1]~=0 then EC[oC-0X1]=RL[jC[2]];else(EC)[oC-0x1]={YL,jC[2]};end;end;end;x(mL,EC);end;YL[5]=cn(EC,KL,uC);PL=FL[CL];CL=CL+1;do(YL)[0X00006]=KL[PL[0x00001]];end;do CL=CL+1;end;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;YL[6]=YL[6][PL[3]];CL=CL+0X1;do YL[0X7]={};end;PL=FL[CL];do CL=CL+1;end;YL[8]=YL[0x00][PL[0X3]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+1;(YL[0X00007])[PL[1]]=YL[8];CL=CL+1;(YL[0x6])[YL[4]]=YL[7];do PL=FL[CL];end;do CL=CL+0X001;end;if YL[2]==PL[0X3]then else CL=PL[5];end;else YL[0X8]=KL[PL[0X0001]];CL=CL+1;CL=CL+0x1;PL=FL[CL];local AL=8;CL=CL+0x001;(YL)[9]=PL[1];CL=CL+1;(YL)[AL]=YL[AL](YL[AL+0X0001]);NL=AL;CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0x1;CL=PL[0x4];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\s\116r\105n\g"then do if V(TL,"atte\m\pt t\111 \yi\el\100\032a\cr\111ss \m\101\116\097\m\101th\o\100\047\067\037\-\ca\108\l bo\117n\d\097r\y")then return q();end;end;if not(V(TL,"\094\.\-\:%\d\043:\ "))then G(TL,0X0);else(G)("\Lur\097ph\032\083\cr\i\p\116\:"..(_L[CL-1]or"\(\i\110t\ern\097\l)")..'\:\ '..l(TL),0X0);end;else G(TL,0X0);end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else do return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;else aL=function(...)local CL=1;local YL={};local kL,NL={[0X1]=YL,[2]=qL},(0X0);local OL=Q();local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-0X01;for PL=0X000,LL do do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X0001];end;end;end;if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+1,LL+0X0001)};end;end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=(PL[2]);do CL=CL+1;end;if wL<0X0007 then do if wL>=0X003 then if wL>=5 then if wL==6 then(YL)[0X1]=KL[PL[1]];CL=CL+0x1;YL[2]=YL[0];do PL=FL[CL];end;CL=CL+0X1;YL[1][PL[1]]=YL[2];PL=FL[CL];CL=CL+0X1;(YL)[0X1]=KL[PL[1]];CL=CL+1;NL=0X1;(YL[NL])();local uC=(1);NL=NL-0X01;CL=CL+0X1;local BL=nil;CL=CL+1;CL=CL+0X00001;local AL=(RL[0]);do(YL)[1]=AL[0X01][AL[0X02]];end;CL=CL+1;CL=CL+0X00001;PL=FL[CL];CL=CL+0X1;local dL=(PL[4]);local DL=dL[2];local bC=#DL;if not(bC>0X0)then else BL={};for EC=1,bC do local WC=(DL[EC]);if WC[0X001]~=0X0 then(BL)[EC-0X001]=RL[WC[0x00002]];else do BL[EC-0x0001]={YL,WC[0X2]};end;end;end;x(mL,BL);end;(YL)[0X2]=cn(BL,KL,dL);CL=CL+0X00001;YL[uC](YL[uC+1]);NL=uC-0X1;CL=CL+1;CL=CL+0X001;CL=CL+0x00001;repeat local EC,WC,eC=mL,YL,({});for oC,jC in U,EC do for zC,lC in U,jC do if lC[0X1]==WC and lC[2]>=0x00000 then local GC=(lC[0X2]);if not(not eC[GC])then else do(eC)[GC]={WC[GC]};end;end;do lC[1]=eC[GC];end;lC[0X2]=1;end;end;end;until true;return;else(YL)[PL[0X5]]=KL[PL[0x00001]];end;else if wL==4 then do YL[PL[0x5]]={F({},1,PL[0x0004])};end;else(YL)[PL[0X05]]=YL[PL[4]]==YL[PL[7]];end;end;else if wL>=0X00001 then if wL==0X0002 then YL[PL[5]]=PL[0X001];else if not YL[PL[0X5]]then CL=PL[0X4];end;end;else CL=PL[0x4];end;end;end;else if not(wL>=10)then do if not(wL<0X8)then if wL==9 then local AL=PL[5];for dL=AL,AL+(PL[4]-1)do(YL)[dL]=hL[XL+(dL-AL)+1];end;else do for AL=PL[5],PL[4]do YL[AL]=nil;end;end;end;else repeat local AL,dL,BL=mL,YL,PL[5];local DL=({});for bC,uC in U,AL do do for EC,WC in U,uC do if not(WC[0X00001]==dL and WC[0X2]>=BL)then else local eC=WC[0x2];if not(not DL[eC])then else do(DL)[eC]={dL[eC]};end;end;(WC)[1]=DL[eC];(WC)[2]=1;end;end;end;end;until true;end;end;else if not(wL>=0x000c)then if wL==0xb then do if YL[PL[4]]<=YL[PL[0X00007]]then CL=PL[5];end;end;else local AL=PL[0x0004];local BL,dL=AL[2],nil;local DL=#BL;if DL>0X0 then dL={};for bC=0X1,DL do local uC=BL[bC];if uC[0X1]~=0x0 then dL[bC-1]=RL[uC[2]];else do(dL)[bC-1]={YL,uC[0X02]};end;end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;else do if wL==13 then do(YL)[PL[5]]=PL[4];end;else end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)=='\str\ing'then if not(V(TL,"\097tt\em\112t \116\111\ \yi\e\l\d\ acr\o\ss \109e\116\097\m\101\116\h\od/C\%\-\c\097\108l\ \098\ou\110\100a\114\y"))then else return q();end;if V(TL,'\094\.\045\:\%d+\:\ ')then G("\L\117r\097p\104\ S\c\114i\p\116\058"..(_L[CL-0X00001]or'\(\105\110\116e\114nal\)').."\058\032"..l(TL),0);else G(TL,0x0);end;else(G)(TL,0);end;else do if TL then do if rL~=0X1 then do return YL[ML](F(YL,ML+0X01,NL));end;else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;end;end;end;end;end;else if not(HL<46)then if HL>=0X30 then if HL>=49 then if HL==0X32 then aL=function(...)local CL,YL=1,{};local OL=(Q());local KL,kL=(OL==_ and sL or OL),({[0X1]=YL,[2]=qL});local NL=0;local LL,hL=on(...);LL=LL-1;do for PL=0X0,LL do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+0X001];end;end;end;end;do if not SL then do hL=nil;end;else if not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0,F(hL,XL+0X1,LL+1)};end;end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()repeat local PL=FL[CL];local wL=PL[2];CL=CL+1;if not(wL<0xB)then do if not(wL>=0X10)then if wL>=0Xd then if wL>=0x0E then if wL~=15 then if YL[PL[0x4]]~=YL[PL[0X7]]then CL=PL[5];end;else local AL=RL[PL[4]];(YL)[PL[5]]=AL[1][AL[2]];end;else(YL)[PL[5]]=YL[PL[0X4]]+YL[PL[0X7]];end;else if wL==12 then YL[PL[0X5]]={F({},0x01,PL[4])};else(YL)[PL[5]]=YL[PL[4]]==YL[PL[0X7]];end;end;else if wL>=0x13 then if wL<20 then local AL=(PL[0X5]);local dL=g(function(...)q();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end);dL(YL[AL],YL[AL+1],YL[AL+0X2]);do NL=AL;end;YL[AL]=dL;CL=PL[0X4];elseif wL==0x15 then repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[0x0001]==dL and EC[0X02]>=0X0 then local WC=EC[2];if not BL[WC]then BL[WC]={dL[WC]};end;EC[0x1]=BL[WC];EC[2]=1;end;end;end;until true;do return;end;else do if not(not YL[PL[5]])then else CL=PL[0X04];end;end;end;else do if wL<17 then local dL=(nil);local AL=PL[0X4];local BL=AL[0X2];local DL=(#BL);do if not(DL>0)then else dL={};for bC=0x1,DL do local uC=BL[bC];do if uC[1]~=0 then(dL)[bC-1]=RL[uC[0X2]];else do dL[bC-1]={YL,uC[2]};end;end;end;end;(x)(mL,dL);end;end;do(YL)[PL[0X5]]=cn(dL,KL,AL);end;elseif wL==18 then(YL)[PL[0X05]]=true;else do if not(YL[PL[4]]<YL[PL[7]])then CL=PL[0X5];end;end;end;end;end;end;end;else if wL>=0X005 then if wL<0x8 then if not(wL>=6)then elseif wL==7 then local AL,dL=PL[0X5],YL[PL[0X4]];YL[AL+1]=dL;(YL)[AL]=dL[PL[3]];else for AL=PL[0X5],PL[0X4]do YL[AL]=nil;end;end;else if wL<9 then YL[PL[0X5]]=KL[PL[1]];elseif wL~=10 then do CL=PL[0X04];end;else YL[0x0]=KL[PL[0X1]];CL=CL+0X1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+1;do YL[0x00000]=YL[0X0000][PL[3]];end;do PL=FL[CL];end;do CL=CL+1;end;(YL)[0x1]=PL[1];do CL=CL+0x1;end;local AL=(0);do YL[AL]=YL[AL](YL[AL+1]);end;do NL=AL;end;CL=CL+0X01;CL=CL+0x1;do PL=FL[CL];end;CL=CL+0X0001;if not(not YL[0])then else CL=PL[0X0004];end;end;end;else do if not(wL<2)then do if not(wL<3)then if wL==0x4 then local AL=(RL[0X1]);(YL)[0X0]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;YL[0X1]=PL[0X001];CL=CL+0X1;local dL=(0);AL=RL[2];do(YL)[0x0002]=AL[1][AL[0x0002]];end;CL=CL+1;(YL[dL])(YL[dL+0X1],YL[dL+0X00002]);NL=dL-1;CL=CL+1;CL=CL+0X001;do PL=FL[CL];end;CL=CL+0x1;YL[0]=KL[PL[0X1]];do CL=CL+0X1;end;do CL=CL+1;end;do PL=FL[CL];end;do CL=CL+1;end;YL[1]=PL[0X1];CL=CL+1;dL=0X0;YL[dL](YL[dL+1]);NL=dL-0X00001;do PL=FL[CL];end;CL=CL+0X1;CL=PL[0X4];else(YL[PL[0X5]])[YL[PL[4]]]=YL[PL[0X7]];end;else local AL=(PL[0X5]);local BL,DL=YL[AL+0X00001],YL[AL+0x2];local dL=(YL[AL]);(YL)[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);CL=PL[0x4];end;end;else if wL==0x00001 then(YL)[PL[5]]=PL[1];else do YL[0]=KL[PL[0X0001]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0]=YL[0][PL[0x3]];PL=FL[CL];do CL=CL+1;end;if not YL[0]then CL=PL[4];end;end;end;end;end;end;until false;end);if not(nL)then do if z(TL)~='\s\116r\i\110\103'then G(TL,0);else if not(V(TL,"a\116\116e\m\112t\032t\o\ \y\i\el\100\032\097\099\114\os\115\ \m\eta\met\104\od\047\C%\045\099\097ll\ boun\d\097\114\121"))then else return q();end;if V(TL,'^\046\-\:\%\100\+: ')then(G)('\Lura\p\h\ \S\099\114\i\p\116\:'..(_L[CL-0X1]or'\(\in\116\101r\110a\l)')..'\: '..l(TL),0x00000);else G(TL,0);end;end;end;elseif TL then if rL==1 then return YL[ML]();else do return YL[ML](F(YL,ML+0X1,NL));end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;else aL=function(...)local YL={};local CL=1;local OL=(Q());local NL=(0);local LL,hL=on(...);local kL=({[0X1]=YL,[2]=qL});local KL=(OL==_ and sL or OL);LL=LL-1;do for PL=0,LL do if not(XL>PL)then break;else do YL[PL]=hL[PL+0x1];end;end;end;end;do if not SL then do hL=nil;end;else if not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0X01 or 0,F(hL,XL+0x1,LL+0X1)};end;end;end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()repeat local PL=FL[CL];local wL=(PL[2]);do CL=CL+0X0001;end;if not(wL>=7)then if wL>=3 then do if wL<5 then do if wL~=0x004 then YL[PL[5]]=YL[PL[4]]*YL[PL[7]];else local AL,dL=PL[0X0005],(PL[4]);if dL==0 then else NL=AL+dL-1;end;local BL=(PL[7]);local DL,bC=nil,(nil);if dL==0X1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));end;if BL==1 then do NL=AL-1;end;else if BL==0 then DL=DL+AL-1;NL=DL;else do DL=AL+BL-2;end;NL=DL+0x1;end;local uC=(0);for EC=AL,DL do uC=uC+0X1;do YL[EC]=bC[uC];end;end;end;end;end;else if wL==6 then YL[PL[0X00005]]=YL[PL[4]]>=YL[PL[0X07]];else YL[PL[5]]=#YL[PL[0X004]];end;end;end;else do if wL<1 then local AL=(PL[5]);local dL,BL=YL[AL]();do if not(dL)then else do for DL=0X1,PL[7]do do YL[AL+DL]=BL[DL];end;end;end;CL=PL[0X004];end;end;else if wL==2 then(YL)[1]=KL[PL[0X1]];CL=CL+0X1;do(YL)[2]=YL[0X0];end;PL=FL[CL];CL=CL+0X1;(YL[0x001])[PL[0X0001]]=YL[2];do PL=FL[CL];end;CL=CL+1;(YL)[0X1]=KL[PL[1]];CL=CL+1;NL=1;YL[NL]();NL=NL-0X1;CL=CL+0X1;repeat local BL=({});local AL,dL=mL,(YL);for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X001]==dL and EC[0X2]>=0)then else local WC=(EC[0X2]);do if not(not BL[WC])then else BL[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];do EC[0X0002]=0X0001;end;end;end;end;until true;return;else CL=PL[4];end;end;end;end;elseif wL>=0XA then if not(wL>=0xC)then if wL==0Xb then do(YL)[PL[5]]=PL[1];end;else YL[PL[5]]={F({},0X1,PL[4])};end;else if wL~=13 then if not(YL[PL[0X0004]]<=YL[PL[7]])then do CL=PL[0X5];end;end;else if YL[PL[4]]~=YL[PL[7]]then else CL=PL[5];end;end;end;else if wL>=8 then if wL~=9 then local AL=(PL[4]);local dL=(nil);local BL=(AL[2]);local DL=#BL;if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[1]~=0X0 then do dL[bC-0x001]=RL[uC[2]];end;else(dL)[bC-1]={YL,uC[0x2]};end;end;(x)(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);else end;else do YL[PL[0X5]]=KL[PL[0X1]];end;end;end;until false;end);if not(nL)then do if z(TL)~="\115\116r\i\110\g"then G(TL,0);else do if V(TL,'\097t\116\e\mpt\ t\111\032\121\i\101\l\d \097\cro\ss\ \109\101\116\097\109\101th\111d\/\C\%\-\ca\108\l\ b\oun\da\114\y')then return q();end;end;if not(V(TL,'\094.\-\:%d\043\058\032'))then(G)(TL,0X0);else G('Lura\112\h\032\S\c\114\105\pt\:'..(_L[CL-0X1]or'(\i\110t\101\114\110a\108\)')..'\:\ '..l(TL),0);end;end;end;elseif TL then do if rL~=0X1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else aL=function(...)local CL=(0X1);local YL={};local OL=Q();local LL,hL=on(...);local kL,KL={[2]=qL,[0X1]=YL},(OL==_ and sL or OL);LL=LL-1;for PL=0X0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;if not SL then do hL=nil;end;else if iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X000,F(hL,XL+1,LL+0X1)};end;end;local NL=0x0;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while'!9\,\Bj\P\q'do local PL=(FL[CL]);local wL=PL[2];CL=CL+0X0001;if not(wL>=0X8)then do if not(wL>=0X4)then if wL>=2 then if wL~=3 then(YL)[PL[0x00005]]=r(YL[PL[0X4]],YL[PL[7]]);else YL[PL[0X005]]={F({},1,PL[0X00004])};end;else if wL~=1 then(YL)[0x00001]=KL[PL[1]];CL=CL+0X00001;CL=CL+1;CL=CL+1;do(YL)[2]={};end;PL=FL[CL];do CL=CL+1;end;YL[0X1][PL[0x1]]=YL[2];CL=CL+0X01;do repeat local AL,dL,BL=mL,YL,{};do for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0)then else local WC=(EC[2]);if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];do(EC)[2]=0X1;end;end;end;end;end;end;until true;end;return;else do YL[PL[0X5]]=KL[PL[1]];end;end;end;else if not(wL<6)then do if wL~=0X7 then else YL[0x1]=KL[PL[0X1]];CL=CL+0X1;CL=CL+1;CL=CL+0X1;(YL)[0x00002]=YL[0];do PL=FL[CL];end;CL=CL+1;(YL[0x1])[PL[0X1]]=YL[2];PL=FL[CL];CL=CL+1;YL[0X1]=KL[PL[0x01]];CL=CL+0x1;NL=1;(YL[NL])();NL=NL-0X1;CL=CL+1;repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if EC[0x0001]==dL and EC[2]>=0X0 then local WC=EC[2];if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];(EC)[2]=0x1;end;end;end;until'\1097\*\048\/\_\P[';return;end;end;else if wL==0x5 then local AL=(RL[0]);do(YL)[1]=AL[1][AL[0X0002]];end;CL=CL+0x0001;local dL=(1);CL=CL+0X0001;CL=CL+1;YL[2]=YL[0];CL=CL+1;YL[dL]=YL[dL](YL[dL+1]);NL=dL;PL=FL[CL];CL=CL+1;if YL[1]==PL[3]then else CL=PL[0X005];end;else local AL,dL=PL[0X5],(PL[0x4]);if dL~=0 then NL=AL+dL-0x001;end;local DL,bC,BL=nil,nil,(PL[7]);if dL~=0x1 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else do DL,bC=on(YL[AL]());end;end;do if BL==1 then NL=AL-1;else if BL~=0X0 then do DL=AL+BL-0X00002;end;NL=DL+1;else DL=DL+AL-0X001;do NL=DL;end;end;local uC=0;for EC=AL,DL do uC=uC+1;do(YL)[EC]=bC[uC];end;end;end;end;end;end;end;end;else if wL>=0Xc then if wL>=0Xe then if wL<0X000F then(YL)[PL[5]]=PL[1];else do if wL~=0x10 then local AL=PL[4];local BL=(AL[0X2]);local dL=nil;local DL=(#BL);if DL>0 then dL={};for bC=0X001,DL do local uC=BL[bC];do if uC[1]==0X00000 then dL[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[0X002]];end;end;end;(x)(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);else YL[PL[0x5]]=YL[PL[0X4]][YL[PL[0X007]]];end;end;end;else if wL~=13 then local AL=(PL[5]);local dL,BL=YL[AL]();if dL then for DL=1,PL[7]do do(YL)[AL+DL]=BL[DL];end;end;CL=PL[0x4];end;else local AL=PL[5];do for dL=AL,AL+(PL[0X04]-1)do do YL[dL]=hL[XL+(dL-AL)+0X1];end;end;end;end;end;else do if not(wL<0X000A)then if wL~=0Xb then YL[PL[0X5]]=true;else YL[PL[0X0005]]=YL[PL[4]]*YL[PL[7]];end;else if wL~=9 then local AL=PL[5];local dL=(g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));(dL)(YL[AL],YL[AL+1],YL[AL+2]);NL=AL;do YL[AL]=dL;end;CL=PL[0x04];else CL=PL[0X4];end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\s\116ring"then if not(V(TL,'a\116\116e\mp\116\ \116\111 \yi\eld\ \097\099\114\o\s\s\ \m\e\116a\m\e\116\ho\d\/\067\037\-\c\097\ll\ bo\117\110\dary'))then else do return q();end;end;if not(V(TL,'\^\046\-\058\037d\+:\032'))then(G)(TL,0);else G("\L\117r\097\112h\ \Scri\112t\:"..(_L[CL-1]or"\040\i\110t\e\114na\108\041")..'\:\ '..l(TL),0x0);end;else G(TL,0);end;else if TL then if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;else if ML then return F(YL,ML,rL);end;end;end;end;end;else do if HL~=0X00002f then aL=function(...)local CL,YL=0x1,({});local NL=(0);local OL=(Q());local LL,hL=on(...);local kL,KL={[2]=qL,[0X1]=YL},(OL==_ and sL or OL);LL=LL-1;for PL=0,LL do do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;end;if not SL then hL=nil;else if not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X00,F(hL,XL+1,LL+1)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()repeat local PL=(FL[CL]);local wL=(PL[2]);CL=CL+0X1;if not(wL>=6)then if wL<3 then if wL>=0X1 then if wL~=2 then CL=PL[0X4];else YL[PL[0X5]]={F({},0X1,PL[0x4])};end;else local AL=PL[5];for dL=AL,AL+(PL[4]-0x1)do YL[dL]=hL[XL+(dL-AL)+1];end;end;else do if not(wL<0X4)then if wL==5 then do YL[PL[5]]=KL[PL[1]];end;else YL[0X00001]=KL[PL[0X00001]];CL=CL+0x001;do YL[2]=YL[0];end;do PL=FL[CL];end;CL=CL+0X01;YL[0X00001][PL[0X01]]=YL[0X2];do PL=FL[CL];end;CL=CL+0X1;YL[0X1]=KL[PL[0X1]];CL=CL+1;NL=0x1;local uC=(0X1);(YL[NL])();NL=NL-0x1;local AL=RL[0x0000];CL=CL+1;YL[1]=AL[0X1][AL[0x00002]];do PL=FL[CL];end;local dL=(PL[4]);CL=CL+0X1;local BL=nil;local DL=dL[0x2];local bC=(#DL);if not(bC>0)then else BL={};do for EC=1,bC do local WC=DL[EC];do if WC[0X1]==0 then do(BL)[EC-1]={YL,WC[2]};end;else BL[EC-1]=RL[WC[2]];end;end;end;end;x(mL,BL);end;(YL)[0X2]=cn(BL,KL,dL);CL=CL+1;(YL[uC])(YL[uC+0X1]);do NL=uC-0X1;end;CL=CL+0X01;do repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do do if lC[1]==WC and lC[0X002]>=0 then local GC=lC[2];if not eC[GC]then(eC)[GC]={WC[GC]};end;lC[0x0001]=eC[GC];do lC[2]=1;end;end;end;end;end;until 0.6577778252167582;end;return;end;else local AL=(PL[4]);local BL=(AL[2]);local DL,dL=#BL,(nil);if not(DL>0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[0X1]==0X00 then do dL[bC-0x01]={YL,uC[2]};end;else(dL)[bC-0x1]=RL[uC[0X2]];end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;end;end;else if not(wL<9)then if wL>=0Xb then if wL~=0Xc then if YL[PL[0X0004]]<YL[PL[7]]then CL=PL[0X5];end;else do KL[PL[0X1]]=YL[PL[5]];end;end;else do if wL~=0X00A then else(YL)[PL[5]]=PL[0X00001];end;end;end;else if wL>=7 then do if wL~=0X8 then local AL=(PL[0X00004]);local dL=(YL[AL]);do for BL=AL+1,PL[7]do dL=dL..YL[BL];end;end;(YL)[PL[0X5]]=dL;else do(YL)[PL[5]]=YL[PL[0X4]]*YL[PL[7]];end;end;end;else YL[PL[0X0005]]=YL[PL[0x004]]+YL[PL[0X7]];end;end;end;until false;end);if nL then if TL then if rL==1 then return YL[ML]();else do return YL[ML](F(YL,ML+1,NL));end;end;elseif ML then return F(YL,ML,rL);end;elseif z(TL)~='\115\116\114\105n\g'then G(TL,0);else if V(TL,'\097tt\e\109\p\116\032t\o\032\y\ie\108d \097c\114\o\ss\ m\e\116\097\m\e\116ho\d\/\C\%-\099a\108\108\ b\o\117\110\d\097r\y')then return q();end;if not(V(TL,'\^.-\058%d+\:\032'))then(G)(TL,0);else(G)('\Lur\097\p\104\ S\c\114\105\p\116\:'..(_L[CL-0X1]or'\(int\101\114\110a\108\)')..":\ "..l(TL),0);end;end;end;else aL=function(...)local CL,YL=1,({});local OL=Q();local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);local NL,KL=0,((OL==_ and sL or OL));do LL=LL-1;end;for PL=0x0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;do if not SL then hL=nil;else if not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0x00001,LL+0X0001)};end;end;end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while 0.8661655914831778 do local PL=FL[CL];local wL=(PL[0X0002]);CL=CL+0X1;do if wL<12 then if wL<6 then do if wL<0X3 then do if wL<0x1 then(YL)[PL[5]]=YL[PL[4]]==YL[PL[0X7]];else do if wL~=0X2 then repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0X01]==dL and EC[0x02]>=0 then local WC=EC[2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[0x1]=BL[WC];(EC)[2]=0X1;end;end;end;end;end;until'Cr\124q\117\Y\/';return;else local dL=PL[4];local AL=PL[0X00005];NL=AL+dL-0X001;do repeat local BL,DL=mL,(YL);local bC={};do for uC,EC in U,BL do do for WC,eC in U,EC do if eC[1]==DL and eC[0x2]>=0X0 then local oC=eC[2];do if not bC[oC]then do(bC)[oC]={DL[oC]};end;end;end;(eC)[0X0001]=bC[oC];(eC)[2]=0X00001;end;end;end;end;end;until 0x002E0b9Beb;end;do return true,AL,dL;end;end;end;end;end;else if not(wL<4)then if wL==0X5 then do if not(not YL[PL[5]])then else CL=PL[0x4];end;end;else local AL=PL[5];local dL,BL=YL[AL]();if dL then do CL=PL[0X4];end;YL[AL+3]=BL;end;end;else do YL[0X0]=KL[PL[0X1]];end;CL=CL+1;do CL=CL+1;end;CL=CL+0X001;NL=0X00000;(YL[NL])();NL=NL-1;PL=FL[CL];CL=CL+1;CL=PL[0X004];end;end;end;else do if not(wL<0X9)then if wL>=0Xa then if wL==11 then(YL)[PL[5]]={F({},1,PL[4])};else do YL[PL[5]]=YL[PL[4]]>=YL[PL[0X7]];end;end;else do CL=PL[4];end;end;else do if not(wL>=7)then YL[PL[0X00005]]=#YL[PL[0X4]];elseif wL==8 then YL[PL[5]]=-YL[PL[4]];else do(YL)[0X00000]=KL[PL[1]];end;CL=CL+1;local AL=(0x0000);CL=CL+0X0001;PL=FL[CL];do CL=CL+0X1;end;YL[0]=YL[0x0000][PL[3]];PL=FL[CL];do CL=CL+0X1;end;YL[1]=PL[1];CL=CL+0X001;do YL[AL]=YL[AL](YL[AL+1]);end;NL=AL;do PL=FL[CL];end;CL=CL+0X00001;if not YL[0X0000]then CL=PL[0X4];end;end;end;end;end;end;else if wL<18 then if wL<15 then if wL>=0Xd then if wL==0XE then YL[PL[0X5]]=KL[PL[0X00001]];else local AL=RL[PL[0X00004]];YL[PL[0X00005]]=AL[0X1][AL[2]];end;else(YL)[PL[0x5]]=YL[PL[4]][YL[PL[0X7]]];end;else do if wL<16 then YL[PL[0x5]]=true;else if wL==17 then YL[0X000]=KL[PL[0x1]];PL=FL[CL];CL=CL+1;YL[0X0]=YL[0X0][PL[3]];PL=FL[CL];do CL=CL+0X1;end;if not YL[0X00]then CL=PL[4];end;else YL[PL[0X00005]]=PL[1];end;end;end;end;else do if not(wL>=21)then if not(wL>=0X13)then YL[PL[5]]=YL[PL[0X0004]]/YL[PL[7]];else if wL==0X000014 then local AL=(PL[4]);local BL=(AL[0X00002]);local dL=(nil);local DL=#BL;if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[0X1]==0X0000 then dL[bC-0X1]={YL,uC[2]};else dL[bC-1]=RL[uC[0X0002]];end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else end;end;else if wL>=22 then do if wL==23 then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else local AL=PL[5];local DL=YL[AL+0X2];local dL,BL=YL[AL],(YL[AL+0X001]);(YL)[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);do CL=PL[4];end;end;end;else local AL=(PL[5]);local BL=(YL[AL]);local dL=(PL[7]-0X1)*50;for DL=1,PL[0X0004]do(BL)[dL+DL]=YL[AL+DL];end;end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)~="\115trin\g"then G(TL,0);else if V(TL,'\097\116\116\e\109\112\116\ \116o\ \y\105e\l\d\ \097\c\114o\s\s\032\m\eta\m\e\116\h\o\d\/\C\%-ca\l\108\ \098\111\117n\d\097r\y')then return q();end;if not(V(TL,'^\046\-\:\037\d\043:\ '))then G(TL,0X0);else G("\L\117ra\112h \083\099\114i\pt\:"..(_L[CL-0X1]or'\040\105n\116\101r\110\097\l\)').."\058\ "..l(TL),0X0);end;end;end;else if TL then if rL==0X001 then return YL[ML]();else do return YL[ML](F(YL,ML+0X1,NL));end;end;else if not(ML)then else return F(YL,ML,rL);end;end;end;end;end;end;end;else do if HL>=44 then if HL~=0x2d then do aL=function(...)local YL=({});local CL=0x1;local kL=({[0X1]=YL,[2]=qL});local NL=0;local OL=(Q());local LL,hL=on(...);LL=LL-1;local KL=((OL==_ and sL or OL));for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;if not SL then hL=nil;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+0X0001 or 0X0000,F(hL,XL+0X00001,LL+1)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0x00002]);CL=CL+1;if not(wL>=0X7)then if wL>=3 then do if wL>=0X5 then if wL~=6 then(YL)[PL[0X5]]=KL[PL[1]];else YL[PL[0X00005]]=YL[PL[4]]~=YL[PL[0x7]];end;else if wL==4 then YL[PL[0X05]]={F({},0x1,PL[0X0004])};else YL[0X1]=KL[PL[1]];CL=CL+0X001;CL=CL+0X00001;CL=CL+1;(YL)[0x2]=YL[0];PL=FL[CL];CL=CL+1;(YL[0X1])[PL[0X0001]]=YL[0X02];do PL=FL[CL];end;CL=CL+0X1;(YL)[0X00001]=KL[PL[0x1]];CL=CL+0X0001;local uC=(0x1);do CL=CL+1;end;local AL=RL[0];CL=CL+0X1;do NL=0x1;end;YL[NL]();NL=NL-0X1;CL=CL+0X1;CL=CL+1;local BL=nil;do CL=CL+0X1;end;(YL)[0X00001]=AL[1][AL[2]];CL=CL+1;CL=CL+0x01;PL=FL[CL];do CL=CL+0X1;end;local dL=(PL[4]);local DL=(dL[0X002]);local bC=(#DL);do if not(bC>0)then else BL={};do for EC=0X0001,bC do local WC=(DL[EC]);if WC[1]==0 then(BL)[EC-1]={YL,WC[2]};else do BL[EC-0X00001]=RL[WC[0x02]];end;end;end;end;x(mL,BL);end;end;YL[0X02]=cn(BL,KL,dL);do CL=CL+1;end;YL[uC](YL[uC+1]);do NL=uC-1;end;CL=CL+0X1;CL=CL+1;do CL=CL+1;end;repeat local EC,WC=mL,(YL);local eC=({});for oC,jC in U,EC do do for zC,lC in U,jC do do if lC[1]==WC and lC[2]>=0 then local GC=(lC[2]);if not eC[GC]then eC[GC]={WC[GC]};end;lC[0x1]=eC[GC];lC[0X2]=0X1;end;end;end;end;end;until true;do return;end;end;end;end;else do if wL>=0X1 then if wL==2 then local AL=PL[4];local BL,dL=AL[0X0002],nil;local DL=#BL;if DL>0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[1]==0X0 then(dL)[bC-1]={YL,uC[2]};else dL[bC-1]=RL[uC[2]];end;end;(x)(mL,dL);end;YL[PL[0x5]]=cn(dL,KL,AL);else YL[PL[5]]=kL[PL[0X4]];end;else do CL=PL[0X00004];end;end;end;end;else if wL>=0Xa then if wL>=0Xc then if wL==13 then do YL[PL[5]]=PL[1];end;else for AL=PL[0X5],PL[4]do do(YL)[AL]=nil;end;end;end;else if wL~=11 then ln[PL[0x4]]=YL[PL[0X005]];else(YL)[PL[5]]=r(YL[PL[0X4]],YL[PL[7]]);end;end;else if not(wL<8)then if wL~=0X9 then do(YL)[PL[0X5]]=YL[PL[0X4]]+YL[PL[0X07]];end;else(YL)[PL[5]]=-YL[PL[0X4]];end;else end;end;end;end;end);if not(nL)then if z(TL)~='\st\114i\110\g'then G(TL,0X0);else if not(V(TL,"a\116t\101\109\112t t\o\032\y\105\101\108d\ \097c\114\o\ss\032\m\101tameth\o\d/\067%\-\c\097\108\108 \098\o\117n\100\097\114\y"))then else do return q();end;end;if V(TL,"^\046\-\058%\d+\:\ ")then G("\Lu\114ap\h \S\c\114\i\pt\058"..(_L[CL-0X01]or'\040\105\110t\er\110a\l\041')..'\058\ '..l(TL),0x0);else G(TL,0X0);end;end;else if TL then if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+0X00001,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL,YL=1,{};local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);local NL,KL=0,((OL==_ and sL or OL));LL=LL-1;for PL=0X0000,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;if not SL then do hL=nil;end;elseif iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+1,LL+1)};end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+0X1;if not(wL<7)then if wL>=0XA then do if wL<0Xc then if wL~=11 then if not(not(YL[PL[4]]<=YL[PL[0X0007]]))then else CL=PL[0X05];end;else(YL)[PL[5]]=not YL[PL[4]];end;else if wL==0X0000d then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else local AL=(PL[4]);local dL=nil;local BL=(AL[2]);local DL=(#BL);if DL>0 then dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[1]==0 then do dL[bC-1]={YL,uC[0X2]};end;else dL[bC-0x001]=RL[uC[2]];end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);end;end;end;else if wL<0X8 then YL[1]=KL[PL[1]];CL=CL+0X1;CL=CL+1;CL=CL+0X0001;do(YL)[2]=YL[0];end;PL=FL[CL];CL=CL+0X00001;(YL[1])[PL[1]]=YL[2];PL=FL[CL];CL=CL+0X1;do YL[0X01]=KL[PL[0X1]];end;CL=CL+0X1;NL=1;(YL[NL])();NL=NL-0x1;do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;do CL=CL+0X1;end;(YL)[0X01]=KL[PL[1]];do CL=CL+0X0001;end;YL[2]=YL[0];PL=FL[CL];CL=CL+1;YL[0X1][PL[0x0001]]=YL[0X02];CL=CL+0X1;repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0X00 then local WC=EC[2];if not BL[WC]then BL[WC]={dL[WC]};end;(EC)[1]=BL[WC];EC[2]=0X1;end;end;end;end;until true;return;else if wL~=0x00009 then else local AL=(PL[4]);local dL=YL[AL];for BL=AL+0X1,PL[0X7]do do dL=dL..YL[BL];end;end;(YL)[PL[0X0005]]=dL;end;end;end;else do if not(wL>=0X0003)then if not(wL>=1)then do if YL[PL[0X4]]<YL[PL[0X007]]then do CL=PL[0x5];end;end;end;else if wL~=2 then(YL)[PL[0x5]]=KL[PL[1]];else do YL[PL[0X005]]={F({},0x001,PL[4])};end;end;end;else if wL>=5 then if wL~=0X6 then local AL=(PL[5]);for dL=AL,AL+(PL[0X4]-1)do(YL)[dL]=hL[XL+(dL-AL)+0X1];end;else CL=PL[4];end;else if wL~=0X04 then local AL,dL=PL[4],nil;local BL=AL[2];local DL=(#BL);if DL>0 then dL={};do for bC=1,DL do local uC=BL[bC];if uC[0x001]~=0X0 then(dL)[bC-0X1]=RL[uC[2]];else dL[bC-1]={YL,uC[2]};end;end;end;x(mL,dL);end;(YL)[PL[0X5]]=u[PL[7]](dL);else YL[PL[5]]=PL[1];end;end;end;end;end;end;end);if nL then do if TL then do if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)=='\115t\114\i\110\103'then if V(TL,'\097t\116\101\m\112\116\ t\o\ \yi\101l\100\ \097\c\114\o\115\s\ \m\etam\eth\o\d\/\067\%\045\099\097\ll\ \098o\117nd\097\114\121')then return q();end;if V(TL,"\^\046\-:\%\d\+\:\ ")then(G)('\L\117r\097p\h\032\083\c\114\i\p\116\058'..(_L[CL-0x1]or'(\in\116\er\110a\l\)')..'\: '..l(TL),0);else(G)(TL,0X0);end;else(G)(TL,0X0);end;end;end;end;else if HL~=0X2b then aL=function(...)local YL={};local CL=1;local OL=(Q());local NL,kL,KL=0x0,{[0X1]=YL,[2]=qL},((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0x1;do for PL=0,LL do if XL>PL then YL[PL]=hL[PL+0x1];else break;end;end;end;if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0X01,LL+0X1)};end;end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;if not(wL<13)then if not(wL<19)then do if wL<0X16 then if not(wL<20)then if wL~=0X00015 then YL[PL[5]]=YL[PL[4]][YL[PL[0X7]]];else local AL=(PL[0X5]);local dL,BL,DL=YL[AL]();do if not(dL)then else YL[AL+1]=BL;(YL)[AL+0X00002]=DL;CL=PL[4];end;end;end;else if not(not(YL[PL[0X004]]<=YL[PL[0X07]]))then else CL=PL[5];end;end;else do if wL>=0X000018 then if wL~=25 then local AL=(PL[0X4]);local BL,dL=AL[2],(nil);local DL=(#BL);if not(DL>0)then else dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0x1]==0 then(dL)[bC-0x00001]={YL,uC[0X0002]};else(dL)[bC-1]=RL[uC[2]];end;end;end;x(mL,dL);end;(YL)[PL[5]]=u[PL[7]](dL);else for AL=PL[0X5],PL[0X04]do(YL)[AL]=nil;end;end;else if wL==23 then do repeat local AL,dL,BL=mL,YL,({});do for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0x0001]==dL and EC[0X2]>=0X0 then local WC=(EC[0X002]);do if not BL[WC]then do BL[WC]={dL[WC]};end;end;end;EC[1]=BL[WC];(EC)[2]=1;end;end;end;end;end;until true;end;return;else do if YL[PL[0x4]]==YL[PL[7]]then else CL=PL[0X5];end;end;end;end;end;end;end;else if wL<0X010 then if wL<14 then local AL=RL[2];do YL[4]=AL[0X1][AL[2]];end;PL=FL[CL];CL=CL+0X001;do YL[4]=YL[4][PL[0X3]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0x0001;local DL=2;(YL)[4]=YL[0x04][PL[3]];do PL=FL[CL];end;CL=CL+1;YL[0X004]=YL[4][PL[0X3]];CL=CL+0X001;CL=CL+0X0001;CL=CL+1;(YL)[5]={};do PL=FL[CL];end;CL=CL+0X1;(YL[0x5])[PL[1]]=YL[0];CL=CL+1;(YL)[0x06]={};PL=FL[CL];CL=CL+0x1;(YL[6])[PL[0X01]]=YL[3];do PL=FL[CL];end;CL=CL+0X0001;YL[0X005][PL[1]]=YL[0X6];CL=CL+0X001;AL=RL[0x03];(YL)[6]=AL[1][AL[0X00002]];local BL=YL[6];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;local dL=(0X06);do(YL)[dL+1]=BL;end;(YL)[dL]=BL[PL[3]];CL=CL+1;AL=RL[0X4];YL[0X8]=AL[1][AL[0X002]];PL=FL[CL];do CL=CL+1;end;do(YL)[9]=PL[0X1];end;PL=FL[CL];CL=CL+1;(YL)[0x00a]=KL[PL[1]];PL=FL[CL];CL=CL+0x0001;(YL)[10]=YL[0X00A][PL[0X0003]];CL=CL+0X1;do CL=CL+0x00001;end;do CL=CL+1;end;dL=0X8;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);NL=dL;PL=FL[CL];do CL=CL+1;end;(YL)[0X9]=PL[1];CL=CL+1;dL=6;NL=dL+0X04-0X001;YL[dL](F(YL,dL+1,NL));NL=dL-0X01;CL=CL+1;AL=RL[0X0005];do YL[6]=AL[1][AL[2]];end;CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;(YL)[0X07]=PL[1];PL=FL[CL];do CL=CL+1;end;YL[8]=KL[PL[0X1]];CL=CL+1;CL=CL+0X01;CL=CL+1;do YL[0X00009]=YL[0X5];end;do CL=CL+0X01;end;dL=0X08;local bC=(0);if DL==0 then else NL=dL+DL-1;end;local uC,EC=nil,(nil);if DL~=1 then uC,EC=on(YL[dL](F(YL,dL+1,NL)));else do uC,EC=on(YL[dL]());end;end;if bC~=1 then if bC~=0X0 then do uC=dL+bC-0x00002;end;do NL=uC+0x0001;end;else uC=uC+dL-0X1;NL=uC;end;local WC=(0);for eC=dL,uC do WC=WC+1;(YL)[eC]=EC[WC];end;else NL=dL-0X1;end;do CL=CL+1;end;do CL=CL+1;end;CL=CL+0X1;dL=6;YL[dL](F(YL,dL+1,NL));NL=dL-0x01;PL=FL[CL];do CL=CL+1;end;(YL)[0x6]=KL[PL[1]];CL=CL+0x01;CL=CL+0X01;do PL=FL[CL];end;CL=CL+0x1;(YL)[6]=YL[6][PL[0X3]];CL=CL+1;do NL=0X6;end;YL[NL]();NL=NL-1;CL=CL+1;CL=CL+0X1;CL=CL+1;AL=RL[0X2];(YL)[0X6]=AL[1][AL[2]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;YL[6]=YL[0X6][PL[3]];PL=FL[CL];do CL=CL+0X1;end;(YL)[6]=YL[0X00006][PL[3]];do CL=CL+1;end;(YL)[0x00007]=YL[0X0004];do PL=FL[CL];end;CL=CL+1;do(YL[6])[PL[1]]=YL[0X007];end;PL=FL[CL];do CL=CL+0X1;end;YL[0X6]=KL[PL[1]];do PL=FL[CL];end;CL=CL+0X01;YL[0X7]=PL[0X00001];CL=CL+0X00001;do dL=0x00006;end;YL[dL](YL[dL+1]);NL=dL-0x1;do CL=CL+1;end;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+1;end;do CL=PL[4];end;else do if wL==0x0F then local AL=PL[5];local dL,BL,DL=YL[AL],YL[AL+0X1],(YL[AL+0X2]);(YL)[AL]=g(function()for bC=dL,BL,DL do q(true,bC);end;end);CL=PL[0X4];else(YL)[PL[0X005]]=PL[1];end;end;end;else if wL>=17 then if wL~=18 then local AL=(PL[0X0004]);local dL=(nil);local BL=AL[0X002];local DL=#BL;do if not(DL>0X0)then else do dL={};end;for bC=0X1,DL do local uC=(BL[bC]);do if uC[0X0001]~=0 then do dL[bC-0X1]=RL[uC[0X2]];end;else(dL)[bC-1]={YL,uC[0X00002]};end;end;end;(x)(mL,dL);end;end;do YL[PL[0X5]]=cn(dL,KL,AL);end;else YL[0X7]=YL[0X6][PL[3]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0X001;do YL[7]=YL[0X00007][PL[0x3]];end;CL=CL+0x1;CL=CL+0X00001;PL=FL[CL];CL=CL+1;if YL[7]==YL[2]then else CL=PL[0X5];end;end;else YL[PL[0X0005]]=YL[PL[4]]^YL[PL[0X7]];end;end;end;else if not(wL<0X006)then if not(wL>=0X9)then if not(wL>=7)then(YL)[PL[5]]=-YL[PL[0x00004]];else if wL~=8 then do(YL)[4]=KL[PL[0X1]];end;local DL=0X0004;CL=CL+1;local AL=RL[1];local dL=0X00004;do YL[5]=AL[0X1][AL[0X2]];end;do CL=CL+0x1;end;CL=CL+0x1;PL=FL[CL];CL=CL+1;YL[0x5]=YL[5][PL[0X03]];do CL=CL+0X1;end;local BL=(0X02);if BL~=0 then NL=dL+BL-0x1;end;local bC,uC=nil,(nil);if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;if DL==1 then NL=dL-1;else do if DL~=0x0 then bC=dL+DL-2;NL=bC+1;else bC=bC+dL-1;NL=bC;end;end;local WC=0;for eC=dL,bC do WC=WC+0X1;do(YL)[eC]=uC[WC];end;end;end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;dL=0X04;local EC=g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end);(EC)(YL[dL],YL[dL+1],YL[dL+0X0002]);NL=dL;YL[dL]=EC;do CL=PL[4];end;else YL[PL[5]]={F({},0X1,PL[0x4])};end;end;else if wL<0xb then if wL~=0X0000a then do YL[1]=KL[PL[0X001]];end;PL=FL[CL];local AL=(0X1);CL=CL+1;YL[1]=YL[1][PL[3]];do PL=FL[CL];end;CL=CL+1;(YL)[0X2]=PL[0x001];do CL=CL+1;end;(YL)[AL]=YL[AL](YL[AL+0X1]);do NL=AL;end;PL=FL[CL];CL=CL+0x1;if not YL[0x1]then CL=PL[4];end;else local AL=(RL[PL[4]]);do(YL)[PL[0X00005]]=AL[0x1][AL[0X002]];end;end;else if wL~=0xC then do(YL)[1]=KL[PL[1]];end;PL=FL[CL];CL=CL+0X00001;YL[0X0002]=PL[0x001];local dL=(2);CL=CL+1;local AL,BL=0X01,(0x4);do if dL==0X0 then else NL=AL+dL-1;end;end;local DL,bC=nil,(nil);if dL~=0X1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;if BL==1 then NL=AL-1;else if BL==0x000 then DL=DL+AL-0x001;NL=DL;else DL=AL+BL-2;do NL=DL+0x00001;end;end;local uC=0X000;for EC=AL,DL do do uC=uC+0X00001;end;YL[EC]=bC[uC];end;end;do PL=FL[CL];end;do CL=CL+0x01;end;if not YL[1]then CL=PL[0X00004];end;else(YL)[PL[0x5]]=KL[PL[1]];end;end;end;else if not(wL<0X003)then if wL<0X4 then if YL[PL[0X5]]then CL=PL[0X0004];end;else if wL==0X5 then do if not(not YL[PL[0x5]])then else do CL=PL[0X0004];end;end;end;else(YL)[7]=YL[6][PL[0X3]];CL=CL+1;(YL)[0]=YL[7];PL=FL[CL];CL=CL+0X1;CL=PL[4];end;end;else if wL>=0X1 then do if wL~=0X002 then YL[1]=KL[PL[0X001]];PL=FL[CL];CL=CL+0x1;do(YL)[1]=YL[0X1][PL[0X3]];end;CL=CL+0X00001;CL=CL+1;PL=FL[CL];CL=CL+1;do if not(not YL[0x00001])then else CL=PL[4];end;end;else CL=PL[4];end;end;else end;end;end;end;end;end);do if nL then if TL then do if rL~=0X001 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;else if z(TL)~="\s\116\114\105n\g"then(G)(TL,0);else do if not(V(TL,'att\em\p\116\032\116\111\032y\i\101ld\ a\c\114\111\s\s\032\109eta\109e\116\ho\d/\C%-\c\097ll\ bo\117nd\097\114\y'))then else return q();end;end;if not(V(TL,"^\.\-\:\037\100\043: "))then(G)(TL,0);else G('L\117\114ap\104\032\Sc\114\i\p\116\058'..(_L[CL-1]or'\(\int\ern\097\l\)')..":\ "..l(TL),0);end;end;end;end;end;else aL=function(...)local YL={};local NL=0X0;local kL={[0X1]=YL,[2]=qL};local OL=(Q());local KL=(OL==_ and sL or OL);local LL,hL=on(...);do LL=LL-0x001;end;for PL=0X0,LL do if not(XL>PL)then break;else do YL[PL]=hL[PL+0X1];end;end;end;if not SL then do hL=nil;end;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+0x1 or 0,F(hL,XL+0X001,LL+1)};end;end;local CL=(1);if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];do CL=CL+0X0001;end;if not(wL>=7)then if wL>=3 then if wL>=0x5 then if wL~=6 then if YL[PL[0X4]]==YL[PL[0X7]]then do CL=PL[5];end;end;else(YL)[PL[5]]=-YL[PL[0X4]];end;else if wL~=4 then if not YL[PL[5]]then CL=PL[0X004];end;else YL[PL[0X5]]={F({},0x1,PL[0X4])};end;end;else do if wL<1 then local AL=(PL[4]);local dL=(nil);local BL=(AL[2]);local DL=(#BL);if not(DL>0X000)then else dL={};do for bC=1,DL do local uC=(BL[bC]);do if uC[1]~=0 then dL[bC-1]=RL[uC[0X002]];else dL[bC-0X1]={YL,uC[2]};end;end;end;end;x(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;else if wL==0X0002 then YL[PL[0x00005]]=PL[1];else(YL)[PL[0X5]]=KL[PL[0X1]];end;end;end;end;else if wL>=0XB then do if not(wL>=0Xd)then if wL==12 then local AL=RL[0];(YL)[0]=AL[0X1][AL[2]];CL=CL+1;CL=CL+1;CL=CL+1;AL=RL[1];do(YL)[0X1]=AL[0X1][AL[0X2]];end;CL=CL+1;local dL=(0X0);AL=RL[2];(YL)[0X2]=AL[1][AL[0x2]];CL=CL+1;YL[dL](YL[dL+0x1],YL[dL+0X2]);NL=dL-0X01;do CL=CL+0X1;end;CL=CL+0X1;CL=CL+0x00001;repeat local BL,DL=mL,YL;local bC={};for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[2]>=0 then local oC=(eC[2]);do if not(not bC[oC])then else(bC)[oC]={DL[oC]};end;end;eC[0x001]=bC[oC];eC[0x2]=1;end;end;end;until true;return;else do for AL=PL[5],PL[0X4]do(YL)[AL]=nil;end;end;end;else do if wL~=14 then CL=PL[0X4];else(YL)[PL[5]]=YL[PL[4]]>YL[PL[0X7]];end;end;end;end;else if wL>=9 then if wL~=10 then(YL)[PL[5]]=T(YL[PL[4]]);else do(YL)[PL[0X0005]]=not YL[PL[4]];end;end;else if wL~=8 then else do if not(YL[PL[5]])then else do CL=PL[4];end;end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)=="\115tr\105ng"then do if V(TL,"at\116\e\109\pt\ t\o\ y\ield\ \097\099r\o\ss\ \109\101ta\m\101t\hod/C\%\-\099\097\ll\ bo\117nda\114\121")then return q();end;end;if V(TL,'^.-\058\037d\+:\ ')then G('\L\117\114ap\h\032\S\099r\i\p\116\058'..(_L[CL-0X1]or"(i\110\116\101rn\097\l\)")..'\058\ '..l(TL),0X0);else(G)(TL,0X0);end;else(G)(TL,0X0);end;else if TL then if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;end;end;end;end;end;else if HL<59 then if not(HL<0X37)then if HL<0X39 then if HL==0x38 then aL=function(...)local YL={};local CL=(1);local OL=Q();local kL={[2]=qL,[0X1]=YL};local LL,hL=on(...);local NL=(0x0);do LL=LL-0x001;end;for PL=0x0,LL do if not(XL>PL)then do break;end;else do(YL)[PL]=hL[PL+1];end;end;end;local KL=((OL==_ and sL or OL));if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];do CL=CL+0X1;end;if not(wL>=7)then do if wL<3 then if wL<0X1 then YL[PL[5]]=PL[4];else if wL~=2 then else local AL=(PL[5]);local dL=(g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));(dL)(YL[AL],YL[AL+1],YL[AL+2]);do NL=AL;end;YL[AL]=dL;CL=PL[4];end;end;else if not(wL<0X5)then do if wL==0x6 then(YL)[PL[0X00005]]=KL[PL[1]];else do for AL=PL[0x005],PL[0x0004]do(YL)[AL]=nil;end;end;end;end;else if wL~=0X4 then local AL=(PL[0X4]);local BL,dL=AL[2],nil;local DL=(#BL);do if DL>0 then do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[0x1]~=0X0 then dL[bC-1]=RL[uC[0X2]];else dL[bC-1]={YL,uC[0X0002]};end;end;(x)(mL,dL);end;end;(YL)[PL[5]]=u[PL[0X7]](dL);else local AL=PL[5];local dL=YL[PL[4]];do YL[AL+0X0001]=dL;end;YL[AL]=dL[PL[3]];end;end;end;end;else do if wL<10 then if not(wL>=0X08)then do YL[PL[5]]={F({},1,PL[0X4])};end;else do if wL==9 then CL=PL[0X4];else local AL=PL[4];local BL,dL=AL[0X2],(nil);local DL=#BL;if not(DL>0)then else dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[0x1]==0X000 then(dL)[bC-1]={YL,uC[2]};else do dL[bC-0X01]=RL[uC[0X2]];end;end;end;(x)(mL,dL);end;(YL)[PL[0X00005]]=cn(dL,KL,AL);end;end;end;else if wL<0Xc then if wL~=11 then(kL)[PL[0x4]]=YL[PL[5]];else if not(not(YL[PL[4]]<YL[PL[7]]))then else CL=PL[0x5];end;end;else if wL==13 then YL[PL[0x5]]=PL[0x01];else YL[0X0001]=KL[PL[0X1]];CL=CL+0X1;do(YL)[0x02]=YL[0];end;PL=FL[CL];do CL=CL+0X01;end;YL[1][PL[0x1]]=YL[2];PL=FL[CL];CL=CL+0x1;(YL)[1]=KL[PL[1]];CL=CL+0X1;do CL=CL+1;end;CL=CL+0X001;do NL=0X001;end;(YL[NL])();NL=NL-0X1;do CL=CL+1;end;repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X002]>=0 then local WC=(EC[0x00002]);if not BL[WC]then(BL)[WC]={dL[WC]};end;(EC)[0X1]=BL[WC];EC[2]=1;end;end;end;until true;return;end;end;end;end;end;end;end);if nL then do if TL then if rL~=0X00001 then do return YL[ML](F(YL,ML+1,NL));end;else do return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;else if z(TL)=="st\114\105ng"then do if V(TL,'\097tt\emp\116\ \116\o\032\y\iel\100\ \097\099\114\os\s\032\met\097\109\et\h\o\d\/\C\%\-cal\l b\ou\110\da\114\y')then do return q();end;end;end;if V(TL,"\094\.-\:\%d\+\058\ ")then(G)('\Lur\097\p\104\032\Scr\ipt:'..(_L[CL-1]or'\(i\110\116\e\114n\097\l\041')..'\:\032'..l(TL),0);else(G)(TL,0);end;else G(TL,0X0);end;end;end;else aL=function(...)local CL,YL=1,({});local OL=Q();local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);local KL=(OL==_ and sL or OL);local NL=(0);do LL=LL-1;end;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+0X01];else break;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0x0,F(hL,XL+0x1,LL+1)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+1;if not(wL<7)then if not(wL<11)then if wL>=13 then do if wL==14 then CL=PL[0X004];else local AL,dL=PL[4],nil;local BL=AL[2];local DL=(#BL);do if DL>0X0 then dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[0X1]==0X00000 then do dL[bC-0X1]={YL,uC[2]};end;else dL[bC-0x001]=RL[uC[2]];end;end;(x)(mL,dL);end;end;(YL)[PL[0X0005]]=u[PL[7]](dL);end;end;else if wL==0XC then local AL,dL=PL[0X5],(PL[7]-0X1)*0X32;local BL=YL[AL];for DL=1,PL[4]do do(BL)[dL+DL]=YL[AL+DL];end;end;else end;end;else if wL>=9 then if wL~=10 then local AL=(PL[0X4]);local BL,dL=AL[0X2],(nil);local DL=#BL;if DL>0 then do dL={};end;for bC=0X1,DL do local uC=BL[bC];if uC[1]==0 then dL[bC-0x1]={YL,uC[0X0002]};else dL[bC-0X0001]=RL[uC[2]];end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);else if not(YL[PL[5]])then else do CL=PL[0x00004];end;end;end;else do if wL~=0x8 then(YL)[PL[5]]=h(YL[PL[0x4]],YL[PL[7]]);else do YL[PL[5]]=PL[0X001];end;end;end;end;end;else if not(wL<0x3)then if not(wL>=5)then if wL~=0X0004 then do YL[PL[0x5]]=KL[PL[1]];end;else YL[PL[0X005]]={F({},1,PL[4])};end;else do if wL~=6 then if YL[PL[0x04]]<YL[PL[0X00007]]then CL=PL[5];end;else(YL)[0x001]=YL[PL[0X00004]];PL=FL[CL];CL=CL+1;local AL=(RL[PL[4]]);AL[1][AL[0x0002]]=YL[1];do CL=CL+1;end;repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0X01]==BL and WC[2]>=0X0 then local eC=WC[0X002];do if not DL[eC]then(DL)[eC]={BL[eC]};end;end;do(WC)[0X0001]=DL[eC];end;(WC)[2]=1;end;end;end;end;until true;return;end;end;end;else if wL>=0x1 then if wL~=2 then(YL)[PL[5]]=YL[PL[0X04]]*YL[PL[0X7]];else do YL[PL[0X5]]=PL[0x4];end;end;else YL[PL[0X5]][YL[PL[0x4]]]=YL[PL[7]];end;end;end;end;end);if not(nL)then if z(TL)=="\s\116r\in\g"then if V(TL,"\097\116t\101\m\pt\032to \121\ie\l\d\032\097c\114\o\s\s m\e\116\097me\116\ho\d\047\067\037\045\c\097\l\108\ b\o\117\110\100a\114\y")then do return q();end;end;if not(V(TL,'\^\.\045\:\%\100+\058\032'))then G(TL,0);else G('L\117\114\097\112\h S\c\114\i\pt\058'..(_L[CL-0x1]or"\040\i\110\116\e\114\110a\l\)")..'\: '..l(TL),0x00000);end;else G(TL,0);end;else if TL then if rL==1 then return YL[ML]();else do return YL[ML](F(YL,ML+0X001,NL));end;end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;else if HL~=58 then aL=function(...)local CL,YL=1,{};local OL=Q();local KL=((OL==_ and sL or OL));local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;local NL=(0x0);for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+0x0001];else do break;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X001,LL+0X1)};end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0X2]);do CL=CL+0X1;end;do if wL>=7 then if wL<10 then if wL>=0X8 then if wL==0X9 then(YL)[PL[0X005]]={F({},0X1,PL[4])};else(YL[PL[0X5]])[YL[PL[4]]]=YL[PL[7]];end;else CL=PL[0X4];end;else if wL<0Xc then if wL==11 then else local AL=PL[0x4];local BL,dL=AL[0X002],(nil);local DL=(#BL);if DL>0X00 then do dL={};end;for bC=0X00001,DL do local uC=BL[bC];if uC[1]==0X0 then dL[bC-1]={YL,uC[2]};else(dL)[bC-1]=RL[uC[2]];end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);end;else if wL~=0x000D then local AL,dL=PL[5],((PL[7]-1)*50);local BL=(YL[AL]);do for DL=1,PL[0X4]do do BL[dL+DL]=YL[AL+DL];end;end;end;else local AL=PL[5];local dL,BL=YL[AL],YL[AL+1];local DL=(YL[AL+0x2]);YL[AL]=g(function()do for bC=dL,BL,DL do q(true,bC);end;end;end);CL=PL[4];end;end;end;else if not(wL>=0X03)then if wL<0x01 then do if YL[PL[4]]==YL[PL[7]]then else CL=PL[0X5];end;end;else if wL==0x2 then(YL)[1]=KL[PL[1]];CL=CL+1;(YL)[0X2]=YL[0X00];PL=FL[CL];do CL=CL+1;end;YL[0X00001][PL[1]]=YL[2];do PL=FL[CL];end;CL=CL+1;do(YL)[0X1]=KL[PL[1]];end;CL=CL+0x1;do CL=CL+1;end;CL=CL+0X1;NL=0X00001;YL[NL]();do NL=NL-0X00001;end;do CL=CL+0X0001;end;repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X02]>=0 then local WC=EC[2];if not BL[WC]then do BL[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];EC[0X002]=1;end;end;end;until true;return;else YL[PL[5]]=YL[PL[4]];end;end;else if wL<0X5 then if wL~=4 then YL[PL[5]]=YL[PL[0X0004]]>YL[PL[0X7]];else(YL)[PL[5]]=PL[0X1];end;else if wL~=0x6 then do(YL)[PL[0X05]]=KL[PL[1]];end;else if YL[PL[0X4]]==YL[PL[7]]then do CL=PL[5];end;end;end;end;end;end;end;end;end);if nL then do if TL then if rL~=1 then return YL[ML](F(YL,ML+0X0001,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;else do if z(TL)=='\s\116\114\in\g'then if V(TL,"a\116\116\e\109\p\116\032\116o\ \y\i\e\l\d\ \097\cr\oss \109\et\097\m\eth\o\100/\C\037\-\c\097\ll\ \098\111u\110da\114\y")then return q();end;if V(TL,"^\.\-:\%d\+\:\032")then G("\L\117r\097\112\h \083c\114\i\112t\:"..(_L[CL-1]or'\040\in\116\101r\110a\108)').."\:\032"..l(TL),0);else G(TL,0);end;else(G)(TL,0);end;end;end;end;else aL=function(...)local YL=({});local NL=0;local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);LL=LL-1;local CL,KL=0X001,((OL==_ and sL or OL));do for PL=0,LL do do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+0X001];end;end;end;end;end;do if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+0x1;if wL<0X8 then if not(wL<4)then if not(wL<6)then if wL==0X7 then do(YL)[PL[0x5]]=M(YL[PL[0X004]],YL[PL[7]]);end;else local AL=PL[0X005];local BL,DL=YL[AL+0X1],YL[AL+2];local dL=YL[AL];do(YL)[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);end;CL=PL[0X0004];end;else if wL~=5 then YL[PL[0X5]]=PL[1];else YL[PL[0X05]]=KL[PL[0x1]];end;end;else do if not(wL>=0X2)then if wL~=1 then YL[PL[5]]=YL[PL[4]]<=YL[PL[7]];else YL[PL[5]]=K(YL[PL[0X4]],YL[PL[7]]);end;else if wL~=3 then local dL=(PL[4]);local AL=(PL[5]);if dL~=0X0000 then NL=AL+dL-0X1;end;local DL,bC=nil,nil;local BL=(PL[0X7]);do if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+0X001,NL)));else do DL,bC=on(YL[AL]());end;end;end;if BL==1 then NL=AL-0X1;else if BL~=0 then DL=AL+BL-2;do NL=DL+0X1;end;else DL=DL+AL-0X1;do NL=DL;end;end;local uC=0x00;for EC=AL,DL do do uC=uC+0X1;end;(YL)[EC]=bC[uC];end;end;else(YL)[PL[5]]=h(YL[PL[0X4]],YL[PL[7]]);end;end;end;end;else if wL<12 then if wL>=0X0000A then if wL==0Xb then do CL=PL[4];end;else YL[PL[5]]=#YL[PL[0X00004]];end;else if wL~=0x9 then if YL[PL[4]]~=YL[PL[0X007]]then CL=PL[5];end;else YL[1]=KL[PL[1]];CL=CL+1;YL[0X0002]=YL[0];PL=FL[CL];CL=CL+0x1;do YL[1][PL[0X01]]=YL[0X2];end;PL=FL[CL];do CL=CL+0x01;end;(YL)[1]=KL[PL[0x1]];CL=CL+0X001;local uC=(1);CL=CL+0X1;do CL=CL+1;end;local AL=RL[0X000];NL=1;(YL[NL])();do NL=NL-0X01;end;CL=CL+1;do CL=CL+0x1;end;do CL=CL+1;end;YL[0X1]=AL[0X01][AL[2]];CL=CL+0x1;do CL=CL+0X1;end;do PL=FL[CL];end;local dL=PL[0X4];do CL=CL+1;end;local DL=dL[2];local BL=nil;local bC=(#DL);if bC>0 then BL={};for EC=0X00001,bC do local WC=DL[EC];do if WC[0x1]==0 then BL[EC-0x1]={YL,WC[2]};else BL[EC-0x1]=RL[WC[0X02]];end;end;end;(x)(mL,BL);end;do(YL)[2]=cn(BL,KL,dL);end;CL=CL+1;YL[uC](YL[uC+1]);NL=uC-0X1;CL=CL+0X00001;repeat local EC,WC=mL,YL;local eC=({});do for oC,jC in U,EC do for zC,lC in U,jC do if lC[0X001]==WC and lC[0X2]>=0X000 then local GC=lC[2];if not eC[GC]then(eC)[GC]={WC[GC]};end;lC[1]=eC[GC];lC[2]=1;end;end;end;end;until true;return;end;end;else do if not(wL<0x0000E)then if not(wL<0XF)then if wL==0X00010 then do YL[PL[0X5]]={F({},0X001,PL[0X00004])};end;else do kL[PL[0X4]]=YL[PL[5]];end;end;else end;else if wL~=0XD then for AL=PL[0X00005],PL[0X4]do(YL)[AL]=nil;end;else local AL=(PL[4]);local BL=(AL[0X0002]);local dL=(nil);local DL=#BL;if not(DL>0X000)then else dL={};for bC=0x00001,DL do local uC=BL[bC];do if uC[0X1]~=0X00 then do dL[bC-0X0001]=RL[uC[2]];end;else do(dL)[bC-1]={YL,uC[0X002]};end;end;end;end;(x)(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;end;end;end);if not(nL)then do if z(TL)=="s\116\114in\g"then if V(TL,"\097\116\116\101m\p\116 t\111\ \121i\101\l\d\ ac\114o\s\s\032\meta\m\e\116\ho\100/\C\037\045\099al\l \098\o\117\110\100a\114\y")then return q();end;if V(TL,'\^\.\-:%d+\058 ')then G('\076ura\112\h\ \083c\114\i\p\116\:'..(_L[CL-0X1]or"\(i\110\116\er\110\097\108\)")..'\:\032'..l(TL),0X0);else(G)(TL,0X00);end;else G(TL,0X0);end;end;else if TL then do if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;end;elseif not(HL>=53)then do if HL~=52 then aL=function(...)local CL=(1);local YL={};local OL=Q();local LL,hL=on(...);local KL,kL=(OL==_ and sL or OL),({[0X1]=YL,[2]=qL});LL=LL-1;for PL=0X0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+1];end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;local NL=0;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=(PL[0X2]);CL=CL+1;if not(wL<0X000019)then do if not(wL>=37)then if wL<31 then if not(wL>=0X1c)then if wL<0x0001A then YL[PL[5]]=YL[PL[0x04]][PL[0x3]];else if wL==27 then local AL=(RL[10]);YL[9]=AL[0X001][AL[0X2]];do PL=FL[CL];end;CL=CL+1;do YL[9]=YL[0x9][PL[3]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;do(YL)[0Xa]=YL[7][PL[3]];end;CL=CL+0X01;CL=CL+0x1;CL=CL+1;(YL)[0X9]=YL[9][YL[0Xa]];CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[9]=YL[9][PL[0x3]];PL=FL[CL];do CL=CL+1;end;do CL=PL[0X00004];end;else do if YL[PL[0X05]]then CL=PL[0x04];end;end;end;end;else do if wL<29 then local AL=RL[0X9];YL[0Xc]=AL[0X0001][AL[2]];PL=FL[CL];do CL=CL+1;end;(YL)[0X0D]=PL[0x1];do CL=CL+1;end;YL[0XE]=YL[9];do CL=CL+0X00001;end;local dL=0X0000C;(YL[dL])(YL[dL+0x1],YL[dL+2]);do NL=dL-1;end;PL=FL[CL];do CL=CL+0X0001;end;CL=PL[4];else if wL==30 then local AL=(RL[0x0009]);do(YL)[0XC]=AL[0X1][AL[2]];end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[13]=PL[1];local dL=12;CL=CL+0X00001;(YL)[14]=YL[11];CL=CL+0x1;YL[dL](YL[dL+0X01],YL[dL+2]);do NL=dL-1;end;do PL=FL[CL];end;CL=CL+0x1;CL=PL[0X4];else local AL=RL[0Xb];YL[0Xc]=AL[0x1][AL[2]];do CL=CL+0X00001;end;CL=CL+1;PL=FL[CL];CL=CL+1;do(YL)[12]=YL[0x00C][PL[0X3]];end;CL=CL+1;CL=CL+1;PL=FL[CL];local dL=12;CL=CL+0X01;do(YL)[13]=KL[PL[1]];end;PL=FL[CL];do CL=CL+1;end;YL[13]=YL[13][PL[3]];CL=CL+1;YL[0Xe]=YL[0x8];do CL=CL+1;end;do YL[dL]=YL[dL](YL[dL+0X1],YL[dL+2]);end;do NL=dL;end;CL=CL+0X01;CL=CL+1;PL=FL[CL];CL=CL+1;if not(YL[0Xc])then else CL=PL[0X004];end;end;end;end;end;else if wL<0x22 then if wL>=0X00020 then if wL==0X21 then local AL=(RL[0X003]);(YL)[0X3]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;do YL[0x3]=YL[0x3][PL[3]];end;CL=CL+1;AL=RL[0X4];(YL)[0x4]=AL[0X1][AL[0X2]];CL=CL+0X1;CL=CL+1;CL=CL+0x1;NL=4;YL[NL]=YL[NL]();CL=CL+0X01;AL=RL[0X005];(YL)[0x5]=AL[1][AL[0X2]];PL=FL[CL];CL=CL+0X01;do YL[5]=YL[5][PL[0X3]];end;CL=CL+0X001;local dL=(3);YL[dL]=YL[dL](YL[dL+0X1],YL[dL+0X2]);NL=dL;do CL=CL+1;end;CL=CL+0X001;do PL=FL[CL];end;CL=CL+1;CL=PL[0X4];else YL[PL[0X00005]]={F({},0X1,PL[4])};end;else CL=PL[4];end;else if wL>=35 then do if wL~=36 then YL[PL[5]][YL[PL[0X4]]]=YL[PL[7]];else(YL)[12]=PL[1];do PL=FL[CL];end;CL=CL+1;(KL)[PL[0X1]]=YL[0xC];PL=FL[CL];CL=CL+0X001;do YL[0XC]=PL[0x1];end;PL=FL[CL];CL=CL+0X1;(YL)[0x00D]=YL[0X6][PL[0x3]];CL=CL+1;do CL=CL+1;end;CL=CL+1;local AL=0x0c;YL[0Xe]=YL[10];CL=CL+1;YL[0Xf]=YL[0x8];CL=CL+0X1;repeat local dL,BL,DL=mL,YL,{};do for bC,uC in U,dL do for EC,WC in U,uC do if WC[0X1]==BL and WC[2]>=0X0 then local eC=(WC[2]);if not DL[eC]then DL[eC]={BL[eC]};end;WC[0x1]=DL[eC];do WC[2]=0X1;end;end;end;end;end;until true;do return false,AL,AL+0X00005-2;end;end;end;else local AL=RL[0X7];YL[0X00008]=AL[0X001][AL[2]];PL=FL[CL];CL=CL+1;do(YL)[0X9]=YL[0X6][PL[3]];end;CL=CL+1;YL[8]=YL[0X008][YL[9]];CL=CL+0X001;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X1;end;do YL[0X00008]=YL[0X8][PL[3]];end;CL=CL+1;CL=CL+0X00001;CL=CL+0X01;AL=RL[10];(YL)[9]=AL[1][AL[2]];CL=CL+0X1;CL=CL+0x1;do PL=FL[CL];end;CL=CL+1;do(YL)[9]=YL[0X9][PL[0x3]];end;CL=CL+1;CL=CL+0x01;PL=FL[CL];do CL=CL+1;end;do(YL)[10]=YL[0X7][PL[0X3]];end;CL=CL+1;CL=CL+0x1;CL=CL+0X01;(YL)[9]=YL[9][YL[0xA]];PL=FL[CL];CL=CL+1;if not YL[9]then CL=PL[0X4];end;end;end;end;else if wL<43 then if wL<0x000028 then if wL>=38 then if wL~=0X00027 then do YL[10]=KL[PL[0X01]];end;CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+1;(YL)[0XB]=YL[7][PL[3]];CL=CL+0X001;CL=CL+0X1;local AL=(0XA);CL=CL+1;(YL)[AL]=YL[AL](YL[AL+0X0001]);NL=AL;CL=CL+1;CL=CL+0x1;do PL=FL[CL];end;do CL=CL+0X1;end;if YL[10]then CL=PL[0X4];end;else local AL=(RL[0]);(YL)[3]=AL[0X00001][AL[0x2]];CL=CL+0X0001;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;if not YL[3]then CL=PL[0X4];end;end;else local AL=(RL[0X9]);(YL)[12]=AL[0X1][AL[0X02]];do PL=FL[CL];end;local dL=(12);CL=CL+0X00001;do YL[0XD]=PL[1];end;CL=CL+1;(YL)[14]=YL[0X8];CL=CL+1;(YL[dL])(YL[dL+1],YL[dL+2]);NL=dL-1;CL=CL+0X00001;CL=CL+1;PL=FL[CL];CL=CL+1;CL=PL[0X4];end;else if not(wL<41)then if wL~=0X002A then(YL)[PL[0x5]]=PL[1];else local AL=RL[0X5];(YL)[0XA]=AL[1][AL[2]];PL=FL[CL];CL=CL+0X001;YL[10]=YL[0xA][PL[0x3]];PL=FL[CL];CL=CL+0X1;if YL[0X9]==YL[10]then CL=PL[0X00005];end;end;else local AL=(RL[9]);YL[0XC]=AL[1][AL[0x2]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;YL[13]=PL[1];local dL=(12);do CL=CL+0X1;end;YL[14]=YL[10];CL=CL+0X1;(YL[dL])(YL[dL+0X00001],YL[dL+0x00002]);NL=dL-0X1;CL=CL+0X01;CL=CL+0x1;PL=FL[CL];do CL=CL+0X01;end;CL=PL[0X4];end;end;else if wL<0X2e then if not(wL>=44)then repeat local dL,BL=mL,(YL);local DL={};for bC,uC in U,dL do do for EC,WC in U,uC do do if not(WC[0X0001]==BL and WC[2]>=0x00000)then else local eC=WC[2];if not DL[eC]then DL[eC]={BL[eC]};end;WC[1]=DL[eC];(WC)[0X0002]=0X01;end;end;end;end;end;until true;local AL=(PL[5]);return false,AL,AL;else if wL~=0X02d then(YL)[2]=KL[PL[1]];CL=CL+0X1;do NL=2;end;YL[NL]=YL[NL]();PL=FL[CL];do CL=CL+1;end;do CL=PL[4];end;else local AL=(RL[0X0008]);(YL)[0x9]=AL[1][AL[2]];PL=FL[CL];CL=CL+0X1;YL[0X0000A]=YL[7][PL[0X3]];CL=CL+1;YL[9]=YL[0x9][YL[10]];PL=FL[CL];CL=CL+0X0001;(YL)[0x9]=YL[0X9][PL[0X3]];do PL=FL[CL];end;CL=CL+1;do CL=PL[4];end;end;end;else if not(wL>=0X30)then do if wL~=47 then repeat local BL={};local AL,dL=mL,(YL);for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X01]==dL and EC[2]>=0)then else local WC=(EC[0X02]);if not BL[WC]then BL[WC]={dL[WC]};end;(EC)[0X1]=BL[WC];(EC)[2]=1;end;end;end;until true;return;else local AL=(RL[PL[0x4]]);YL[PL[5]]=AL[1][AL[2]];end;end;else if wL~=0X00031 then(YL)[7]=YL[0X0006][PL[3]];PL=FL[CL];CL=CL+0X1;(YL)[7]=YL[7][PL[0X3]];do PL=FL[CL];end;CL=CL+0X1;if YL[7]then do CL=PL[0x0004];end;end;else local AL=RL[0X000b];(YL)[0X000c]=AL[0X01][AL[2]];CL=CL+0X1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;YL[12]=YL[0XC][PL[3]];CL=CL+0X1;local dL=(12);CL=CL+0X00001;do PL=FL[CL];end;CL=CL+0x1;do YL[0XD]=KL[PL[0X1]];end;PL=FL[CL];CL=CL+1;do(YL)[0XD]=YL[0xD][PL[0X003]];end;CL=CL+1;do YL[14]=YL[11];end;CL=CL+0X1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);NL=dL;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0x01;if not(not YL[0X000C])then else CL=PL[4];end;end;end;end;end;end;end;else if not(wL>=0X000C)then if not(wL<0X6)then if wL<9 then if wL<7 then local AL=RL[0X09];(YL)[0Xa]=AL[0x01][AL[0X02]];do CL=CL+0X1;end;CL=CL+0X1;CL=CL+1;local dL=10;(YL)[11]=YL[9];do CL=CL+1;end;AL=RL[5];YL[12]=AL[1][AL[2]];do PL=FL[CL];end;CL=CL+0X1;YL[12]=YL[0Xc][PL[3]];CL=CL+0X00001;CL=CL+1;do CL=CL+0X0001;end;(YL[dL])(YL[dL+0x1],YL[dL+0x00002]);NL=dL-0x1;CL=CL+1;AL=RL[0X9];YL[10]=AL[1][AL[2]];do CL=CL+0x00001;end;do CL=CL+0X01;end;PL=FL[CL];do CL=CL+1;end;(YL)[0Xb]=PL[1];do CL=CL+1;end;do dL=10;end;YL[dL](YL[dL+0X1]);NL=dL-0X1;do CL=CL+1;end;CL=CL+0X01;PL=FL[CL];do CL=CL+0X1;end;CL=PL[4];else if wL==8 then local AL=RL[11];YL[12]=AL[0X1][AL[2]];do CL=CL+1;end;do CL=CL+0X1;end;do PL=FL[CL];end;CL=CL+1;YL[0XC]=YL[12][PL[0X3]];PL=FL[CL];CL=CL+1;YL[0Xd]=KL[PL[1]];CL=CL+0X00001;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;local dL=12;(YL)[0XD]=YL[0xd][PL[0X00003]];CL=CL+1;CL=CL+0X1;CL=CL+0X1;(YL)[0XE]=YL[10];CL=CL+1;do(YL)[dL]=YL[dL](YL[dL+0x001],YL[dL+2]);end;NL=dL;PL=FL[CL];CL=CL+1;do if not(not YL[0xC])then else do CL=PL[4];end;end;end;else if YL[PL[4]]==YL[PL[0X7]]then CL=PL[0x5];end;end;end;else if not(wL<0xA)then if wL==11 then YL[0X1]=KL[PL[0X001]];CL=CL+1;CL=CL+0X1;PL=FL[CL];do CL=CL+0X001;end;(YL)[0X002]=PL[1];CL=CL+0X1;local AL=(1);YL[AL]=YL[AL](YL[AL+0X00001]);do NL=AL;end;CL=CL+1;CL=CL+0x1;do PL=FL[CL];end;CL=CL+1;CL=PL[4];else(YL)[9]=YL[8][PL[3]];do CL=CL+0x1;end;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X1;YL[0X9]=YL[9][PL[0X3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;CL=PL[0x4];end;else local AL=RL[0x0000];(YL)[2]=AL[0X1][AL[0X2]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0x01;if not(not YL[2])then else CL=PL[0X04];end;end;end;else if wL>=3 then do if wL>=0X4 then do if wL~=5 then YL[0X4]=KL[PL[0X1]];CL=CL+0X1;local AL=(RL[6]);(YL)[0X05]=AL[1][AL[0X0002]];local dL=(4);CL=CL+0X1;CL=CL+1;local DL=(0X4);PL=FL[CL];CL=CL+0x0001;YL[0x5]=YL[5][PL[3]];do CL=CL+1;end;local BL=(2);if BL==0 then else NL=dL+BL-0X1;end;local bC,uC=nil,nil;if BL~=1 then bC,uC=on(YL[dL](F(YL,dL+1,NL)));else do bC,uC=on(YL[dL]());end;end;if DL==1 then NL=dL-1;else if DL==0 then bC=bC+dL-0X1;NL=bC;else bC=dL+DL-0X2;do NL=bC+1;end;end;local WC=0;for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;dL=0X4;local EC=g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end);EC(YL[dL],YL[dL+0X1],YL[dL+2]);do NL=dL;end;(YL)[dL]=EC;CL=PL[0x004];else local AL=RL[0X7];do YL[8]=AL[0x1][AL[2]];end;CL=CL+0x001;CL=CL+1;PL=FL[CL];CL=CL+1;YL[0X9]=YL[6][PL[0X003]];CL=CL+1;do CL=CL+0x1;end;CL=CL+0X001;YL[8]=YL[8][YL[0x9]];PL=FL[CL];CL=CL+0X001;(YL)[9]=YL[8][PL[3]];CL=CL+0X00001;do CL=CL+0X0001;end;PL=FL[CL];do CL=CL+1;end;do if not YL[0X9]then do CL=PL[4];end;end;end;end;end;else YL[PL[5]]=KL[PL[1]];end;end;else if not(wL>=1)then(YL)[12]=KL[PL[1]];CL=CL+1;CL=CL+0X001;PL=FL[CL];CL=CL+1;YL[13]=YL[0X07][PL[0x3]];CL=CL+1;local AL=12;(YL)[AL]=YL[AL](YL[AL+1]);NL=AL;CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;if YL[12]then CL=PL[0x4];end;else if wL==0x002 then local AL=RL[1];YL[0x1]=AL[1][AL[2]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;if not(not YL[1])then else CL=PL[0x4];end;else repeat local AL,dL,BL,DL=mL,YL,PL[0X00005],{};do for bC,uC in U,AL do for EC,WC in U,uC do if not(WC[0X1]==dL and WC[0X2]>=BL)then else local eC=WC[0X2];if not(not DL[eC])then else(DL)[eC]={dL[eC]};end;(WC)[0X1]=DL[eC];do(WC)[0x2]=0x1;end;end;end;end;end;until true;end;end;end;end;else if not(wL>=0X000012)then if wL<15 then if wL<0Xd then local AL=RL[0x2];do(YL)[0X1]=AL[1][AL[0X2]];end;PL=FL[CL];CL=CL+1;do(YL)[0X1]=YL[0x0001][PL[0x3]];end;do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;do(YL)[1]=YL[1][PL[0X0003]];end;CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X0001;if YL[0X1]then CL=PL[4];end;else if wL==14 then local AL=(PL[0X5]);local dL,BL,DL=YL[AL]();if dL then(YL)[AL+0X1]=BL;do YL[AL+0X002]=DL;end;CL=PL[4];end;else local AL=RL[0x0000b];YL[0XC]=AL[1][AL[0X2]];CL=CL+1;CL=CL+0x1;PL=FL[CL];do CL=CL+0X1;end;(YL)[0x00c]=YL[0X000C][PL[3]];CL=CL+0X01;do CL=CL+1;end;PL=FL[CL];CL=CL+0X01;YL[13]=KL[PL[1]];do CL=CL+1;end;local dL=12;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[13]=YL[0X0d][PL[3]];CL=CL+0X00001;do(YL)[0X00e]=YL[9];end;CL=CL+0X1;do(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);end;do NL=dL;end;do PL=FL[CL];end;CL=CL+1;if not(not YL[0Xc])then else CL=PL[4];end;end;end;else do if wL<0X10 then local AL=(PL[4]);local dL=(nil);local BL=(AL[0X2]);local DL=(#BL);if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[0X1]~=0 then(dL)[bC-0X0001]=RL[uC[0X2]];else do(dL)[bC-1]={YL,uC[0X2]};end;end;end;(x)(mL,dL);end;YL[PL[0X005]]=cn(dL,KL,AL);else if wL==17 then else local AL=RL[0X00002];(YL)[1]=AL[0X0001][AL[0X2]];PL=FL[CL];do CL=CL+0X001;end;do(YL)[0X00001]=YL[0X1][PL[0X00003]];end;PL=FL[CL];do CL=CL+0X1;end;(YL)[1]=YL[0x1][PL[3]];CL=CL+0x1;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;if not(not YL[0x1])then else CL=PL[4];end;end;end;end;end;else do if wL>=0X15 then if wL<23 then if wL~=0X16 then for AL=PL[0X00005],PL[4]do(YL)[AL]=nil;end;else local AL=RL[0X9];(YL)[0XC]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;YL[13]=PL[1];PL=FL[CL];local dL=12;CL=CL+1;YL[14]=YL[0x7][PL[3]];CL=CL+1;YL[dL](YL[dL+1],YL[dL+2]);NL=dL-0X1;PL=FL[CL];CL=CL+0X1;CL=PL[4];end;else if wL==0X00018 then if not YL[PL[0X5]]then CL=PL[4];end;else local AL=PL[4];local dL=(YL[AL]);for BL=AL+0X00001,PL[0X007]do dL=dL..YL[BL];end;(YL)[PL[0x0005]]=dL;end;end;else if not(wL>=0X00013)then YL[PL[0X5]]=YL[PL[4]]>YL[PL[7]];else if wL~=0X14 then(YL)[PL[0X5]]=YL[PL[0X00004]]^YL[PL[7]];else(YL)[0X1]=KL[PL[1]];CL=CL+1;CL=CL+0x1;do PL=FL[CL];end;CL=CL+1;YL[1]=YL[0X1][PL[3]];do CL=CL+1;end;CL=CL+0x00001;PL=FL[CL];do CL=CL+0x1;end;if not YL[1]then CL=PL[4];end;end;end;end;end;end;end;end;end;end;end);if nL then do if TL then if rL~=1 then do return YL[ML](F(YL,ML+0X1,NL));end;else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;end;else if z(TL)~='st\114\i\110\103'then(G)(TL,0);else do if not(V(TL,"at\116\101\mp\116\ \116\o \y\i\e\l\100\ ac\114\os\s\ \m\e\116\097m\ethod\047\067\%\-ca\ll\ b\111u\110\100a\114y"))then else return q();end;end;if V(TL,"\094.-:\%\d\+\058\ ")then(G)('L\117\114aph\032\Sc\114i\pt\058'..(_L[CL-0X00001]or'\(\i\110t\e\114na\108)')..'\058\032'..l(TL),0);else(G)(TL,0);end;end;end;end;else aL=function(...)local YL=({});local CL=0X001;local OL=(Q());local LL,hL=on(...);local kL,NL={[2]=qL,[0X1]=YL},(0X00000);do LL=LL-0X1;end;local KL=(OL==_ and sL or OL);for PL=0X0,LL do if XL>PL then YL[PL]=hL[PL+0x00001];else break;end;end;if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+1,LL+1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+0X1;if wL>=0X07 then if wL>=0x00b then if not(wL<0Xd)then do if wL~=0Xe then else YL[PL[0X5]]=YL[PL[0x4]]+YL[PL[0x7]];end;end;else if wL==12 then local AL,dL=PL[5],YL[PL[4]];YL[AL+1]=dL;YL[AL]=dL[PL[0X0003]];else YL[PL[0X05]]=PL[1];end;end;else if not(wL>=0X9)then do if wL==0x8 then YL[PL[5]]=YL[PL[4]][YL[PL[7]]];else(KL)[PL[1]]=YL[PL[0X5]];end;end;else if wL==10 then local AL=(PL[4]);local BL=(AL[0x2]);local dL=nil;local DL=(#BL);do if not(DL>0X0000)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[0x1]==0X0 then do dL[bC-1]={YL,uC[0x2]};end;else(dL)[bC-0X1]=RL[uC[0X02]];end;end;(x)(mL,dL);end;end;(YL)[PL[0x005]]=cn(dL,KL,AL);else(YL)[PL[5]]=-YL[PL[4]];end;end;end;else if not(wL>=0X3)then if not(wL<1)then if wL~=2 then(YL)[1]=KL[PL[1]];do CL=CL+1;end;(YL)[0X2]=YL[0];PL=FL[CL];do CL=CL+1;end;do YL[1][PL[0x1]]=YL[0X2];end;PL=FL[CL];do CL=CL+1;end;do YL[1]=KL[PL[1]];end;do CL=CL+0X00001;end;local uC=0x001;CL=CL+0x1;do CL=CL+0X1;end;NL=1;YL[NL]();NL=NL-0X00001;local BL=nil;CL=CL+0x001;CL=CL+1;local AL=(RL[0]);do CL=CL+1;end;YL[0X1]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;local dL=PL[0x4];local DL=dL[2];local bC=(#DL);do if bC>0X0 then do BL={};end;for EC=1,bC do local WC=DL[EC];if WC[0x00001]==0 then do BL[EC-0X1]={YL,WC[2]};end;else(BL)[EC-0x01]=RL[WC[0X02]];end;end;x(mL,BL);end;end;do(YL)[0X02]=cn(BL,KL,dL);end;do CL=CL+1;end;(YL[uC])(YL[uC+1]);NL=uC-1;CL=CL+0X0001;repeat local EC,WC=mL,(YL);local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do if lC[1]==WC and lC[0X002]>=0X00000 then local GC=lC[2];if not(not eC[GC])then else eC[GC]={WC[GC]};end;(lC)[0x1]=eC[GC];(lC)[0X2]=1;end;end;end;until true;do return;end;else local AL=PL[0X0005];local dL,BL=YL[AL]();if dL then do CL=PL[4];end;YL[AL+0x3]=BL;end;end;else if YL[PL[4]]<=YL[PL[7]]then CL=PL[5];end;end;else do if wL<0X0005 then do if wL~=0X4 then YL[PL[0X5]]=KL[PL[1]];else do YL[PL[5]]={F({},0X0001,PL[0X4])};end;end;end;else do if wL~=0x06 then for AL=PL[5],PL[0X4]do do YL[AL]=nil;end;end;else CL=PL[4];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='s\116r\105\110\103'then if V(TL,'\097t\116\e\mpt \116o yi\e\108\d\032\097\cr\o\115\s \m\e\116\097\109\et\104\o\d\/\C\037-\099a\108l\032b\oundary')then return q();end;if V(TL,"\^\.-\:\%\100\+\:\032")then(G)("\076uraph\ \S\099\114\i\p\116\058"..(_L[CL-1]or'\(\105\110te\114\110\097\108\041').."\058 "..l(TL),0X0);else(G)(TL,0X0000);end;else(G)(TL,0X000);end;else if TL then if rL~=0X1 then return YL[ML](F(YL,ML+0X1,NL));else do return YL[ML]();end;end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;end;else do if HL==0X36 then do aL=function(...)local CL,YL=0x1,{};local OL=(Q());local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;local KL=((OL==_ and sL or OL));do for PL=0,LL do if XL>PL then do YL[PL]=hL[PL+1];end;else break;end;end;end;local NL=0X0;if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0X1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];do CL=CL+0X1;end;if not(wL<12)then if wL<18 then do if wL<0x00f then if not(wL>=13)then local AL=PL[0X00005];local dL,BL,DL=YL[AL]();if not(dL)then else do(YL)[AL+1]=BL;end;(YL)[AL+2]=DL;CL=PL[0X004];end;else do if wL~=14 then do(YL)[7]=YL[6][PL[3]];end;PL=FL[CL];CL=CL+1;YL[7]=YL[0X7][PL[3]];PL=FL[CL];CL=CL+0x1;do if YL[0x00007]then do CL=PL[4];end;end;end;else do repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0 then local WC=EC[2];if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;EC[1]=BL[WC];EC[2]=0X00001;end;end;end;until true;end;do return;end;end;end;end;else do if not(wL>=16)then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else if wL~=17 then(YL)[PL[0X5]]=YL[PL[0X4]]*YL[PL[0X007]];else YL[1]=KL[PL[1]];do PL=FL[CL];end;CL=CL+1;(YL)[0X1]=YL[1][PL[0x0003]];PL=FL[CL];do CL=CL+0X001;end;if not YL[1]then do CL=PL[4];end;end;end;end;end;end;end;else if not(wL<0X15)then if wL>=23 then do if wL~=0x18 then YL[7]=YL[0x0006][PL[3]];local AL=(0x7);CL=CL+0X1;CL=CL+0X00001;PL=FL[CL];CL=CL+1;local dL=YL[0X07];do YL[AL+1]=dL;end;(YL)[AL]=dL[PL[0X3]];PL=FL[CL];CL=CL+1;YL[0X9]=PL[0X1];CL=CL+0X1;AL=0X7;YL[AL]=YL[AL](YL[AL+1],YL[AL+0X02]);NL=AL;CL=CL+1;do CL=CL+0x1;end;do PL=FL[CL];end;CL=CL+1;if not(YL[0X07])then else CL=PL[4];end;else repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do do for EC,WC in U,uC do do if WC[0x1]==BL and WC[0X2]>=0 then local eC=WC[0x2];if not DL[eC]then(DL)[eC]={BL[eC]};end;do(WC)[1]=DL[eC];end;WC[0X2]=0X1;end;end;end;end;end;until true;local AL=PL[5];return false,AL,AL+PL[0X4]-0X00002;end;end;else do if wL==0X16 then else YL[4]=KL[PL[0X0001]];CL=CL+1;local dL=(4);local AL=(RL[0X1]);(YL)[0x5]=AL[0x0001][AL[2]];local DL=(0x0004);PL=FL[CL];CL=CL+1;(YL)[5]=YL[5][PL[3]];CL=CL+1;local BL=(0X002);if BL==0 then else NL=dL+BL-1;end;local bC,uC=nil,(nil);if BL~=1 then do bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));end;else bC,uC=on(YL[dL]());end;if DL~=1 then if DL~=0 then bC=dL+DL-2;NL=bC+1;else bC=bC+dL-0X01;NL=bC;end;local WC=0;for eC=dL,bC do do WC=WC+1;end;(YL)[eC]=uC[WC];end;else NL=dL-0X0001;end;do PL=FL[CL];end;CL=CL+0x01;dL=0X0004;local EC=(g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end));(EC)(YL[dL],YL[dL+1],YL[dL+0x0002]);NL=dL;YL[dL]=EC;CL=PL[4];end;end;end;else if not(wL<0X00013)then if wL==0X14 then YL[1]=KL[PL[0X0001]];do PL=FL[CL];end;do CL=CL+0X1;end;do(YL)[0X1]=YL[1][PL[0x00003]];end;CL=CL+1;local AL=(1);CL=CL+0X1;PL=FL[CL];do CL=CL+0X1;end;do(YL)[0X2]=PL[1];end;CL=CL+0X1;YL[AL]=YL[AL](YL[AL+1]);do NL=AL;end;PL=FL[CL];do CL=CL+0X1;end;if not(not YL[0X001])then else CL=PL[0x4];end;else do(YL)[7]=YL[0x6][PL[3]];end;CL=CL+0X01;CL=CL+1;CL=CL+1;(YL)[0]=YL[0X007];PL=FL[CL];CL=CL+1;CL=PL[4];end;else local AL=(PL[4]);local dL=(YL[AL]);do for BL=AL+0X1,PL[0X07]do dL=dL..YL[BL];end;end;(YL)[PL[5]]=dL;end;end;end;else if wL<0X6 then if wL>=3 then if wL>=0x4 then if wL~=5 then local AL=(RL[2]);(YL)[0X004]=AL[1][AL[0X2]];CL=CL+0X1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+0X0001;(YL)[0X04]=YL[4][PL[3]];CL=CL+1;local dL=0X5;do CL=CL+1;end;PL=FL[CL];do CL=CL+1;end;(YL)[0X0004]=YL[4][PL[3]];do PL=FL[CL];end;CL=CL+1;YL[0X4]=YL[4][PL[0X00003]];do CL=CL+1;end;AL=RL[3];(YL)[0x5]=AL[1][AL[0X2]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X001;local BL=YL[5];(YL)[dL+0X1]=BL;(YL)[dL]=BL[PL[0X3]];CL=CL+0X001;AL=RL[4];do YL[0X007]=AL[1][AL[0X2]];end;PL=FL[CL];CL=CL+1;do(YL)[0X8]=PL[0X1];end;CL=CL+0X1;YL[0X9]=YL[0x2];CL=CL+0X1;(YL)[0Xa]=YL[3];CL=CL+1;do dL=0x00007;end;do NL=dL+4-0X1;end;YL[dL]=YL[dL](F(YL,dL+0X1,NL));NL=dL;PL=FL[CL];CL=CL+0X00001;YL[8]=PL[1];do CL=CL+1;end;dL=0X5;NL=dL+4-1;YL[dL](F(YL,dL+0X1,NL));do NL=dL-1;end;do CL=CL+0X1;end;do AL=RL[5];end;do YL[0X0005]=AL[0X1][AL[0X02]];end;PL=FL[CL];CL=CL+1;YL[6]=PL[1];CL=CL+0X00001;do(YL)[7]=YL[0];end;CL=CL+0x1;dL=5;YL[dL](YL[dL+1],YL[dL+0X0002]);do NL=dL-0X00001;end;PL=FL[CL];CL=CL+1;YL[0X5]=KL[PL[0X1]];CL=CL+1;CL=CL+0X00001;PL=FL[CL];do CL=CL+1;end;YL[5]=YL[5][PL[3]];CL=CL+1;do CL=CL+0X1;end;do CL=CL+0x1;end;NL=0X5;YL[NL]();NL=NL-0X1;do CL=CL+1;end;AL=RL[0X002];do YL[0X5]=AL[1][AL[2]];end;PL=FL[CL];CL=CL+1;YL[5]=YL[0X5][PL[3]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X1;end;(YL)[5]=YL[5][PL[0x3]];CL=CL+0X00001;YL[0X06]=YL[0x0004];PL=FL[CL];do CL=CL+0X01;end;(YL[5])[PL[0X1]]=YL[0X00006];PL=FL[CL];CL=CL+0X1;YL[0X0005]=KL[PL[1]];PL=FL[CL];CL=CL+1;do YL[0X00006]=PL[1];end;CL=CL+0X1;dL=0X5;(YL[dL])(YL[dL+1]);do NL=dL-1;end;CL=CL+1;do CL=CL+0x001;end;PL=FL[CL];CL=CL+1;CL=PL[0X00004];else local AL=(RL[0]);(YL)[0X1]=AL[1][AL[0X2]];do CL=CL+0x01;end;CL=CL+1;PL=FL[CL];CL=CL+1;if not(not YL[1])then else do CL=PL[4];end;end;end;else if YL[PL[5]]then do CL=PL[0X4];end;end;end;else do if not(wL<1)then if wL~=2 then do YL[PL[0x05]]=#YL[PL[4]];end;else YL[0x1]=KL[PL[0x001]];PL=FL[CL];local AL=1;CL=CL+0X1;(YL)[2]=PL[1];do CL=CL+1;end;local dL=(0X2);do if dL~=0 then do NL=AL+dL-0X1;end;end;end;local BL=0X04;local DL,bC=nil,(nil);if dL==1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+0X0001,NL)));end;if BL~=1 then if BL~=0x0 then do DL=AL+BL-2;end;NL=DL+0x0001;else DL=DL+AL-0x001;NL=DL;end;local uC=(0X0000);for EC=AL,DL do do uC=uC+1;end;(YL)[EC]=bC[uC];end;else do NL=AL-0X1;end;end;do CL=CL+0X1;end;CL=CL+0X00001;do PL=FL[CL];end;CL=CL+0X01;do if not(not YL[1])then else do CL=PL[4];end;end;end;end;else local AL=(PL[0X5]);do for dL=AL,AL+(PL[0x4]-1)do YL[dL]=hL[XL+(dL-AL)+1];end;end;end;end;end;else if not(wL<9)then if wL>=10 then do if wL==0x000b then local AL,dL=PL[0X5],(PL[0X0007]-0X1)*0X00032;local BL=(YL[AL]);for DL=1,PL[0X04]do(BL)[dL+DL]=YL[AL+DL];end;else YL[PL[5]]={F({},1,PL[0X00004])};end;end;else YL[PL[5]]=KL[PL[0x1]];end;else do if wL<7 then do CL=PL[4];end;else if wL==8 then local AL=PL[0X4];local BL=(AL[0X02]);local dL=nil;local DL=#BL;do if not(DL>0)then else dL={};for bC=1,DL do local uC=(BL[bC]);if uC[1]==0X0000 then(dL)[bC-1]={YL,uC[2]};else dL[bC-1]=RL[uC[0x2]];end;end;(x)(mL,dL);end;end;YL[PL[5]]=cn(dL,KL,AL);else(YL)[PL[0X005]]=PL[0X00001];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\s\116\114\in\103"then G(TL,0X000);else if V(TL,"\097\116\116\101m\pt t\o\ \y\105\el\100\032a\c\114\o\s\115\032\m\et\097\109\e\116\h\o\d\/\067%\-\cal\l \098\111u\110\da\114y")then return q();end;if not(V(TL,"\^\.\-\058\037d\043:\ "))then G(TL,0);else(G)('L\117\114a\p\104 \S\cr\ip\116\:'..(_L[CL-1]or"\(\105n\116\e\114\110a\108\)")..":\032"..l(TL),0);end;end;else if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;else do aL=function(...)local CL,YL=0X01,({});local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);LL=LL-0X1;local KL=((OL==_ and sL or OL));for PL=0X0,LL do if XL>PL then do(YL)[PL]=hL[PL+1];end;else do break;end;end;end;local NL=(0);do if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0x1)};end;end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+1;if not(wL<12)then if wL>=18 then do if wL>=0x15 then if wL<23 then do if wL~=0X16 then if YL[PL[5]]then do CL=PL[4];end;end;else do(YL)[0x0001]=KL[PL[1]];end;CL=CL+0X00001;do YL[2]={};end;PL=FL[CL];do CL=CL+0X001;end;(YL[1])[PL[0x01]]=YL[2];PL=FL[CL];CL=CL+1;(YL)[1]=KL[PL[1]];PL=FL[CL];CL=CL+0X01;(YL[1])[PL[1]]=PL[0X00003];PL=FL[CL];CL=CL+1;CL=PL[0X4];end;end;else if wL==24 then(YL)[PL[0X00005]]=YL[PL[0X4]]<YL[PL[0x7]];else local AL,dL=PL[5],(PL[0X7]-0X1)*0X32;local BL=(YL[AL]);do for DL=0X1,PL[4]do do(BL)[dL+DL]=YL[AL+DL];end;end;end;end;end;else if wL<0x013 then for AL=PL[0X5],PL[0x00004]do(YL)[AL]=nil;end;else if wL~=0X000014 then if not(YL[PL[4]]<=YL[PL[0X7]])then else do CL=PL[0X00005];end;end;else YL[1]=YL[0];PL=FL[CL];CL=CL+1;do KL[PL[1]]=YL[0x001];end;PL=FL[CL];do CL=CL+0X1;end;do if not(not YL[0])then else CL=PL[4];end;end;end;end;end;end;else if not(wL<0X0000F)then do if not(wL<16)then if wL~=17 then local AL=(RL[0X001]);do(YL)[0x00003]=AL[1][AL[0X002]];end;local dL=(0X3);PL=FL[CL];local DL=0x5;CL=CL+1;local BL=(YL[3]);(YL)[dL+1]=BL;do(YL)[dL]=BL[PL[3]];end;PL=FL[CL];CL=CL+0X1;YL[5]=PL[0X01];PL=FL[CL];do CL=CL+0X1;end;(YL)[0x6]=KL[PL[0X1]];do CL=CL+1;end;(YL)[0X5]=YL[DL]..YL[DL+0X001];do CL=CL+1;end;dL=0X00003;(YL[dL])(YL[dL+0X1],YL[dL+0X002]);NL=dL-1;PL=FL[CL];do CL=CL+0X1;end;CL=PL[4];else local AL=RL[1];YL[1]=AL[0x1][AL[0X02]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];local dL=1;CL=CL+0x0001;local BL=YL[1];(YL)[dL+1]=BL;(YL)[dL]=BL[PL[3]];do PL=FL[CL];end;do CL=CL+0X1;end;do YL[3]=PL[0X01];end;do CL=CL+0x001;end;do dL=1;end;YL[dL](YL[dL+0X1],YL[dL+0x2]);NL=dL-1;PL=FL[CL];CL=CL+0X001;CL=PL[4];end;else end;end;else if not(wL>=13)then local AL=PL[0x5];for dL=AL,AL+(PL[0X0004]-1)do do(YL)[dL]=hL[XL+(dL-AL)+0X00001];end;end;else if wL~=0XE then local AL=PL[0X5];local dL=(PL[0X4]);NL=AL+dL-0X01;repeat local bC={};local BL,DL=mL,YL;for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[0X02]>=0x00 then local oC=eC[2];if not(not bC[oC])then else bC[oC]={DL[oC]};end;do eC[1]=bC[oC];end;(eC)[0x2]=0X01;end;end;end;until true;do return true,AL,dL;end;else local AL=RL[PL[4]];YL[PL[5]]=AL[0x1][AL[0X2]];end;end;end;end;else if wL>=0X6 then if not(wL>=0X09)then if not(wL>=7)then YL[PL[5]]=r(YL[PL[0X04]],YL[PL[7]]);else if wL~=8 then do YL[0X00001]=KL[PL[1]];end;PL=FL[CL];do CL=CL+1;end;do YL[0X02]=KL[PL[1]];end;do CL=CL+1;end;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+1;end;(YL)[0x002]=YL[0x2][PL[3]];PL=FL[CL];do CL=CL+1;end;YL[3]=KL[PL[0X001]];do PL=FL[CL];end;local dL=(0x3);CL=CL+1;YL[3]=YL[3][PL[3]];CL=CL+0X1;local AL=(1);local BL=(3);if dL==0X0 then else NL=AL+dL-1;end;local DL,bC=nil,nil;if dL~=0X1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;do if BL~=1 then do if BL~=0 then do DL=AL+BL-0X2;end;NL=DL+1;else do DL=DL+AL-0x0001;end;NL=DL;end;end;local uC=0;for EC=AL,DL do uC=uC+0x01;YL[EC]=bC[uC];end;else NL=AL-0X1;end;end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;if not YL[0X0002]then CL=PL[4];end;else YL[PL[0x05]]=PL[0x1];end;end;else if wL>=10 then if wL==0XB then YL[PL[5]]=KL[PL[0x001]];else do repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0 then local WC=EC[2];if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];EC[0X002]=1;end;end;end;until true;end;return;end;else if not YL[PL[0X5]]then CL=PL[4];end;end;end;else if not(wL>=0X0003)then if not(wL>=1)then(YL)[PL[0X05]]=h(YL[PL[4]],YL[PL[0X7]]);else do if wL~=0X2 then CL=PL[4];else local AL=RL[0X1];YL[3]=AL[1][AL[2]];PL=FL[CL];local dL=(0X00003);CL=CL+1;local BL=(YL[0x3]);do YL[dL+1]=BL;end;(YL)[dL]=BL[PL[0X3]];do CL=CL+1;end;AL=RL[2];local DL=(3);do(YL)[0X5]=AL[0x1][AL[0X002]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X001;YL[0x006]=PL[1];PL=FL[CL];CL=CL+0X1;(YL)[0X00007]=KL[PL[1]];PL=FL[CL];CL=CL+1;do YL[0X007]=YL[0X07][PL[0X3]];end;CL=CL+1;dL=5;local bC=(0X00);if DL==0 then else NL=dL+DL-1;end;local uC,EC=nil,nil;if DL==0X001 then do uC,EC=on(YL[dL]());end;else uC,EC=on(YL[dL](F(YL,dL+0X1,NL)));end;if bC==1 then NL=dL-1;else if bC==0x0000 then uC=uC+dL-1;NL=uC;else uC=dL+bC-0X02;do NL=uC+0X1;end;end;local WC=(0);for eC=dL,uC do WC=WC+1;(YL)[eC]=EC[WC];end;end;CL=CL+1;dL=0X3;YL[dL](F(YL,dL+1,NL));NL=dL-1;CL=CL+1;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;CL=PL[4];end;end;end;else do if not(wL<0X4)then if wL~=5 then YL[1]=KL[PL[0X1]];CL=CL+1;do CL=CL+0x0001;end;PL=FL[CL];CL=CL+0X1;do if not YL[0X1]then CL=PL[4];end;end;else do YL[PL[5]]={F({},0X01,PL[0X004])};end;end;else local AL=(PL[4]);local dL=(nil);local BL=(AL[0X2]);local DL=(#BL);if not(DL>0)then else do dL={};end;do for bC=0x1,DL do local uC=BL[bC];if uC[1]~=0X0 then(dL)[bC-1]=RL[uC[2]];else(dL)[bC-0X1]={YL,uC[2]};end;end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;end;end;end);do if nL then do if TL then do if rL~=0X1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;else if z(TL)=='strin\g'then if not(V(TL,'a\116\116\e\m\112\116 t\o\032\121\105\101\108\100\ a\099\114\o\115\s\ \me\116\097\me\116\ho\d\/C\%-\099a\ll\ bo\117n\da\114y'))then else do return q();end;end;if not(V(TL,'\^\.\-:\%\d\+\:\ '))then G(TL,0);else G('\076\117rap\104\ S\c\114\105\pt:'..(_L[CL-1]or'\(\i\110t\erna\l)')..'\: '..l(TL),0);end;else(G)(TL,0);end;end;end;end;end;end;end;end;else do if HL<0X3f then if not(HL<61)then if HL==62 then aL=function(...)local CL=1;local YL={};local OL=Q();local NL,KL=0,((OL==_ and sL or OL));local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);LL=LL-0X00001;for PL=0,LL do if XL>PL then YL[PL]=hL[PL+0X001];else break;end;end;if not SL then do hL=nil;end;elseif iL then YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0x0001,LL+0x01)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=(PL[2]);do CL=CL+0X1;end;if not(wL>=0X6)then if not(wL<3)then if wL>=0x04 then do if wL==5 then do(YL)[PL[5]]=not YL[PL[0X04]];end;else end;end;else YL[PL[0X005]]=YL[PL[0X0004]]<=YL[PL[7]];end;else if wL<0X1 then(YL)[PL[5]]=PL[0X1];else if wL~=2 then do YL[PL[5]]=YL[PL[4]]<YL[PL[7]];end;else local AL=PL[4];local BL,dL=AL[0X00002],nil;local DL=(#BL);if not(DL>0X0)then else dL={};do for bC=1,DL do local uC=BL[bC];if uC[0X1]~=0 then dL[bC-0X1]=RL[uC[2]];else do(dL)[bC-1]={YL,uC[2]};end;end;end;end;x(mL,dL);end;YL[PL[0X005]]=cn(dL,KL,AL);end;end;end;else if wL>=0x0009 then if wL>=0X000A then if wL~=0X000B then for AL=PL[5],PL[4]do do(YL)[AL]=nil;end;end;else(YL)[0X1]=KL[PL[1]];local AL=0X2;PL=FL[CL];do CL=CL+0x001;end;(YL)[0X0002]=KL[PL[0X1]];do CL=CL+1;end;CL=CL+1;CL=CL+0x1;YL[0X0003]=YL[0];CL=CL+1;do YL[AL]=YL[AL](YL[AL+1]);end;NL=AL;CL=CL+0x1;CL=CL+0x001;PL=FL[CL];CL=CL+1;YL[1][PL[0X1]]=YL[2];do PL=FL[CL];end;CL=CL+1;YL[1]=KL[PL[1]];CL=CL+0X1;CL=CL+0x1;do CL=CL+0X1;end;do NL=1;end;(YL[NL])();NL=NL-1;CL=CL+1;CL=CL+0x0001;CL=CL+0X1;repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do do for EC,WC in U,uC do do if not(WC[1]==BL and WC[0X2]>=0)then else local eC=(WC[2]);if not DL[eC]then(DL)[eC]={BL[eC]};end;(WC)[1]=DL[eC];(WC)[0X00002]=1;end;end;end;end;end;until true;return;end;else CL=PL[0X004];end;else if not(wL<0X0007)then if wL~=8 then(YL)[PL[0X0005]]={F({},1,PL[0x004])};else(YL)[PL[0X005]]=KL[PL[0X01]];end;else(YL)[PL[0x0005]]=K(YL[PL[0X4]],YL[PL[0X0007]]);end;end;end;end;end;end);if nL then do if TL then do if rL~=0x01 then return YL[ML](F(YL,ML+0x1,NL));else do return YL[ML]();end;end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;else if z(TL)~="\s\116\114\105ng"then G(TL,0X00);else do if not(V(TL,"at\116\e\109pt\ \116\111\032\y\i\101\l\d\032a\c\114\o\115s\ \109\et\097m\101\116h\o\100\047\C%-\ca\108l\ boun\d\097r\y"))then else return q();end;end;if not(V(TL,'\094\.\-:\%\d+\:\ '))then(G)(TL,0);else G('\L\117r\097\112\h\ \S\099\114\i\112t:'..(_L[CL-1]or"\(\i\110\116\101\114na\l)").."\058 "..l(TL),0);end;end;end;end;else aL=function(...)local NL=0X00000;local CL,YL=0X1,{};local OL=(Q());local kL,KL={[0X1]=YL,[2]=qL},(OL==_ and sL or OL);local LL,hL=on(...);do LL=LL-1;end;for PL=0,LL do do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;end;if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X001,LL+1)};end;end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X02];CL=CL+1;if not(wL>=7)then if wL>=3 then if not(wL>=5)then if wL==4 then YL[1]=KL[PL[0X00001]];local AL,uC=RL[0],(0X01);do CL=CL+1;end;(YL)[2]=YL[0];PL=FL[CL];CL=CL+1;YL[0X00001][PL[0X00001]]=YL[2];do PL=FL[CL];end;CL=CL+1;YL[0x1]=KL[PL[1]];CL=CL+0x01;CL=CL+0X1;CL=CL+0x1;NL=0X01;(YL[NL])();do NL=NL-1;end;do CL=CL+1;end;do CL=CL+1;end;CL=CL+0X001;YL[1]=AL[0X01][AL[0x2]];PL=FL[CL];do CL=CL+0X1;end;local dL=PL[0X04];local DL,BL=dL[2],nil;local bC=(#DL);do if bC>0X0 then BL={};for EC=0X1,bC do local WC=DL[EC];if WC[1]~=0X0 then BL[EC-0x1]=RL[WC[2]];else do(BL)[EC-0x00001]={YL,WC[2]};end;end;end;x(mL,BL);end;end;do YL[0x0002]=cn(BL,KL,dL);end;CL=CL+0X1;(YL[uC])(YL[uC+0X01]);NL=uC-0X1;CL=CL+1;repeat local EC,WC=mL,YL;local eC=({});do for oC,jC in U,EC do do for zC,lC in U,jC do if lC[0X001]==WC and lC[0X002]>=0 then local GC=(lC[2]);do if not eC[GC]then(eC)[GC]={WC[GC]};end;end;(lC)[1]=eC[GC];lC[0X0002]=1;end;end;end;end;end;until true;return;else do YL[PL[0X5]]=KL[PL[1]];end;end;else if wL==0X6 then YL[PL[0X5]]=r(YL[PL[0x4]],YL[PL[7]]);else YL[PL[0x5]]=PL[1];end;end;else do if not(wL>=1)then YL[PL[5]]={F({},1,PL[0x004])};else if wL~=0X0002 then local dL=PL[0X004];local AL=(PL[0X5]);if dL~=0x00 then NL=AL+dL-1;end;local BL=PL[0x0007];local DL,bC=nil,nil;if dL==0X1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;if BL==0X001 then NL=AL-0X001;else if BL~=0X00 then DL=AL+BL-2;NL=DL+1;else DL=DL+AL-0X001;NL=DL;end;local uC=0;for EC=AL,DL do uC=uC+1;(YL)[EC]=bC[uC];end;end;else for AL=PL[0X05],PL[0X04]do YL[AL]=nil;end;end;end;end;end;else if wL<10 then if wL>=0X0008 then if wL==9 then CL=PL[0X4];else local AL=(PL[0X4]);local BL=(AL[2]);local DL,dL=#BL,nil;do if not(DL>0X0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[0x00001]==0 then do(dL)[bC-1]={YL,uC[2]};end;else do dL[bC-1]=RL[uC[0X2]];end;end;end;x(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);end;else YL[PL[0X5]]=#YL[PL[0x004]];end;else if wL<0Xc then if wL~=11 then YL[PL[5]]=YL[PL[4]]%YL[PL[7]];else end;else if wL==0xD then local AL,dL=PL[5],(YL[PL[4]]);(YL)[AL+1]=dL;(YL)[AL]=dL[PL[0X3]];else local AL=(PL[0X00005]);do for dL=AL,AL+(PL[0X4]-1)do YL[dL]=hL[XL+(dL-AL)+1];end;end;end;end;end;end;end;end);if nL then if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0x001,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~="s\116r\in\g"then(G)(TL,0);else if not(V(TL,'\097\116t\101m\p\116\032\116\111 \y\105\e\108\d\032\097cr\111\s\115\032\m\et\097m\e\116\h\111\d\047\067\037-\099a\l\l\ \098\111undar\y'))then else return q();end;do if V(TL,'^.-:\%\d\+\058\032')then G("\L\117r\097\ph\ \Scr\105\112t\:"..(_L[CL-1]or"(\105nt\e\114\110\097\l\)").."\058\ "..l(TL),0);else(G)(TL,0);end;end;end;end;end;end;elseif HL~=60 then aL=function(...)local YL={};local NL=(0);local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-0x001;local CL=1;for PL=0x0,LL do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+0x1];end;end;end;do if not SL then hL=nil;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+0X0001 or 0,F(hL,XL+1,LL+0x01)};end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+1;if wL>=7 then if wL<10 then do if not(wL>=8)then(YL)[PL[0X5]]={F({},1,PL[4])};else if wL~=9 then do(YL)[PL[0x05]]=YL[PL[4]]*YL[PL[0X07]];end;else if not(not YL[PL[0X00005]])then else CL=PL[4];end;end;end;end;else if wL<0Xc then if wL==11 then local AL=(PL[0X04]);local dL=(nil);local BL=AL[0X002];local DL=(#BL);if DL>0X00 then dL={};for bC=0X01,DL do local uC=(BL[bC]);if uC[1]~=0X0 then dL[bC-1]=RL[uC[2]];else(dL)[bC-1]={YL,uC[0x2]};end;end;x(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else YL[PL[0X005]]=true;end;else do if wL~=13 then YL[1]=KL[PL[1]];CL=CL+0x1;CL=CL+0X1;do CL=CL+1;end;YL[2]=YL[0];PL=FL[CL];CL=CL+0X1;(YL[1])[PL[0x1]]=YL[0X00002];PL=FL[CL];do CL=CL+1;end;YL[1]=KL[PL[1]];CL=CL+0x0001;CL=CL+1;CL=CL+0X00001;NL=0X1;YL[NL]();do NL=NL-0X01;end;local AL=RL[0X0000];CL=CL+1;CL=CL+1;local uC=1;CL=CL+1;YL[1]=AL[0X01][AL[2]];CL=CL+0x1;do CL=CL+1;end;PL=FL[CL];local dL=PL[4];CL=CL+0X1;local DL,BL=dL[2],(nil);local bC=#DL;if not(bC>0)then else BL={};for EC=1,bC do local WC=DL[EC];if WC[0x001]==0 then BL[EC-0X1]={YL,WC[2]};else BL[EC-0X1]=RL[WC[2]];end;end;(x)(mL,BL);end;(YL)[0X002]=cn(BL,KL,dL);CL=CL+1;(YL[uC])(YL[uC+0X01]);NL=uC-0x1;CL=CL+0x1;repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do do for zC,lC in U,jC do if lC[1]==WC and lC[2]>=0 then local GC=lC[2];if not eC[GC]then do eC[GC]={WC[GC]};end;end;(lC)[0X1]=eC[GC];(lC)[2]=0X1;end;end;end;end;until true;return;else for AL=PL[5],PL[0X0004]do(YL)[AL]=nil;end;end;end;end;end;else do if not(wL>=3)then do if wL>=1 then if wL==2 then(YL)[PL[5]]=PL[1];else(YL)[PL[5]]=KL[PL[1]];end;else end;end;else do if wL<5 then do if wL~=0x4 then do(YL)[PL[0x05]]=PL[0x04];end;else do CL=PL[4];end;end;end;else if wL==0x6 then do repeat local DL=({});local AL,dL,BL=mL,YL,PL[5];for bC,uC in U,AL do do for EC,WC in U,uC do if not(WC[0X1]==dL and WC[2]>=BL)then else local eC=WC[0X00002];do if not(not DL[eC])then else(DL)[eC]={dL[eC]};end;end;WC[1]=DL[eC];(WC)[0X2]=0X001;end;end;end;end;until true;end;else if YL[PL[0X04]]<YL[PL[7]]then CL=PL[5];end;end;end;end;end;end;end;end;end);if nL then if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X0001,NL));end;elseif ML then return F(YL,ML,rL);end;else do if z(TL)=="\115\116r\i\110g"then if not(V(TL,'a\116\116\101mpt\032\116o \121\i\101\108\100\032a\c\114\o\115\115\ met\097\109\et\h\o\d\047\C\037-\c\097\l\l b\111un\100\097r\y'))then else do return q();end;end;if V(TL,'\094\.-\:\%d\+\058\ ')then G("\Lu\114a\p\h\ \S\c\114\105p\116\058"..(_L[CL-1]or'\040\105\110\116\101\114nal\041')..":\ "..l(TL),0X00);else(G)(TL,0);end;else(G)(TL,0);end;end;end;end;else do aL=function(...)local CL=(0X1);local YL,NL={},0;local kL=({[0X1]=YL,[2]=qL});local OL=(Q());local LL,hL=on(...);LL=LL-0x0001;local KL=(OL==_ and sL or OL);for PL=0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X1];end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0X1)};end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[2]);CL=CL+0X001;if wL<0x007 then do if not(wL<0X3)then if not(wL>=5)then if wL~=0X4 then local AL=PL[0x05];local dL=YL[AL];local BL,DL=YL[AL+0X00001],(YL[AL+2]);YL[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);CL=PL[4];else if YL[PL[4]]<=YL[PL[0X0007]]then CL=PL[5];end;end;else if wL==0X6 then(YL)[PL[0x5]]=PL[0x4];else YL[PL[0x5]]=h(YL[PL[4]],YL[PL[7]]);end;end;else if wL<0X1 then local AL=PL[0x4];local BL=(AL[2]);local dL=nil;local DL=(#BL);do if DL>0 then dL={};do for bC=1,DL do local uC=BL[bC];if uC[1]==0X0 then dL[bC-0X1]={YL,uC[2]};else do(dL)[bC-1]=RL[uC[2]];end;end;end;end;x(mL,dL);end;end;do YL[PL[5]]=cn(dL,KL,AL);end;else if wL~=2 then do YL[PL[0X00005]]=PL[1];end;else(YL)[0X1]=KL[PL[1]];CL=CL+0X1;YL[2]=YL[0];PL=FL[CL];CL=CL+1;do(YL[0X0001])[PL[1]]=YL[2];end;PL=FL[CL];CL=CL+1;(YL)[0x1]=KL[PL[1]];CL=CL+0X1;NL=0x1;(YL[NL])();NL=NL-1;do CL=CL+0X1;end;repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X2]>=0 then local WC=EC[2];if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];EC[2]=0X00001;end;end;end;until true;return;end;end;end;end;else do if wL<10 then if wL>=8 then do if wL==0X9 then else YL[PL[5]]=YL[PL[4]]^YL[PL[0X07]];end;end;else do(YL)[PL[5]]={F({},0X1,PL[4])};end;end;else if wL<12 then do if wL==0X0b then repeat local dL,BL,DL=mL,YL,({});do for bC,uC in U,dL do do for EC,WC in U,uC do if WC[1]==BL and WC[2]>=0x00000 then local eC=(WC[2]);do if not(not DL[eC])then else do DL[eC]={BL[eC]};end;end;end;WC[1]=DL[eC];(WC)[0X00002]=0x1;end;end;end;end;end;until true;local AL=(PL[0X5]);do return false,AL,AL+PL[0X004]-0X2;end;else do CL=PL[4];end;end;end;else if wL~=13 then YL[PL[5]]=KL[PL[0X1]];else if YL[PL[0X004]]~=YL[PL[0X007]]then else do CL=PL[0X5];end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\s\116\114\ing"then if V(TL,"att\em\112\116\ \116\o\ \121\i\101l\d\ a\099ros\s \m\et\097\109\et\104\od/C%\-\ca\ll b\111un\dar\121")then return q();end;do if not(V(TL,"\^.-\:\037d\+\058\ "))then G(TL,0X0);else G("\076\117rap\h\032S\c\114\i\pt\:"..(_L[CL-0X0001]or"(\105\110\116\e\114\110\097l)").."\058\ "..l(TL),0);end;end;else(G)(TL,0X0);end;else if TL then do if rL~=0X1 then do return YL[ML](F(YL,ML+0X01,NL));end;else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;end;else if HL<0X041 then if HL==64 then aL=function(...)local CL,YL=1,({});local OL=Q();local kL={[0X1]=YL,[2]=qL};local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-1;local NL=0X0;do for PL=0X0,LL do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;end;do if not SL then do hL=nil;end;else if iL then YL[XL]={n=LL>=XL and LL-XL+0X0001 or 0X0000,F(hL,XL+1,LL+1)};end;end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do repeat local PL=FL[CL];local wL=PL[2];CL=CL+1;if not(wL>=0X7)then if not(wL<0X003)then do if wL>=0x5 then do if wL~=0X6 then if not(not(YL[PL[4]]<YL[PL[0X07]]))then else do CL=PL[5];end;end;else do(YL)[PL[5]]=YL[PL[0X004]]^YL[PL[0X7]];end;end;end;else if wL==0X4 then do(YL)[1]=KL[PL[0X1]];end;do CL=CL+1;end;(YL)[2]=YL[0X0];do PL=FL[CL];end;CL=CL+1;YL[1][PL[1]]=YL[2];do PL=FL[CL];end;CL=CL+1;YL[1]=KL[PL[0X001]];do CL=CL+1;end;NL=0X1;YL[NL]();local BL=(nil);local AL=(RL[0X0]);NL=NL-0X1;CL=CL+1;CL=CL+1;CL=CL+1;(YL)[0X1]=AL[1][AL[2]];PL=FL[CL];CL=CL+0x1;local dL=PL[0X4];local DL=(dL[0X2]);local bC=#DL;if not(bC>0x00000)then else BL={};for EC=1,bC do local WC=(DL[EC]);do if WC[0X00001]==0 then BL[EC-0X001]={YL,WC[2]};else(BL)[EC-0X1]=RL[WC[2]];end;end;end;x(mL,BL);end;YL[0X2]=cn(BL,KL,dL);CL=CL+0X1;local uC=(1);(YL[uC])(YL[uC+1]);NL=uC-0X00001;do CL=CL+1;end;CL=CL+0X1;do CL=CL+0X1;end;repeat local eC=({});local EC,WC=mL,YL;do for oC,jC in U,EC do for zC,lC in U,jC do do if not(lC[0X1]==WC and lC[0X00002]>=0X0000)then else local GC=lC[0x0002];do if not eC[GC]then do(eC)[GC]={WC[GC]};end;end;end;(lC)[0x1]=eC[GC];(lC)[2]=0X1;end;end;end;end;end;until 0.3940012606021043;return;else local AL=(PL[4]);local BL=(AL[0X2]);local DL=(#BL);local dL=nil;if not(DL>0x000)then else dL={};for bC=0X00001,DL do local uC=(BL[bC]);if uC[0X00001]==0 then dL[bC-1]={YL,uC[2]};else dL[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;else if wL<1 then do(YL)[PL[5]]=h(YL[PL[0X04]],YL[PL[0X7]]);end;else if wL~=0X02 then else CL=PL[4];end;end;end;else do if wL>=0Xb then if wL<0X00d then if wL~=0Xc then do YL[PL[0X00005]]=PL[0X1];end;else do YL[PL[5]]=true;end;end;else do if wL~=0X000E then do(YL[PL[5]])[YL[PL[4]]]=YL[PL[0X7]];end;else do for AL=PL[5],PL[0X004]do YL[AL]=nil;end;end;end;end;end;else do if wL>=9 then if wL~=10 then(YL)[PL[5]]={F({},1,PL[4])};else local dL,BL=PL[4],(PL[0x7]);local AL=PL[5];if dL==0x0 then else do NL=AL+dL-1;end;end;local DL,bC=nil,(nil);if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else DL,bC=on(YL[AL]());end;if BL~=1 then if BL~=0X0 then do DL=AL+BL-2;end;NL=DL+0X1;else DL=DL+AL-1;NL=DL;end;local uC=0X0;for EC=AL,DL do uC=uC+1;YL[EC]=bC[uC];end;else do NL=AL-0X001;end;end;end;else if wL==0X0008 then do if not(not(YL[PL[0X0004]]<=YL[PL[0X7]]))then else CL=PL[0X5];end;end;else do(YL)[PL[5]]=KL[PL[0X01]];end;end;end;end;end;end;end;until false;end;end);if not(nL)then if z(TL)=="\str\in\103"then if not(V(TL,'atte\mpt\ \116\o\ \y\i\101l\d\ \097\099r\o\s\115\032\m\e\116\097\109\e\116h\od/C%\-\c\097\108l\ b\111u\110\100\097r\y'))then else return q();end;if V(TL,'\^.\-\058\037\100\+\058 ')then(G)('\076u\114a\112\h\ S\099r\ip\116:'..(_L[CL-0X001]or"\040\i\110\116\101rnal\)").."\:\032"..l(TL),0);else(G)(TL,0X00);end;else G(TL,0);end;else do if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;else if not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;end;else aL=function(...)local CL=(0X1);local NL=(0);local YL={};local kL={[0X1]=YL,[2]=qL};local OL=(Q());local LL,hL=on(...);LL=LL-0X1;local KL=(OL==_ and sL or OL);for PL=0X0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X001];end;end;if not SL then do hL=nil;end;else if not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+1,LL+1)};end;end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while 0.8386354964342945 do local PL=(FL[CL]);local wL=PL[2];CL=CL+0x1;if not(wL<0XB)then if wL<0X11 then if wL<0x0000e then if not(wL>=0XC)then local AL=RL[5];do YL[PL[5]]=AL[1][AL[2]];end;CL=CL+0X00001;CL=CL+0X00001;CL=CL+1;do(YL)[12]=YL[5];end;CL=CL+0x1;local dL=0x0b;YL[dL](YL[dL+1]);NL=dL-0x1;do PL=FL[CL];end;CL=CL+0x001;CL=PL[4];else if wL==13 then YL[PL[0X5]]=YL[PL[0x004]]==YL[PL[0X7]];else(YL)[PL[5]]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X001;PL=FL[CL];CL=CL+0X1;do YL[PL[5]]=YL[5][PL[3]];end;CL=CL+0x001;CL=CL+0X00001;do PL=FL[CL];end;local AL=(PL[5]);do CL=CL+1;end;local dL=YL[0Xb];(YL)[AL+1]=dL;YL[AL]=dL[PL[0X03]];PL=FL[CL];do CL=CL+1;end;(YL)[0X0D]=PL[0x1];PL=FL[CL];CL=CL+0X1;AL=PL[5];do(YL)[AL]=YL[AL](YL[AL+0X01],YL[AL+2]);end;do NL=AL;end;CL=CL+0x1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[0x0B]=YL[PL[0X4]][PL[3]];PL=FL[CL];CL=CL+0X1;AL=PL[0x5];do YL[AL]=YL[AL](YL[AL+1]);end;NL=AL;PL=FL[CL];do CL=CL+1;end;YL[PL[5]]=KL[PL[0x01]];CL=CL+0x01;do NL=0X0000b;end;(YL[NL])();NL=NL-1;PL=FL[CL];do CL=CL+1;end;YL[11]=KL[PL[0X1]];PL=FL[CL];do CL=CL+1;end;(YL)[0xc]=YL[0X5][PL[3]];CL=CL+0x0001;CL=CL+1;CL=CL+0X01;(YL)[13]=YL[10];PL=FL[CL];do CL=CL+1;end;do(YL)[0X0000E]=PL[0X01];end;PL=FL[CL];do CL=CL+0x1;end;YL[PL[0X5]]=KL[PL[0x1]];CL=CL+0X1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0X00001;YL[PL[5]]=KL[PL[1]];do CL=CL+0x0001;end;CL=CL+0x00001;PL=FL[CL];do CL=CL+1;end;(YL)[0X00011]=KL[PL[0x00001]];do PL=FL[CL];end;CL=CL+1;(YL)[18]=YL[PL[4]];PL=FL[CL];CL=CL+0x00001;YL[19]=PL[0x0001];CL=CL+1;(YL)[20]=YL[0x0];PL=FL[CL];CL=CL+1;do(YL)[PL[5]]=PL[1];end;CL=CL+1;do(YL)[0X16]=YL[10];end;CL=CL+0X1;do(YL)[23]=YL[0x0000a];end;PL=FL[CL];CL=CL+1;(YL)[PL[0X0005]]=PL[0X1];PL=FL[CL];CL=CL+0X1;YL[PL[0x5]]=KL[PL[0X1]];CL=CL+1;CL=CL+0X00001;do PL=FL[CL];end;do CL=CL+1;end;YL[0X001A]=PL[0X1];do CL=CL+0X00001;end;AL=25;do(YL)[AL]=YL[AL](YL[AL+1]);end;NL=AL;PL=FL[CL];CL=CL+1;(YL)[26]=KL[PL[0x0001]];PL=FL[CL];CL=CL+0x1;(YL)[27]=YL[PL[0x4]];local bC=0X02;PL=FL[CL];CL=CL+1;AL=PL[5];YL[AL]=YL[AL](YL[AL+1]);do NL=AL;end;PL=FL[CL];local BL=PL[4];CL=CL+1;local DL=(YL[BL]);for eC=BL+1,26 do DL=DL..YL[eC];end;(YL)[0X12]=DL;PL=FL[CL];CL=CL+1;AL=PL[5];(YL)[AL]=YL[AL](YL[AL+0X001]);NL=AL;PL=FL[CL];do CL=CL+0X0001;end;(YL)[PL[5]]=YL[0XA];PL=FL[CL];CL=CL+1;(YL)[19]=KL[PL[0X1]];PL=FL[CL];do CL=CL+0X0001;end;(YL)[20]=YL[PL[0x4]];PL=FL[CL];CL=CL+0X1;do AL=PL[0X5];end;YL[AL]=YL[AL](YL[AL+0x1]);NL=AL;PL=FL[CL];CL=CL+1;(YL)[0X14]=PL[1];do PL=FL[CL];end;CL=CL+1;YL[0X15]=PL[0X1];do PL=FL[CL];end;CL=CL+0x01;do YL[22]=PL[0X00001];end;PL=FL[CL];CL=CL+1;BL=PL[0x00004];do DL=YL[BL];end;do for eC=BL+1,22 do DL=DL..YL[eC];end;end;do(YL)[0X11]=DL;end;PL=FL[CL];do CL=CL+1;end;do AL=PL[5];end;local uC=(0x00);if bC==0X0 then else NL=AL+bC-0x1;end;local EC,WC=nil,nil;do if bC~=1 then EC,WC=on(YL[AL](F(YL,AL+1,NL)));else do EC,WC=on(YL[AL]());end;end;end;do if uC==1 then NL=AL-0X001;else if uC==0X0 then EC=EC+AL-1;NL=EC;else EC=AL+uC-0X02;NL=EC+1;end;local eC=0X0;for oC=AL,EC do eC=eC+1;do(YL)[oC]=WC[eC];end;end;end;end;CL=CL+0X0001;CL=CL+1;CL=CL+0X1;AL=15;YL[AL]=YL[AL](F(YL,AL+0X01,NL));NL=AL;PL=FL[CL];do CL=CL+1;end;YL[16]=KL[PL[0X1]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;YL[0X11]=PL[1];PL=FL[CL];CL=CL+0X00001;AL=PL[5];do(YL)[AL]=YL[AL](YL[AL+1]);end;do NL=AL;end;CL=CL+0X01;CL=CL+1;PL=FL[CL];CL=CL+0X1;do(YL)[PL[0X5]]=PL[0x1];end;PL=FL[CL];do CL=CL+0X1;end;do(YL)[PL[5]]=YL[0XA];end;PL=FL[CL];CL=CL+0X1;(YL)[PL[5]]=PL[0X01];PL=FL[CL];CL=CL+0X1;BL=PL[0x4];do DL=YL[BL];end;for eC=BL+1,PL[0X7]do do DL=DL..YL[eC];end;end;YL[PL[0X5]]=DL;PL=FL[CL];CL=CL+1;AL=PL[0X5];(YL)[AL]=YL[AL](YL[AL+1],YL[AL+2]);do NL=AL;end;PL=FL[CL];CL=CL+0X1;if not(not YL[11])then else CL=PL[4];end;end;end;else if not(wL<0X000F)then do if wL~=16 then do(YL)[PL[0x5]]=KL[PL[1]];end;else for AL=PL[0X5],PL[0X4]do YL[AL]=nil;end;end;end;else(YL)[11]=PL[1];do PL=FL[CL];end;CL=CL+1;KL[PL[1]]=YL[PL[5]];PL=FL[CL];CL=CL+0X1;(YL)[0XB]=KL[PL[1]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[12]=PL[0X1];local DL=(RL[5]);PL=FL[CL];CL=CL+0X1;(YL)[0x0D]=PL[0x1];PL=FL[CL];CL=CL+1;(YL)[PL[5]]=PL[1];PL=FL[CL];local BL=0X0000b;local AL=PL[4];CL=CL+0X00001;local dL=YL[AL];for bC=AL+0X00001,14 do dL=dL..YL[bC];end;(YL)[0X0c]=dL;PL=FL[CL];CL=CL+1;YL[PL[5]]=YL[0];do CL=CL+0X0001;end;(YL[BL])(YL[BL+0X00001],YL[BL+0x2]);NL=BL-1;CL=CL+0x00001;CL=CL+1;PL=FL[CL];CL=CL+0X1;YL[PL[0X5]]=DL[1][DL[0X0002]];PL=FL[CL];do CL=CL+1;end;if not YL[0xb]then do CL=PL[0X4];end;end;end;end;else if wL<0X14 then if wL>=18 then do if wL~=19 then local AL=(PL[0X00005]);for dL=AL,AL+(PL[4]-1)do YL[dL]=hL[XL+(dL-AL)+1];end;else YL[0X006]=KL[PL[0X0001]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;NL=PL[5];(YL[NL])();NL=NL-1;do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+1;do YL[6]=KL[PL[1]];end;do CL=CL+1;end;do NL=6;end;(YL[NL])();NL=NL-1;CL=CL+0X1;do repeat local AL,dL=mL,(YL);local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0x001]==dL and EC[2]>=0)then else local WC=(EC[0X2]);if not BL[WC]then(BL)[WC]={dL[WC]};end;(EC)[1]=BL[WC];do(EC)[2]=0X01;end;end;end;end;end;until true;end;return;end;end;else if not(YL[PL[4]]<=YL[PL[7]])then else do CL=PL[5];end;end;end;else if wL>=0x015 then if wL~=22 then local AL=RL[PL[4]];(YL)[0X6]=AL[0X01][AL[0X2]];CL=CL+0X001;CL=CL+1;PL=FL[CL];do CL=CL+0x1;end;YL[PL[0X5]]=YL[2][PL[3]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+0x1;(YL)[0X8]=PL[1];PL=FL[CL];CL=CL+0X1;local dL=(PL[5]);do YL[dL]=YL[dL](YL[dL+1],YL[dL+2]);end;NL=dL;do PL=FL[CL];end;CL=CL+0X01;if not(YL[PL[0X05]])then else CL=PL[0X004];end;else(YL)[PL[5]]=YL[PL[0X4]]%YL[PL[0x7]];end;else local AL=(RL[PL[4]]);(YL)[PL[5]]=AL[0x1][AL[0X2]];CL=CL+1;do CL=CL+0X0001;end;do PL=FL[CL];end;do CL=CL+0X001;end;if not YL[6]then CL=PL[4];end;end;end;end;elseif not(wL<0x5)then if wL<0x0008 then if not(wL<6)then do if wL~=0X007 then CL=PL[0X04];else local dL=PL[0X4];local AL=(PL[5]);if dL~=0x0 then do NL=AL+dL-0x1;end;end;local DL,bC,BL=nil,nil,(PL[0X7]);do if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;end;if BL==1 then do NL=AL-1;end;else if BL==0 then DL=DL+AL-0x00001;NL=DL;else DL=AL+BL-0X2;NL=DL+0x0001;end;local uC=(0);for EC=AL,DL do uC=uC+1;(YL)[EC]=bC[uC];end;end;end;end;else(YL)[PL[5]]=KL[PL[0X001]];do CL=CL+1;end;CL=CL+0X00001;CL=CL+1;NL=0X00001;YL[NL]();do NL=NL-0x1;end;do PL=FL[CL];end;do CL=CL+0X00001;end;YL[0X1]=KL[PL[0x1]];CL=CL+0X1;CL=CL+0x0001;CL=CL+0X001;NL=0X1;YL[NL]();NL=NL-0X1;PL=FL[CL];do CL=CL+0X1;end;YL[0x00001]=KL[PL[0X1]];do CL=CL+1;end;CL=CL+0X001;PL=FL[CL];CL=CL+1;(YL)[PL[0x5]]=YL[0x01][PL[0X00003]];do PL=FL[CL];end;CL=CL+0X1;NL=PL[0X05];(YL)[NL]=YL[NL]();CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;local AL=RL[PL[0X04]];(YL)[0X2]=AL[0X001][AL[2]];local dL=4;do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[PL[0X5]]={};CL=CL+1;AL=RL[0X00001];(YL)[0X4]=AL[1][AL[0X2]];do CL=CL+1;end;CL=CL+0x001;PL=FL[CL];CL=CL+1;do(YL)[PL[5]]=PL[1];end;do PL=FL[CL];end;CL=CL+0X01;AL=RL[0X02];YL[PL[5]]=AL[1][AL[0X2]];CL=CL+0X001;CL=CL+0X1;PL=FL[CL];CL=CL+0X0001;(YL)[PL[5]]=PL[0X1];PL=FL[CL];do CL=CL+1;end;NL=dL+PL[4]-0X1;do YL[dL]=YL[dL](F(YL,dL+1,NL));end;NL=dL;PL=FL[CL];CL=CL+1;do(YL[PL[0X0005]])[PL[1]]=YL[4];end;PL=FL[CL];CL=CL+1;(YL[PL[0X5]])[PL[1]]=PL[0X3];CL=CL+1;YL[0x0004]={};PL=FL[CL];CL=CL+0X1;(YL[PL[5]])[PL[1]]=PL[0X3];PL=FL[CL];do CL=CL+0X1;end;do(YL[PL[0X5]])[PL[1]]=YL[4];end;do PL=FL[CL];end;CL=CL+1;do YL[PL[5]]=KL[PL[1]];end;CL=CL+0X1;CL=CL+0X1;PL=FL[CL];CL=CL+1;YL[0X4]=YL[0X004][PL[3]];do PL=FL[CL];end;CL=CL+1;dL=PL[0X005];local BL=YL[PL[4]];(YL)[dL+0x1]=BL;YL[dL]=BL[PL[3]];CL=CL+1;do YL[6]={};end;PL=FL[CL];CL=CL+0X1;YL[PL[5]][PL[1]]=YL[0];PL=FL[CL];CL=CL+1;YL[7]=KL[PL[1]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+0X0001;end;NL=PL[0X5];(YL)[NL]=YL[NL]();do PL=FL[CL];end;CL=CL+0X1;do YL[PL[5]][PL[0X0001]]=YL[0X007];end;PL=FL[CL];CL=CL+0x1;do dL=PL[0X5];end;YL[dL]=YL[dL](YL[dL+0X1],YL[dL+0X2]);NL=dL;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL[PL[5]])[PL[0x1]]=YL[4];do PL=FL[CL];end;do CL=CL+1;end;do dL=PL[0X00005];end;(YL)[dL]=YL[dL](YL[dL+0X1]);do NL=dL;end;CL=CL+0X1;CL=CL+0X01;PL=FL[CL];CL=CL+1;(YL)[0X003]=KL[PL[1]];CL=CL+1;do CL=CL+0x1;end;do PL=FL[CL];end;CL=CL+1;(YL)[PL[5]]=YL[PL[4]][PL[3]];CL=CL+0X00001;do CL=CL+0x00001;end;CL=CL+0X1;do NL=3;end;(YL)[NL]=YL[NL]();CL=CL+1;do(YL)[3]=YL[0X00003]-YL[0X00001];end;PL=FL[CL];CL=CL+1;YL[3]=YL[PL[0X00004]]*PL[3];PL=FL[CL];CL=CL+1;YL[PL[5]]=KL[PL[1]];do CL=CL+0X01;end;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;(YL)[PL[0X5]]=YL[0X4][PL[0X3]];do CL=CL+0X001;end;CL=CL+1;PL=FL[CL];do CL=CL+1;end;NL=PL[0X05];do YL[NL]=YL[NL]();end;CL=CL+1;CL=CL+0X1;CL=CL+0X1;YL[0x0004]=YL[0x4]-YL[0X03];PL=FL[CL];CL=CL+0X1;(YL)[PL[0X05]]=YL[PL[0X4]][PL[0X3]];PL=FL[CL];CL=CL+1;do AL=RL[PL[0x4]];end;do(YL)[PL[5]]=AL[0x1][AL[0x2]];end;do PL=FL[CL];end;CL=CL+1;YL[0X7]=YL[5][PL[0x3]];CL=CL+0X1;CL=CL+0x01;PL=FL[CL];CL=CL+0X01;YL[PL[0x05]]=PL[1];CL=CL+1;dL=6;(YL)[dL]=YL[dL](YL[dL+0X0001],YL[dL+2]);NL=dL;PL=FL[CL];CL=CL+1;if not(not YL[6])then else CL=PL[4];end;end;else if not(wL<0x9)then do if wL~=10 then else local AL=(PL[0X00005]);local dL,BL=YL[AL]();if dL then CL=PL[0x4];(YL)[AL+0x03]=BL;end;end;end;else YL[PL[5]]=not YL[PL[4]];end;end;else if not(wL<2)then if wL<3 then(YL)[PL[0x5]]={F({},0x00001,PL[4])};else if wL==0x4 then do YL[0X06]=PL[1];end;PL=FL[CL];CL=CL+0X001;(YL)[7]=PL[0X1];PL=FL[CL];CL=CL+0X1;do YL[0x8]=PL[0X4];end;local AL=6;PL=FL[CL];CL=CL+1;local dL,BL,DL=YL[AL],YL[AL+0x1],(YL[AL+2]);(YL)[AL]=g(function()do for bC=dL,BL,DL do(q)(true,bC);end;end;end);CL=PL[0X00004];else YL[PL[5]]=PL[1];end;end;else do if wL==1 then local AL=(RL[4]);YL[6]=AL[1][AL[2]];CL=CL+1;do CL=CL+1;end;CL=CL+0X00001;local dL=6;do(YL)[7]=YL[5];end;CL=CL+0X1;(YL[dL])(YL[dL+0X1]);NL=dL-1;PL=FL[CL];CL=CL+0x1;CL=PL[4];else local AL=(PL[0x00004]);local dL=(nil);local BL=AL[2];local DL=#BL;if DL>0x0 then dL={};for bC=1,DL do local uC=(BL[bC]);if uC[1]==0 then dL[bC-0x1]={YL,uC[2]};else dL[bC-1]=RL[uC[2]];end;end;x(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);end;end;end;end;end;end;end);if not(nL)then if z(TL)=='st\114\i\110\g'then if not(V(TL,"\097t\116\e\109\pt\ \116\o y\ie\l\100\ a\099\114\o\115\115 \m\et\097m\e\116\h\od\/\C\037\-\c\097l\108\032\098o\117n\d\097\114\y"))then else do return q();end;end;if not(V(TL,'\^\046-:\%\100+:\ '))then(G)(TL,0);else G("\L\117r\097\112\104\ \Sc\114\ip\116\058"..(_L[CL-1]or'\(\105\110t\e\114n\097l\)').."\058\ "..l(TL),0X0);end;else(G)(TL,0);end;elseif TL then if rL~=1 then return YL[ML](F(YL,ML+0x001,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;else if HL>=66 then do if HL==0X43 then do aL=function(...)local YL={};local CL=(1);local kL=({[2]=qL,[0X1]=YL});local OL=Q();local NL=0;local LL,hL=on(...);local KL=(OL==_ and sL or OL);LL=LL-1;for PL=0X0,LL do if XL>PL then(YL)[PL]=hL[PL+0x001];else break;end;end;do if not SL then hL=nil;else if not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0X00001,LL+0X1)};end;end;end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()repeat local PL=FL[CL];local wL=PL[0X2];CL=CL+0x1;if not(wL<11)then if wL>=17 then do if not(wL>=20)then do if wL<18 then local AL=(PL[0X0005]);local dL,BL,DL=YL[AL]();do if dL then YL[AL+0X00001]=BL;YL[AL+0X002]=DL;CL=PL[0X004];end;end;else do if wL==19 then local AL=(PL[4]);local BL,dL=AL[0X2],(nil);local DL=(#BL);if DL>0 then dL={};for bC=0X1,DL do local uC=BL[bC];if uC[1]==0 then(dL)[bC-0x1]={YL,uC[0X00002]};else do(dL)[bC-0X1]=RL[uC[0X2]];end;end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);else local AL=RL[0];(YL)[1]=AL[1][AL[0X2]];CL=CL+1;CL=CL+0X001;PL=FL[CL];do CL=CL+1;end;do if not(not YL[0X1])then else CL=PL[4];end;end;end;end;end;end;else if wL>=21 then if wL==0X0016 then do repeat local BL={};local AL,dL=mL,(YL);for DL,bC in U,AL do for uC,EC in U,bC do do if not(EC[0X1]==dL and EC[0X00002]>=0X0)then else local WC=(EC[2]);if not(not BL[WC])then else do BL[WC]={dL[WC]};end;end;(EC)[0x1]=BL[WC];EC[2]=0X1;end;end;end;end;until true;end;return;else YL[1]=KL[PL[0X00001]];CL=CL+1;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;(YL)[0X1]=YL[0x01][PL[0X003]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;if not(not YL[0X1])then else CL=PL[0x4];end;end;else if not(YL[PL[5]])then else CL=PL[0X004];end;end;end;end;else if not(wL>=14)then do if not(wL<12)then if wL==0XD then YL[PL[5]]=YL[PL[0X4]]==YL[PL[7]];else(YL)[PL[0X5]]=YL[PL[4]]<YL[PL[0X00007]];end;else YL[5]=KL[PL[1]];local AL=(RL[1]);do CL=CL+1;end;YL[6]=AL[0X00001][AL[0X2]];local BL=2;PL=FL[CL];do CL=CL+1;end;(YL)[0X6]=YL[6][PL[0X003]];CL=CL+0X1;local dL,DL=5,(0X4);if BL==0 then else NL=dL+BL-0X1;end;local bC,uC=nil,nil;if BL~=1 then bC,uC=on(YL[dL](F(YL,dL+0X01,NL)));else bC,uC=on(YL[dL]());end;if DL~=1 then if DL~=0 then bC=dL+DL-0x00002;NL=bC+1;else bC=bC+dL-0X001;NL=bC;end;local WC=(0X0);for eC=dL,bC do WC=WC+1;(YL)[eC]=uC[WC];end;else NL=dL-1;end;do CL=CL+0X1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+1;dL=0X00005;local EC=(g(function(...)q();for WC,eC in...do q(true,WC,eC);end;end));EC(YL[dL],YL[dL+0X1],YL[dL+2]);NL=dL;do(YL)[dL]=EC;end;CL=PL[0x00004];end;end;else if wL>=0XF then if wL==16 then for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;else YL[PL[5]]={F({},0X1,PL[4])};end;else YL[8]=YL[7][PL[3]];do CL=CL+1;end;do CL=CL+1;end;CL=CL+1;(YL)[0x0000]=YL[0x8];PL=FL[CL];CL=CL+0X1;CL=PL[4];end;end;end;else if wL>=5 then do if wL>=8 then do if wL>=9 then if wL==10 then(YL)[0x001]=KL[PL[1]];do CL=CL+0x00001;end;do CL=CL+1;end;PL=FL[CL];CL=CL+0X00001;(YL)[1]=YL[0X1][PL[3]];CL=CL+1;do CL=CL+0X01;end;local AL=1;PL=FL[CL];CL=CL+1;(YL)[2]=PL[1];CL=CL+1;YL[AL]=YL[AL](YL[AL+0x1]);NL=AL;do PL=FL[CL];end;CL=CL+1;if not(not YL[0X1])then else CL=PL[0X4];end;else local AL=(PL[5]);for dL=AL,AL+(PL[0X4]-0X1)do YL[dL]=hL[XL+(dL-AL)+1];end;end;else(YL)[5]=KL[PL[1]];CL=CL+0X001;YL[6]=YL[0x004];do CL=CL+1;end;local AL=0x5;(YL)[AL]=YL[AL](YL[AL+0x1]);NL=AL;PL=FL[CL];CL=CL+0X1;if not YL[5]then do CL=PL[0X004];end;end;end;end;else if wL>=0x6 then if wL==7 then CL=PL[4];else end;else(YL)[PL[5]]=PL[0X00001];end;end;end;else if not(wL>=0x02)then if wL~=0X1 then do(YL)[PL[0X5]]=KL[PL[0x1]];end;else local AL=RL[2];do YL[5]=AL[1][AL[2]];end;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[5]=YL[0X05][PL[3]];PL=FL[CL];CL=CL+1;do YL[0X005]=YL[5][PL[3]];end;PL=FL[CL];do CL=CL+1;end;do(YL)[0X5]=YL[5][PL[0X00003]];end;do CL=CL+1;end;AL=RL[0X3];local dL=(0X6);do YL[0x6]=AL[0X1][AL[2]];end;CL=CL+0X0001;CL=CL+0x00001;PL=FL[CL];CL=CL+0x00001;YL[0X7]=PL[0x001];do CL=CL+1;end;(YL)[8]=YL[0x0];local BL=0X00002;CL=CL+0x00001;(YL[dL])(YL[dL+0x1],YL[dL+0x2]);NL=dL-1;do PL=FL[CL];end;CL=CL+1;do(YL)[6]=KL[PL[1]];end;do CL=CL+0X1;end;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+1;end;do YL[6]=YL[0x6][PL[3]];end;do CL=CL+1;end;NL=0X6;(YL[NL])();NL=NL-1;CL=CL+0x01;YL[6]={};PL=FL[CL];CL=CL+0X1;(YL[6])[PL[0X0001]]=YL[0];do PL=FL[CL];end;do CL=CL+1;end;do(YL[0X6])[PL[1]]=YL[0X4];end;PL=FL[CL];CL=CL+1;do(YL[0X6])[PL[1]]=PL[0x0003];end;do PL=FL[CL];end;do CL=CL+0X1;end;YL[0X6][PL[0X1]]=PL[0X003];CL=CL+0X0001;do AL=RL[0x3];end;(YL)[7]=AL[0X1][AL[0X2]];CL=CL+1;CL=CL+0x001;PL=FL[CL];CL=CL+0X1;(YL)[8]=PL[0X01];PL=FL[CL];CL=CL+0X00001;(YL)[9]=KL[PL[1]];CL=CL+0x1;CL=CL+0X1;do CL=CL+1;end;do(YL)[0xa]=YL[0X6];end;CL=CL+0x1;dL=0X9;local DL=0X0;if BL~=0 then NL=dL+BL-0X001;end;local bC,uC=nil,nil;if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;do if DL~=0X1 then if DL~=0X0 then bC=dL+DL-0X02;NL=bC+1;else bC=bC+dL-1;NL=bC;end;local WC=(0X000);for eC=dL,bC do WC=WC+0X01;(YL)[eC]=uC[WC];end;else do NL=dL-1;end;end;end;do CL=CL+1;end;CL=CL+0X1;CL=CL+1;do dL=0X7;end;(YL[dL])(F(YL,dL+1,NL));do NL=dL-1;end;do CL=CL+0X00001;end;CL=CL+1;CL=CL+0X001;do AL=RL[0x02];end;do(YL)[7]=AL[1][AL[2]];end;PL=FL[CL];CL=CL+0X1;do(YL)[7]=YL[7][PL[3]];end;do CL=CL+0X00001;end;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[7]=YL[7][PL[3]];do CL=CL+1;end;CL=CL+1;CL=CL+0x1;YL[0X8]=YL[0x005];do PL=FL[CL];end;do CL=CL+1;end;(YL[0x7])[PL[1]]=YL[8];do CL=CL+1;end;do AL=RL[4];end;do(YL)[7]=AL[1][AL[0X2]];end;CL=CL+1;do CL=CL+1;end;do PL=FL[CL];end;local EC=(YL[7]);CL=CL+0x1;dL=0X00007;do YL[dL+1]=EC;end;YL[dL]=EC[PL[3]];CL=CL+1;do AL=RL[5];end;(YL)[0X9]=AL[0X1][AL[2]];do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+1;(YL)[10]=PL[0x001];CL=CL+0x1;YL[11]=YL[2];do CL=CL+1;end;YL[0Xc]=YL[0X3];do PL=FL[CL];end;CL=CL+1;YL[13]=PL[1];CL=CL+0x00001;do dL=0X09;end;BL=0x5;DL=0;if BL~=0x00000 then do NL=dL+BL-0x0001;end;end;bC,uC=nil;if BL==1 then bC,uC=on(YL[dL]());else do bC,uC=on(YL[dL](F(YL,dL+0X00001,NL)));end;end;if DL~=0X1 then do if DL~=0X0 then bC=dL+DL-0X02;do NL=bC+0X1;end;else bC=bC+dL-1;do NL=bC;end;end;end;local WC=0x00000;for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;else do NL=dL-0X1;end;end;do CL=CL+1;end;dL=7;(YL[dL])(F(YL,dL+0x1,NL));NL=dL-1;do CL=CL+1;end;AL=RL[3];(YL)[7]=AL[0X00001][AL[2]];PL=FL[CL];CL=CL+1;YL[8]=PL[0x00001];do CL=CL+0x1;end;YL[9]=YL[0];do CL=CL+1;end;dL=7;YL[dL](YL[dL+1],YL[dL+2]);NL=dL-0X1;do CL=CL+0x1;end;CL=CL+0x1;PL=FL[CL];CL=CL+0X1;do YL[0X0007]=KL[PL[1]];end;PL=FL[CL];CL=CL+0X1;YL[0X0007]=YL[7][PL[0x3]];CL=CL+0X1;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;(YL)[8]=PL[1];CL=CL+0X1;dL=0x007;YL[dL](YL[dL+0X01]);NL=dL-1;CL=CL+0x1;CL=CL+0X1;PL=FL[CL];CL=CL+1;CL=PL[4];end;else if not(wL<0x03)then if wL==0X4 then do(YL)[0x00008]=YL[0X7][PL[3]];end;PL=FL[CL];do CL=CL+0X001;end;YL[8]=YL[0x8][PL[3]];CL=CL+0X01;CL=CL+0X1;PL=FL[CL];CL=CL+0x1;if YL[0X0008]~=PL[3]then do CL=PL[5];end;end;else do YL[0X01]=KL[PL[0x00001]];end;do PL=FL[CL];end;CL=CL+1;YL[2]=PL[1];CL=CL+0X00001;local dL=0x002;local AL=1;if dL~=0X00 then NL=AL+dL-0X1;end;local DL,bC=nil,nil;local BL=(0X5);if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+1,NL)));else DL,bC=on(YL[AL]());end;if BL==1 then NL=AL-1;else if BL==0X00000 then DL=DL+AL-0X1;NL=DL;else do DL=AL+BL-2;end;NL=DL+0x0001;end;local uC=0x0;for EC=AL,DL do uC=uC+0x1;(YL)[EC]=bC[uC];end;end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0x001;if not YL[1]then CL=PL[4];end;end;else if YL[PL[0X00004]]==YL[PL[7]]then CL=PL[0X005];end;end;end;end;end;until false;end);do if not(nL)then do if z(TL)=='\st\114i\110\g'then if V(TL,'att\e\mp\116\032\116o y\ie\l\100\032a\cro\ss \109\et\097\109et\h\111\100\047\C\%\-\099a\l\l b\o\117ndar\y')then return q();end;if not(V(TL,"\^\.\045\:\037\d+:\032"))then(G)(TL,0X0);else G('\076\117\114a\p\h Sc\114\i\112t\058'..(_L[CL-1]or'\040int\101rna\l\041')..'\: '..l(TL),0);end;else G(TL,0X0);end;end;elseif TL then if rL~=0X00001 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;else if not(ML)then else return F(YL,ML,rL);end;end;end;end;end;else aL=function(...)local CL=(1);local YL={};local kL={[0X1]=YL,[2]=qL};local OL=Q();local LL,hL=on(...);LL=LL-1;for PL=0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;local NL=0;local KL=(OL==_ and sL or OL);if not SL then hL=nil;else if not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+0X1,LL+1)};end;end;do if KL==OL then else X(aL,KL);end;end;local nL,TL,ML,rL=j(function()repeat local PL=FL[CL];local wL=(PL[2]);CL=CL+1;if wL<0X8 then if wL<0X4 then do if not(wL>=0X0002)then if wL==0X0001 then for AL=PL[5],PL[4]do do(YL)[AL]=nil;end;end;else(YL)[PL[0X00005]]=YL[PL[4]]%YL[PL[0X7]];end;else if wL==0X3 then do YL[PL[5]]=r(YL[PL[4]],YL[PL[0X7]]);end;else YL[PL[0X5]]=YL[PL[4]]>=YL[PL[7]];end;end;end;elseif not(wL<0X06)then if wL==0X0007 then(YL)[PL[5]]=YL[PL[4]]^YL[PL[7]];else YL[PL[0X5]]=PL[0X004];end;else if wL~=0X0005 then YL[PL[5]]={F({},0X1,PL[0X0004])};else(YL)[PL[5]]=YL[PL[4]]*YL[PL[0X7]];end;end;else if not(wL<12)then if wL<14 then if wL~=13 then if YL[PL[0X00005]]then do CL=PL[4];end;end;else(YL)[0X1]=KL[PL[0X01]];CL=CL+1;YL[2]=YL[0x0];PL=FL[CL];do CL=CL+0X1;end;(YL[1])[PL[0x1]]=YL[2];do PL=FL[CL];end;do CL=CL+1;end;YL[1]=KL[PL[1]];CL=CL+1;do CL=CL+1;end;CL=CL+0X1;NL=0x01;(YL[NL])();do NL=NL-0X1;end;CL=CL+1;CL=CL+0X01;CL=CL+1;repeat local AL,dL,BL=mL,YL,({});do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[0X02]>=0x0)then else local WC=(EC[2]);if not(not BL[WC])then else BL[WC]={dL[WC]};end;do EC[0X0001]=BL[WC];end;EC[0X2]=1;end;end;end;end;until 0.07852523051034288;return;end;else if wL>=0X0F then if wL~=16 then local AL=PL[0X0005];local dL=(g(function(...)(q)();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));dL(YL[AL],YL[AL+0x1],YL[AL+0X2]);NL=AL;do(YL)[AL]=dL;end;CL=PL[0X4];else YL[PL[0X5]]=PL[1];end;else(YL)[PL[0X05]]=YL[PL[4]]<YL[PL[7]];end;end;else if not(wL>=0xa)then if wL==9 then do CL=PL[4];end;else end;else if wL==0XB then local AL=(PL[0X4]);local BL=(AL[0X00002]);local DL=#BL;local dL=(nil);do if DL>0X0 then dL={};do for bC=1,DL do local uC=BL[bC];if uC[0X1]~=0X0 then(dL)[bC-1]=RL[uC[2]];else do dL[bC-1]={YL,uC[2]};end;end;end;end;(x)(mL,dL);end;end;YL[PL[5]]=cn(dL,KL,AL);else YL[PL[5]]=KL[PL[0x1]];end;end;end;end;until false;end);if not(nL)then if z(TL)=='\115t\114i\110\g'then if V(TL,"a\116\116empt t\o\ yi\el\100\032a\cr\o\ss\ \109\eta\meth\o\100\/\C\%\-\099al\l\032bou\110\dary")then do return q();end;end;do if not(V(TL,'\094\.\045\:\037\d\+\:\ '))then G(TL,0);else(G)("\Lur\097\p\h \S\099r\i\pt\058"..(_L[CL-0X1]or'\040\in\116\er\110a\l)').."\:\ "..l(TL),0X0);end;end;else G(TL,0);end;else if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;else if ML then return F(YL,ML,rL);end;end;end;end;end;end;else do aL=function(...)local CL,YL=0x1,({});local kL=({[2]=qL,[0X1]=YL});local OL=(Q());local LL,hL=on(...);local KL=((OL==_ and sL or OL));LL=LL-0X1;for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;local NL=(0);if not SL then do hL=nil;end;else if not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X001 or 0x0,F(hL,XL+1,LL+0X00001)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while 0.21389286297524224 do local PL=FL[CL];local wL=PL[0x0002];CL=CL+1;do if wL<15 then do if wL<0X7 then if not(wL>=3)then if not(wL<0X1)then if wL==2 then local AL=RL[PL[4]];YL[PL[0x05]]=AL[1][AL[0X00002]];else(YL)[PL[0X5]]=L(YL[PL[0X4]],YL[PL[0X0007]]);end;else YL[0X01]=KL[PL[1]];PL=FL[CL];CL=CL+1;do(YL)[0X2]=PL[0X1];end;do CL=CL+1;end;local AL=(1);(YL)[AL]=YL[AL](YL[AL+0X0001]);NL=AL;PL=FL[CL];CL=CL+1;if not YL[1]then CL=PL[0X004];end;end;else do if not(wL>=0X5)then if wL==0X0004 then YL[PL[5]]=YL[PL[0x4]]*YL[PL[7]];else if not(not YL[PL[5]])then else CL=PL[4];end;end;else if wL==0X6 then else YL[PL[5]]=KL[PL[0x00001]];end;end;end;end;else if wL>=0XB then if not(wL<0X000D)then if wL==0XE then if YL[PL[0x5]]then CL=PL[4];end;else YL[PL[5]]=YL[PL[0X04]];end;else do if wL~=0XC then(YL)[0x1]=KL[PL[0X0001]];CL=CL+0X01;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+1;end;do YL[1]=YL[0x1][PL[0X0003]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X01;if not(not YL[1])then else CL=PL[4];end;else YL[PL[5]]=YL[PL[0X4]]==YL[PL[0X00007]];end;end;end;else if wL<9 then if wL~=0X08 then YL[PL[0X005]]={F({},1,PL[0x04])};else CL=PL[4];end;else if wL~=10 then local AL=PL[5];local dL,BL,DL=YL[AL]();if not(dL)then else(YL)[AL+0X1]=BL;YL[AL+0X002]=DL;CL=PL[0x0004];end;else do(YL)[PL[0X5]]=not YL[PL[0X4]];end;end;end;end;end;end;else if wL<0X00016 then if not(wL<0X0012)then if wL>=20 then if wL~=21 then do(YL)[PL[0x5]]=YL[PL[0x4]]>YL[PL[0X7]];end;else YL[0x4]=YL[3][PL[3]];CL=CL+0X01;CL=CL+0x1;CL=CL+1;YL[0X0]=YL[4];do PL=FL[CL];end;CL=CL+1;CL=PL[4];end;else if wL==19 then(YL)[PL[5]]=M(YL[PL[4]],YL[PL[0X007]]);else YL[0x1]=KL[PL[1]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;do YL[0X1]=YL[0X0001][PL[0x3]];end;PL=FL[CL];CL=CL+0X0001;do(YL)[1]=YL[1][PL[3]];end;PL=FL[CL];CL=CL+1;(YL)[2]=KL[PL[0X1]];PL=FL[CL];CL=CL+0X001;(YL)[0x02]=YL[2][PL[0X00003]];CL=CL+1;(YL)[0x1]=YL[1][YL[2]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[0X2]=KL[PL[0X1]];CL=CL+1;CL=CL+0X1;local AL=(0x002);PL=FL[CL];do CL=CL+1;end;YL[0X02]=YL[0X00002][PL[0X3]];do CL=CL+1;end;(YL)[1]=YL[1][YL[2]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X0001;(YL)[0X00002]=KL[PL[1]];do CL=CL+0X001;end;CL=CL+1;CL=CL+1;YL[3]=YL[0X00001];CL=CL+1;YL[AL]=YL[AL](YL[AL+1]);do NL=AL;end;PL=FL[CL];CL=CL+0x001;do if not(not YL[2])then else CL=PL[4];end;end;end;end;else if not(wL<16)then do if wL~=0X11 then repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0X0000)then else local WC=EC[2];if not BL[WC]then do BL[WC]={dL[WC]};end;end;EC[1]=BL[WC];EC[2]=1;end;end;end;until-177520327;return;else(YL)[0X001]=KL[PL[0X1]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[0X1]=YL[1][PL[3]];local AL=(1);PL=FL[CL];CL=CL+1;YL[2]=PL[0x001];CL=CL+0x1;do(YL)[AL]=YL[AL](YL[AL+0x00001]);end;NL=AL;PL=FL[CL];CL=CL+1;if not YL[0X1]then do CL=PL[0X4];end;end;end;end;else(YL)[0x4]=YL[3][PL[3]];PL=FL[CL];CL=CL+1;YL[4]=YL[0x4][PL[3]];PL=FL[CL];do CL=CL+1;end;if YL[4]==PL[3]then else do CL=PL[5];end;end;end;end;else if wL>=26 then do if wL>=28 then if wL==0x1D then local AL=PL[0X4];local dL=nil;local BL=(AL[2]);local DL=#BL;do if DL>0 then dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0X1]==0X0 then dL[bC-1]={YL,uC[2]};else do(dL)[bC-0x0001]=RL[uC[2]];end;end;end;end;x(mL,dL);end;end;do(YL)[PL[5]]=cn(dL,KL,AL);end;else local AL=RL[2];YL[0x2]=AL[1][AL[2]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;YL[2]=YL[2][PL[0x3]];CL=CL+0X00001;CL=CL+1;do PL=FL[CL];end;CL=CL+0X01;YL[0X002]=YL[2][PL[3]];PL=FL[CL];do CL=CL+1;end;(YL)[2]=YL[2][PL[0x3]];CL=CL+1;do CL=CL+0x1;end;CL=CL+0X1;AL=RL[0X3];YL[3]=AL[0X1][AL[0x0002]];do PL=FL[CL];end;do CL=CL+1;end;do(YL)[0X0004]=PL[1];end;CL=CL+1;local dL=(3);do YL[5]=YL[0X0];end;do CL=CL+1;end;YL[dL](YL[dL+1],YL[dL+2]);NL=dL-0X01;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;YL[3]=KL[PL[1]];PL=FL[CL];CL=CL+0X1;(YL)[0X3]=YL[3][PL[3]];do CL=CL+1;end;NL=3;(YL[NL])();do NL=NL-0x1;end;do PL=FL[CL];end;do CL=CL+0X1;end;YL[3]=KL[PL[0X00001]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;do(YL)[3]=YL[0X3][PL[3]];end;PL=FL[CL];CL=CL+0X01;YL[3]=YL[3]==PL[0X00003];do PL=FL[CL];end;CL=CL+0X1;do if not(not YL[3])then else CL=PL[0x4];end;end;end;else do if wL==27 then YL[PL[5]]=h(YL[PL[4]],YL[PL[0X07]]);else YL[PL[0x5]]=PL[1];end;end;end;end;elseif wL>=0X18 then if wL==0X19 then YL[0X1]=KL[PL[0X1]];local AL=RL[1];CL=CL+0x1;CL=CL+0X1;local dL=1;do CL=CL+1;end;do YL[0X2]=AL[1][AL[2]];end;PL=FL[CL];CL=CL+1;(YL)[2]=YL[0x2][PL[3]];CL=CL+1;local BL=(0X00002);if BL==0X0 then else do NL=dL+BL-1;end;end;local DL=0X04;local bC,uC=nil,nil;if BL==0X1 then do bC,uC=on(YL[dL]());end;else bC,uC=on(YL[dL](F(YL,dL+0x1,NL)));end;do if DL~=1 then if DL~=0 then do bC=dL+DL-2;end;NL=bC+1;else bC=bC+dL-0X00001;do NL=bC;end;end;local WC=(0X000);for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;else do NL=dL-1;end;end;end;PL=FL[CL];CL=CL+0X001;dL=0X1;local EC=g(function(...)q();for WC,eC in...do q(true,WC,eC);end;end);(EC)(YL[dL],YL[dL+0X1],YL[dL+0X2]);NL=dL;YL[dL]=EC;CL=PL[0X4];else do YL[3]=KL[PL[0X1]];end;do PL=FL[CL];end;do CL=CL+1;end;YL[3]=YL[0X3][PL[3]];PL=FL[CL];CL=CL+1;CL=PL[0X004];end;else if wL==0X17 then do(YL)[0X00004]={};end;do PL=FL[CL];end;CL=CL+1;do(YL[4])[PL[0X0001]]=YL[0];end;local DL=(0X0);PL=FL[CL];CL=CL+1;do(YL[4])[PL[0x1]]=YL[1];end;PL=FL[CL];local dL=(7);CL=CL+1;do YL[0X4][PL[0X001]]=PL[0X3];end;PL=FL[CL];CL=CL+1;do(YL[4])[PL[1]]=YL[3];end;local AL=RL[3];CL=CL+0X1;YL[5]=AL[0X01][AL[2]];do PL=FL[CL];end;do CL=CL+1;end;YL[6]=PL[1];do PL=FL[CL];end;CL=CL+0X0001;YL[0X7]=KL[PL[0x0001]];CL=CL+0X1;(YL)[0x8]=YL[4];do CL=CL+1;end;local BL=(2);if BL==0 then else NL=dL+BL-0X1;end;local bC,uC=nil,(nil);do if BL==0X00001 then do bC,uC=on(YL[dL]());end;else bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;end;do if DL~=1 then if DL~=0X0000 then bC=dL+DL-2;do NL=bC+1;end;else bC=bC+dL-1;NL=bC;end;local WC=(0);for eC=dL,bC do do WC=WC+1;end;YL[eC]=uC[WC];end;else NL=dL-1;end;end;CL=CL+1;CL=CL+1;CL=CL+0X1;dL=0X5;(YL[dL])(F(YL,dL+1,NL));NL=dL-1;CL=CL+1;CL=CL+0X1;do CL=CL+1;end;do AL=RL[2];end;(YL)[5]=AL[1][AL[0X2]];CL=CL+1;CL=CL+0X0001;PL=FL[CL];do CL=CL+1;end;YL[5]=YL[5][PL[0X3]];CL=CL+1;do CL=CL+0X001;end;PL=FL[CL];do CL=CL+0x0001;end;(YL)[0X5]=YL[0X5][PL[0x003]];CL=CL+1;do(YL)[6]=YL[2];end;PL=FL[CL];CL=CL+0X1;do(YL[0X5])[PL[1]]=YL[6];end;CL=CL+1;AL=RL[4];YL[0X5]=AL[1][AL[0X00002]];do PL=FL[CL];end;local EC=(YL[5]);CL=CL+0x00001;dL=5;YL[dL+0X1]=EC;YL[dL]=EC[PL[0x3]];CL=CL+0X1;do AL=RL[5];end;YL[0X0007]=AL[0x1][AL[0X0002]];PL=FL[CL];CL=CL+1;(YL)[8]=PL[1];PL=FL[CL];do CL=CL+1;end;(YL)[0X0009]=KL[PL[1]];CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+0X1;YL[9]=YL[0x9][PL[3]];CL=CL+0X1;CL=CL+0x0001;PL=FL[CL];CL=CL+0x01;do(YL)[0Xa]=KL[PL[1]];end;do PL=FL[CL];end;CL=CL+0X00001;do YL[10]=YL[0xA][PL[0X003]];end;CL=CL+1;do CL=CL+1;end;CL=CL+0X00001;(YL)[11]=YL[3];CL=CL+1;do dL=7;end;do BL=0x05;end;do DL=0x0;end;if BL~=0X0 then NL=dL+BL-0X001;end;bC,uC=nil;if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0X001,NL)));end;if DL==0x001 then NL=dL-0X1;else if DL~=0X0 then bC=dL+DL-0x02;NL=bC+0X001;else do bC=bC+dL-1;end;NL=bC;end;local WC=0X0;for eC=dL,bC do do WC=WC+0X1;end;(YL)[eC]=uC[WC];end;end;CL=CL+0x1;do CL=CL+0X1;end;CL=CL+0X1;dL=5;(YL[dL])(F(YL,dL+1,NL));NL=dL-0X001;do CL=CL+1;end;do AL=RL[0X003];end;do(YL)[0X5]=AL[1][AL[2]];end;PL=FL[CL];CL=CL+1;YL[0X6]=PL[1];CL=CL+1;YL[7]=YL[0];do CL=CL+1;end;do dL=5;end;YL[dL](YL[dL+1],YL[dL+2]);NL=dL-0X1;PL=FL[CL];CL=CL+1;(YL)[0X5]=KL[PL[0X1]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;(YL)[0X0005]=YL[0X5][PL[3]];PL=FL[CL];CL=CL+1;(YL)[0X6]=PL[0X1];do CL=CL+1;end;do dL=0x5;end;YL[dL](YL[dL+1]);NL=dL-0X1;CL=CL+1;CL=CL+0X001;PL=FL[CL];CL=CL+1;CL=PL[0X4];else for AL=PL[5],PL[0X4]do YL[AL]=nil;end;end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)~='s\116\114\i\110g'then(G)(TL,0);else if not(V(TL,'\097\116\116\em\112t\032\116\o\ \121\105\101\108\d\ acr\111\s\115 \m\101t\097\m\et\104\111d\/\C\037\045\099a\l\l \098\oun\da\114y'))then else return q();end;do if V(TL,'\^\046\045\:\%\100\+\:\032')then(G)('L\117r\097\112\h\ S\cri\pt\:'..(_L[CL-1]or'\040\int\101\114n\097\l\)').."\:\ "..l(TL),0X0);else(G)(TL,0X00000);end;end;end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then do return F(YL,ML,rL);end;end;end;end;end;end;end;end;end;end;end;end;end;else if HL<17 then if not(HL>=0x8)then if not(HL>=0X4)then if not(HL<0x2)then if HL~=0X00003 then aL=function(...)local CL,YL=0X1,({});local NL=(0);local kL=({[2]=qL,[0X1]=YL});local OL=Q();local LL,hL=on(...);do LL=LL-0X0001;end;local KL=((OL==_ and sL or OL));for PL=0,LL do if not(XL>PL)then break;else do YL[PL]=hL[PL+1];end;end;end;if not SL then do hL=nil;end;else if iL then(YL)[XL]={n=LL>=XL and LL-XL+0X01 or 0,F(hL,XL+0X1,LL+1)};end;end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()repeat local PL=FL[CL];local wL=PL[0X2];do CL=CL+1;end;if wL<0X9 then if wL>=0x00004 then if wL<0X6 then if wL~=0X0005 then do if not(not(PL[1]<YL[PL[7]]))then else CL=PL[5];end;end;else end;else if wL<7 then do if not(YL[PL[4]]<=YL[PL[0X0007]])then CL=PL[0x005];end;end;else if wL~=0X00008 then(YL)[PL[0x005]]=true;else CL=PL[4];end;end;end;else if wL<2 then do if wL==1 then YL[PL[5]]={F({},0x1,PL[0x4])};else local AL=RL[0];YL[1]=AL[1][AL[0X0002]];PL=FL[CL];CL=CL+0x0001;YL[0X00001]=YL[0x01][PL[0X03]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;if YL[0X1]then CL=PL[4];end;end;end;else if wL==0X00003 then(YL)[PL[0x5]]=YL[PL[4]]==YL[PL[7]];else(YL)[0X1]=KL[PL[0x1]];CL=CL+1;(YL)[2]=YL[0X0];do PL=FL[CL];end;do CL=CL+0X1;end;(YL[1])[PL[1]]=YL[2];PL=FL[CL];CL=CL+0X00001;do YL[0X1]=KL[PL[0X1]];end;CL=CL+0x00001;NL=0X1;local AL=(RL[0]);(YL[NL])();NL=NL-0X1;CL=CL+1;YL[1]=AL[0X1][AL[0X2]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X1;if not YL[0x00001]then CL=PL[4];end;end;end;end;elseif wL<0XE then if wL>=11 then if wL>=12 then if wL==0XD then local AL=PL[5];local dL=YL[PL[0X00004]];do YL[AL+1]=dL;end;YL[AL]=dL[PL[3]];else local AL,dL=PL[0X4],nil;local BL=AL[2];local DL=(#BL);if not(DL>0)then else dL={};for bC=0X1,DL do local uC=BL[bC];if uC[1]==0X0 then dL[bC-1]={YL,uC[2]};else dL[bC-1]=RL[uC[2]];end;end;x(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;end;else for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;end;else do if wL==0XA then local AL=RL[1];(YL)[0x1]=AL[1][AL[0X002]];PL=FL[CL];do CL=CL+1;end;local dL=(1);local BL=(YL[1]);(YL)[dL+0X00001]=BL;(YL)[dL]=BL[PL[0X3]];do PL=FL[CL];end;do CL=CL+0X1;end;YL[3]=PL[0X0001];do CL=CL+0X0001;end;AL=RL[2];YL[0X4]=AL[1][AL[0x02]];CL=CL+0X01;dL=0X001;NL=dL+0X04-1;YL[dL](F(YL,dL+1,NL));NL=dL-0X001;PL=FL[CL];CL=CL+0X1;CL=PL[0X4];else(YL)[PL[5]]=KL[PL[0X1]];end;end;end;else if not(wL>=0X10)then do if wL~=15 then repeat local AL,dL=mL,(YL);local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X1]==dL and EC[2]>=0X0 then local WC=EC[0X00002];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;do EC[0X001]=BL[WC];end;EC[2]=1;end;end;end;end;until true;do return;end;else(YL)[PL[0X0005]]=YL[PL[0X4]]~=YL[PL[7]];end;end;else if not(wL>=0x11)then YL[PL[5]]=-YL[PL[0x4]];else do if wL==0x12 then if not(not YL[PL[0x005]])then else CL=PL[0X00004];end;else(YL)[PL[5]]=PL[1];end;end;end;end;end;until false;end);if nL then if TL then if rL==1 then do return YL[ML]();end;else do return YL[ML](F(YL,ML+1,NL));end;end;else if not(ML)then else return F(YL,ML,rL);end;end;else if z(TL)=="s\116\114ing"then if not(V(TL,'a\116te\m\112\116\ \116o\ \y\i\e\l\d\ acr\o\s\s m\e\116\097\m\e\116\h\o\d\/\067\%\-\099a\l\l\032\098\oun\dar\y'))then else return q();end;do if not(V(TL,"\094\.\045:\%\d+\058 "))then(G)(TL,0);else G("\076u\114\097\p\104 \083\099\114\105p\116:"..(_L[CL-1]or'\(\i\110te\114\110a\l\)').."\:\ "..l(TL),0);end;end;else(G)(TL,0X00000);end;end;end;else aL=function(...)local NL,YL=0,{};local CL=1;local OL=(Q());local KL=(OL==_ and sL or OL);local kL={[2]=qL,[0X1]=YL};local LL,hL=on(...);do LL=LL-1;end;for PL=0X0000,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;if not SL then hL=nil;else if not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0x0,F(hL,XL+1,LL+0X001)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while 0x001810E739 do local PL=FL[CL];local wL=PL[0X00002];CL=CL+1;if not(wL<5)then do if not(wL<0X00008)then if not(wL>=9)then local AL=(PL[0X4]);local BL=(AL[2]);local DL,dL=#BL,nil;if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[1]==0 then(dL)[bC-0X0001]={YL,uC[2]};else do(dL)[bC-0X1]=RL[uC[0X2]];end;end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else if wL==10 then YL[PL[0x5]]=not YL[PL[4]];else(YL)[PL[5]]=YL[PL[0X4]][YL[PL[0X7]]];end;end;else do if not(wL>=6)then if YL[PL[0X4]]==YL[PL[0X7]]then else CL=PL[0X5];end;else if wL==7 then YL[PL[0X5]]=PL[1];else CL=PL[0X4];end;end;end;end;end;else if not(wL>=2)then if wL~=0X1 then(YL)[PL[5]]={F({},1,PL[0X4])};else do(YL)[1]=KL[PL[0X1]];end;CL=CL+0X1;(YL)[0X00002]=YL[0X0];PL=FL[CL];CL=CL+1;YL[0x0001][PL[0x1]]=YL[2];PL=FL[CL];CL=CL+1;do(YL)[0x001]=KL[PL[0X1]];end;do CL=CL+1;end;CL=CL+1;CL=CL+0X1;do NL=0X0001;end;(YL[NL])();NL=NL-1;CL=CL+0X0001;do repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0)then else local WC=EC[0X2];if not BL[WC]then do BL[WC]={dL[WC]};end;end;do EC[0x1]=BL[WC];end;(EC)[2]=1;end;end;end;until"\'\057W";end;return;end;else if not(wL>=0X3)then else do if wL~=0X4 then repeat local dL,BL,DL=mL,YL,({});for bC,uC in U,dL do do for EC,WC in U,uC do if not(WC[0x1]==BL and WC[0X0002]>=0X0)then else local eC=WC[0x2];do if not DL[eC]then DL[eC]={BL[eC]};end;end;do(WC)[1]=DL[eC];end;(WC)[2]=0x1;end;end;end;end;until-363124831;local AL=PL[0X5];return false,AL,AL+PL[0X4]-2;else YL[PL[0X00005]]=KL[PL[0x1]];end;end;end;end;end;end;end);do if nL then if TL then if rL==0X001 then do return YL[ML]();end;else return YL[ML](F(YL,ML+0x0001,NL));end;else if not(ML)then else return F(YL,ML,rL);end;end;else if z(TL)=='\115\116r\105n\103'then if V(TL,'\097\116\116\e\m\112t\032\116\o\ y\ie\ld \097\cr\o\115\115\ \m\101t\097m\et\h\od\/\C\%-\099a\l\108\032\098\ou\110dar\y')then return q();end;if V(TL,"^.\045:\037d\+\: ")then G("\076u\114\097\p\h\ S\c\114\105\112t:"..(_L[CL-1]or"\040\i\110t\e\114\110a\108)")..'\: '..l(TL),0X0);else G(TL,0X00);end;else(G)(TL,0);end;end;end;end;end;else do if HL~=0X1 then do aL=function(...)local CL,YL=0X0001,{};local OL=(Q());local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0X01;local kL,NL={[2]=qL,[0X1]=YL},(0);for PL=0X0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;end;if not SL then do hL=nil;end;else if iL then(YL)[XL]={n=LL>=XL and LL-XL+0X001 or 0,F(hL,XL+1,LL+0X0001)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while'\087\097\110\F'do local PL=(FL[CL]);local wL=(PL[0X2]);CL=CL+0X0001;if not(wL<9)then if not(wL<0XE)then if wL<0x10 then if wL~=15 then local AL=(RL[1]);do YL[1]=AL[0x1][AL[0X2]];end;CL=CL+1;do CL=CL+0x1;end;PL=FL[CL];do CL=CL+1;end;YL[0x1]=YL[0X0001][PL[3]];PL=FL[CL];CL=CL+0x01;YL[1]=YL[1][PL[0X03]];CL=CL+1;(YL)[0X00001]=not YL[0X1];PL=FL[CL];CL=CL+0x1;CL=PL[0X4];else do(YL)[PL[5]]=PL[1];end;end;else if not(wL<0X00011)then do if wL~=0x12 then(YL)[PL[0X5]]=PL[0X4];else repeat local dL,BL,DL=mL,YL,{};for bC,uC in U,dL do for EC,WC in U,uC do if WC[0X1]==BL and WC[2]>=0X0 then local eC=(WC[2]);do if not DL[eC]then(DL)[eC]={BL[eC]};end;end;WC[1]=DL[eC];WC[2]=0x1;end;end;end;until true;local AL=PL[5];return false,AL,AL+PL[4]-0X02;end;end;else if not(not(YL[PL[0X004]]<=YL[PL[7]]))then else CL=PL[0X5];end;end;end;else do if wL>=0XB then do if wL>=12 then if wL~=0Xd then local AL=(RL[0X0001]);YL[1]=AL[1][AL[0X2]];PL=FL[CL];do CL=CL+0X1;end;(YL)[0X1]=YL[0X01][PL[0X00003]];CL=CL+0X01;CL=CL+1;PL=FL[CL];CL=CL+0X1;(YL)[1]=YL[0X1][PL[3]];CL=CL+0X1;do(YL)[0X1]=not YL[0X0001];end;do PL=FL[CL];end;CL=CL+0X0001;CL=PL[4];else do YL[PL[5]]=YL[PL[4]]/YL[PL[7]];end;end;else local AL=YL[PL[0X04]]/YL[PL[0X0007]];do(YL)[PL[5]]=AL-AL%0X001;end;end;end;elseif wL~=10 then YL[PL[0x5]]=YL[PL[4]]+YL[PL[0x00007]];else YL[1]=KL[PL[0X0001]];do PL=FL[CL];end;CL=CL+0X1;(YL)[0X1]=YL[1][PL[0x3]];PL=FL[CL];CL=CL+0X001;CL=PL[4];end;end;end;else do if not(wL>=4)then if not(wL<0X2)then if wL~=0X3 then local AL=RL[PL[0X4]];(YL)[PL[5]]=AL[0X00001][AL[2]];else repeat local BL=({});local AL,dL=mL,(YL);for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0)then else local WC=(EC[2]);do if not(not BL[WC])then else do BL[WC]={dL[WC]};end;end;end;EC[1]=BL[WC];(EC)[0X2]=0X0001;end;end;end;until true;return;end;else if wL~=0X1 then do(YL)[PL[0X05]]=KL[PL[1]];end;else repeat local dL,BL=mL,(YL);local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0x1]==BL and WC[0X0002]>=0x0 then local eC=(WC[0X2]);do if not DL[eC]then DL[eC]={BL[eC]};end;end;do WC[1]=DL[eC];end;WC[2]=0x1;end;end;end;end;until true;local AL=(PL[5]);do return false,AL,AL;end;end;end;elseif wL>=0X06 then if wL<7 then else if wL~=8 then if not(not YL[PL[5]])then else CL=PL[0x4];end;else do YL[PL[0x5]]={F({},1,PL[4])};end;end;end;else do if wL==5 then local AL,dL=PL[4],(nil);local BL=(AL[2]);local DL=#BL;do if not(DL>0X0)then else dL={};do for bC=1,DL do local uC=(BL[bC]);do if uC[1]==0X0 then do dL[bC-1]={YL,uC[0x02]};end;else(dL)[bC-1]=RL[uC[0X2]];end;end;end;end;(x)(mL,dL);end;end;(YL)[PL[0X5]]=cn(dL,KL,AL);else CL=PL[0X0004];end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\115t\114\105n\103"then if V(TL,"\097t\116\em\pt\ \116\o\ \y\i\101\108d\ \097c\114\111s\s me\116\097m\e\116\104o\d\/\C\%-\099al\l\ \098\111\117ndar\121")then do return q();end;end;if V(TL,"\^.\045:\037\d+\:\032")then G("\L\117\114a\p\h\ \S\c\114\i\p\116:"..(_L[CL-0x1]or'\(\in\116e\114n\097l\041').."\058 "..l(TL),0x0);else G(TL,0);end;else(G)(TL,0x000);end;else if TL then do if rL~=0X00001 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;else if not(ML)then else return F(YL,ML,rL);end;end;end;end;end;else aL=function(...)local CL,YL=1,({});local OL=Q();local KL=((OL==_ and sL or OL));local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);local NL=(0);do LL=LL-1;end;for PL=0x00,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0X1];end;end;if not SL then hL=nil;else if iL then(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0X000,F(hL,XL+1,LL+1)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while'V\Ph\E'do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;if wL<11 then if not(wL<5)then do if wL<0X8 then do if not(wL<6)then if wL==0X7 then repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0)then else local WC=EC[0x0002];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[0x1]=BL[WC];(EC)[2]=0X1;end;end;end;end;until true;return false,PL[5],NL;else local AL=(RL[0]);do YL[0X00004]=AL[1][AL[0X2]];end;local dL=(0X4);PL=FL[CL];CL=CL+1;local BL=(YL[4]);YL[dL+0X01]=BL;do(YL)[dL]=BL[PL[3]];end;do CL=CL+1;end;AL=RL[0X1];do YL[6]=AL[0X01][AL[2]];end;do PL=FL[CL];end;CL=CL+1;local DL=(0X0003);do(YL)[7]=PL[0X0001];end;CL=CL+0X1;YL[8]=YL[1];CL=CL+0X1;do dL=6;end;local bC=(0X0);if DL==0X0 then else NL=dL+DL-1;end;local uC,EC=nil,(nil);if DL==0x1 then do uC,EC=on(YL[dL]());end;else uC,EC=on(YL[dL](F(YL,dL+0X1,NL)));end;if bC~=0x0001 then do if bC~=0X000 then uC=dL+bC-2;NL=uC+1;else uC=uC+dL-1;do NL=uC;end;end;end;local WC=(0);for eC=dL,uC do WC=WC+1;(YL)[eC]=EC[WC];end;else do NL=dL-1;end;end;CL=CL+1;CL=CL+1;do CL=CL+0X1;end;do dL=0X04;end;(YL[dL])(F(YL,dL+1,NL));NL=dL-1;CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];CL=CL+1;(YL)[4]=KL[PL[0X1]];do CL=CL+1;end;do CL=CL+0x1;end;CL=CL+1;NL=4;YL[NL]();NL=NL-1;PL=FL[CL];do CL=CL+0X001;end;(YL)[4]=KL[PL[1]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X1;YL[0X004]=YL[4][PL[3]];PL=FL[CL];CL=CL+1;dL=4;BL=YL[4];(YL)[dL+1]=BL;YL[dL]=BL[PL[0X3]];CL=CL+0X1;(YL)[6]=YL[0x1];CL=CL+0X1;dL=0X4;(YL[dL])(YL[dL+0X1],YL[dL+0x02]);do NL=dL-0x1;end;CL=CL+0x1;do CL=CL+0X1;end;do PL=FL[CL];end;CL=CL+1;CL=PL[0X04];end;else local AL=PL[4];local BL=(AL[2]);local DL=(#BL);local dL=(nil);if not(DL>0X0)then else do dL={};end;for bC=0X01,DL do local uC=BL[bC];do if uC[1]==0X0 then dL[bC-0x1]={YL,uC[2]};else(dL)[bC-0X1]=RL[uC[2]];end;end;end;(x)(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;else if not(wL<9)then if wL==10 then if not YL[PL[5]]then CL=PL[4];end;else local AL=(RL[0X00000]);YL[4]=AL[0X0001][AL[2]];CL=CL+0x1;CL=CL+0X001;local dL=(4);PL=FL[CL];CL=CL+0x1;local BL=(YL[4]);(YL)[dL+1]=BL;local bC=(3);(YL)[dL]=BL[PL[0X3]];local DL=(0X6);do PL=FL[CL];end;do CL=CL+0X001;end;do(YL)[0X006]=PL[0X1];end;CL=CL+1;YL[0X7]=YL[3];CL=CL+1;(YL)[6]=YL[DL]..YL[DL+1];CL=CL+1;dL=4;do NL=dL+bC-1;end;repeat local uC,EC,WC=mL,YL,({});for eC,oC in U,uC do for jC,zC in U,oC do do if zC[1]==EC and zC[0X002]>=0X0 then local lC=zC[0x2];if not(not WC[lC])then else(WC)[lC]={EC[lC]};end;do(zC)[1]=WC[lC];end;zC[0x2]=0x1;end;end;end;end;until true;return true,dL,bC;end;else(YL)[PL[5]]=YL[PL[0X4]]>=YL[PL[0X7]];end;end;end;else if wL<0X002 then if wL~=1 then for AL=PL[0X5],PL[4]do do YL[AL]=nil;end;end;else do(YL)[PL[0x005]]={F({},1,PL[4])};end;end;else do if not(wL<0X03)then if wL==0X00004 then(YL)[PL[0X5]]=YL[PL[0X4]]<=YL[PL[0x007]];else local AL=PL[5];local BL,dL=YL[AL],((PL[0x00007]-1)*50);for DL=1,PL[0X004]do(BL)[dL+DL]=YL[AL+DL];end;end;else do if YL[PL[4]]==PL[0X3]then do CL=PL[0X5];end;end;end;end;end;end;end;else if not(wL>=0X000010)then do if wL>=13 then if not(wL<0XE)then if wL==15 then(YL)[PL[0x5]]=h(YL[PL[4]],YL[PL[7]]);else YL[2]=KL[PL[0x1]];CL=CL+1;(YL)[0X00003]=YL[0x1];local AL=(0X0002);CL=CL+0X1;local dL=(0x00002);if dL~=0X0 then NL=AL+dL-0X1;end;local BL,DL,bC=0X3,nil,nil;if dL~=0X1 then do DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));end;else DL,bC=on(YL[AL]());end;do if BL~=1 then if BL~=0 then do DL=AL+BL-0x002;end;do NL=DL+1;end;else DL=DL+AL-1;NL=DL;end;local uC=(0);for EC=AL,DL do uC=uC+1;(YL)[EC]=bC[uC];end;else NL=AL-1;end;end;CL=CL+0X1;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+1;if YL[0X2]then CL=PL[4];end;end;else repeat local AL,dL=mL,YL;local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0)then else local WC=EC[0X00002];if not BL[WC]then do(BL)[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];(EC)[0X0002]=0X1;end;end;end;end;until true;do return;end;end;else if wL==0Xc then do YL[PL[5]]=#YL[PL[0X00004]];end;else do YL[PL[5]]=M(YL[PL[0X0004]],YL[PL[0x07]]);end;end;end;end;else if wL>=0X000013 then do if not(wL<20)then if wL~=0X15 then else(YL)[PL[0x5]]=PL[0X01];end;else local AL,dL=0X1,YL[0];(YL)[AL+0X1]=dL;YL[AL]=dL[PL[0X3]];PL=FL[CL];CL=CL+1;YL[3]=PL[0x1];PL=FL[CL];CL=CL+1;(YL)[4]=PL[1];CL=CL+0X01;AL=0X01;NL=AL+0X00004-0X1;YL[AL]=YL[AL](F(YL,AL+1,NL));NL=AL;PL=FL[CL];CL=CL+1;do if YL[1]~=PL[3]then do CL=PL[5];end;end;end;end;end;else if wL>=17 then if wL~=0x0012 then CL=PL[0X0004];else(YL)[PL[0X5]]=KL[PL[1]];end;else local AL,dL=RL[0x0],0X00002;YL[0X2]=AL[0X1][AL[2]];do PL=FL[CL];end;do CL=CL+0X1;end;local BL=YL[0X2];(YL)[dL+1]=BL;YL[dL]=BL[PL[3]];PL=FL[CL];CL=CL+0X1;YL[0X4]=PL[0X1];PL=FL[CL];CL=CL+0X1;local DL=(4);YL[0X005]=PL[1];CL=CL+1;dL=0X2;NL=dL+DL-0X001;repeat local bC,uC=mL,(YL);local EC={};do for WC,eC in U,bC do for oC,jC in U,eC do if jC[0x00001]==uC and jC[2]>=0X0 then local zC=jC[0x02];if not EC[zC]then EC[zC]={uC[zC]};end;(jC)[0X00001]=EC[zC];(jC)[2]=1;end;end;end;end;until true;return true,dL,DL;end;end;end;end;end;end);if not(nL)then if z(TL)~='\s\116\114in\g'then(G)(TL,0);else do if V(TL,'\097\116t\101\mpt to y\i\101l\100\032a\cr\o\ss\032\m\101\116am\eth\o\100\/\067%\-\099a\l\108\ bou\110\d\097ry')then return q();end;end;if V(TL,'^\.\045\058\%\100\+\058\ ')then G('L\117ra\112\104\032S\c\114\105pt:'..(_L[CL-1]or'\040\i\110t\e\114\110\097\l\)').."\:\032"..l(TL),0);else G(TL,0x0);end;end;else if TL then do if rL~=0X1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;end;else if ML then return F(YL,ML,rL);end;end;end;end;end;end;end;else do if HL>=0X6 then if HL~=7 then aL=function(...)local YL,NL={},(0X0);local CL=0X01;local OL=(Q());local kL=({[2]=qL,[0X1]=YL});local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0x0001;for PL=0,LL do if not(XL>PL)then break;else do(YL)[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;else if iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0x1,LL+1)};end;end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()repeat local PL=FL[CL];local wL=PL[2];do CL=CL+1;end;do if not(wL>=0x000D)then if wL>=0X6 then if not(wL<9)then if wL<0Xb then if wL==0Xa then CL=PL[0X4];else repeat local AL,dL=mL,(YL);local BL={};for DL,bC in U,AL do do for uC,EC in U,bC do if EC[1]==dL and EC[0X02]>=0X0 then local WC=(EC[2]);if not(not BL[WC])then else BL[WC]={dL[WC]};end;(EC)[1]=BL[WC];EC[2]=0x1;end;end;end;end;until true;return;end;else if wL==0xC then(YL)[PL[0x00005]]=r(YL[PL[0X004]],YL[PL[0X07]]);else YL[0x0]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X00001;PL=FL[CL];CL=CL+0X1;do YL[0]=YL[0][PL[3]];end;do CL=CL+0X001;end;NL=0;YL[NL]=YL[NL]();CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X001;if not(not YL[0X000])then else CL=PL[4];end;end;end;else if wL<0X7 then do YL[PL[0x00005]]=YL[PL[0X04]];end;else if wL==8 then do YL[PL[5]][YL[PL[0X004]]]=YL[PL[7]];end;else YL[PL[0x5]]=PL[0X00001];end;end;end;else do if wL>=0x3 then if not(wL>=0X04)then YL[PL[5]]=#YL[PL[4]];else do if wL~=5 then do(YL)[0X5]=KL[PL[0X0001]];end;CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;local AL=PL[0X0004];local BL,dL=AL[0x0002],(nil);local bC=(5);local DL=(#BL);if not(DL>0)then else do dL={};end;for uC=0x1,DL do local EC=(BL[uC]);do if EC[0x1]~=0x0 then do(dL)[uC-1]=RL[EC[2]];end;else dL[uC-0X1]={YL,EC[0X2]};end;end;end;(x)(mL,dL);end;do(YL)[0X6]=cn(dL,KL,AL);end;CL=CL+1;(YL[bC])(YL[bC+0X1]);do NL=bC-0x1;end;CL=CL+0X1;repeat local uC,EC=mL,(YL);local WC=({});for eC,oC in U,uC do for jC,zC in U,oC do if zC[1]==EC and zC[2]>=0X0001 then local lC=zC[0X02];if not WC[lC]then do(WC)[lC]={EC[lC]};end;end;zC[0X1]=WC[lC];zC[2]=1;end;end;end;until true;do PL=FL[CL];end;CL=CL+0X1;CL=PL[4];else(YL)[0x0000]=KL[PL[1]];CL=CL+0X1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;YL[0]=YL[0][PL[0x3]];PL=FL[CL];CL=CL+1;if not(not YL[0X0])then else CL=PL[4];end;end;end;end;else if wL>=1 then if wL~=0X002 then do repeat local dL,BL=mL,(YL);local DL=({});for bC,uC in U,dL do do for EC,WC in U,uC do if WC[1]==BL and WC[2]>=0x0 then local eC=WC[0X00002];if not(not DL[eC])then else do(DL)[eC]={BL[eC]};end;end;WC[0X00001]=DL[eC];do(WC)[2]=1;end;end;end;end;end;until true;end;local AL=PL[5];return false,AL,AL+PL[0X4]-2;else YL[PL[5]]=M(YL[PL[0x04]],YL[PL[0X7]]);end;else end;end;end;end;else if wL<0X013 then if not(wL<16)then if wL<0X11 then do(YL)[PL[5]]=YL[PL[4]]<YL[PL[0X7]];end;else if wL==0X12 then repeat local AL,dL,BL=mL,YL,PL[0X005];local DL=({});do for bC,uC in U,AL do do for EC,WC in U,uC do if WC[0X01]==dL and WC[0X2]>=BL then local eC=WC[0X2];if not(not DL[eC])then else(DL)[eC]={dL[eC]};end;WC[0X01]=DL[eC];WC[2]=1;end;end;end;end;end;until true;else local AL=(PL[0X004]);local BL=(AL[2]);local DL,dL=#BL,(nil);if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[1]~=0 then(dL)[bC-0X1]=RL[uC[0x02]];else dL[bC-1]={YL,uC[2]};end;end;(x)(mL,dL);end;(YL)[PL[0X0005]]=cn(dL,KL,AL);end;end;else if not(wL>=0X0e)then YL[PL[0x5]]=KL[PL[1]];else if wL~=15 then local AL=PL[5];local dL,BL=YL[AL]();if not(dL)then else CL=PL[4];(YL)[AL+3]=BL;end;else do(YL)[PL[5]]={F({},0X001,PL[0X0004])};end;end;end;end;else do if not(wL<0X16)then if not(wL>=0x18)then do if wL~=23 then do YL[PL[5]]=YL[PL[4]]~=YL[PL[0X7]];end;else if not(not YL[PL[5]])then else CL=PL[0X0004];end;end;end;else if wL~=0X0019 then local AL=(RL[PL[0X0004]]);YL[PL[5]]=AL[0X1][AL[2]];else do for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;end;end;end;else if wL<20 then do(YL)[0]=KL[PL[0X1]];end;local dL=(YL[0X0]);PL=FL[CL];local BL=(RL[1]);CL=CL+0X001;local AL=(0X0);(YL)[AL+1]=dL;local WC=(1);YL[AL]=dL[PL[3]];CL=CL+0X1;local DL=3;(YL)[2]=BL[0X1][BL[0x00002]];CL=CL+0X0001;CL=CL+0x0001;do PL=FL[CL];end;CL=CL+0X1;YL[3]=PL[0x1];CL=CL+1;BL=RL[0x002];YL[4]=BL[1][BL[2]];PL=FL[CL];CL=CL+0X00001;(YL)[4]=YL[4][PL[0X3]];CL=CL+1;CL=CL+1;do CL=CL+0x0001;end;AL=0X2;local bC=0;if DL~=0X0 then NL=AL+DL-0x1;end;local uC,EC=nil,nil;if DL==1 then uC,EC=on(YL[AL]());else do uC,EC=on(YL[AL](F(YL,AL+1,NL)));end;end;do if bC==0X001 then NL=AL-1;else if bC~=0 then uC=AL+bC-2;NL=uC+1;else uC=uC+AL-1;do NL=uC;end;end;local oC=0X0;for jC=AL,uC do oC=oC+0X1;do YL[jC]=EC[oC];end;end;end;end;CL=CL+0X1;CL=CL+0X1;CL=CL+1;AL=0X0;YL[AL]=YL[AL](F(YL,AL+1,NL));NL=AL;CL=CL+0X0001;CL=CL+1;PL=FL[CL];CL=CL+1;do(YL)[1]=PL[0x1];end;CL=CL+0X01;YL[0X2]=#YL[0];PL=FL[CL];CL=CL+1;YL[0x00003]=PL[4];PL=FL[CL];CL=CL+0X0001;do AL=YL[WC];end;uC=YL[WC+0X1];local eC=YL[WC+2];YL[WC]=g(function()for oC=AL,uC,eC do q(true,oC);end;end);CL=PL[4];else do if wL~=21 then YL[0]=KL[PL[0X1]];PL=FL[CL];CL=CL+0X0001;YL[0x1]=KL[PL[0X00001]];do CL=CL+1;end;local AL=(0x0);CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;(YL)[0x001]=YL[1][PL[3]];CL=CL+1;CL=CL+1;CL=CL+1;(YL)[AL]=YL[AL](YL[AL+0X1]);NL=AL;do CL=CL+0X00001;end;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;if not(not YL[0])then else CL=PL[0x4];end;else(YL)[0]=KL[PL[0X01]];CL=CL+0x1;do CL=CL+1;end;PL=FL[CL];do CL=CL+0X1;end;YL[1]=PL[0x1];CL=CL+0X01;local AL=(0);YL[AL]=YL[AL](YL[AL+1]);do NL=AL;end;PL=FL[CL];CL=CL+0X01;if not(not YL[0X0])then else CL=PL[0X4];end;end;end;end;end;end;end;end;end;until false;end);if not(nL)then if z(TL)~="\115t\114\i\110\g"then G(TL,0);else if not(V(TL,"a\116\116\101\109\pt\ t\o \121\i\e\108\100\ a\cros\s \m\et\097\m\101t\104\111\d\047C\%\045\099a\l\l b\o\117\110\100ar\y"))then else do return q();end;end;if V(TL,"^.\-:%\d\043:\ ")then G('\076u\114ap\104\032\083\c\114\i\pt:'..(_L[CL-0X1]or"\(\105nt\101rna\108)").."\:\ "..l(TL),0x0);else G(TL,0);end;end;else if TL then if rL==0x01 then return YL[ML]();else return YL[ML](F(YL,ML+0x1,NL));end;else if not(ML)then else return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL=1;local YL=({});local OL=(Q());local kL,KL={[2]=qL,[0X1]=YL},((OL==_ and sL or OL));local LL,hL=on(...);do LL=LL-0X1;end;do for PL=0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;end;end;local NL=(0);if not SL then do hL=nil;end;else if not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0X0000,F(hL,XL+0X1,LL+1)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()repeat local PL=(FL[CL]);local wL=PL[2];CL=CL+1;if not(wL>=7)then do if not(wL>=3)then if not(wL>=1)then CL=PL[4];else if wL==2 then if YL[PL[0x00004]]<YL[PL[7]]then CL=PL[5];end;else(YL)[PL[0X0005]]=#YL[PL[4]];end;end;else if not(wL>=0X0005)then if wL~=0X004 then do(YL)[PL[0X5]]=PL[1];end;else(YL)[PL[5]]=YL[PL[4]]>YL[PL[0X007]];end;else if wL~=0X6 then kL[PL[0x4]]=YL[PL[5]];else YL[0x001]=KL[PL[1]];CL=CL+0x1;CL=CL+1;CL=CL+1;local AL=(RL[0X0]);local dL=0x0002;(YL)[2]=AL[1][AL[0X2]];do CL=CL+0X01;end;CL=CL+1;CL=CL+0X0001;(YL)[3]=YL[0X0000];do CL=CL+1;end;(YL)[dL]=YL[dL](YL[dL+0X01]);NL=dL;PL=FL[CL];CL=CL+1;do YL[1][PL[0X1]]=YL[2];end;PL=FL[CL];CL=CL+1;YL[0X1]=KL[PL[0X1]];do CL=CL+0X1;end;do NL=0x1;end;(YL[NL])();NL=NL-0X1;CL=CL+0x0001;CL=CL+1;CL=CL+1;repeat local BL,DL,bC=mL,YL,{};for uC,EC in U,BL do for WC,eC in U,EC do do if eC[1]==DL and eC[0x2]>=0 then local oC=(eC[0X2]);do if not(not bC[oC])then else bC[oC]={DL[oC]};end;end;eC[0x0001]=bC[oC];eC[2]=1;end;end;end;end;until-0X2C1145Dd;return;end;end;end;end;else if not(wL<0x00B)then if not(wL>=0x0D)then if wL~=0x00C then do YL[PL[5]]=YL[PL[4]]+YL[PL[0X7]];end;else do YL[PL[5]]={F({},1,PL[0x04])};end;end;else if wL~=0x0000E then for AL=PL[5],PL[4]do do YL[AL]=nil;end;end;else do YL[PL[0X5]]=K(YL[PL[0X4]],YL[PL[0X07]]);end;end;end;else if wL>=9 then do if wL==0XA then YL[PL[5]]=T(YL[PL[0X00004]]);else end;end;elseif wL==8 then YL[PL[5]]=KL[PL[1]];else local AL=(PL[0X4]);local BL,dL=AL[0X2],nil;local DL=(#BL);if not(DL>0)then else dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0X1]~=0X000 then(dL)[bC-0X1]=RL[uC[2]];else(dL)[bC-1]={YL,uC[0X2]};end;end;end;x(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);end;end;end;until false;end);if not(nL)then if z(TL)=='\115\116r\i\110\103'then do if not(V(TL,'at\116\em\p\116\ \116o\ \y\105\e\l\d\ \097\099r\os\s\ me\116\097\me\116\h\111\100\047\C%\-\c\097l\l\032boun\d\097\114\y'))then else return q();end;end;if not(V(TL,"\^.-:\037d\043:\ "))then(G)(TL,0);else G('L\117r\097\112\h\ \S\099\114i\112\116\:'..(_L[CL-1]or"\(\inte\114\110a\108\)").."\:\ "..l(TL),0);end;else(G)(TL,0X0);end;else do if TL then if rL~=1 then return YL[ML](F(YL,ML+0X1,NL));else return YL[ML]();end;else if ML then return F(YL,ML,rL);end;end;end;end;end;end;else do if HL~=5 then aL=function(...)local CL=(1);local YL=({});local kL,NL={[0X1]=YL,[2]=qL},0x00;local OL=(Q());local LL,hL=on(...);LL=LL-0x1;local KL=((OL==_ and sL or OL));for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;if not SL then hL=nil;else if not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0X0,F(hL,XL+1,LL+0x01)};end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while 0.9866056549875264 do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;if not(wL>=0X11)then if not(wL<0X8)then if wL>=0X0C then if wL<14 then if wL==13 then local AL=(RL[2]);YL[0X5]=AL[0X1][AL[0x02]];local dL=0x5;CL=CL+1;(YL)[0X6]=YL[0X0004];PL=FL[CL];CL=CL+0X1;(YL)[7]=PL[1];do CL=CL+1;end;YL[dL]=YL[dL](YL[dL+0X1],YL[dL+2]);do NL=dL;end;PL=FL[CL];CL=CL+0X01;if not YL[0X0005]then do CL=PL[4];end;end;else if not(not YL[PL[5]])then else CL=PL[0x0004];end;end;else do if wL<0X0F then KL[PL[0X1]]=YL[PL[0X5]];else if wL~=16 then local AL=YL[PL[0X4]]/YL[PL[0X7]];YL[PL[5]]=AL-AL%0x001;else end;end;end;end;else if wL>=10 then if wL~=11 then CL=PL[4];else(YL)[PL[5]]=KL[PL[0X1]];end;else if wL~=0x00009 then local AL=PL[5];local dL,BL,DL=YL[AL]();if dL then(YL)[AL+1]=BL;(YL)[AL+0X2]=DL;CL=PL[0X04];end;else local AL,dL=RL[0X2],(0X005);YL[0X05]=AL[0X1][AL[0x2]];CL=CL+0X01;(YL)[0x06]=YL[4];PL=FL[CL];CL=CL+1;(YL)[0X00007]=PL[1];do CL=CL+0x01;end;YL[dL]=YL[dL](YL[dL+1],YL[dL+2]);NL=dL;CL=CL+1;CL=CL+0x00001;PL=FL[CL];CL=CL+1;do if YL[5]then do CL=PL[0X00004];end;end;end;end;end;end;else if not(wL>=0X4)then do if not(wL>=0x002)then if wL~=0X1 then local AL=(RL[0x0]);do(YL)[4]=AL[0x0001][AL[2]];end;CL=CL+0X1;AL=RL[3];(YL)[0x00005]=AL[0x1][AL[0X2]];PL=FL[CL];CL=CL+0X001;do(YL)[6]=PL[1];end;local dL=0x4;CL=CL+1;YL[dL]=YL[dL](YL[dL+0X1],YL[dL+2]);NL=dL;PL=FL[CL];CL=CL+0X0001;if not(YL[4])then else CL=PL[4];end;else local AL=PL[4];local BL,dL=AL[0X0002],nil;local DL=#BL;if DL>0X0 then dL={};for bC=0X1,DL do local uC=(BL[bC]);if uC[0x1]==0x0 then(dL)[bC-0X01]={YL,uC[2]};else dL[bC-1]=RL[uC[2]];end;end;(x)(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;end;else if wL==0X003 then YL[0X00003]=KL[PL[0x1]];local AL=4;PL=FL[CL];CL=CL+1;local dL=YL[0X2];(YL)[AL+0x01]=dL;do(YL)[AL]=dL[PL[3]];end;local BL=(2);CL=CL+1;AL=4;local DL=0;if BL~=0X000 then do NL=AL+BL-0x01;end;end;local bC,uC=nil,(nil);if BL==1 then do bC,uC=on(YL[AL]());end;else do bC,uC=on(YL[AL](F(YL,AL+1,NL)));end;end;if DL==1 then NL=AL-1;else do if DL~=0X0000 then do bC=AL+DL-2;end;NL=bC+1;else bC=bC+AL-1;NL=bC;end;end;local WC=(0X00000);for eC=AL,bC do WC=WC+0X001;do YL[eC]=uC[WC];end;end;end;CL=CL+0X1;CL=CL+1;CL=CL+1;AL=3;BL=0X00000;do DL=0X00004;end;if BL~=0 then NL=AL+BL-1;end;do bC,uC=nil;end;do if BL==0X1 then bC,uC=on(YL[AL]());else bC,uC=on(YL[AL](F(YL,AL+0X1,NL)));end;end;do if DL==0X001 then do NL=AL-1;end;else if DL~=0X00000 then do bC=AL+DL-0X00002;end;NL=bC+1;else bC=bC+AL-1;do NL=bC;end;end;local WC=(0);for eC=AL,bC do WC=WC+0x1;(YL)[eC]=uC[WC];end;end;end;PL=FL[CL];CL=CL+1;AL=0x3;local EC=(g(function(...)q();for WC,eC in...do q(true,WC,eC);end;end));EC(YL[AL],YL[AL+0X1],YL[AL+2]);NL=AL;do YL[AL]=EC;end;CL=PL[0X00004];else local AL=RL[0X0];(YL)[3]=AL[0X00001][AL[2]];CL=CL+1;CL=CL+0x1;do CL=CL+0X1;end;AL=RL[0x0001];local dL=(0X00003);YL[0X4]=AL[1][AL[0X0002]];CL=CL+0x0001;CL=CL+1;do PL=FL[CL];end;do CL=CL+1;end;(YL)[0X5]=PL[1];do CL=CL+1;end;(YL)[dL]=YL[dL](YL[dL+0x1],YL[dL+0X2]);NL=dL;do CL=CL+1;end;do CL=CL+0X0001;end;PL=FL[CL];CL=CL+0X1;if not YL[3]then CL=PL[4];end;end;end;end;else if not(wL<6)then if wL==7 then for AL=PL[0X0005],PL[0x4]do do YL[AL]=nil;end;end;else local AL=(6);local dL=(YL[0X5]);do YL[AL+1]=dL;end;(YL)[AL]=dL[PL[3]];CL=CL+1;AL=6;YL[AL](YL[AL+1]);NL=AL-1;CL=CL+0X0001;CL=CL+1;PL=FL[CL];CL=CL+0X1;CL=PL[4];end;else do if wL~=5 then local AL=RL[0X0002];YL[0X7]=AL[0X0001][AL[0X2]];do CL=CL+1;end;do CL=CL+1;end;CL=CL+0x001;YL[0X8]=YL[0X006];local dL=7;PL=FL[CL];CL=CL+0X001;YL[9]=PL[1];CL=CL+1;(YL)[dL]=YL[dL](YL[dL+0X01],YL[dL+0X2]);do NL=dL;end;PL=FL[CL];CL=CL+1;if not(not YL[7])then else CL=PL[4];end;else if YL[PL[4]]==YL[PL[0x007]]then else CL=PL[0x5];end;end;end;end;end;end;else if wL>=26 then do if wL<0X001E then do if wL>=28 then do if wL==29 then YL[PL[0X5]]=YL[PL[4]]>=YL[PL[7]];else YL[PL[5]]=YL[PL[4]][YL[PL[0X07]]];end;end;else if wL==0X00001B then YL[4]=KL[PL[1]];local BL=(0X2);PL=FL[CL];local AL=(0X00005);CL=CL+1;local dL=YL[0X0003];(YL)[AL+0X1]=dL;YL[AL]=dL[PL[3]];CL=CL+1;AL=5;local DL=(0X0);do if BL~=0 then do NL=AL+BL-1;end;end;end;local bC,uC=nil,nil;if BL~=0x1 then do bC,uC=on(YL[AL](F(YL,AL+0X1,NL)));end;else do bC,uC=on(YL[AL]());end;end;if DL==0X1 then NL=AL-0x001;else if DL~=0 then do bC=AL+DL-2;end;NL=bC+1;else do bC=bC+AL-0X1;end;NL=bC;end;local WC=0X0;for eC=AL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;do CL=CL+1;end;do AL=4;end;BL=0;DL=0X0004;do if BL~=0x0 then NL=AL+BL-0X1;end;end;do bC,uC=nil;end;if BL==0X00001 then bC,uC=on(YL[AL]());else bC,uC=on(YL[AL](F(YL,AL+1,NL)));end;if DL~=0x1 then do if DL~=0x0 then do bC=AL+DL-0x00002;end;NL=bC+0x1;else bC=bC+AL-0X1;do NL=bC;end;end;end;local WC=(0);do for eC=AL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;else NL=AL-1;end;CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;AL=0X04;local EC=(g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end));(EC)(YL[AL],YL[AL+0X01],YL[AL+2]);NL=AL;(YL)[AL]=EC;CL=PL[0X4];else(kL)[PL[4]]=YL[PL[0x00005]];end;end;end;else if wL>=32 then if not(wL<0X21)then if wL~=0X22 then local AL,dL=5,YL[4];do YL[AL+1]=dL;end;YL[AL]=dL[PL[0x3]];do CL=CL+1;end;AL=0x5;YL[AL](YL[AL+0X01]);NL=AL-1;CL=CL+0x01;CL=CL+0X1;PL=FL[CL];CL=CL+0X00001;CL=PL[0X4];else local AL,dL=7,YL[6];do YL[AL+1]=dL;end;(YL)[AL]=dL[PL[3]];CL=CL+0X1;do AL=7;end;(YL[AL])(YL[AL+1]);NL=AL-1;PL=FL[CL];CL=CL+1;do CL=PL[4];end;end;else local AL=RL[0];YL[0X4]=AL[0X0001][AL[0X2]];do CL=CL+1;end;local dL=0X04;do(YL)[0X5]=YL[1];end;PL=FL[CL];CL=CL+1;YL[6]=PL[0X1];do CL=CL+1;end;(YL)[dL]=YL[dL](YL[dL+0x1],YL[dL+2]);NL=dL;PL=FL[CL];CL=CL+0x1;CL=PL[4];end;else if wL~=31 then local AL,dL=0X0008,YL[0X7];YL[AL+0X001]=dL;YL[AL]=dL[PL[3]];CL=CL+1;AL=0X8;YL[AL](YL[AL+1]);NL=AL-1;PL=FL[CL];do CL=CL+1;end;do CL=PL[0X4];end;else do if not(YL[PL[4]]<=YL[PL[7]])then else CL=PL[5];end;end;end;end;end;end;else if not(wL<21)then if not(wL>=0X017)then if wL==22 then local AL=RL[0X0];(YL)[0x2]=AL[1][AL[0x2]];CL=CL+0X1;local dL=0X02;AL=RL[1];YL[3]=AL[1][AL[0X2]];PL=FL[CL];do CL=CL+1;end;(YL)[4]=PL[0X001];CL=CL+1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+2]);do NL=dL;end;PL=FL[CL];CL=CL+1;do if not YL[2]then CL=PL[4];end;end;else do repeat local AL,dL=mL,YL;local BL=({});do for DL,bC in U,AL do for uC,EC in U,bC do do if not(EC[0x1]==dL and EC[0x00002]>=0)then else local WC=(EC[0X2]);if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];EC[0X002]=0X1;end;end;end;end;end;until true;end;return;end;else if wL<24 then YL[PL[5]]=PL[1];else if wL==25 then local dL=0X08;local AL=(RL[0x2]);YL[8]=AL[0X0001][AL[0X2]];CL=CL+1;do CL=CL+1;end;do CL=CL+1;end;do(YL)[0X9]=YL[0X0007];end;PL=FL[CL];do CL=CL+0X1;end;(YL)[0X0a]=PL[0X1];CL=CL+1;YL[dL]=YL[dL](YL[dL+0X1],YL[dL+2]);NL=dL;PL=FL[CL];CL=CL+0X1;if not(not YL[8])then else CL=PL[4];end;else(YL)[PL[5]]={F({},1,PL[4])};end;end;end;else if not(wL<19)then if wL~=0X00014 then do YL[PL[5]]=T(YL[PL[0x0004]]);end;else do(YL)[5]=KL[PL[0X1]];end;CL=CL+1;CL=CL+1;local AL=0X06;PL=FL[CL];CL=CL+0X1;local BL=(0x02);local dL=YL[0X00004];do YL[AL+1]=dL;end;do YL[AL]=dL[PL[3]];end;CL=CL+1;do AL=0x0006;end;local DL=0X0;do if BL~=0X0 then NL=AL+BL-0x00001;end;end;local bC,uC=nil,(nil);do if BL==0X1 then do bC,uC=on(YL[AL]());end;else bC,uC=on(YL[AL](F(YL,AL+1,NL)));end;end;if DL~=1 then if DL~=0 then do bC=AL+DL-2;end;NL=bC+1;else bC=bC+AL-0x001;NL=bC;end;local WC=0;for eC=AL,bC do WC=WC+1;YL[eC]=uC[WC];end;else do NL=AL-1;end;end;CL=CL+1;do AL=5;end;BL=0X00000;DL=4;if BL~=0 then NL=AL+BL-1;end;bC,uC=nil;if BL~=0X0001 then do bC,uC=on(YL[AL](F(YL,AL+0X1,NL)));end;else bC,uC=on(YL[AL]());end;if DL==1 then NL=AL-1;else if DL==0X0 then bC=bC+AL-1;do NL=bC;end;else do bC=AL+DL-0X0002;end;NL=bC+1;end;local WC=(0X00000);for eC=AL,bC do WC=WC+0x1;(YL)[eC]=uC[WC];end;end;do PL=FL[CL];end;do CL=CL+1;end;AL=0x5;local EC=(g(function(...)q();for WC,eC in...do(q)(true,WC,eC);end;end));EC(YL[AL],YL[AL+0x00001],YL[AL+2]);do NL=AL;end;do(YL)[AL]=EC;end;do CL=PL[4];end;end;else do if wL==0x12 then local AL=RL[0X2];(YL)[6]=AL[1][AL[2]];CL=CL+0X1;do CL=CL+1;end;CL=CL+0X1;local dL=6;(YL)[7]=YL[5];PL=FL[CL];CL=CL+1;YL[0X8]=PL[0X00001];do CL=CL+1;end;YL[dL]=YL[dL](YL[dL+1],YL[dL+2]);NL=dL;do CL=CL+1;end;CL=CL+0X1;PL=FL[CL];CL=CL+1;if not YL[0X00006]then CL=PL[4];end;else local AL=RL[0];(YL)[0X0]=AL[1][AL[0x00002]];CL=CL+1;CL=CL+0X1;CL=CL+0X0001;AL=RL[0];(YL)[0x0001]=AL[0X1][AL[2]];do CL=CL+1;end;local dL=(1);AL=RL[0X1];(YL)[0X2]=AL[0X1][AL[0X2]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0X3]=PL[1];CL=CL+1;local DL=2;YL[dL]=YL[dL](YL[dL+1],YL[dL+0X02]);NL=dL;do PL=FL[CL];end;do CL=CL+0X001;end;YL[2]=PL[1];CL=CL+0x1;dL=0x0;do(YL)[dL]=YL[dL](YL[dL+1],YL[dL+0X00002]);end;NL=dL;CL=CL+1;do CL=CL+0x1;end;CL=CL+0x1;do AL=RL[0X01];end;YL[0X0001]=AL[0X1][AL[0X0002]];PL=FL[CL];CL=CL+0X1;(YL)[0X1]=YL[1][PL[3]];PL=FL[CL];CL=CL+0X001;(YL)[0X02]=KL[PL[1]];PL=FL[CL];local BL=YL[0];CL=CL+1;dL=0X00003;(YL)[dL+0x0001]=BL;do YL[dL]=BL[PL[0X3]];end;CL=CL+0X001;dL=3;local bC=(0x00);if DL~=0X0 then NL=dL+DL-0x1;end;local uC,EC=nil,(nil);if DL~=1 then do uC,EC=on(YL[dL](F(YL,dL+0x1,NL)));end;else uC,EC=on(YL[dL]());end;do if bC==0X01 then NL=dL-1;else if bC~=0 then uC=dL+bC-2;NL=uC+0X1;else do uC=uC+dL-1;end;NL=uC;end;local eC=(0X0);do for oC=dL,uC do eC=eC+1;do(YL)[oC]=EC[eC];end;end;end;end;end;CL=CL+1;CL=CL+0x1;CL=CL+0X1;dL=0X2;DL=0;bC=0X4;if DL~=0 then NL=dL+DL-0X0001;end;do uC,EC=nil;end;do if DL~=1 then uC,EC=on(YL[dL](F(YL,dL+1,NL)));else uC,EC=on(YL[dL]());end;end;if bC~=0X0001 then do if bC~=0X00 then uC=dL+bC-2;NL=uC+0x1;else uC=uC+dL-0X001;NL=uC;end;end;local eC=0x0;for oC=dL,uC do eC=eC+0X001;YL[oC]=EC[eC];end;else do NL=dL-1;end;end;CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];do CL=CL+1;end;do dL=2;end;local WC=g(function(...)(q)();do for eC,oC in...do q(true,eC,oC);end;end;end);WC(YL[dL],YL[dL+0X1],YL[dL+2]);NL=dL;YL[dL]=WC;CL=PL[4];end;end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)=="s\116ri\110g"then if not(V(TL,'a\116\116e\mp\116\ \116\111 \121\i\e\l\100 a\c\114\o\115\s\ \me\116a\109e\116\104o\100\/\067\037\045ca\l\108\ bo\117\110\100\097ry'))then else do return q();end;end;if not(V(TL,"\^\046\-\:\%\d+: "))then G(TL,0);else G('Lura\112\h\ \S\cr\105\p\116:'..(_L[CL-1]or'\(\105\110te\114\110\097\l\041')..'\: '..l(TL),0);end;else(G)(TL,0);end;else do if TL then if rL~=1 then do return YL[ML](F(YL,ML+1,NL));end;else return YL[ML]();end;else if not(ML)then else return F(YL,ML,rL);end;end;end;end;end;end;else aL=function(...)local YL=({});local CL=0X1;local kL=({[0X1]=YL,[2]=qL});local OL=(Q());local LL,hL=on(...);local KL=(OL==_ and sL or OL);local NL=(0X00);do LL=LL-0X01;end;for PL=0x0,LL do if not(XL>PL)then do break;end;else YL[PL]=hL[PL+0X0001];end;end;do if not SL then do hL=nil;end;else if not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X0001 or 0,F(hL,XL+1,LL+1)};end;end;end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while 561433903 do local PL=(FL[CL]);local wL=PL[2];do CL=CL+0X1;end;do if not(wL<0X8)then if wL<12 then if wL>=10 then if wL==11 then YL[PL[5]]=YL[PL[4]]==YL[PL[0X7]];else YL[0x1]=KL[PL[1]];CL=CL+0X1;local dL=(2);CL=CL+0X001;CL=CL+1;local AL=RL[0X0];YL[0x2]=AL[1][AL[0x02]];CL=CL+0X1;(YL)[3]=YL[0X00000];do CL=CL+1;end;(YL)[dL]=YL[dL](YL[dL+0x0001]);NL=dL;PL=FL[CL];do CL=CL+0X1;end;YL[0X0001][PL[1]]=YL[0X2];PL=FL[CL];do CL=CL+0x1;end;(YL)[1]=KL[PL[1]];CL=CL+0X1;CL=CL+1;CL=CL+0X0001;NL=0X1;(YL[NL])();NL=NL-0x001;do CL=CL+1;end;CL=CL+1;CL=CL+1;repeat local BL,DL=mL,(YL);local bC={};for uC,EC in U,BL do for WC,eC in U,EC do do if eC[0x001]==DL and eC[0X2]>=0 then local oC=(eC[0x2]);if not(not bC[oC])then else(bC)[oC]={DL[oC]};end;do(eC)[1]=bC[oC];end;do(eC)[2]=0X1;end;end;end;end;end;until true;do return;end;end;else do if wL==0x9 then(YL)[PL[0X5]]=K(YL[PL[4]],YL[PL[0X7]]);else for AL=PL[0X5],PL[0X004]do do YL[AL]=nil;end;end;end;end;end;else if not(wL<14)then if wL~=15 then do CL=PL[0X004];end;else if YL[PL[0X4]]==YL[PL[0X007]]then CL=PL[5];end;end;else do if wL==0xd then YL[PL[0X00005]]=YL[PL[4]]^YL[PL[0X007]];else(YL)[PL[5]]={F({},1,PL[0X00004])};end;end;end;end;elseif not(wL<0X4)then if wL>=0X00006 then if wL~=0X07 then(YL)[PL[0X5]]=KL[PL[1]];else if not(YL[PL[4]]<YL[PL[0X007]])then else do CL=PL[5];end;end;end;else if wL==0X5 then do(YL[PL[0x0005]])[YL[PL[0x0004]]]=YL[PL[7]];end;else local AL=(PL[4]);local dL=(nil);local BL=(AL[0X2]);local DL=#BL;if not(DL>0)then else dL={};for bC=0X001,DL do local uC=(BL[bC]);if uC[0x1]==0 then do dL[bC-1]={YL,uC[0X2]};end;else dL[bC-0X1]=RL[uC[0X2]];end;end;x(mL,dL);end;YL[PL[0x5]]=cn(dL,KL,AL);end;end;else if wL>=0X2 then do if wL~=3 then(YL)[PL[5]]=YL[PL[0X4]]>=YL[PL[7]];else do(YL)[PL[0x00005]]=PL[1];end;end;end;else do if wL~=1 then(YL)[PL[5]]=-YL[PL[0X0004]];else end;end;end;end;end;end;end);do if nL then if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;elseif ML then return F(YL,ML,rL);end;else if z(TL)~="s\116\114\i\110\g"then G(TL,0);else if V(TL,"\097\116t\em\112t\032\116\o\ \yi\e\l\d\ a\cro\ss\ \109\101tam\101\116\h\111d\047C%\045\ca\ll bou\110\100ar\y")then return q();end;if not(V(TL,'^\046\-\:\%\d\+\:\032'))then G(TL,0);else(G)('Lu\114a\p\h\ \S\c\114ip\116\:'..(_L[CL-0x1]or"\040i\110\116\erna\108\)").."\:\032"..l(TL),0);end;end;end;end;end;end;end;end;end;end;else do if HL<0xc then if HL>=10 then if HL==0Xb then aL=function(...)local YL={};local NL=0x0;local OL=(Q());local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;local KL=(OL==_ and sL or OL);local CL=0X1;for PL=0,LL do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;if not SL then do hL=nil;end;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+1,LL+1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];do CL=CL+0X001;end;if not(wL>=0X00009)then if wL>=4 then if wL>=0x006 then do if not(wL<7)then if wL==8 then do if not(YL[PL[4]]<YL[PL[0x0007]])then else CL=PL[0X5];end;end;else end;else YL[PL[5]]=KL[PL[0X01]];end;end;else if wL~=0x0005 then repeat local DL={};local dL,BL=mL,YL;for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[1]==BL and WC[2]>=0)then else local eC=WC[0X2];do if not(not DL[eC])then else DL[eC]={BL[eC]};end;end;WC[1]=DL[eC];WC[0X2]=1;end;end;end;until true;local AL=PL[0X5];return false,AL,AL;else do(YL)[PL[0X5]]={F({},0X00001,PL[4])};end;end;end;else if wL<0X02 then if wL==0X1 then YL[3]=KL[PL[1]];CL=CL+0X1;local AL=(RL[0]);CL=CL+1;PL=FL[CL];CL=CL+0x0001;(YL)[3]=YL[3][PL[3]];PL=FL[CL];CL=CL+1;YL[3]=YL[3][PL[0X03]];do CL=CL+0x1;end;YL[4]=AL[0X1][AL[0X2]];local dL=(0X4);CL=CL+1;CL=CL+0X01;CL=CL+1;do YL[5]=YL[1];end;CL=CL+1;(YL)[dL]=YL[dL](YL[dL+1]);do NL=dL;end;do CL=CL+1;end;CL=CL+1;CL=CL+0x0001;YL[0X3]=YL[0X3]>YL[4];PL=FL[CL];do CL=CL+0X1;end;do CL=PL[4];end;else YL[PL[5]]=PL[1];end;else do if wL==0x0003 then repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0 then local WC=EC[0X2];do if not(not BL[WC])then else BL[WC]={dL[WC]};end;end;EC[0X01]=BL[WC];EC[0x2]=0X1;end;end;end;until true;return;else for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;end;end;end;else do if wL>=0xe then if wL>=16 then do if not(wL>=17)then kL[PL[4]]=YL[PL[0X00005]];else if wL~=0x12 then local AL=(PL[5]);for dL=AL,AL+(PL[0X0004]-0x1)do YL[dL]=hL[XL+(dL-AL)+0x1];end;else if YL[PL[5]]then CL=PL[0X4];end;end;end;end;else do if wL~=15 then local AL=RL[0x00];(YL)[1]=AL[0x0001][AL[2]];CL=CL+0X01;YL[2]=YL[0];local dL=1;do CL=CL+1;end;do(YL)[dL]=YL[dL](YL[dL+0x00001]);end;do NL=dL;end;PL=FL[CL];CL=CL+0X1;if not YL[1]then do CL=PL[0x4];end;end;else local AL=(PL[4]);local dL=nil;local BL=AL[0X2];local DL=#BL;if not(DL>0X0)then else dL={};for bC=0X1,DL do local uC=BL[bC];if uC[1]==0 then(dL)[bC-1]={YL,uC[0X2]};else dL[bC-1]=RL[uC[2]];end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;else if wL>=11 then if wL<0Xc then(YL)[3]=KL[PL[1]];local AL=(RL[0]);PL=FL[CL];CL=CL+0X1;(YL)[0x003]=YL[3][PL[3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];local dL=0X4;do CL=CL+0X1;end;YL[3]=YL[3][PL[0X03]];CL=CL+1;do YL[4]=AL[1][AL[0x2]];end;CL=CL+1;CL=CL+0X1;CL=CL+1;YL[5]=YL[2];do CL=CL+0X001;end;YL[dL]=YL[dL](YL[dL+1]);NL=dL;CL=CL+1;(YL)[0X3]=YL[0X00003]<=YL[4];PL=FL[CL];CL=CL+1;CL=PL[4];else if wL==13 then local AL=1;local dL=(YL[0]);do YL[AL+1]=dL;end;do(YL)[AL]=dL[PL[3]];end;PL=FL[CL];local DL=3;CL=CL+0X1;do(YL)[3]=PL[1];end;do CL=CL+1;end;AL=0x1;local BL=(3);do if BL==0 then else NL=AL+BL-0x01;end;end;local bC,uC=nil,nil;do if BL==0X1 then bC,uC=on(YL[AL]());else bC,uC=on(YL[AL](F(YL,AL+1,NL)));end;end;if DL~=0X1 then do if DL~=0X0000 then bC=AL+DL-0X2;NL=bC+1;else bC=bC+AL-0X1;do NL=bC;end;end;end;local WC=(0);for eC=AL,bC do do WC=WC+1;end;YL[eC]=uC[WC];end;else do NL=AL-1;end;end;do PL=FL[CL];end;CL=CL+0X1;local EC=(RL[0X00000]);(YL)[3]=KL[PL[1]];do CL=CL+1;end;do CL=CL+1;end;do PL=FL[CL];end;CL=CL+0x001;YL[0x3]=YL[0X003][PL[0X3]];do CL=CL+1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+1;YL[3]=YL[3][PL[3]];CL=CL+0X1;do CL=CL+1;end;CL=CL+1;YL[4]=EC[1][EC[2]];do CL=CL+0X1;end;(YL)[0X005]=YL[1];CL=CL+0X1;AL=0X4;YL[AL]=YL[AL](YL[AL+1]);NL=AL;CL=CL+1;(YL)[0X3]=YL[0X00003]>=YL[4];PL=FL[CL];CL=CL+0X00001;if not(not YL[0X3])then else CL=PL[4];end;else(YL)[0X01]=KL[PL[1]];local AL=(1);PL=FL[CL];do CL=CL+0X0001;end;(YL)[2]=PL[1];CL=CL+1;do YL[AL]=YL[AL](YL[AL+1]);end;do NL=AL;end;CL=CL+0x1;do CL=CL+0X1;end;local dL=(1);CL=CL+0X1;do YL[1]=YL[1]>=YL[0];end;CL=CL+0X1;do repeat local BL,DL=mL,(YL);local bC={};for uC,EC in U,BL do do for WC,eC in U,EC do if eC[1]==DL and eC[0x2]>=0 then local oC=(eC[2]);if not(not bC[oC])then else bC[oC]={DL[oC]};end;eC[1]=bC[oC];(eC)[0X2]=0x1;end;end;end;end;until true;end;return false,dL,dL;end;end;else if wL==0Xa then do if YL[PL[0x00004]]==YL[PL[0X0007]]then else CL=PL[5];end;end;else CL=PL[0X4];end;end;end;end;end;end;end);if not(nL)then do if z(TL)~='\115t\114\105\110\g'then G(TL,0X0);else do if not(V(TL,'\097ttem\pt\ t\111\032\y\i\e\l\d\032a\cr\111s\115\ \109\101\116a\m\e\116\ho\d\/\C\%\-c\097\l\108\ b\111\117\110d\097r\y'))then else return q();end;end;if V(TL,'\^\046\-\:%\d\+\: ')then G("\Lura\p\104\ S\099\114\i\p\116\:"..(_L[CL-0X001]or'(in\116\e\114\110a\l)')..':\032'..l(TL),0x0);else(G)(TL,0X0);end;end;end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+0x001,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;else do aL=function(...)local CL,YL=1,{};local OL=Q();local KL=(OL==_ and sL or OL);local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});do LL=LL-0X0001;end;for PL=0,LL do if XL>PL then do(YL)[PL]=hL[PL+1];end;else break;end;end;local NL=(0);if not SL then hL=nil;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0X0,F(hL,XL+1,LL+0x0001)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;if not(wL>=0Xa)then if not(wL<0x5)then if not(wL>=0X7)then do if wL~=0X6 then do YL[0]=KL[PL[0X001]];end;CL=CL+0x1;do CL=CL+0x1;end;CL=CL+0X1;do NL=0;end;(YL)[NL]=YL[NL]();CL=CL+0X001;CL=CL+1;PL=FL[CL];CL=CL+0x1;do if YL[0]then CL=PL[0x4];end;end;else YL[0]=KL[PL[1]];CL=CL+1;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+0X00001;end;do(YL)[0]=YL[0][PL[0X3]];end;do PL=FL[CL];end;CL=CL+1;if not YL[0]then do CL=PL[4];end;end;end;end;else do if not(wL<8)then do if wL~=9 then(YL)[0]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X1;CL=CL+0x1;NL=0;do(YL)[NL]=YL[NL]();end;PL=FL[CL];CL=CL+0X001;do if not YL[0]then CL=PL[0X4];end;end;else local dL=0X0;local AL=(RL[1]);YL[0x0]=AL[1][AL[2]];PL=FL[CL];CL=CL+1;YL[1]=PL[1];do CL=CL+0X1;end;YL[dL](YL[dL+1]);NL=dL-1;PL=FL[CL];do CL=CL+1;end;CL=PL[0X004];end;end;else local AL=PL[5];for dL=AL,AL+(PL[4]-1)do YL[dL]=hL[XL+(dL-AL)+0X0001];end;end;end;end;else if not(wL>=0X2)then do if wL~=1 then(YL)[0X0]=KL[PL[0X0001]];CL=CL+0X1;do NL=0;end;YL[NL]=YL[NL]();PL=FL[CL];do CL=CL+1;end;if not(YL[0])then else CL=PL[4];end;else local AL=RL[0x000];YL[0X0000]=AL[0x1][AL[2]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X00001;if not(not YL[0])then else CL=PL[4];end;end;end;else if wL<0X3 then YL[PL[0X5]]=YL[PL[0x4]]+YL[PL[7]];else if wL~=0X004 then local AL=PL[0X00005];local dL=g(function(...)(q)();do for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end;end);(dL)(YL[AL],YL[AL+0X001],YL[AL+2]);NL=AL;do YL[AL]=dL;end;CL=PL[4];else do for AL=PL[5],PL[0x4]do(YL)[AL]=nil;end;end;end;end;end;end;else if wL<0Xf then if not(wL<0XC)then do if wL<13 then else if wL~=14 then YL[0x0]=KL[PL[1]];do PL=FL[CL];end;do CL=CL+1;end;do YL[0X0]=YL[0][PL[0X3]];end;do PL=FL[CL];end;CL=CL+0X001;(YL)[1]=PL[1];CL=CL+0x1;local AL=0;do(YL)[AL]=YL[AL](YL[AL+0x001]);end;NL=AL;CL=CL+0X0001;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;if not YL[0]then CL=PL[0X4];end;else(YL)[PL[0X05]]=YL[PL[4]]~=YL[PL[7]];end;end;end;else do if wL==11 then(YL)[PL[5]]=KL[PL[1]];else do repeat local AL,dL=mL,YL;local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[0x2]>=0X0)then else local WC=(EC[2]);do if not BL[WC]then(BL)[WC]={dL[WC]};end;end;(EC)[0X1]=BL[WC];EC[2]=1;end;end;end;end;until true;end;return;end;end;end;else if not(wL>=18)then if wL>=16 then if wL~=0X11 then YL[PL[0X0005]]={F({},0X01,PL[4])};else local AL=(PL[4]);local dL=nil;local BL=AL[0X002];local DL=(#BL);if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[1]==0 then dL[bC-0X0001]={YL,uC[0x00002]};else dL[bC-1]=RL[uC[2]];end;end;(x)(mL,dL);end;do YL[PL[0x05]]=cn(dL,KL,AL);end;end;else local AL=(PL[0x005]);local dL=((PL[0X0007]-0X1)*50);local BL=YL[AL];for DL=0X0001,PL[0x00004]do do(BL)[dL+DL]=YL[AL+DL];end;end;end;else if wL<19 then if YL[PL[0x00005]]then CL=PL[0X4];end;else if wL~=0X014 then do CL=PL[4];end;else YL[PL[0x0005]]=PL[0X1];end;end;end;end;end;end;end);do if nL then do if TL then if rL==1 then do return YL[ML]();end;else do return YL[ML](F(YL,ML+0X1,NL));end;end;elseif ML then do return F(YL,ML,rL);end;end;end;else if z(TL)=="\s\116\114\i\110\g"then if V(TL,'\097t\116\101\m\p\116\ t\111 \121\ie\108\d\ a\c\114\o\s\s m\e\116amet\h\111d\047\C\%\045\099\097\l\l\ \098\ounda\114\y')then do return q();end;end;if V(TL,'\^.\-\:%d\+:\ ')then(G)('\Lur\097p\h\ \S\099r\i\p\116:'..(_L[CL-0X1]or"(int\ern\097\l\)")..'\:\ '..l(TL),0);else G(TL,0);end;else(G)(TL,0);end;end;end;end;end;end;else if HL==0X00009 then aL=function(...)local CL,YL=1,{};local kL=({[2]=qL,[0X1]=YL});local OL=(Q());local LL,hL=on(...);LL=LL-1;for PL=0x0,LL do if not(XL>PL)then break;else do YL[PL]=hL[PL+1];end;end;end;local KL=((OL==_ and sL or OL));if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+0x1)};end;local NL=(0x0);if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+1;if not(wL<0X6)then if not(wL<9)then if not(wL<0X000a)then if wL==0Xb then YL[PL[0x5]]=KL[PL[0X00001]];else local AL=(PL[4]);local BL=(AL[2]);local dL=nil;local DL=(#BL);if not(DL>0x0)then else dL={};do for bC=0X1,DL do local uC=BL[bC];if uC[0X1]~=0X0 then dL[bC-1]=RL[uC[0X2]];else dL[bC-0X1]={YL,uC[0X2]};end;end;end;x(mL,dL);end;do(YL)[PL[5]]=cn(dL,KL,AL);end;end;else do(YL)[PL[5]]=YL[PL[0X4]]<=YL[PL[7]];end;end;else if not(wL>=0X7)then(YL)[PL[0x005]]={F({},0X1,PL[0X4])};else if wL~=0X8 then if not(not(YL[PL[0x4]]<YL[PL[7]]))then else CL=PL[0X5];end;else(YL)[1]=KL[PL[1]];CL=CL+0X001;do YL[2]=YL[0];end;PL=FL[CL];do CL=CL+1;end;do YL[0x1][PL[0X1]]=YL[0x002];end;PL=FL[CL];CL=CL+1;do YL[1]=KL[PL[0X1]];end;CL=CL+0X1;CL=CL+1;CL=CL+0x0001;NL=1;YL[NL]();NL=NL-1;do CL=CL+0X0001;end;do repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0x0002]>=0X00 then local WC=(EC[2]);if not BL[WC]then(BL)[WC]={dL[WC]};end;do(EC)[1]=BL[WC];end;do(EC)[0X2]=0X01;end;end;end;end;until true;end;return;end;end;end;else if wL>=3 then if wL>=4 then if wL==5 then local AL=(YL[PL[0x04]]/YL[PL[7]]);YL[PL[0X005]]=AL-AL%0x00001;else CL=PL[0X4];end;else local AL=(PL[5]);for dL=AL,AL+(PL[4]-0X1)do YL[dL]=hL[XL+(dL-AL)+0X1];end;end;else if wL<1 then(YL)[PL[0X0005]]=PL[0X1];else if wL==2 then local AL=(PL[5]);local dL=YL[PL[0x004]];(YL)[AL+0X0001]=dL;YL[AL]=dL[PL[3]];else end;end;end;end;end;end);if not(nL)then if z(TL)~="\s\116\114\i\110\g"then(G)(TL,0);else if not(V(TL,'a\116\116\e\m\p\116 \116\o yi\e\l\d\ acr\o\ss\032met\097m\et\104\111\100\047\C\%\045\c\097l\l\032b\oun\100a\114y'))then else return q();end;do if V(TL,'\^\046-\058\%d\+\:\032')then G('\L\117r\097\ph\032S\c\114ipt\:'..(_L[CL-1]or"(i\110\116\101\114\110\097\l\041")..':\ '..l(TL),0);else(G)(TL,0X0);end;end;end;else if TL then do if rL==1 then do return YL[ML]();end;else do return YL[ML](F(YL,ML+0X1,NL));end;end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else aL=function(...)local YL=({});local CL=(0X001);local OL=Q();local kL,NL={[0X1]=YL,[2]=qL},(0X00000);local LL,hL=on(...);LL=LL-1;local KL=(OL==_ and sL or OL);do for PL=0X0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;end;if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0x01)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=(PL[0X002]);CL=CL+1;do if not(wL>=0x0007)then do if not(wL<0X003)then do if wL<5 then if wL~=4 then if not(YL[PL[4]]<YL[PL[0X7]])then do CL=PL[0X5];end;end;else do for AL=PL[5],PL[0X04]do do(YL)[AL]=nil;end;end;end;end;else if wL~=0x006 then else do(YL)[PL[5]]={F({},0X001,PL[4])};end;end;end;end;else if wL>=1 then if wL==0x2 then(YL)[PL[0X5]]=YL[PL[4]][YL[PL[7]]];else local AL=PL[4];local dL=(nil);local BL=AL[2];local DL=(#BL);if not(DL>0x0)then else dL={};do for bC=0x00001,DL do local uC=(BL[bC]);if uC[1]~=0X0 then(dL)[bC-1]=RL[uC[0X2]];else do(dL)[bC-0X01]={YL,uC[0X2]};end;end;end;end;(x)(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;else if YL[PL[4]]<=YL[PL[0x7]]then CL=PL[0X0005];end;end;end;end;else if not(wL>=11)then do if not(wL>=0X9)then do if wL~=0X8 then(YL)[PL[5]]=PL[0X1];else local AL=(PL[4]);local BL=AL[0X002];local dL=nil;local DL=(#BL);do if not(DL>0X0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[0X00001]==0 then(dL)[bC-0X01]={YL,uC[0X00002]};else dL[bC-1]=RL[uC[0X2]];end;end;x(mL,dL);end;end;(YL)[PL[0x00005]]=u[PL[0X00007]](dL);end;end;else do if wL~=0XA then if YL[PL[4]]<YL[PL[0X007]]then CL=PL[0X0005];end;else YL[PL[5]]=KL[PL[0X1]];end;end;end;end;else if wL>=0XD then if wL~=14 then(YL)[PL[0X5]]=YL[PL[0X00004]];else(YL)[0x1]=KL[PL[0X1]];CL=CL+0X1;do CL=CL+0X001;end;CL=CL+1;YL[2]=YL[0];PL=FL[CL];CL=CL+1;(YL[0x1])[PL[1]]=YL[0X002];PL=FL[CL];CL=CL+1;YL[1]=KL[PL[1]];CL=CL+0X1;CL=CL+0x001;CL=CL+1;NL=0X1;YL[NL]();NL=NL-1;CL=CL+0X001;do CL=CL+1;end;CL=CL+0X00001;repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0x0002]>=0)then else local WC=EC[2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;EC[1]=BL[WC];EC[0X2]=0X1;end;end;end;until true;do return;end;end;else do if wL~=0X0000c then CL=PL[4];else YL[PL[0X05]]=-YL[PL[0X4]];end;end;end;end;end;end;end;end);if nL then if TL then if rL~=0X1 then return YL[ML](F(YL,ML+0x1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;else if z(TL)=="\s\116\114\i\110\g"then if V(TL,'a\116t\em\p\116 t\o\ \y\105\e\108\100\ a\cr\o\s\115\ \109et\097\m\101t\ho\d\047\C\%\-\c\097\108\108 \098\oun\dar\121')then return q();end;if not(V(TL,'^\046\045:\037\d+:\032'))then G(TL,0X0);else G("\Lura\ph S\099\114\i\pt\:"..(_L[CL-1]or"\(\i\110ter\110\097\108)")..'\058\ '..l(TL),0);end;else(G)(TL,0x00000);end;end;end;end;end;else if not(HL<0XE)then do if not(HL>=15)then aL=function(...)local CL=(1);local YL,NL={},(0);local OL=(Q());local kL={[2]=qL,[0X1]=YL};local LL,hL=on(...);do LL=LL-0X1;end;local KL=(OL==_ and sL or OL);do for PL=0X00000,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X00,F(hL,XL+1,LL+1)};end;end;do if KL~=OL then(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+1;if not(wL>=0x000A)then if wL<5 then do if wL>=0x00002 then if wL<0X3 then repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0)then else local WC=EC[2];if not(not BL[WC])then else BL[WC]={dL[WC]};end;EC[1]=BL[WC];(EC)[0X2]=0X001;end;end;end;until true;return;else if wL==4 then else local AL=RL[1];YL[0]=AL[0x1][AL[2]];PL=FL[CL];CL=CL+1;YL[1]=PL[0X1];PL=FL[CL];local dL=(0x0);CL=CL+1;YL[0x2]=PL[0X1];do CL=CL+1;end;(YL[dL])(YL[dL+1],YL[dL+2]);do NL=dL-1;end;CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;CL=PL[4];end;end;else if wL~=1 then for AL=PL[5],PL[0x004]do do YL[AL]=nil;end;end;else if not(YL[PL[0X4]]<YL[PL[0x007]])then else CL=PL[5];end;end;end;end;else do if wL>=0X007 then if not(wL>=8)then do(YL)[0X000]=KL[PL[1]];end;CL=CL+1;CL=CL+1;CL=CL+0X1;do NL=0;end;do(YL)[NL]=YL[NL]();end;PL=FL[CL];do CL=CL+0x1;end;if YL[0X0]then CL=PL[0X4];end;else do if wL==9 then if not YL[PL[0X00005]]then CL=PL[0X4];end;else YL[PL[5]]=KL[PL[1]];end;end;end;else if wL==0x06 then(YL)[PL[5]]=YL[PL[4]][YL[PL[7]]];else local AL=PL[0X5];local dL,BL=YL[AL]();if dL then do CL=PL[0X4];end;(YL)[AL+0X3]=BL;end;end;end;end;end;else if not(wL>=15)then do if wL<0XC then if wL~=0xb then YL[0]=KL[PL[0X1]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;do(YL)[0]=YL[0][PL[3]];end;do PL=FL[CL];end;CL=CL+0X1;do if not(not YL[0])then else CL=PL[0X4];end;end;else(YL)[PL[5]]=-YL[PL[0X00004]];end;else do if wL>=13 then do if wL==0XE then local AL=(RL[PL[4]]);YL[PL[0X5]]=AL[0X1][AL[0X2]];else YL[PL[5]]=kL[PL[0X4]];end;end;else YL[PL[5]]={F({},1,PL[4])};end;end;end;end;else if wL>=17 then do if wL<18 then YL[0X0]=KL[PL[0X1]];CL=CL+1;do CL=CL+0x1;end;PL=FL[CL];do CL=CL+0X00001;end;YL[0x0]=YL[0][PL[3]];do CL=CL+0x1;end;do CL=CL+0X01;end;PL=FL[CL];CL=CL+0x1;local AL=0x0000;YL[1]=PL[1];CL=CL+1;YL[AL]=YL[AL](YL[AL+0X0001]);NL=AL;PL=FL[CL];CL=CL+0X1;if not YL[0]then CL=PL[4];end;else if wL==0x13 then(YL)[PL[0x5]]=PL[1];else local AL,dL=PL[0X4],nil;local BL=(AL[0X0002]);local DL=(#BL);if DL>0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[1]~=0X0000 then do dL[bC-1]=RL[uC[2]];end;else dL[bC-0x1]={YL,uC[2]};end;end;x(mL,dL);end;do(YL)[PL[5]]=cn(dL,KL,AL);end;end;end;end;else if wL~=16 then CL=PL[4];else do(YL)[0]=KL[PL[1]];end;CL=CL+0X0001;CL=CL+1;CL=CL+0X1;NL=0x0;(YL)[NL]=YL[NL]();do CL=CL+1;end;do CL=CL+0x0001;end;do PL=FL[CL];end;CL=CL+0x00001;if not(not YL[0])then else do CL=PL[4];end;end;end;end;end;end;end;end);if nL then if TL then if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;else if z(TL)~='\115t\114\ing'then G(TL,0x0);else do if V(TL,"\097\116\116\e\mpt t\o\ \y\105\101\ld\ a\cr\111\115\s\032\m\e\116\097met\h\111d/C%\-\c\097\l\l\ \098oun\100\097\114y")then return q();end;end;do if not(V(TL,'^.-\058\%\d\043\:\ '))then G(TL,0);else G("L\117rap\h\032\S\099r\105\112\116\058"..(_L[CL-0X1]or"\(\105\110t\101r\110\097\108\)")..": "..l(TL),0);end;end;end;end;end;else if HL==16 then aL=function(...)local CL,YL=1,{};local OL=(Q());local NL,kL=0X000,({[0X1]=YL,[2]=qL});local LL,hL=on(...);do LL=LL-0x1;end;for PL=0x000,LL do do if not(XL>PL)then do break;end;else(YL)[PL]=hL[PL+1];end;end;end;local KL=(OL==_ and sL or OL);if not SL then hL=nil;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0,F(hL,XL+1,LL+1)};end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;if not(wL<0X7)then do if not(wL<11)then if not(wL>=13)then if wL~=12 then(YL)[0X1]=KL[PL[1]];CL=CL+1;YL[2]=YL[0X0];do PL=FL[CL];end;CL=CL+1;(YL[1])[PL[1]]=YL[2];PL=FL[CL];do CL=CL+1;end;YL[1]=KL[PL[0X1]];CL=CL+0x1;NL=1;(YL[NL])();local AL=(RL[0]);NL=NL-1;CL=CL+1;YL[0X0001]=AL[1][AL[0X00002]];CL=CL+1;CL=CL+0X1;local uC=(1);PL=FL[CL];local dL=(PL[0x4]);CL=CL+0X1;local BL=nil;local DL=dL[2];local bC=#DL;if not(bC>0)then else BL={};for EC=0X1,bC do local WC=DL[EC];do if WC[0X0001]~=0 then(BL)[EC-1]=RL[WC[0X02]];else(BL)[EC-0x01]={YL,WC[0x2]};end;end;end;x(mL,BL);end;do YL[2]=cn(BL,KL,dL);end;CL=CL+0X1;(YL[uC])(YL[uC+0X1]);NL=uC-1;CL=CL+0X1;repeat local EC,WC,eC=mL,YL,{};for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[0X1]==WC and lC[0X002]>=0x0)then else local GC=lC[0X2];if not(not eC[GC])then else(eC)[GC]={WC[GC]};end;do(lC)[0X1]=eC[GC];end;lC[2]=1;end;end;end;until true;return;else kL[PL[4]]=YL[PL[0X005]];end;else do if wL==0X000E then if YL[PL[4]]==YL[PL[0x7]]then else CL=PL[0X0005];end;else YL[PL[0X5]]=KL[PL[0X00001]];end;end;end;else do if not(wL<9)then if wL~=0xa then local AL=PL[0X4];local BL=(AL[0X2]);local DL,dL=#BL,(nil);if not(DL>0x00000)then else dL={};for bC=1,DL do local uC=BL[bC];do if uC[0X1]==0 then dL[bC-1]={YL,uC[0x2]};else do(dL)[bC-1]=RL[uC[2]];end;end;end;end;(x)(mL,dL);end;YL[PL[0X5]]=u[PL[7]](dL);else do CL=PL[0X4];end;end;else if wL~=8 then(YL)[PL[0x0005]]=PL[0X1];else do repeat local dL,BL=mL,(YL);local DL=({});for bC,uC in U,dL do do for EC,WC in U,uC do if not(WC[0x1]==BL and WC[0X2]>=0)then else local eC=(WC[2]);if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;WC[1]=DL[eC];(WC)[2]=0X1;end;end;end;end;until true;end;local AL=(PL[5]);return false,AL,AL+PL[4]-0x2;end;end;end;end;end;else if wL<0X00003 then if not(wL<0x01)then if wL==0X0002 then(YL)[PL[5]]=YL[PL[4]]%YL[PL[0X07]];else YL[PL[0X005]]=L(YL[PL[0X4]],YL[PL[0x7]]);end;else(YL)[PL[0x5]]=true;end;else if not(wL<0X5)then if wL~=0x6 then else if YL[PL[0X0004]]<=YL[PL[7]]then CL=PL[5];end;end;else if wL~=4 then local AL=PL[0X4];local BL=AL[2];local dL=nil;local DL=(#BL);do if DL>0X0 then do dL={};end;for bC=1,DL do local uC=BL[bC];if uC[1]==0X00 then(dL)[bC-0x001]={YL,uC[2]};else do(dL)[bC-0X1]=RL[uC[2]];end;end;end;(x)(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);else(YL)[PL[0X05]]={F({},0x1,PL[4])};end;end;end;end;end;end;end);if not(nL)then do if z(TL)~='\s\116r\i\110\g'then(G)(TL,0X0);else if not(V(TL,"\097t\116empt to \121\105\e\108\d \097\cr\os\s\ \me\116\097m\101t\h\od\/C\%\-\ca\108l\ b\ou\110\100\097\114y"))then else return q();end;if V(TL,'\^\.\-\:%\100\+\058\ ')then(G)("\076\117\114\097\p\h \083\c\114i\112\116\:"..(_L[CL-1]or"\(\105\110\116\ern\097\l\041")..'\: '..l(TL),0);else G(TL,0);end;end;end;else do if TL then if rL~=1 then return YL[ML](F(YL,ML+0X001,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL=0x1;local YL={};local OL=(Q());local LL,hL=on(...);local kL,KL={[0X1]=YL,[2]=qL},((OL==_ and sL or OL));local NL=(0);LL=LL-0X1;do for PL=0X0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;end;end;do if not SL then do hL=nil;end;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+0X00001)};end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+1;if wL>=7 then if not(wL>=10)then if not(wL<0x08)then if wL==9 then local AL,dL=PL[5],PL[0X04];NL=AL+dL-1;repeat local BL,DL=mL,(YL);local bC={};do for uC,EC in U,BL do for WC,eC in U,EC do do if eC[1]==DL and eC[2]>=0 then local oC=eC[0x2];do if not bC[oC]then(bC)[oC]={DL[oC]};end;end;(eC)[1]=bC[oC];(eC)[2]=0X01;end;end;end;end;end;until true;do return true,AL,dL;end;else local AL=PL[4];local BL=(AL[2]);local dL=(nil);local DL=#BL;do if not(DL>0X0)then else dL={};for bC=1,DL do local uC=BL[bC];do if uC[1]==0 then(dL)[bC-0X1]={YL,uC[0X02]};else dL[bC-0X1]=RL[uC[0X00002]];end;end;end;x(mL,dL);end;end;do YL[PL[0x5]]=u[PL[0x00007]](dL);end;end;else local BL=(PL[0X7]);local AL,dL=PL[5],PL[0x4];if dL==0x000 then else NL=AL+dL-0X1;end;local DL,bC=nil,nil;if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+0x1,NL)));else do DL,bC=on(YL[AL]());end;end;if BL~=0X001 then if BL~=0 then do DL=AL+BL-0X2;end;NL=DL+0X1;else do DL=DL+AL-0X1;end;NL=DL;end;local uC=0;for EC=AL,DL do uC=uC+0X0001;(YL)[EC]=bC[uC];end;else do NL=AL-0X1;end;end;end;else if not(wL>=0X00c)then if wL~=0X000b then(YL)[PL[0X5]]=KL[PL[1]];else(YL)[PL[5]]=h(YL[PL[4]],YL[PL[0X007]]);end;else do if wL==0x0000d then local AL,dL=PL[4],(nil);local BL=(AL[2]);local DL=(#BL);if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];if uC[1]==0X0 then dL[bC-0X0001]={YL,uC[2]};else do(dL)[bC-0x1]=RL[uC[0X002]];end;end;end;(x)(mL,dL);end;do YL[PL[5]]=cn(dL,KL,AL);end;else end;end;end;end;else if not(wL>=3)then if wL<1 then(YL[PL[0X5]])[YL[PL[4]]]=YL[PL[7]];else if wL~=0x2 then(YL)[PL[0x5]]={F({},0X0001,PL[0X4])};else do YL[PL[5]]=PL[1];end;end;end;else do if not(wL>=0x5)then if wL~=4 then do(YL)[PL[0x5]]=PL[4];end;else YL[0X1]=KL[PL[0X01]];CL=CL+1;CL=CL+1;CL=CL+1;NL=0X1;(YL[NL])();NL=NL-1;CL=CL+1;CL=CL+1;do CL=CL+0x1;end;do repeat local AL,dL=mL,YL;local BL={};do for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0X1]==dL and EC[2]>=0x000 then local WC=EC[2];if not BL[WC]then(BL)[WC]={dL[WC]};end;(EC)[0X1]=BL[WC];(EC)[0X02]=1;end;end;end;end;end;until true;end;return;end;else if wL==6 then for AL=PL[0x5],PL[4]do YL[AL]=nil;end;else do CL=PL[0X0004];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\s\116\114in\103"then if not(V(TL,"at\116\e\m\112t to \y\i\e\l\d\ ac\114\o\s\s\ \m\101t\097\m\et\h\od/\067\037\045\ca\l\l bo\117n\d\097\114\121"))then else return q();end;if not(V(TL,'\^\.\045\:\037\d+:\032'))then(G)(TL,0);else G("\L\117\114a\112\h S\c\114\ip\116\:"..(_L[CL-0X01]or'\(\105\110\116\er\110\097l\041').."\:\ "..l(TL),0);end;else G(TL,0X0);end;else if TL then do if rL==0x1 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;end;else if HL==13 then do aL=function(...)local YL=({});local CL=0x1;local OL=Q();local kL,NL={[0X1]=YL,[2]=qL},0x0;local KL=((OL==_ and sL or OL));local LL,hL=on(...);LL=LL-0X0001;do for PL=0,LL do if not(XL>PL)then do break;end;else(YL)[PL]=hL[PL+0X1];end;end;end;if not SL then hL=nil;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0x1 or 0,F(hL,XL+1,LL+0X001)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+0x001;do if wL<7 then if wL>=0X3 then if not(wL<5)then do if wL~=0x0006 then YL[PL[0X5]]=PL[0x01];else if YL[PL[4]]<=YL[PL[7]]then CL=PL[5];end;end;end;else do if wL~=4 then(YL)[1]=KL[PL[1]];CL=CL+1;YL[2]=YL[0x00000];PL=FL[CL];CL=CL+1;(YL[1])[PL[0X001]]=YL[0X2];do PL=FL[CL];end;CL=CL+0X1;YL[1]=KL[PL[1]];do CL=CL+0X1;end;CL=CL+1;CL=CL+1;do NL=0x1;end;YL[NL]();NL=NL-0X00001;do CL=CL+1;end;do CL=CL+0X1;end;CL=CL+0X1;repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[2]>=0 then local WC=(EC[0x2]);if not BL[WC]then(BL)[WC]={dL[WC]};end;do(EC)[0X1]=BL[WC];end;(EC)[0X2]=0X1;end;end;end;until true;do return;end;else do(YL)[PL[5]]={F({},1,PL[4])};end;end;end;end;else if wL<1 then(YL)[PL[5]]=KL[PL[0X1]];else if wL~=0X02 then(YL)[PL[0X5]]=L(YL[PL[4]],YL[PL[7]]);else end;end;end;else if not(wL>=10)then do if not(wL>=0X0008)then repeat local AL,dL,BL=mL,YL,(PL[5]);local DL=({});for bC,uC in U,AL do for EC,WC in U,uC do if not(WC[1]==dL and WC[2]>=BL)then else local eC=WC[0X0002];if not(not DL[eC])then else DL[eC]={dL[eC]};end;(WC)[1]=DL[eC];WC[0X2]=1;end;end;end;until true;else if wL==9 then if YL[PL[0x00004]]~=YL[PL[7]]then else do CL=PL[5];end;end;else YL[PL[5]]=K(YL[PL[0X4]],YL[PL[7]]);end;end;end;else if not(wL<12)then if wL==13 then local AL=PL[4];local BL,dL=AL[2],nil;local DL=#BL;if not(DL>0x0)then else dL={};do for bC=1,DL do local uC=(BL[bC]);if uC[0x00001]~=0x0 then(dL)[bC-1]=RL[uC[0x2]];else dL[bC-0x0001]={YL,uC[0x02]};end;end;end;x(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);else if not(YL[PL[0X4]]<YL[PL[0x7]])then CL=PL[5];end;end;else do if wL==11 then for AL=PL[5],PL[4]do(YL)[AL]=nil;end;else do CL=PL[4];end;end;end;end;end;end;end;end;end;end);if nL then if TL then if rL==1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)~='\s\116r\in\103'then G(TL,0);else do if not(V(TL,"a\116\116e\mpt to\ yi\e\108d\ acr\111s\115\032\m\101ta\m\101\116\ho\d\047\C\%\-\c\097\l\l\ \098\o\117\110d\097r\y"))then else return q();end;end;do if not(V(TL,"\^\.\-:\%\d\+\: "))then G(TL,0x0);else G('\076ur\097p\h\032S\c\114\i\112t\:'..(_L[CL-1]or"\(\int\er\110a\108\041")..'\:\ '..l(TL),0);end;end;end;end;end;end;else aL=function(...)local CL,YL=0X00001,({});local OL=(Q());local LL,hL=on(...);local kL,KL={[0X1]=YL,[2]=qL},((OL==_ and sL or OL));LL=LL-1;local NL=0X0;for PL=0,LL do do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;end;if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+1,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0X2]);do CL=CL+1;end;if wL>=5 then if not(wL<8)then do if not(wL>=9)then do YL[PL[5]]=YL[PL[0X4]]%YL[PL[7]];end;else if wL~=10 then local AL=PL[0X4];local dL=nil;local BL=(AL[0X2]);local DL=(#BL);do if not(DL>0)then else dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0X1]==0 then dL[bC-1]={YL,uC[0X2]};else(dL)[bC-0X1]=RL[uC[0X2]];end;end;end;(x)(mL,dL);end;end;YL[PL[5]]=cn(dL,KL,AL);else do(YL)[PL[0X5]]=L(YL[PL[4]],YL[PL[0X00007]]);end;end;end;end;else if wL<6 then YL[PL[0X5]]=M(YL[PL[4]],YL[PL[7]]);else do if wL==7 then do(YL)[0X1]=KL[PL[0x01]];end;CL=CL+0x1;CL=CL+1;do CL=CL+0X1;end;local BL=nil;YL[0X2]=YL[0X00];PL=FL[CL];CL=CL+1;local uC=(0X01);YL[0x1][PL[0X1]]=YL[0x2];local AL=RL[0X0000];PL=FL[CL];do CL=CL+0x0001;end;YL[0X001]=KL[PL[1]];CL=CL+1;do CL=CL+1;end;CL=CL+0x1;NL=0x1;YL[NL]();NL=NL-0x00001;CL=CL+1;(YL)[1]=AL[1][AL[0X02]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+1;local dL=(PL[4]);local DL=dL[0X2];local bC=(#DL);do if bC>0 then BL={};for EC=1,bC do local WC=DL[EC];if WC[1]==0X0 then BL[EC-0X1]={YL,WC[2]};else BL[EC-1]=RL[WC[2]];end;end;(x)(mL,BL);end;end;do(YL)[2]=cn(BL,KL,dL);end;CL=CL+1;YL[uC](YL[uC+0X01]);NL=uC-0X1;do CL=CL+0X1;end;repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[1]==WC and lC[2]>=0X0)then else local GC=(lC[2]);do if not eC[GC]then eC[GC]={WC[GC]};end;end;(lC)[1]=eC[GC];do lC[2]=1;end;end;end;end;until true;return;else YL[PL[5]]=PL[0X0001];end;end;end;end;else if not(wL>=0x02)then if wL~=0x1 then(YL)[PL[5]]=KL[PL[1]];else CL=PL[0x4];end;else if not(wL>=3)then else if wL==0X4 then do(YL)[PL[0X5]]={F({},1,PL[4])};end;else local AL=PL[5];local dL,BL=YL[AL]();if dL then CL=PL[4];do(YL)[AL+0X3]=BL;end;end;end;end;end;end;end;end);if nL then if TL then do if rL~=1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;else do if z(TL)=="str\ing"then do if not(V(TL,"at\116\e\mpt t\o\032\121\105\el\d\ a\cro\115\s \m\e\116\097meth\111\d/C\%\-ca\108\108\ \098\111\117n\100\097\114\y"))then else return q();end;end;if not(V(TL,"^\.\045:%\100\043:\ "))then G(TL,0);else(G)('\076u\114a\p\h\032\S\c\114i\pt\:'..(_L[CL-0X1]or"\040in\116\e\114\110\097\l\)").."\:\032"..l(TL),0);end;else(G)(TL,0x0);end;end;end;end;end;end;end;end;end;else if HL>=25 then do if HL>=29 then if HL<31 then if HL~=30 then aL=function(...)local NL,YL=0,({});local OL=Q();local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});LL=LL-0x00001;do for PL=0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;end;local KL=((OL==_ and sL or OL));do if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+1)};end;end;local CL=1;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+1;if not(wL<7)then if not(wL<10)then if not(wL<12)then do if wL==13 then else if YL[PL[0X4]]==YL[PL[0X7]]then do CL=PL[5];end;end;end;end;else if wL~=11 then(YL)[PL[0x5]]={F({},1,PL[4])};else local AL,dL=PL[0X4],nil;local BL=(AL[0X00002]);local DL=#BL;if not(DL>0)then else dL={};for bC=0x1,DL do local uC=(BL[bC]);if uC[0X1]==0 then(dL)[bC-0X1]={YL,uC[0x2]};else(dL)[bC-0X1]=RL[uC[2]];end;end;(x)(mL,dL);end;YL[PL[0X5]]=u[PL[0x00007]](dL);end;end;else if not(wL<0X8)then if wL~=9 then local AL=YL[PL[4]]/YL[PL[0X07]];YL[PL[5]]=AL-AL%0X1;else YL[PL[0X0005]]=KL[PL[1]];end;else CL=PL[4];end;end;else if not(wL>=0X03)then if wL>=1 then do if wL==0x002 then do YL[PL[0X00005]]=PL[1];end;else if not(YL[PL[4]]<YL[PL[7]])then else CL=PL[0X5];end;end;end;else if not(YL[PL[4]]<=YL[PL[7]])then else CL=PL[5];end;end;else do if wL<5 then if wL~=0X004 then YL[PL[5]]=h(YL[PL[0X004]],YL[PL[0x007]]);else local AL=(PL[4]);local BL=(AL[2]);local DL=(#BL);local dL=(nil);if not(DL>0X0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[1]==0x00 then dL[bC-1]={YL,uC[0X2]};else dL[bC-0x00001]=RL[uC[2]];end;end;(x)(mL,dL);end;YL[PL[0x5]]=cn(dL,KL,AL);end;else if wL~=0X6 then if not YL[PL[5]]then CL=PL[0X4];end;else do YL[1]=KL[PL[1]];end;CL=CL+0X1;CL=CL+0X1;do CL=CL+0X1;end;(YL)[2]=YL[0];PL=FL[CL];CL=CL+0X1;do(YL[1])[PL[0X0001]]=YL[0X2];end;PL=FL[CL];CL=CL+0X01;YL[0X1]=KL[PL[0x001]];CL=CL+0x1;CL=CL+0x0001;do CL=CL+1;end;NL=1;(YL[NL])();do NL=NL-0X1;end;CL=CL+1;repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0)then else local WC=(EC[2]);if not(not BL[WC])then else BL[WC]={dL[WC]};end;EC[0x1]=BL[WC];(EC)[0X0002]=0X001;end;end;end;until true;do return;end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=='s\116\114\105n\g'then do if not(V(TL,"\097\116t\e\mpt\032\116\111\032\y\i\e\ld\ a\cr\o\s\s\ \109\e\116\097\m\et\104\o\d\047\067%\-\099\097\l\108\ \098\oun\100\097r\y"))then else do return q();end;end;end;do if not(V(TL,'^\.\045\:%\d\+\:\ '))then(G)(TL,0);else(G)('\L\117ra\112\h\ \083c\114ipt:'..(_L[CL-0X1]or'\(i\110t\101r\110\097\l\)')..'\:\032'..l(TL),0);end;end;else G(TL,0X0);end;end;else if TL then do if rL~=0X01 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;else aL=function(...)local NL=(0X00000);local YL={};local kL={[2]=qL,[0X1]=YL};local OL=Q();local KL=((OL==_ and sL or OL));local LL,hL=on(...);do LL=LL-1;end;for PL=0,LL do do if XL>PL then(YL)[PL]=hL[PL+0X01];else break;end;end;end;local CL=0X1;do if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0x1 or 0,F(hL,XL+0x1,LL+1)};end;end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[0X0002];do CL=CL+0X00001;end;if wL>=0x00006 then if wL>=9 then if not(wL>=0X000b)then if wL~=0X00A then(YL)[PL[5]]=PL[0X001];else do(YL)[PL[0x005]]=not YL[PL[4]];end;end;else do if wL==12 then(YL)[0X1]=KL[PL[0x1]];CL=CL+1;CL=CL+0X1;CL=CL+1;do YL[2]=YL[0X0];end;PL=FL[CL];do CL=CL+1;end;local AL=RL[0];do YL[0X0001][PL[1]]=YL[0X2];end;PL=FL[CL];CL=CL+0x1;(YL)[1]=KL[PL[0x01]];do CL=CL+1;end;NL=0X1;local uC=(1);local BL=nil;YL[NL]();NL=NL-1;do CL=CL+1;end;do(YL)[0x1]=AL[1][AL[2]];end;PL=FL[CL];do CL=CL+0X00001;end;local dL=(PL[4]);local DL=dL[0X2];local bC=#DL;if bC>0X0 then do BL={};end;for EC=0X1,bC do local WC=(DL[EC]);if WC[1]==0X0 then do BL[EC-1]={YL,WC[2]};end;else(BL)[EC-0X01]=RL[WC[2]];end;end;x(mL,BL);end;YL[0X00002]=cn(BL,KL,dL);CL=CL+0x00001;YL[uC](YL[uC+0X1]);do NL=uC-0X1;end;CL=CL+1;repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[1]==WC and lC[0X2]>=0x000)then else local GC=lC[0X00002];if not eC[GC]then(eC)[GC]={WC[GC]};end;(lC)[0X1]=eC[GC];lC[2]=0X1;end;end;end;until true;return;else CL=PL[4];end;end;end;else if wL<0X7 then do(YL)[PL[5]]={F({},0X01,PL[4])};end;else if wL~=0X008 then YL[PL[5]]=KL[PL[1]];else end;end;end;else if wL>=3 then if wL>=4 then do if wL==0x5 then do if not(YL[PL[0X0004]]<=YL[PL[7]])then CL=PL[5];end;end;else local AL=(PL[0X05]);local dL,BL=YL[AL]();if not(dL)then else CL=PL[0X0004];(YL)[AL+0x03]=BL;end;end;end;else local AL,dL=PL[0X5],(YL[PL[4]]);YL[AL+0x1]=dL;(YL)[AL]=dL[PL[0X3]];end;else do if wL>=1 then if wL==2 then local AL=PL[5];local dL=(g(function(...)q();do for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end;end));dL(YL[AL],YL[AL+1],YL[AL+2]);do NL=AL;end;(YL)[AL]=dL;CL=PL[4];else local AL=(PL[0x4]);local dL=nil;local BL=(AL[2]);local DL=#BL;if DL>0x0 then dL={};for bC=1,DL do local uC=BL[bC];if uC[1]~=0 then dL[bC-1]=RL[uC[2]];else(dL)[bC-0x001]={YL,uC[2]};end;end;x(mL,dL);end;(YL)[PL[0X005]]=cn(dL,KL,AL);end;else if not(YL[PL[4]]<YL[PL[7]])then CL=PL[5];end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=="s\116ri\110g"then if not(V(TL,'\097\116t\empt\032\116\o \121\105\el\d\ \097\cro\115\s\ \m\101\116a\m\e\116\h\o\d/C\%-\ca\l\108\032b\111un\d\097r\y'))then else do return q();end;end;do if not(V(TL,'\^.\-\:%\d\+\058\032'))then G(TL,0x0);else G("L\117raph Scr\ip\116\058"..(_L[CL-0X1]or"\040\i\110t\e\114na\108\041").."\:\032"..l(TL),0x00000);end;end;else(G)(TL,0X0);end;end;else if TL then if rL~=0X1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;else if HL<32 then do aL=function(...)local CL,YL=1,({});local OL=(Q());local NL=0;local LL,hL=on(...);local kL,KL={[2]=qL,[0X1]=YL},((OL==_ and sL or OL));LL=LL-0X1;do for PL=0X0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;end;if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X00001,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=FL[CL];local wL=PL[0X2];CL=CL+1;do if not(wL<0x7)then if not(wL<0x0000b)then if wL<0xd then if wL~=12 then local dL=(nil);local AL=(PL[4]);local BL=(AL[0X2]);local DL=#BL;if DL>0X0 then dL={};do for bC=0X1,DL do local uC=(BL[bC]);if uC[0X001]==0x00 then do(dL)[bC-1]={YL,uC[0X002]};end;else dL[bC-0x1]=RL[uC[0x0002]];end;end;end;x(mL,dL);end;YL[PL[5]]=u[PL[0X007]](dL);else local AL=PL[5];do for dL=AL,AL+(PL[0X004]-1)do(YL)[dL]=hL[XL+(dL-AL)+0X1];end;end;end;else do if wL==0X0E then do for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;end;else do(YL)[PL[0x5]]=M(YL[PL[0X4]],YL[PL[7]]);end;end;end;end;else if wL<0X009 then if wL~=8 then(YL)[1]=KL[PL[0X1]];CL=CL+1;CL=CL+1;do CL=CL+1;end;local AL=RL[0];do YL[2]=YL[0];end;PL=FL[CL];CL=CL+1;(YL[1])[PL[1]]=YL[2];do PL=FL[CL];end;CL=CL+0X1;YL[0X001]=KL[PL[1]];local BL=nil;CL=CL+1;CL=CL+1;CL=CL+1;local uC=(1);NL=0X1;YL[NL]();NL=NL-0X00001;CL=CL+1;CL=CL+1;CL=CL+0X001;(YL)[1]=AL[0X01][AL[2]];do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;local dL=PL[4];local DL=(dL[0X0002]);local bC=#DL;do if not(bC>0X0)then else BL={};for EC=0x1,bC do local WC=DL[EC];if WC[1]~=0X00000 then BL[EC-1]=RL[WC[0X2]];else do(BL)[EC-1]={YL,WC[2]};end;end;end;x(mL,BL);end;end;YL[0X2]=cn(BL,KL,dL);CL=CL+0x01;(YL[uC])(YL[uC+1]);NL=uC-0X0001;CL=CL+1;repeat local EC,WC,eC=mL,YL,{};for oC,jC in U,EC do for zC,lC in U,jC do do if not(lC[0X1]==WC and lC[0x002]>=0)then else local GC=lC[0x2];if not(not eC[GC])then else eC[GC]={WC[GC]};end;lC[0X1]=eC[GC];(lC)[0x2]=0x1;end;end;end;end;until true;do return;end;else end;else if wL~=10 then(YL)[PL[0x00005]]=YL[PL[4]]<YL[PL[0X00007]];else YL[PL[5]]={F({},0X1,PL[4])};end;end;end;else if wL>=0X3 then do if wL>=0X5 then do if wL~=6 then CL=PL[0X4];else do YL[PL[0x05]]=T(YL[PL[0X4]]);end;end;end;else if wL~=0X004 then YL[PL[5]]=YL[PL[0X004]]>=YL[PL[0X00007]];else local AL=PL[4];local BL=(AL[0X2]);local dL=(nil);local DL=#BL;do if not(DL>0x0)then else dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[0x1]==0 then dL[bC-0x1]={YL,uC[2]};else(dL)[bC-0X0001]=RL[uC[2]];end;end;end;x(mL,dL);end;end;do YL[PL[0x5]]=cn(dL,KL,AL);end;end;end;end;else if not(wL<0X1)then if wL~=2 then do YL[PL[5]]=KL[PL[0X0001]];end;else(YL)[PL[5]]=PL[0X1];end;else do(YL)[PL[0X5]]=YL[PL[4]]+YL[PL[0x0007]];end;end;end;end;end;end;end;end);if not(nL)then if z(TL)~="\115\116\114\in\g"then G(TL,0);else if V(TL,'\097tt\e\m\pt\032\116o\ y\ie\108\d\032a\c\114\os\115\ m\101ta\m\e\116h\o\100\047\C%\-\ca\l\108 \098\o\117n\d\097r\y')then do return q();end;end;do if not(V(TL,'\^\046-\058\%\d+\:\ '))then G(TL,0);else(G)('\076\117\114aph\032\S\cri\112t\:'..(_L[CL-0X001]or"\040\105\110t\erna\l\041").."\:\ "..l(TL),0);end;end;end;else if TL then if rL~=1 then return YL[ML](F(YL,ML+1,NL));else do return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else if HL~=0x21 then aL=function(...)local CL=(1);local YL={};local kL={[0X1]=YL,[2]=qL};local OL=Q();local NL=(0);local LL,hL=on(...);LL=LL-1;local KL=((OL==_ and sL or OL));for PL=0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;do if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0x0001,LL+1)};end;end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+0X00001;if not(wL<0X9)then if not(wL<0xd)then if not(wL>=15)then if wL==0xE then(YL)[PL[5]]=true;else local AL=(PL[0x004]);local dL=(YL[AL]);do for BL=AL+1,PL[7]do dL=dL..YL[BL];end;end;do YL[PL[5]]=dL;end;end;else do if wL>=0X00010 then if wL~=0x11 then do CL=PL[4];end;else do(YL)[PL[0x00005]]=h(YL[PL[0X4]],YL[PL[0X7]]);end;end;else for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;end;end;else if wL>=0Xb then if wL==0xC then(YL)[PL[0x5]]=KL[PL[0X1]];else local AL=PL[4];local BL,dL=AL[0X00002],(nil);local DL=#BL;if DL>0 then dL={};for bC=1,DL do local uC=(BL[bC]);do if uC[1]~=0x00 then(dL)[bC-1]=RL[uC[2]];else do dL[bC-0x00001]={YL,uC[2]};end;end;end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);end;else if wL~=0xa then do YL[PL[0X00005]]=PL[1];end;else do(YL)[1]=KL[PL[0X1]];end;CL=CL+1;do CL=CL+0X001;end;CL=CL+0X0001;(YL)[0X0002]=YL[0];PL=FL[CL];CL=CL+1;(YL[0X1])[PL[1]]=YL[0X2];PL=FL[CL];do CL=CL+1;end;do YL[1]=KL[PL[0X1]];end;CL=CL+1;NL=1;(YL[NL])();NL=NL-1;do CL=CL+1;end;do CL=CL+0X0001;end;CL=CL+0X1;repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[0X1]==dL and EC[2]>=0X0000 then local WC=EC[2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;(EC)[0X00001]=BL[WC];EC[2]=0X1;end;end;end;until true;return;end;end;end;else do if not(wL<0X4)then if wL>=6 then if not(wL>=7)then(YL)[PL[5]]=YL[PL[4]]/YL[PL[0X7]];else do if wL==8 then else(YL)[PL[5]]=T(YL[PL[4]]);end;end;end;else if wL==5 then(YL)[PL[0X5]]=not YL[PL[4]];else local AL=PL[5];local BL=(YL[AL]);local dL=(PL[7]-0X0001)*0X32;for DL=0X1,PL[4]do(BL)[dL+DL]=YL[AL+DL];end;end;end;else do if not(wL<0X2)then if wL==3 then(YL)[PL[5]]={F({},0X001,PL[4])};else YL[PL[0X5]]=YL[PL[0X4]]~=YL[PL[7]];end;else if wL~=0X1 then do YL[PL[5]]=YL[PL[0X4]]+YL[PL[7]];end;else YL[PL[5]][YL[PL[0X0004]]]=YL[PL[0X7]];end;end;end;end;end;end;end;end);if nL then if TL then if rL~=0X1 then do return YL[ML](F(YL,ML+1,NL));end;else do return YL[ML]();end;end;elseif ML then return F(YL,ML,rL);end;else if z(TL)~="st\114\ing"then(G)(TL,0);else do if not(V(TL,"att\e\109\p\116\ \116o\ \121i\101\108\d\ a\cro\ss\ \m\e\116a\109\101tho\d\/\067\%\-\099al\l \098\oun\d\097\114\121"))then else do return q();end;end;end;if V(TL,"^.-\:\%d\043\:\ ")then G("\L\117\114a\p\104 \083\c\114\ip\116\058"..(_L[CL-0X1]or"\(\105\110ter\110a\108)")..": "..l(TL),0X0);else(G)(TL,0);end;end;end;end;else aL=function(...)local CL=(0X0001);local YL=({});local kL=({[0X1]=YL,[2]=qL});local NL=0x0;local OL=Q();local KL=(OL==_ and sL or OL);local LL,hL=on(...);do LL=LL-1;end;for PL=0x0,LL do do if not(XL>PL)then break;else YL[PL]=hL[PL+0x1];end;end;end;if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+1)};end;if KL~=OL then(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];do CL=CL+1;end;if not(wL>=0XD)then do if not(wL<0X6)then if wL>=0X9 then if wL>=11 then if wL~=12 then YL[PL[5]]=K(YL[PL[4]],YL[PL[0X7]]);else CL=PL[0X004];end;else do if wL~=0xa then do YL[PL[0x5]][YL[PL[0x4]]]=YL[PL[7]];end;else(YL)[PL[0X5]]={F({},0x1,PL[4])};end;end;end;else do if not(wL<7)then if wL==0X8 then(YL)[PL[5]]=PL[1];else repeat local AL,dL,BL=mL,YL,{};for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0x00001]==dL and EC[2]>=0x0 then local WC=EC[0X002];do if not BL[WC]then BL[WC]={dL[WC]};end;end;(EC)[0X1]=BL[WC];EC[2]=0X1;end;end;end;end;until true;return;end;else local AL=RL[PL[0X0004]];YL[PL[5]]=AL[1][AL[0X0002]];end;end;end;else if wL>=0x03 then if not(wL>=4)then local AL=PL[5];local dL,BL,DL=YL[AL],YL[AL+1],YL[AL+2];do(YL)[AL]=g(function()do for bC=dL,BL,DL do q(true,bC);end;end;end);end;do CL=PL[4];end;else do if wL==5 then(YL)[0X1]=KL[PL[1]];local AL=(0X001);do CL=CL+1;end;CL=CL+1;PL=FL[CL];local BL=(RL[0X2]);do CL=CL+1;end;local dL=(YL[1]);YL[AL+0X1]=dL;(YL)[AL]=dL[PL[3]];do CL=CL+0X1;end;do YL[0X003]=BL[0x0001][BL[0X002]];end;PL=FL[CL];do CL=CL+0x00001;end;YL[0X4]=PL[0X1];do PL=FL[CL];end;CL=CL+0x1;YL[5]=KL[PL[0X1]];PL=FL[CL];do CL=CL+0X1;end;(YL)[0x5]=YL[0X00005][PL[0X3]];PL=FL[CL];CL=CL+1;(YL)[0X06]=PL[0X1];PL=FL[CL];CL=CL+0X1;YL[0x7]=KL[PL[0X1]];PL=FL[CL];CL=CL+1;do YL[8]=KL[PL[0X1]];end;PL=FL[CL];CL=CL+1;do(YL)[8]=YL[8][PL[3]];end;do CL=CL+1;end;AL=7;(YL)[AL]=YL[AL](YL[AL+0X1]);do NL=AL;end;PL=FL[CL];CL=CL+1;YL[8]=PL[1];PL=FL[CL];CL=CL+0X1;local DL=(7);YL[9]=PL[0X1];CL=CL+1;AL=0X3;local bC=(0);if DL==0 then else NL=AL+DL-0x1;end;local uC,EC=nil,(nil);if DL==0X0001 then do uC,EC=on(YL[AL]());end;else do uC,EC=on(YL[AL](F(YL,AL+1,NL)));end;end;if bC==0X1 then NL=AL-1;else if bC~=0X0 then do uC=AL+bC-2;end;NL=uC+1;else uC=uC+AL-1;NL=uC;end;local WC=(0X000);do for eC=AL,uC do WC=WC+0X001;(YL)[eC]=EC[WC];end;end;end;do CL=CL+0X01;end;CL=CL+1;CL=CL+0x1;AL=1;(YL[AL])(F(YL,AL+0x1,NL));NL=AL-0X1;do PL=FL[CL];end;CL=CL+0X00001;CL=PL[4];else local AL=RL[0];YL[1]=AL[0X00001][AL[0x2]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;if not(not YL[1])then else do CL=PL[0X4];end;end;end;end;end;else do if wL>=1 then do if wL==2 then local AL=PL[0X4];local BL,dL=AL[0X2],(nil);local DL=(#BL);if not(DL>0)then else dL={};for bC=1,DL do local uC=BL[bC];do if uC[0x1]==0 then do dL[bC-0X1]={YL,uC[0X00002]};end;else do(dL)[bC-0X001]=RL[uC[0x2]];end;end;end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);else for AL=PL[0x5],PL[0X4]do YL[AL]=nil;end;end;end;else local AL=(PL[0x5]);local BL=YL[AL];local dL=((PL[7]-1)*0X32);for DL=1,PL[4]do do BL[dL+DL]=YL[AL+DL];end;end;end;end;end;end;end;else if wL<0X13 then if not(wL>=0x10)then if wL>=14 then do if wL==0Xf then if not(not YL[PL[0X005]])then else CL=PL[0X004];end;else YL[PL[0X5]]=YL[PL[4]]^YL[PL[7]];end;end;else(YL)[PL[5]]=KL[PL[0X00001]];end;else if not(wL>=0X00011)then do if not(YL[PL[0X5]])then else do CL=PL[4];end;end;end;else if wL~=0x12 then local AL=(RL[0]);YL[1]=AL[1][AL[0X2]];CL=CL+0x00001;do CL=CL+1;end;PL=FL[CL];CL=CL+1;if not YL[1]then do CL=PL[4];end;end;else YL[PL[0x5]]=h(YL[PL[4]],YL[PL[7]]);end;end;end;else do if wL<22 then if wL<20 then(YL)[0X001]=KL[PL[0X1]];CL=CL+1;do CL=CL+1;end;CL=CL+1;(YL)[2]=YL[0];do PL=FL[CL];end;CL=CL+1;do(YL[1])[PL[0X1]]=YL[0X2];end;PL=FL[CL];CL=CL+0X1;(YL)[1]=KL[PL[1]];CL=CL+1;CL=CL+1;CL=CL+1;NL=1;YL[NL]();do NL=NL-0X01;end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;if not(not YL[0X0])then else do CL=PL[4];end;end;else if wL==0x15 then(YL)[PL[5]]=M(YL[PL[0X00004]],YL[PL[7]]);else local AL=(RL[3]);YL[1]=AL[1][AL[0x2]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;local uC,dL=1,(PL[0X4]);local DL=(dL[2]);do CL=CL+0X00001;end;local BL,bC=nil,(#DL);do if bC>0X0 then BL={};for EC=1,bC do local WC=DL[EC];do if WC[0X01]==0X0 then do BL[EC-1]={YL,WC[0X2]};end;else do(BL)[EC-0X00001]=RL[WC[2]];end;end;end;end;(x)(mL,BL);end;end;YL[0X2]=cn(BL,KL,dL);CL=CL+0X1;YL[uC](YL[uC+0X1]);NL=uC-0X1;CL=CL+0X001;CL=CL+1;CL=CL+1;do repeat local EC,WC=mL,YL;local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[0X1]==WC and lC[0X2]>=0)then else local GC=(lC[2]);if not eC[GC]then(eC)[GC]={WC[GC]};end;lC[1]=eC[GC];(lC)[2]=0x01;end;end;end;until true;end;return;end;end;else if not(wL>=0x18)then do if wL~=23 then(YL)[PL[0X5]]=YL[PL[4]]~=YL[PL[7]];else do(YL)[PL[5]]=L(YL[PL[4]],YL[PL[7]]);end;end;end;else if wL~=25 then do YL[1]=KL[PL[0X1]];end;CL=CL+0x1;local AL=(RL[1]);CL=CL+0X1;CL=CL+1;NL=0X0001;(YL[NL])();NL=NL-0x001;CL=CL+0X001;CL=CL+0X1;CL=CL+1;do(YL)[0X00001]=AL[1][AL[0X2]];end;local dL=(0X1);CL=CL+1;do CL=CL+0X001;end;PL=FL[CL];CL=CL+1;local BL=(YL[1]);YL[dL+1]=BL;local DL=0X3;YL[dL]=BL[PL[3]];CL=CL+1;AL=RL[2];YL[3]=AL[0X1][AL[0X002]];CL=CL+0x1;CL=CL+0X00001;PL=FL[CL];CL=CL+1;(YL)[0x4]=PL[1];PL=FL[CL];CL=CL+1;(YL)[0X005]=KL[PL[0X1]];CL=CL+0X001;CL=CL+0X001;PL=FL[CL];do CL=CL+0X1;end;do(YL)[0X5]=YL[0X005][PL[0X3]];end;do CL=CL+1;end;CL=CL+1;do CL=CL+0X001;end;do dL=3;end;local bC=0X00000;if DL==0 then else NL=dL+DL-0x1;end;local uC,EC=nil,(nil);if DL~=0X0001 then uC,EC=on(YL[dL](F(YL,dL+0X1,NL)));else uC,EC=on(YL[dL]());end;do if bC~=0X00001 then if bC==0X0 then uC=uC+dL-0X1;NL=uC;else uC=dL+bC-0X2;NL=uC+0X1;end;local WC=(0);for eC=dL,uC do WC=WC+0X1;do(YL)[eC]=EC[WC];end;end;else do NL=dL-0x01;end;end;end;CL=CL+1;dL=0x00001;(YL[dL])(F(YL,dL+0X1,NL));do NL=dL-0X1;end;PL=FL[CL];CL=CL+0X0001;do CL=PL[4];end;else end;end;end;end;end;end;end;end);do if nL then if TL then if rL==1 then do return YL[ML]();end;else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;else if z(TL)=='\st\114\105n\g'then if not(V(TL,'at\116\101m\p\116\ \116\111\032\yi\101l\d\ \097\c\114\os\s\ \109\eta\m\et\104o\d/C\037\-\099a\l\108\ \098ou\110\dar\121'))then else return q();end;do if not(V(TL,'\^.-\:\%\d+:\032'))then G(TL,0);else(G)("\Lura\112\h\ \083\cr\105\p\116\058"..(_L[CL-0X1]or"(\in\116\101\114\110\097\108\)")..'\: '..l(TL),0);end;end;else(G)(TL,0);end;end;end;end;end;end;end;else if not(HL<27)then if HL~=28 then aL=function(...)local YL=({});local CL=1;local kL={[0X1]=YL,[2]=qL};local OL=Q();local NL=0X0;local LL,hL=on(...);LL=LL-1;for PL=0X0,LL do do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;local KL=((OL==_ and sL or OL));if not SL then do hL=nil;end;elseif iL then do YL[XL]={n=LL>=XL and LL-XL+1 or 0X0,F(hL,XL+1,LL+1)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+1;if wL<6 then if wL>=3 then if not(wL>=4)then(YL)[PL[5]]=KL[PL[1]];else if wL==0X0005 then CL=PL[0x4];else do(YL)[PL[0X05]]=YL[PL[4]]/YL[PL[7]];end;end;end;else do if not(wL<1)then if wL==2 then YL[PL[5]]=YL[PL[0X4]]+YL[PL[7]];else(YL)[PL[5]]=PL[1];end;else local AL=(RL[0]);YL[0X1]=AL[1][AL[2]];local dL=1;PL=FL[CL];local DL=(2);CL=CL+0X00001;local BL=YL[1];(YL)[dL+1]=BL;(YL)[dL]=BL[PL[0X03]];PL=FL[CL];do CL=CL+0X1;end;(YL)[0X003]=KL[PL[1]];CL=CL+1;CL=CL+0x0001;PL=FL[CL];do CL=CL+1;end;(YL)[0X004]=KL[PL[1]];do CL=CL+1;end;CL=CL+0x1;do PL=FL[CL];end;do CL=CL+0X1;end;(YL)[0X00004]=YL[4][PL[3]];CL=CL+0x1;CL=CL+1;do CL=CL+1;end;do dL=0x3;end;local bC=0X00000;if DL==0 then else NL=dL+DL-1;end;local uC,EC=nil,nil;if DL~=0x001 then uC,EC=on(YL[dL](F(YL,dL+1,NL)));else uC,EC=on(YL[dL]());end;if bC~=1 then if bC==0 then uC=uC+dL-0X1;NL=uC;else uC=dL+bC-2;NL=uC+1;end;local WC=0;for eC=dL,uC do WC=WC+1;YL[eC]=EC[WC];end;else NL=dL-1;end;CL=CL+1;dL=1;(YL[dL])(F(YL,dL+1,NL));do NL=dL-1;end;PL=FL[CL];do CL=CL+0X1;end;(YL)[0X1]=KL[PL[1]];CL=CL+1;do CL=CL+0x1;end;CL=CL+1;do NL=0X00001;end;YL[NL]();NL=NL-1;do CL=CL+1;end;CL=CL+1;CL=CL+0x00001;repeat local WC,eC=mL,YL;local oC=({});do for jC,zC in U,WC do for lC,GC in U,zC do do if not(GC[1]==eC and GC[0x002]>=0X0)then else local vC=(GC[0X2]);if not(not oC[vC])then else oC[vC]={eC[vC]};end;GC[1]=oC[vC];GC[2]=1;end;end;end;end;end;until true;return;end;end;end;else if wL<0X09 then do if not(wL<7)then if wL~=8 then local AL=(PL[0X00005]);local BL,DL=YL[AL+0X00001],YL[AL+0X2];local dL=(YL[AL]);do YL[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);end;do CL=PL[0X04];end;else(YL)[PL[5]]=-YL[PL[0X0004]];end;else local AL=PL[0X4];local BL=(AL[0X2]);local DL,dL=#BL,(nil);if DL>0X0 then dL={};do for bC=0x00001,DL do local uC=(BL[bC]);if uC[1]==0 then do dL[bC-0X0001]={YL,uC[0x002]};end;else dL[bC-0X1]=RL[uC[0X2]];end;end;end;(x)(mL,dL);end;do(YL)[PL[0x5]]=cn(dL,KL,AL);end;end;end;else if wL<0Xb then if wL~=10 then(YL)[PL[5]]={F({},1,PL[0X4])};else end;else if wL~=12 then repeat local dL,BL=mL,(YL);local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[2]>=0 then local eC=WC[2];do if not DL[eC]then DL[eC]={BL[eC]};end;end;(WC)[1]=DL[eC];WC[2]=0X01;end;end;end;until true;local AL=PL[5];return false,AL,AL+PL[0X4]-2;else for AL=PL[5],PL[4]do(YL)[AL]=nil;end;end;end;end;end;end;end;end);do if not(nL)then if z(TL)~="\st\114\i\110\g"then(G)(TL,0X0);else if not(V(TL,'a\116t\e\mpt\032t\111\ \121\i\e\108d\ \097c\114\111\ss\032\m\e\116a\109\e\116\h\o\d\047\067%\045\099a\108\108\ \098\o\117n\100a\114\y'))then else return q();end;if V(TL,"\^\.\-:\037\100\+\058\ ")then(G)("\L\117ra\112\h \083\cr\i\pt\:"..(_L[CL-1]or"\(in\116\er\110a\108\041").."\:\ "..l(TL),0X00000);else G(TL,0X00000);end;end;else do if TL then if rL==0X001 then return YL[ML]();else return YL[ML](F(YL,ML+1,NL));end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;else aL=function(...)local CL=(1);local YL=({});local OL=(Q());local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);do LL=LL-0x1;end;do for PL=0,LL do if XL>PL then YL[PL]=hL[PL+0X1];else break;end;end;end;local KL,NL=(OL==_ and sL or OL),(0X0);if not SL then hL=nil;elseif not(iL)then else(YL)[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+1)};end;do if KL==OL then else(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+0X1;if wL>=0X00006 then if wL>=9 then if not(wL<0X0000A)then if wL~=0Xb then(YL)[PL[5]]=KL[PL[0X1]];else CL=PL[4];end;else do YL[PL[0X05]]=M(YL[PL[0X04]],YL[PL[0X7]]);end;end;else if not(wL>=7)then else if wL~=0X8 then(YL)[PL[5]]={F({},0X1,PL[4])};else do YL[1]=KL[PL[1]];end;CL=CL+1;YL[2]=YL[0X0];PL=FL[CL];CL=CL+0X1;do YL[1][PL[1]]=YL[2];end;PL=FL[CL];CL=CL+1;(YL)[1]=KL[PL[1]];CL=CL+0X1;CL=CL+0X001;CL=CL+1;NL=0X1;(YL[NL])();NL=NL-0X001;CL=CL+1;repeat local BL={};local AL,dL=mL,YL;for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[0x0002]>=0X0)then else local WC=EC[0X2];do if not BL[WC]then do(BL)[WC]={dL[WC]};end;end;end;EC[0X001]=BL[WC];(EC)[0X2]=0X001;end;end;end;until true;do return;end;end;end;end;else if not(wL<3)then if wL<4 then(YL)[PL[0X5]]=PL[0X0001];else if wL~=5 then do(YL)[PL[5]]=YL[PL[4]][YL[PL[0X7]]];end;else do(KL)[PL[1]]=YL[PL[0X5]];end;end;end;else if wL<1 then if YL[PL[0X4]]~=YL[PL[7]]then else do CL=PL[0x5];end;end;else do if wL~=2 then local AL=PL[5];local dL=(g(function(...)q();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do(q)(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));(dL)(YL[AL],YL[AL+1],YL[AL+2]);NL=AL;do YL[AL]=dL;end;do CL=PL[4];end;else local AL=PL[4];local dL=(nil);local BL=AL[2];local DL=(#BL);if DL>0X0 then do dL={};end;do for bC=0X1,DL do local uC=(BL[bC]);do if uC[0X01]==0 then dL[bC-0X1]={YL,uC[0x2]};else dL[bC-0x1]=RL[uC[0X2]];end;end;end;end;x(mL,dL);end;(YL)[PL[0x5]]=cn(dL,KL,AL);end;end;end;end;end;end;end);if nL then if TL then if rL~=0x1 then do return YL[ML](F(YL,ML+0X001,NL));end;else do return YL[ML]();end;end;elseif ML then do return F(YL,ML,rL);end;end;else if z(TL)~='\s\116\114\i\110\g'then G(TL,0);else if not(V(TL,"\097\116\116emp\116\032t\o\ \y\105\el\100\032a\cro\s\s\032m\e\116a\m\101\116\h\od/\067\%-c\097\l\108\ \098\111un\da\114y"))then else return q();end;if not(V(TL,'^\.\-\058\%\100+: '))then G(TL,0x00);else(G)('\L\117\114\097\p\104\032\S\099\114\105p\116\:'..(_L[CL-0X1]or'\(in\116\101\114\110\097l\041')..'\058\ '..l(TL),0X0);end;end;end;end;end;else if HL==0X1a then do aL=function(...)local CL=0X1;local YL=({});local OL=(Q());local kL,KL={[2]=qL,[0X1]=YL},(OL==_ and sL or OL);local LL,hL=on(...);LL=LL-0x1;local NL=(0X00000);for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+0X1,LL+0x1)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+0X1;if not(wL<21)then if wL>=32 then do if not(wL>=0X25)then if wL>=0X22 then do if not(wL>=35)then do(YL)[0Xe]=PL[1];end;PL=FL[CL];local AL=(14);CL=CL+0x1;do(YL)[0X0000f]=PL[1];end;CL=CL+0x1;YL[0x10]=YL[2];CL=CL+0X1;(YL)[0X11]=YL[0x0006];CL=CL+1;(YL)[18]=YL[7];CL=CL+1;repeat local dL,BL=mL,YL;local DL={};for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[0X2]>=0X0 then local eC=WC[2];if not(not DL[eC])then else do DL[eC]={BL[eC]};end;end;WC[1]=DL[eC];(WC)[2]=1;end;end;end;until true;do return false,AL,AL+6-2;end;else if wL==0x00024 then local AL=(RL[0X1]);do YL[3]=AL[1][AL[0x02]];end;PL=FL[CL];do CL=CL+0X01;end;YL[4]=KL[PL[1]];PL=FL[CL];do CL=CL+0X1;end;YL[0X00005]=KL[PL[0X1]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0x5]=YL[5][PL[3]];CL=CL+1;CL=CL+1;CL=CL+0x1;(YL)[4]=YL[4][YL[0X5]];CL=CL+1;do(YL)[0x3]=YL[0x3][YL[4]];end;CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X0001;YL[0X3]=YL[3][PL[3]];PL=FL[CL];do CL=CL+0x0001;end;YL[4]=YL[3]==PL[0X3];PL=FL[CL];CL=CL+1;if not YL[4]then do CL=PL[0X4];end;end;else local AL=RL[0X0];(YL)[1]=AL[0X1][AL[0X0002]];CL=CL+0X1;CL=CL+0X00001;PL=FL[CL];CL=CL+1;if not(not YL[1])then else CL=PL[0x4];end;end;end;end;else do if wL==0X21 then YL[PL[0X5]]=YL[PL[0X4]]-YL[PL[0x7]];else local AL=(RL[4]);YL[0X8]=AL[1][AL[0X002]];PL=FL[CL];local dL=0X8;CL=CL+0X00001;YL[0X00009]=PL[1];do CL=CL+0X1;end;YL[dL](YL[dL+0X1]);NL=dL-1;do PL=FL[CL];end;CL=CL+0X1;do(YL)[0X0008]=PL[0x1];end;CL=CL+0X1;repeat local DL,bC,uC=mL,YL,{};for EC,WC in U,DL do do for eC,oC in U,WC do if not(oC[0X1]==bC and oC[2]>=0)then else local jC=oC[2];if not uC[jC]then uC[jC]={bC[jC]};end;(oC)[0X01]=uC[jC];oC[0X02]=1;end;end;end;end;until true;local BL=0X08;do return false,BL,BL;end;end;end;end;else if wL<40 then if wL<38 then local AL=(RL[0X4]);YL[14]=AL[0X1][AL[2]];do CL=CL+0X1;end;local dL,BL=14,0Xe;CL=CL+1;do PL=FL[CL];end;CL=CL+0X00001;(YL)[0XF]=PL[0X1];CL=CL+1;(YL[dL])(YL[dL+0X1]);NL=dL-0X0001;CL=CL+0X1;CL=CL+0X1;PL=FL[CL];do CL=CL+0X1;end;do YL[14]=PL[0x01];end;CL=CL+0X1;repeat local DL,bC,uC=mL,YL,{};for EC,WC in U,DL do for eC,oC in U,WC do do if oC[0x1]==bC and oC[0X00002]>=0 then local jC=(oC[0X2]);do if not uC[jC]then uC[jC]={bC[jC]};end;end;oC[1]=uC[jC];do(oC)[2]=0X1;end;end;end;end;end;until true;return false,BL,BL;else do if wL~=0X27 then(YL)[PL[0X5]]=YL[PL[0X4]];else local AL,dL=PL[0X05],(PL[0x0004]);do if dL==0X00 then else NL=AL+dL-1;end;end;local DL,bC,BL=nil,nil,PL[0X007];if dL~=0X00001 then DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));else DL,bC=on(YL[AL]());end;do if BL~=1 then if BL==0X00000 then do DL=DL+AL-1;end;NL=DL;else DL=AL+BL-2;NL=DL+0x1;end;local uC=(0);for EC=AL,DL do uC=uC+0x001;(YL)[EC]=bC[uC];end;else NL=AL-0X0001;end;end;end;end;end;else if wL<41 then do repeat local dL,BL=mL,(YL);local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do if WC[1]==BL and WC[0X002]>=0 then local eC=WC[2];if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;WC[0x1]=DL[eC];(WC)[2]=1;end;end;end;until true;end;local AL=(PL[5]);return false,AL,AL;else if wL~=0X00002A then do YL[14]=KL[PL[1]];end;PL=FL[CL];CL=CL+0X1;do(YL)[0X000F]=KL[PL[1]];end;PL=FL[CL];CL=CL+0X001;do(YL)[0X0000f]=YL[0Xf][PL[0x3]];end;do CL=CL+0X1;end;(YL)[14]=YL[14][YL[15]];CL=CL+0X01;do CL=CL+0X1;end;do PL=FL[CL];end;do CL=CL+0X1;end;if YL[14]==YL[13]then else CL=PL[0X5];end;else YL[0x1]=KL[PL[1]];PL=FL[CL];CL=CL+0X1;(YL)[1]=YL[0x1][PL[3]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+1;if not(YL[1])then else CL=PL[0x4];end;end;end;end;end;end;else if wL<0X1A then if not(wL<23)then do if wL>=0X18 then do if wL==0X19 then YL[0X1]=KL[PL[1]];do PL=FL[CL];end;CL=CL+1;local AL=(1);YL[2]=PL[0X1];CL=CL+1;do YL[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;do CL=CL+1;end;CL=CL+1;do CL=CL+1;end;(YL)[0X2]=YL[0X1];PL=FL[CL];CL=CL+1;if not(not YL[0X2])then else CL=PL[0X004];end;else do YL[0xB]=KL[PL[1]];end;PL=FL[CL];do CL=CL+1;end;(YL)[0X0000B]=YL[11][PL[3]];CL=CL+0X1;do CL=CL+0x1;end;PL=FL[CL];CL=CL+0X001;if not(YL[0Xb])then else do CL=PL[0X4];end;end;end;end;else repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if EC[1]==dL and EC[0X2]>=0X0 then local WC=(EC[0X2]);if not(not BL[WC])then else do BL[WC]={dL[WC]};end;end;do EC[0X1]=BL[WC];end;EC[0X0002]=1;end;end;end;until true;do return;end;end;end;else if wL~=22 then(YL)[0XB]=KL[PL[0X001]];local AL=11;CL=CL+1;YL[0XC]=YL[0X09];CL=CL+1;local dL=(0X0002);if dL==0 then else NL=AL+dL-0X01;end;local BL=(0X4);local DL,bC=nil,(nil);do if dL~=1 then do DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;else DL,bC=on(YL[AL]());end;end;if BL==0X0001 then NL=AL-1;else if BL~=0x000 then DL=AL+BL-2;NL=DL+1;else DL=DL+AL-1;NL=DL;end;local EC=(0X0);for WC=AL,DL do EC=EC+0x1;YL[WC]=bC[EC];end;end;PL=FL[CL];CL=CL+1;AL=11;local uC=g(function(...)q();for EC,WC in...do q(true,EC,WC);end;end);(uC)(YL[AL],YL[AL+0x1],YL[AL+0X2]);NL=AL;(YL)[AL]=uC;CL=PL[4];else YL[0XE]=KL[PL[1]];do PL=FL[CL];end;do CL=CL+1;end;(YL)[0xE]=YL[14][PL[3]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;do if not(not YL[0XE])then else CL=PL[0X4];end;end;end;end;else if not(wL<0X001d)then if wL>=30 then do if wL~=31 then if not(YL[PL[4]]<YL[PL[0X007]])then else CL=PL[5];end;else if YL[PL[4]]~=PL[0x03]then else do CL=PL[0X5];end;end;end;end;else local AL=PL[0x5];local dL,BL,DL=YL[AL]();do if dL then YL[AL+0X1]=BL;(YL)[AL+2]=DL;CL=PL[0x04];end;end;end;else do if wL>=0X00001b then do if wL==28 then do if not(YL[PL[5]])then else CL=PL[0X00004];end;end;else do CL=PL[4];end;end;end;else do(YL)[14]=PL[0x1];end;PL=FL[CL];local AL=(0X0000E);do CL=CL+1;end;do(YL)[15]=PL[0x00001];end;CL=CL+0X001;do YL[16]=YL[0x2];end;CL=CL+1;do(YL)[17]=YL[6];end;CL=CL+0X1;(YL)[0X12]=YL[7];do CL=CL+0X1;end;repeat local DL={};local dL,BL=mL,(YL);for bC,uC in U,dL do for EC,WC in U,uC do if not(WC[0X1]==BL and WC[0X02]>=0)then else local eC=(WC[0X00002]);do if not DL[eC]then do(DL)[eC]={BL[eC]};end;end;end;WC[1]=DL[eC];WC[2]=0x1;end;end;end;until true;return false,AL,AL+0X6-2;end;end;end;end;end;else if wL>=10 then do if wL>=15 then if not(wL<0X0012)then do if not(wL<19)then do if wL==20 then if not(not YL[PL[5]])then else CL=PL[0X4];end;else YL[0X0000b]=KL[PL[0X01]];PL=FL[CL];CL=CL+0X1;YL[11]=YL[0Xb][PL[0x3]];CL=CL+0X001;CL=CL+0x00001;PL=FL[CL];CL=CL+1;if not YL[11]then CL=PL[4];end;end;end;else local AL=(RL[4]);do YL[0x000B]=AL[1][AL[2]];end;do CL=CL+0X1;end;CL=CL+0x01;PL=FL[CL];do CL=CL+1;end;(YL)[0XC]=PL[0X1];local dL=0xb;do CL=CL+1;end;(YL[dL])(YL[dL+1]);NL=dL-0X1;CL=CL+1;do CL=CL+0X00001;end;do PL=FL[CL];end;CL=CL+0x00001;CL=PL[4];end;end;else if wL>=16 then if wL==0X00011 then else(YL)[8]=KL[PL[0x1]];CL=CL+0X1;CL=CL+0X0001;do PL=FL[CL];end;CL=CL+0x1;YL[8]=YL[0X8][PL[3]];PL=FL[CL];CL=CL+1;if not(not YL[8])then else CL=PL[4];end;end;else if not(YL[PL[0X4]]<YL[PL[0X7]])then CL=PL[0X005];end;end;end;else if not(wL>=0X00C)then if wL==11 then local AL=(RL[4]);(YL)[0X000B]=AL[0X1][AL[2]];PL=FL[CL];CL=CL+0X1;YL[12]=PL[0x1];do CL=CL+0X001;end;local dL=(11);YL[dL](YL[dL+1]);do NL=dL-0x01;end;do PL=FL[CL];end;do CL=CL+0X001;end;YL[11]=PL[1];CL=CL+0X1;do repeat local DL,bC=mL,YL;local uC=({});for EC,WC in U,DL do for eC,oC in U,WC do do if not(oC[1]==bC and oC[2]>=0)then else local jC=oC[2];do if not(not uC[jC])then else(uC)[jC]={bC[jC]};end;end;oC[1]=uC[jC];oC[0X2]=0X1;end;end;end;end;until true;end;local BL=(0XB);return false,BL,BL;else local AL=(RL[4]);(YL)[0X0B]=AL[1][AL[2]];do PL=FL[CL];end;CL=CL+0x001;(YL)[12]=PL[1];local dL,BL=11,11;CL=CL+0X1;YL[dL](YL[dL+0X1]);NL=dL-0X1;PL=FL[CL];do CL=CL+1;end;YL[0X0000b]=PL[1];CL=CL+1;repeat local DL,bC=mL,(YL);local uC={};for EC,WC in U,DL do do for eC,oC in U,WC do do if not(oC[0x1]==bC and oC[2]>=0)then else local jC=oC[0X2];if not uC[jC]then(uC)[jC]={bC[jC]};end;oC[0X1]=uC[jC];do(oC)[0X0002]=0x1;end;end;end;end;end;end;until true;return false,BL,BL;end;else if wL<0XD then local AL=(RL[0X4]);do(YL)[11]=AL[0X1][AL[0x2]];end;PL=FL[CL];CL=CL+0X1;local dL=(11);YL[0X0C]=PL[0X1];do CL=CL+0X1;end;(YL[dL])(YL[dL+0X1]);NL=dL-0X001;PL=FL[CL];CL=CL+1;CL=PL[0X4];else if wL==0xE then for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;else(YL)[PL[5]]=#YL[PL[0X0004]];end;end;end;end;end;else if wL>=5 then if wL<7 then do if wL~=6 then do(YL)[0Xe]=KL[PL[0X0001]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[0XF]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+0X0001;end;do(YL)[15]=YL[0X00F][PL[3]];end;CL=CL+0X1;do CL=CL+0X1;end;CL=CL+0X1;(YL)[0X000E]=YL[0X000E][YL[0Xf]];do CL=CL+0X1;end;do CL=CL+0x1;end;PL=FL[CL];do CL=CL+0X1;end;do if YL[14]~=YL[13]then do CL=PL[0x5];end;end;end;else YL[0x0005]=KL[PL[0X0001]];local DL=(2);PL=FL[CL];local AL=(5);CL=CL+0X1;(YL)[6]=PL[1];local dL=(RL[0X00002]);CL=CL+0x01;do(YL)[AL]=YL[AL](YL[AL+1]);end;NL=AL;do CL=CL+1;end;CL=CL+1;CL=CL+1;(YL)[0X00006]=dL[0x00001][dL[0X0002]];CL=CL+1;CL=CL+1;CL=CL+1;dL=RL[0X003];YL[7]=dL[0x1][dL[2]];PL=FL[CL];CL=CL+0X1;do(YL)[7]=YL[7][PL[3]];end;local BL=YL[0X007];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;AL=0X7;YL[AL+0X1]=BL;(YL)[AL]=BL[PL[0X00003]];CL=CL+0X001;AL=0X00007;local bC=(0);if DL==0 then else NL=AL+DL-0X01;end;local uC,EC=nil,nil;if DL==1 then do uC,EC=on(YL[AL]());end;else uC,EC=on(YL[AL](F(YL,AL+1,NL)));end;do if bC~=0X001 then if bC~=0X0 then uC=AL+bC-0x0002;NL=uC+0X01;else uC=uC+AL-0X1;NL=uC;end;local WC=0;for eC=AL,uC do do WC=WC+1;end;YL[eC]=EC[WC];end;else NL=AL-0X01;end;end;CL=CL+0X1;do AL=0X006;end;do YL[AL]=YL[AL](F(YL,AL+1,NL));end;NL=AL;CL=CL+0x0001;CL=CL+1;CL=CL+0x1;dL=RL[0X2];do(YL)[7]=dL[1][dL[2]];end;CL=CL+0X1;CL=CL+0X001;do CL=CL+0X1;end;dL=RL[3];(YL)[8]=dL[0X1][dL[2]];CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;YL[0X0008]=YL[8][PL[0x3]];PL=FL[CL];CL=CL+1;YL[0X8]=YL[0x008][PL[0X3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+1;do YL[0X8]=YL[0X8][PL[0X003]];end;CL=CL+0X1;AL=0X0007;(YL)[AL]=YL[AL](YL[AL+0x0001]);NL=AL;do PL=FL[CL];end;do CL=CL+0X1;end;do(YL)[8]=YL[6]+PL[0X3];end;PL=FL[CL];CL=CL+1;do if not(not(YL[7]<=YL[0X8]))then else CL=PL[0X0005];end;end;end;end;else do if wL<8 then(YL)[PL[5]]=PL[0x1];else if wL~=9 then local AL=PL[0X4];local BL=AL[2];local DL,dL=#BL,(nil);do if DL>0x0000 then dL={};for bC=0X001,DL do local uC=(BL[bC]);if uC[0x1]~=0 then(dL)[bC-1]=RL[uC[0X2]];else(dL)[bC-1]={YL,uC[0X2]};end;end;x(mL,dL);end;end;YL[PL[0X0005]]=cn(dL,KL,AL);else local AL=RL[4];(YL)[0X8]=AL[1][AL[2]];do PL=FL[CL];end;local dL=0x8;do CL=CL+0X0001;end;(YL)[0X9]=PL[1];CL=CL+0X1;YL[dL](YL[dL+0X1]);NL=dL-1;CL=CL+1;do CL=CL+0X001;end;PL=FL[CL];do CL=CL+1;end;do(YL)[8]=PL[1];end;local BL=(8);CL=CL+1;do repeat local DL,bC=mL,YL;local uC=({});do for EC,WC in U,DL do for eC,oC in U,WC do if oC[0X0001]==bC and oC[2]>=0X0 then local jC=(oC[0X2]);if not(not uC[jC])then else uC[jC]={bC[jC]};end;oC[0x1]=uC[jC];do oC[0x0002]=1;end;end;end;end;end;until true;end;do return false,BL,BL;end;end;end;end;end;else do if wL<0X0002 then do if wL~=0X0001 then YL[0Xb]=KL[PL[0X1]];local AL=0X00B;do PL=FL[CL];end;CL=CL+1;YL[12]=YL[8][PL[3]];CL=CL+0X1;local dL,BL=0x0002,4;if dL~=0 then NL=AL+dL-1;end;local DL,bC=nil,nil;if dL==0X1 then do DL,bC=on(YL[AL]());end;else do DL,bC=on(YL[AL](F(YL,AL+1,NL)));end;end;if BL==1 then NL=AL-1;else do if BL~=0 then do DL=AL+BL-0X2;end;NL=DL+1;else DL=DL+AL-1;NL=DL;end;end;local EC=(0X0);for WC=AL,DL do EC=EC+0X001;do(YL)[WC]=bC[EC];end;end;end;PL=FL[CL];CL=CL+0x01;do AL=0X000B;end;local uC=(g(function(...)(q)();for EC,WC in...do(q)(true,EC,WC);end;end));uC(YL[AL],YL[AL+1],YL[AL+0X2]);do NL=AL;end;YL[AL]=uC;do CL=PL[0X04];end;else local AL=PL[0X5];local dL,BL=YL[AL]();if dL then do for DL=0X00001,PL[7]do YL[AL+DL]=BL[DL];end;end;do CL=PL[0X04];end;end;end;end;else if wL<0X3 then(YL)[PL[0X5]]={F({},1,PL[4])};else if wL~=4 then local AL=(RL[0X5]);do YL[0X8]=AL[0X1][AL[2]];end;PL=FL[CL];do CL=CL+0X1;end;(YL)[0X8]=YL[0X8][PL[0X3]];CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+1;(YL)[8]=YL[0x008][PL[0x00003]];CL=CL+0x0001;AL=RL[0X5];YL[0X0009]=AL[0X0001][AL[0X2]];PL=FL[CL];do CL=CL+1;end;(YL)[0x0009]=YL[9][PL[3]];local dL=11;PL=FL[CL];do CL=CL+1;end;do(YL)[0X9]=YL[9][PL[0x3]];end;CL=CL+0x01;CL=CL+1;do PL=FL[CL];end;CL=CL+1;YL[10]=KL[PL[1]];do CL=CL+1;end;NL=10;do(YL)[NL]=YL[NL]();end;CL=CL+1;AL=RL[0X6];YL[11]=AL[1][AL[2]];CL=CL+0x1;CL=CL+1;do PL=FL[CL];end;CL=CL+0X1;(YL)[11]=YL[0Xb][PL[0x0003]];do CL=CL+0X01;end;CL=CL+0x001;CL=CL+1;YL[12]=YL[10];PL=FL[CL];do CL=CL+1;end;(YL)[0x0000D]=KL[PL[1]];CL=CL+0X001;CL=CL+0x1;PL=FL[CL];CL=CL+0X00001;(YL)[13]=YL[0Xd][PL[0X3]];CL=CL+0X1;(YL)[dL]=YL[dL](YL[dL+1],YL[dL+0X2]);NL=dL;CL=CL+1;CL=CL+0X0001;PL=FL[CL];CL=CL+1;if not(not YL[0XB])then else CL=PL[4];end;else do YL[PL[0X5]]=KL[PL[0X01]];end;end;end;end;end;end;end;end;end;end;end);if nL then if TL then do if rL~=0X01 then return YL[ML](F(YL,ML+1,NL));else do return YL[ML]();end;end;end;elseif ML then do return F(YL,ML,rL);end;end;else if z(TL)=='\115t\114\i\110\103'then do if V(TL,"at\116\101\m\112t t\o \121\i\101\l\100\032\097\c\114\111\s\115\ \m\e\116a\m\e\116\h\o\100\/\067%\045ca\l\108\ \098\ou\110\100a\114\y")then return q();end;end;if not(V(TL,'^\.\-\:\%\d\+\058\032'))then(G)(TL,0X0);else G("\L\117\114\097p\h\ S\cr\105\p\116\:"..(_L[CL-0x1]or'\(\i\110t\101rn\097l\041')..': '..l(TL),0);end;else(G)(TL,0X00);end;end;end;end;else do aL=function(...)local CL,YL,NL=1,{},(0);local kL=({[2]=qL,[0X1]=YL});local OL=(Q());local KL=(OL==_ and sL or OL);local LL,hL=on(...);LL=LL-1;for PL=0,LL do if XL>PL then do(YL)[PL]=hL[PL+1];end;else do break;end;end;end;if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0X0001 or 0,F(hL,XL+1,LL+0x01)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+0x001;if wL>=0X9 then if not(wL<0x0000d)then if wL>=0XF then if not(wL>=16)then local AL=PL[0X05];local dL,BL=YL[AL]();do if dL then do CL=PL[4];end;YL[AL+0x003]=BL;end;end;else if wL==17 then CL=PL[4];else local AL=(PL[0X5]);local dL=PL[0x4];NL=AL+dL-0X00001;do repeat local BL,DL=mL,(YL);local bC={};do for uC,EC in U,BL do for WC,eC in U,EC do if not(eC[0X1]==DL and eC[0X2]>=0)then else local oC=eC[0X02];do if not bC[oC]then do(bC)[oC]={DL[oC]};end;end;end;eC[1]=bC[oC];eC[0X2]=1;end;end;end;end;until true;end;return true,AL,dL;end;end;else if wL~=14 then(YL)[PL[5]]=KL[PL[1]];else local AL=PL[0X4];local BL=(AL[2]);local DL=(#BL);local dL=nil;if DL>0 then do dL={};end;for bC=0X1,DL do local uC=BL[bC];if uC[1]==0 then do dL[bC-1]={YL,uC[2]};end;else do dL[bC-0X1]=RL[uC[2]];end;end;end;(x)(mL,dL);end;YL[PL[0X5]]=cn(dL,KL,AL);end;end;else if not(wL<11)then if wL~=12 then else YL[PL[5]][YL[PL[0X00004]]]=YL[PL[7]];end;else if wL~=10 then YL[PL[0X0005]]=M(YL[PL[4]],YL[PL[7]]);else YL[PL[0X5]]=YL[PL[0X04]]/YL[PL[0x7]];end;end;end;else do if wL>=4 then if wL>=6 then if not(wL<7)then if wL==0X008 then(YL)[1]=KL[PL[1]];CL=CL+0X00001;(YL)[2]=YL[0X0];PL=FL[CL];CL=CL+0X1;local uC=(0X01);(YL[1])[PL[0X1]]=YL[2];local BL=(nil);PL=FL[CL];CL=CL+0X1;do(YL)[1]=KL[PL[1]];end;CL=CL+0x1;do CL=CL+1;end;CL=CL+0X1;NL=1;(YL[NL])();NL=NL-1;local AL=(RL[0X0]);CL=CL+0X1;YL[1]=AL[0x01][AL[0X2]];PL=FL[CL];CL=CL+0X1;local dL=PL[0X0004];local DL=dL[2];local bC=#DL;if bC>0x00 then BL={};do for EC=1,bC do local WC=(DL[EC]);if WC[0X01]==0 then do BL[EC-0x0001]={YL,WC[2]};end;else do(BL)[EC-1]=RL[WC[2]];end;end;end;end;(x)(mL,BL);end;(YL)[0X0002]=cn(BL,KL,dL);CL=CL+0X001;YL[uC](YL[uC+1]);do NL=uC-0X001;end;CL=CL+0X01;do repeat local EC,WC=mL,(YL);local eC=({});do for oC,jC in U,EC do do for zC,lC in U,jC do if lC[1]==WC and lC[2]>=0X0 then local GC=(lC[2]);if not eC[GC]then eC[GC]={WC[GC]};end;do(lC)[1]=eC[GC];end;(lC)[2]=1;end;end;end;end;end;until true;end;return;else(YL)[PL[0X0005]]=YL[PL[4]]>=YL[PL[0x7]];end;else repeat local AL,dL,BL=mL,YL,(PL[5]);local DL=({});for bC,uC in U,AL do for EC,WC in U,uC do do if not(WC[1]==dL and WC[0X0002]>=BL)then else local eC=(WC[2]);if not DL[eC]then DL[eC]={dL[eC]};end;(WC)[1]=DL[eC];(WC)[2]=1;end;end;end;end;until true;end;else if wL~=5 then if YL[PL[4]]<YL[PL[0X7]]then do CL=PL[5];end;end;else YL[PL[0X05]]=PL[0X0001];end;end;else if not(wL>=2)then if wL==1 then local AL=YL[PL[0X4]]/YL[PL[0X7]];do(YL)[PL[5]]=AL-AL%1;end;else do YL[PL[0X005]]={F({},1,PL[0X4])};end;end;else if wL~=3 then(YL)[PL[5]]=YL[PL[0x4]]==YL[PL[7]];else do if not YL[PL[5]]then CL=PL[0X4];end;end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=='\st\114\in\g'then if not(V(TL,"\097tt\101m\pt\ to\ y\i\e\108\d\ \097cro\s\115\ m\et\097\109\et\104\o\d\/\C\%\-\ca\l\l bo\117\110\d\097r\121"))then else return q();end;do if not(V(TL,"\094.\-:%\d\+\:\ "))then G(TL,0);else(G)("\076u\114ap\h\ S\cr\105pt\:"..(_L[CL-0X1]or"\(in\116\e\114na\l\)").."\:\ "..l(TL),0X0);end;end;else G(TL,0);end;end;else if TL then if rL==0X1 then return YL[ML]();else return YL[ML](F(YL,ML+0X0001,NL));end;elseif ML then return F(YL,ML,rL);end;end;end;end;end;end;end;end;elseif not(HL>=0x15)then if HL>=19 then if HL~=0X14 then do aL=function(...)local YL={};local CL=0X1;local OL=Q();local LL,hL=on(...);local kL=({[2]=qL,[0X1]=YL});LL=LL-1;for PL=0X0,LL do if XL>PL then do YL[PL]=hL[PL+1];end;else break;end;end;local NL,KL=0X0,((OL==_ and sL or OL));if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0x001 or 0,F(hL,XL+1,LL+1)};end;if KL~=OL then X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X0002];CL=CL+1;if wL>=9 then if not(wL>=13)then do if wL>=11 then do if wL~=12 then do for AL=PL[0X5],PL[4]do(YL)[AL]=nil;end;end;else do(YL)[0X0001]=KL[PL[0X1]];end;CL=CL+0X001;do CL=CL+1;end;CL=CL+0X001;YL[2]=YL[0];PL=FL[CL];CL=CL+1;do(YL[0X1])[PL[1]]=YL[0X2];end;PL=FL[CL];CL=CL+1;YL[1]=KL[PL[0X1]];CL=CL+1;NL=1;YL[NL]();NL=NL-0x0001;do CL=CL+0x00001;end;CL=CL+1;PL=FL[CL];CL=CL+0x1;if not YL[0X00000]then CL=PL[0X4];end;end;end;else if wL==10 then do YL[PL[0x5]]={F({},0X1,PL[4])};end;else local AL=(RL[0X0001]);YL[1]=AL[1][AL[2]];CL=CL+1;AL=RL[0];YL[0x0002]=AL[0X01][AL[0x02]];CL=CL+0X1;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+1;end;do YL[0X0002]=YL[2][PL[0x00003]];end;CL=CL+0x1;CL=CL+0X0001;PL=FL[CL];CL=CL+0x001;do YL[0x00002]=YL[0X2][PL[0X3]];end;PL=FL[CL];do CL=CL+0X1;end;(YL)[0X0003]=PL[1];local dL=(0x1);CL=CL+0X1;YL[dL]=YL[dL](YL[dL+0X00001],YL[dL+2]);NL=dL;CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0X00001;do if not YL[1]then CL=PL[0x4];end;end;end;end;end;else do if not(wL>=0XF)then if wL~=0x00e then if not(YL[PL[4]]<=YL[PL[0X7]])then do CL=PL[5];end;end;else local AL=RL[1];YL[0x1]=AL[0X1][AL[0X2]];do CL=CL+1;end;AL=RL[0];do YL[0X0002]=AL[1][AL[0X2]];end;CL=CL+0X1;CL=CL+0X00001;PL=FL[CL];CL=CL+1;(YL)[2]=YL[0X2][PL[0X3]];do PL=FL[CL];end;CL=CL+0X1;do YL[3]=PL[1];end;local dL=(0X0001);CL=CL+0x1;YL[dL]=YL[dL](YL[dL+0X1],YL[dL+0X2]);NL=dL;CL=CL+1;do CL=CL+0X1;end;do PL=FL[CL];end;do CL=CL+1;end;if not(not YL[1])then else CL=PL[4];end;end;else do if not(wL>=16)then YL[PL[0X5]]=YL[PL[4]]<=YL[PL[0x07]];else if wL~=17 then do if YL[PL[0x04]]<=YL[PL[0x00007]]then CL=PL[0X005];end;end;else if YL[PL[4]]~=YL[PL[7]]then else CL=PL[5];end;end;end;end;end;end;end;else do if not(wL>=0x4)then if not(wL>=2)then if wL~=0x0001 then local AL=YL[PL[0X00004]]/YL[PL[7]];YL[PL[5]]=AL-AL%0X1;else local AL=(RL[0x000]);YL[0X1]=AL[1][AL[0X02]];CL=CL+0x1;CL=CL+1;PL=FL[CL];do CL=CL+1;end;(YL)[1]=YL[1][PL[3]];do PL=FL[CL];end;CL=CL+1;do if not(not YL[0x0001])then else CL=PL[0X4];end;end;end;else do if wL==3 then do YL[PL[5]]=PL[1];end;else do CL=PL[4];end;end;end;end;else if not(wL>=6)then if wL==0x005 then local AL=PL[4];local BL=AL[2];local dL=(nil);local DL=(#BL);if not(DL>0X0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[0X1]~=0x00000 then(dL)[bC-1]=RL[uC[2]];else dL[bC-1]={YL,uC[0X0002]};end;end;x(mL,dL);end;(YL)[PL[5]]=cn(dL,KL,AL);else end;else if not(wL>=0X007)then do repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X001]==dL and EC[0X2]>=0X0)then else local WC=EC[0X2];if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];(EC)[0X002]=1;end;end;end;until true;end;return;else if wL==8 then(YL)[PL[5]]=KL[PL[1]];else local AL=(RL[0]);do YL[1]=AL[1][AL[2]];end;CL=CL+0x01;CL=CL+0X0001;PL=FL[CL];CL=CL+1;(YL)[0X1]=YL[1][PL[3]];do PL=FL[CL];end;CL=CL+0X1;(YL)[1]=YL[0X1][PL[3]];PL=FL[CL];do CL=CL+0x1;end;(YL)[0X001]=YL[0x00001][PL[0X3]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;do YL[0x001]=YL[0X0001][PL[0X03]];end;PL=FL[CL];CL=CL+1;(YL)[1]=YL[1][PL[0X003]];do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[1]=YL[0X01][PL[0X3]];CL=CL+0X1;CL=CL+0X0001;PL=FL[CL];CL=CL+0x1;(YL[0X1])[PL[0X001]]=PL[3];do CL=CL+1;end;do AL=RL[0];end;do(YL)[0X1]=AL[1][AL[0x0002]];end;CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+0X1;end;YL[0X00001]=YL[1][PL[3]];PL=FL[CL];CL=CL+1;YL[1]=YL[0x01][PL[3]];PL=FL[CL];do CL=CL+0X0001;end;(YL)[1]=YL[0X1][PL[0X0003]];do PL=FL[CL];end;CL=CL+0X1;(YL)[1]=YL[1][PL[0X3]];do CL=CL+1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+1;do(YL)[0X1]=YL[0X1][PL[3]];end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;do(YL)[1]=YL[1][PL[0X3]];end;CL=CL+0X1;CL=CL+0X01;PL=FL[CL];CL=CL+0X01;YL[1]=YL[0x1][PL[0x003]];do CL=CL+1;end;YL[0X02]=YL[0X0];PL=FL[CL];CL=CL+1;(YL[0X1])[PL[1]]=YL[0X2];CL=CL+1;AL=RL[0X00000];(YL)[0X001]=AL[0X1][AL[2]];PL=FL[CL];CL=CL+0x01;do YL[1]=YL[0X01][PL[3]];end;CL=CL+1;CL=CL+1;do PL=FL[CL];end;do CL=CL+0X001;end;do(YL)[0X1]=YL[1][PL[0X3]];end;do PL=FL[CL];end;CL=CL+0X1;YL[1]=YL[0X1][PL[3]];CL=CL+0X1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[0X1]=YL[0X1][PL[0X3]];PL=FL[CL];CL=CL+0X1;(YL)[1]=YL[0X001][PL[3]];PL=FL[CL];do CL=CL+0X1;end;YL[1]=YL[0X1][PL[0x3]];do PL=FL[CL];end;CL=CL+0X1;do(YL)[0X1]=YL[1][PL[0x3]];end;CL=CL+0x1;YL[0X2]=YL[0X0000];PL=FL[CL];do CL=CL+1;end;(YL[1])[PL[0X0001]]=YL[2];do CL=CL+1;end;AL=RL[0x00];YL[1]=AL[0X01][AL[2]];CL=CL+0X1;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+1;end;do YL[1]=YL[0x00001][PL[3]];end;do CL=CL+1;end;CL=CL+1;PL=FL[CL];do CL=CL+1;end;(YL)[1]=YL[0x1][PL[3]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;do YL[0X1]=YL[1][PL[3]];end;PL=FL[CL];CL=CL+0X1;YL[1]=YL[0X1][PL[3]];CL=CL+0X00001;CL=CL+1;PL=FL[CL];do CL=CL+0X1;end;(YL)[0X001]=YL[0X1][PL[3]];CL=CL+1;CL=CL+0X01;PL=FL[CL];do CL=CL+1;end;YL[0X1]=YL[1][PL[0X00003]];do CL=CL+0X1;end;CL=CL+1;do PL=FL[CL];end;CL=CL+0X001;(YL[0x0001])[PL[0X1]]=PL[0X03];CL=CL+1;AL=RL[0X0];(YL)[0X0001]=AL[0x0001][AL[0x002]];PL=FL[CL];CL=CL+0X1;do(YL)[0X1]=YL[1][PL[3]];end;CL=CL+0X0001;CL=CL+0X001;PL=FL[CL];CL=CL+1;YL[1]=YL[0X001][PL[3]];CL=CL+1;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[1]=YL[0X1][PL[3]];CL=CL+0X1;do CL=CL+0X1;end;do PL=FL[CL];end;CL=CL+1;do YL[0X00001]=YL[1][PL[0X003]];end;do PL=FL[CL];end;CL=CL+0X1;(YL)[0X1]=YL[1][PL[0X003]];CL=CL+0X001;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;YL[1]=YL[1][PL[0X3]];PL=FL[CL];do CL=CL+1;end;do YL[1][PL[0x0001]]=PL[0X3];end;do CL=CL+1;end;AL=RL[0x0];do(YL)[0X1]=AL[1][AL[2]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;(YL)[1]=YL[0X1][PL[3]];do CL=CL+0X01;end;CL=CL+0X00001;PL=FL[CL];CL=CL+1;YL[0X1]=YL[1][PL[3]];PL=FL[CL];CL=CL+1;(YL)[1]=YL[0x0001][PL[0X00003]];PL=FL[CL];CL=CL+1;(YL)[0X1]=YL[1][PL[0X3]];CL=CL+1;CL=CL+0X1;PL=FL[CL];CL=CL+0X1;do YL[1]=YL[1][PL[0X3]];end;CL=CL+0X01;YL[0X0002]=YL[0];PL=FL[CL];CL=CL+0X1;YL[0X1][PL[0X1]]=YL[2];PL=FL[CL];CL=CL+1;CL=PL[4];end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)~='st\114\in\g'then G(TL,0X0);else if not(V(TL,'\097tt\101\m\p\116 \116\o \121\105eld\ \097c\114\os\s \109\101t\097m\101t\104o\d/\067%\-\099al\108 bound\097r\y'))then else return q();end;if not(V(TL,'^\.-:\%\d+\058\032'))then G(TL,0);else(G)('L\117\114a\p\104\ \S\cri\112\116\:'..(_L[CL-1]or'\(\105nt\erna\l\041')..'\:\ '..l(TL),0X0000);end;end;end;else if TL then do if rL~=0x1 then return YL[ML](F(YL,ML+0X00001,NL));else do return YL[ML]();end;end;end;elseif ML then return F(YL,ML,rL);end;end;end;end;else aL=function(...)local CL,YL=1,({});local OL=Q();local kL={[0X1]=YL,[2]=qL};local LL,hL=on(...);LL=LL-1;local KL=(OL==_ and sL or OL);for PL=0,LL do if XL>PL then(YL)[PL]=hL[PL+0X001];else break;end;end;local NL=(0X000);if not SL then do hL=nil;end;elseif iL then(YL)[XL]={n=LL>=XL and LL-XL+0x01 or 0X0,F(hL,XL+1,LL+1)};end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()do while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+1;if not(wL<7)then if not(wL<0XB)then if not(wL<0x0000d)then if wL==14 then do(YL)[1]=KL[PL[1]];end;CL=CL+1;(YL)[0X2]=YL[0];PL=FL[CL];CL=CL+1;(YL[1])[PL[0x01]]=YL[2];PL=FL[CL];CL=CL+0X1;do(YL)[0X0001]=KL[PL[0X1]];end;CL=CL+1;do CL=CL+0x1;end;do CL=CL+1;end;NL=1;YL[NL]();NL=NL-0X1;CL=CL+0x00001;repeat local AL,dL,BL=mL,YL,({});do for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[1]==dL and EC[2]>=0X0)then else local WC=EC[0x2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;do(EC)[1]=BL[WC];end;do EC[0x0002]=1;end;end;end;end;end;until true;do return;end;else YL[PL[5]]=-YL[PL[0X4]];end;else if wL~=0Xc then YL[PL[5]]=T(YL[PL[4]]);else do YL[PL[5]]={F({},0X001,PL[4])};end;end;end;else if wL<0X9 then if wL==8 then local AL=(PL[4]);local dL=YL[AL];for BL=AL+0X01,PL[7]do dL=dL..YL[BL];end;YL[PL[5]]=dL;else YL[PL[0x5]]=PL[0X1];end;else if wL==10 then local AL=(PL[4]);local BL,dL=AL[2],nil;local DL=#BL;do if not(DL>0X0)then else do dL={};end;for bC=1,DL do local uC=BL[bC];do if uC[1]==0X000 then(dL)[bC-1]={YL,uC[2]};else(dL)[bC-0x0001]=RL[uC[2]];end;end;end;x(mL,dL);end;end;do(YL)[PL[0X05]]=cn(dL,KL,AL);end;else CL=PL[4];end;end;end;else do if not(wL>=3)then if wL>=0X1 then if wL~=2 then YL[PL[5]]=YL[PL[0x004]]>YL[PL[7]];else repeat local dL,BL=mL,YL;local DL=({});for bC,uC in U,dL do for EC,WC in U,uC do do if WC[0X1]==BL and WC[2]>=0 then local eC=WC[0X0002];if not DL[eC]then do(DL)[eC]={BL[eC]};end;end;(WC)[1]=DL[eC];(WC)[2]=0X1;end;end;end;end;until true;local AL=PL[0x5];return false,AL,AL+PL[4]-2;end;else end;else if not(wL>=0X5)then do if wL==4 then YL[PL[0X5]]=KL[PL[1]];else YL[PL[0X0005]]=YL[PL[4]]~=YL[PL[0X7]];end;end;else if wL~=6 then(YL)[PL[5]]=YL[PL[0X4]]/YL[PL[7]];else local AL=PL[0x4];local dL=nil;local BL=(AL[0X00002]);local DL=(#BL);if DL>0X0 then do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[0x0001]~=0 then(dL)[bC-0X01]=RL[uC[2]];else do(dL)[bC-1]={YL,uC[0X2]};end;end;end;(x)(mL,dL);end;(YL)[PL[5]]=u[PL[0X7]](dL);end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='\s\116r\ing'then if not(V(TL,"att\101\mpt\ t\o\ \y\ie\l\100\032\097\c\114\os\s\ m\et\097\m\e\116h\111\d\/\C%\-cal\l\ \098oun\dary"))then else return q();end;if not(V(TL,'\094\.\-\:\037\100\+\058\032'))then(G)(TL,0);else G('\L\117\114a\112\h S\cript\058'..(_L[CL-1]or'(int\e\114na\l)').."\: "..l(TL),0);end;else G(TL,0X00000);end;else if TL then if rL==0X001 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;end;else if HL~=18 then aL=function(...)local YL=({});local CL=(0X1);local OL=Q();local NL=(0X0000);local KL=(OL==_ and sL or OL);local LL,hL=on(...);local kL={[2]=qL,[0X1]=YL};LL=LL-0X1;for PL=0X000,LL do do if not(XL>PL)then break;else(YL)[PL]=hL[PL+1];end;end;end;if not SL then do hL=nil;end;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+0X1 or 0X00000,F(hL,XL+1,LL+0x00001)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[2];CL=CL+1;if not(wL>=0X7)then do if wL>=3 then if not(wL<5)then if wL~=0X6 then local AL=(YL[PL[4]]/YL[PL[7]]);do(YL)[PL[5]]=AL-AL%0x01;end;else repeat local AL,dL,BL=mL,YL,(PL[5]);local DL={};for bC,uC in U,AL do for EC,WC in U,uC do if not(WC[1]==dL and WC[0x2]>=BL)then else local eC=(WC[2]);if not DL[eC]then DL[eC]={dL[eC]};end;do WC[0x1]=DL[eC];end;WC[0X2]=0x01;end;end;end;until true;end;else if wL==0X004 then else local AL=PL[4];local BL,dL=AL[2],(nil);local DL=#BL;if DL>0 then dL={};for bC=0X00001,DL do local uC=(BL[bC]);if uC[0x1]==0x00000 then do dL[bC-1]={YL,uC[2]};end;else do dL[bC-0x00001]=RL[uC[2]];end;end;end;x(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);end;end;else do if not(wL>=1)then local AL,dL=PL[5],(PL[0x4]);NL=AL+dL-0X1;repeat local BL,DL,bC=mL,YL,{};for uC,EC in U,BL do for WC,eC in U,EC do if eC[1]==DL and eC[0X2]>=0X0 then local oC=(eC[2]);if not(not bC[oC])then else do bC[oC]={DL[oC]};end;end;eC[1]=bC[oC];eC[0X2]=1;end;end;end;until true;return true,AL,dL;else do if wL==2 then YL[PL[5]]=YL[PL[0X4]]-YL[PL[0x07]];else do(YL)[PL[5]]=h(YL[PL[4]],YL[PL[7]]);end;end;end;end;end;end;end;else do if not(wL>=0XA)then if wL>=0X8 then if wL~=9 then(YL)[0X01]=KL[PL[1]];CL=CL+0X1;CL=CL+0X1;do CL=CL+0X0001;end;YL[0X2]=YL[0X0];PL=FL[CL];do CL=CL+1;end;do(YL[0X1])[PL[1]]=YL[0X0002];end;do CL=CL+0x1;end;repeat local AL,dL=mL,YL;local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0)then else local WC=EC[2];if not(not BL[WC])then else do(BL)[WC]={dL[WC]};end;end;(EC)[1]=BL[WC];EC[2]=0X001;end;end;end;until true;return;else(YL)[PL[5]]={F({},1,PL[4])};end;else do(YL)[PL[5]]=PL[1];end;end;else if not(wL>=12)then if wL==0X0000b then do CL=PL[0X4];end;else do(YL)[PL[0X005]]=KL[PL[0X01]];end;end;else if wL~=13 then if YL[PL[4]]==YL[PL[0X007]]then CL=PL[5];end;else(YL)[PL[0X00005]]=-YL[PL[0X4]];end;end;end;end;end;end;end);if not(nL)then do if z(TL)=='\s\116\114\ing'then if V(TL,"\097t\116e\m\pt\032t\111 \121\i\101ld a\cr\o\s\s m\e\116\097\109\e\116ho\d/\067%-\c\097\108\108 \098\o\117nd\097r\y")then return q();end;if V(TL,'\094\.-:\%\100+\058\ ')then(G)("\Lu\114ap\h\032S\099\114i\112\116\058"..(_L[CL-0x1]or'\(\105nt\101\114\110\097\l\)')..'\058\ '..l(TL),0x0);else G(TL,0);end;else G(TL,0X00000);end;end;else if TL then if rL==0X1 then do return YL[ML]();end;else do return YL[ML](F(YL,ML+1,NL));end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else do aL=function(...)local CL,YL=0X00001,({});local NL=(0);local kL=({[0X1]=YL,[2]=qL});local OL=Q();local LL,hL=on(...);LL=LL-1;do for PL=0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+1];end;end;end;local KL=(OL==_ and sL or OL);do if not SL then do hL=nil;end;elseif not(iL)then else do(YL)[XL]={n=LL>=XL and LL-XL+0X1 or 0,F(hL,XL+0X1,LL+0X1)};end;end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[0x002]);CL=CL+0X1;do if wL>=13 then do if not(wL<19)then do if wL<0X16 then do if wL<0X14 then if YL[PL[4]]~=YL[PL[0X00007]]then else CL=PL[5];end;else if wL~=0X15 then local AL=PL[0X5];local dL,BL,DL=YL[AL]();if dL then YL[AL+1]=BL;YL[AL+0X02]=DL;CL=PL[4];end;else if not(not(PL[1]<=YL[PL[7]]))then else CL=PL[0X5];end;end;end;end;else if wL<0x000018 then if wL~=23 then YL[PL[0X00005]]=YL[PL[0X04]]^YL[PL[7]];else YL[1]=KL[PL[1]];do CL=CL+1;end;CL=CL+0X1;do PL=FL[CL];end;do CL=CL+0x01;end;do(YL)[0X1]=YL[0X1][PL[0X0003]];end;PL=FL[CL];CL=CL+0X1;do(YL)[0X02]=PL[0X0001];end;local AL=(0X1);CL=CL+0x1;(YL)[AL]=YL[AL](YL[AL+0X0001]);do NL=AL;end;do CL=CL+0X1;end;do CL=CL+0X1;end;PL=FL[CL];CL=CL+1;if not YL[1]then CL=PL[0X00004];end;end;else if wL==25 then do YL[PL[0X5]]=YL[PL[0X4]]>=YL[PL[0x0007]];end;else(YL)[0X001]={};do PL=FL[CL];end;do CL=CL+0X1;end;(YL)[0X2]=KL[PL[1]];do CL=CL+0X1;end;CL=CL+1;local AL=RL[0x1];do CL=CL+0x1;end;(YL)[3]=AL[1][AL[0x2]];CL=CL+1;CL=CL+1;do PL=FL[CL];end;CL=CL+1;YL[0X0003]=YL[0X3][PL[3]];CL=CL+0X1;local dL=(2);do CL=CL+1;end;CL=CL+1;local BL=0x002;if BL==0X0 then else NL=dL+BL-0X1;end;local bC,uC,DL=nil,nil,4;if BL==1 then do bC,uC=on(YL[dL]());end;else bC,uC=on(YL[dL](F(YL,dL+0X001,NL)));end;if DL==0x001 then NL=dL-1;else if DL==0 then bC=bC+dL-0X1;NL=bC;else bC=dL+DL-0X0002;do NL=bC+0x01;end;end;local WC=0;do for eC=dL,bC do WC=WC+1;YL[eC]=uC[WC];end;end;end;CL=CL+1;CL=CL+0x0001;PL=FL[CL];do CL=CL+0X1;end;dL=2;local EC=(g(function(...)(q)();for WC,eC in...do(q)(true,WC,eC);end;end));(EC)(YL[dL],YL[dL+0x1],YL[dL+0x2]);NL=dL;do(YL)[dL]=EC;end;CL=PL[4];end;end;end;end;else if wL>=0X10 then if wL<0X011 then repeat local AL,dL,BL=mL,YL,({});for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0X1]==dL and EC[2]>=0X0)then else local WC=EC[2];if not(not BL[WC])then else(BL)[WC]={dL[WC]};end;(EC)[0x0001]=BL[WC];EC[2]=1;end;end;end;until true;return;else if wL~=18 then local AL,dL=RL[0X5],2;YL[0x02]=AL[0X001][AL[2]];do PL=FL[CL];end;CL=CL+1;YL[0X3]=PL[0X1];CL=CL+0x1;do YL[0x04]=YL[0X001];end;CL=CL+1;YL[dL](YL[dL+1],YL[dL+2]);NL=dL-0X1;PL=FL[CL];CL=CL+0X001;do CL=PL[0X04];end;else YL[PL[5]]=PL[1];end;end;else if not(wL<14)then if wL==15 then local AL=(RL[0x0]);(YL)[1]=AL[1][AL[2]];do CL=CL+0X1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;do if not YL[0X1]then do CL=PL[0X4];end;end;end;else YL[PL[0x5]]=#YL[PL[4]];end;else local AL,dL=RL[2],(0X6);(YL)[0X5]=AL[0X1][AL[2]];CL=CL+0X0001;CL=CL+0x1;do PL=FL[CL];end;do CL=CL+0X00001;end;(YL)[6]=YL[0X0004][PL[3]];CL=CL+0X01;do CL=CL+1;end;do CL=CL+1;end;do YL[0X5]=YL[0X05][YL[6]];end;CL=CL+1;AL=RL[0X3];do YL[0x6]=AL[1][AL[0x2]];end;do PL=FL[CL];end;do CL=CL+0X001;end;(YL)[0x6]=YL[6][PL[0X3]];do CL=CL+1;end;CL=CL+0x1;PL=FL[CL];CL=CL+1;(YL)[0x7]=KL[PL[0X00001]];do CL=CL+0x1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;(YL)[0X7]=YL[0X7][PL[0X3]];do PL=FL[CL];end;CL=CL+0X1;do(YL)[8]=YL[0x05][PL[3]];end;do CL=CL+1;end;CL=CL+0X1;CL=CL+1;do YL[dL]=YL[dL](YL[dL+0X1],YL[dL+0X00002]);end;NL=dL;PL=FL[CL];CL=CL+1;if not(not YL[6])then else do CL=PL[4];end;end;end;end;end;end;else if not(wL>=6)then do if wL<3 then if not(wL<0X1)then if wL==0x2 then(YL)[0X1]=KL[PL[0X1]];PL=FL[CL];CL=CL+0x1;YL[1]=YL[1][PL[3]];PL=FL[CL];CL=CL+0X00001;if not(not YL[0X1])then else do CL=PL[4];end;end;else end;else YL[PL[5]]=YL[PL[0X04]]~=YL[PL[0X7]];end;else if not(wL>=4)then CL=PL[4];else if wL==0X5 then local AL=(RL[0X4]);(YL)[0x6]=AL[1][AL[0X2]];CL=CL+0X0001;local dL=(0X0006);do(YL)[0X007]=YL[1];end;PL=FL[CL];do CL=CL+0X1;end;YL[8]=YL[4][PL[3]];CL=CL+0X001;YL[dL](YL[dL+0X1],YL[dL+0X2]);do NL=dL-1;end;CL=CL+0X0001;CL=CL+0X1;PL=FL[CL];CL=CL+1;CL=PL[0x0004];else YL[PL[5]]=M(YL[PL[0x0004]],YL[PL[0X0007]]);end;end;end;end;else if not(wL>=0X9)then if wL<7 then YL[PL[0X05]]={F({},0X1,PL[0X00004])};else do if wL~=0X0008 then do YL[PL[5]]=KL[PL[1]];end;else do(YL)[PL[0X5]]=YL[PL[0X4]]==YL[PL[0X007]];end;end;end;end;else if wL>=0Xb then do if wL==0x00C then YL[PL[5]]=YL[PL[0X0004]]*YL[PL[0X7]];else for AL=PL[5],PL[0X004]do(YL)[AL]=nil;end;end;end;else if wL~=10 then local AL=(PL[4]);local BL=AL[0x0002];local dL=nil;local DL=#BL;do if not(DL>0)then else do dL={};end;for bC=1,DL do local uC=(BL[bC]);if uC[0X001]~=0 then(dL)[bC-0X1]=RL[uC[0x2]];else dL[bC-1]={YL,uC[2]};end;end;(x)(mL,dL);end;end;(YL)[PL[5]]=cn(dL,KL,AL);else(YL)[0x0006]=YL[5][PL[0X3]];CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;if YL[6]==PL[3]then else do CL=PL[5];end;end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=='\str\ing'then if not(V(TL,'\097t\116\101\109\112t\032\116\o\ \121\i\101l\d\032\097\099\114o\ss\ \109\101\116a\m\e\116\h\o\100\047C\%\-\c\097ll b\oun\d\097r\y'))then else return q();end;if not(V(TL,'\^\.\-\:\037\d+\:\032'))then G(TL,0X0);else(G)("L\117r\097\112h\032S\099r\105\p\116:"..(_L[CL-1]or"\040\i\110t\e\114n\097l\)")..'\:\032'..l(TL),0);end;else(G)(TL,0);end;else if TL then do if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;end;end;else if HL>=23 then if HL~=24 then aL=function(...)local YL=({});local CL=(0X1);local OL=Q();local kL,NL={[0X1]=YL,[2]=qL},0;local LL,hL=on(...);LL=LL-0X00001;for PL=0,LL do if not(XL>PL)then break;else(YL)[PL]=hL[PL+0X1];end;end;local KL=(OL==_ and sL or OL);do if not SL then hL=nil;elseif not(iL)then else YL[XL]={n=LL>=XL and LL-XL+0x01 or 0x0,F(hL,XL+1,LL+1)};end;end;do if KL~=OL then X(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=(FL[CL]);local wL=PL[0X2];CL=CL+1;do if wL<6 then if not(wL>=3)then if not(wL<0X1)then if wL==0X2 then if not(not(YL[PL[0X4]]<=YL[PL[0X7]]))then else CL=PL[0x05];end;else YL[PL[0X5]]=PL[0x1];end;else end;else if wL>=0X4 then if wL==0X5 then do if YL[PL[4]]~=YL[PL[7]]then CL=PL[0x0005];end;end;else do if YL[PL[4]]==YL[PL[0x0007]]then CL=PL[5];end;end;end;else(YL)[PL[5]]={F({},1,PL[0X4])};end;end;else do if not(wL>=9)then if wL>=0X07 then if wL==0X8 then do CL=PL[4];end;else do YL[1]=KL[PL[1]];end;CL=CL+0X0001;(YL)[0X00002]=YL[0];PL=FL[CL];local AL=RL[0x0];local uC=0X00001;CL=CL+0x1;(YL[0X01])[PL[1]]=YL[2];PL=FL[CL];CL=CL+1;do(YL)[0X1]=KL[PL[1]];end;local BL=nil;CL=CL+0X1;NL=0X0001;YL[NL]();do NL=NL-0X1;end;CL=CL+0x1;CL=CL+0x1;CL=CL+1;(YL)[0X001]=AL[1][AL[0X02]];do PL=FL[CL];end;do CL=CL+0X1;end;local dL=(PL[4]);local DL=(dL[0X0002]);local bC=(#DL);if bC>0 then BL={};for EC=1,bC do local WC=DL[EC];do if WC[1]==0X0 then BL[EC-1]={YL,WC[2]};else do(BL)[EC-1]=RL[WC[2]];end;end;end;end;(x)(mL,BL);end;do YL[2]=cn(BL,KL,dL);end;CL=CL+0x1;(YL[uC])(YL[uC+0X1]);NL=uC-0x1;CL=CL+1;do CL=CL+1;end;CL=CL+0X00001;do repeat local EC,WC=mL,(YL);local eC=({});for oC,jC in U,EC do for zC,lC in U,jC do if not(lC[0X01]==WC and lC[2]>=0X0)then else local GC=(lC[2]);if not(not eC[GC])then else(eC)[GC]={WC[GC]};end;(lC)[0X1]=eC[GC];lC[2]=0X1;end;end;end;until true;end;return;end;else for AL=PL[5],PL[0X4]do do YL[AL]=nil;end;end;end;else if wL>=0Xb then if wL~=12 then(YL)[PL[0X5]]=YL[PL[0X004]]==YL[PL[7]];else local AL=PL[0X4];local BL=AL[0X2];local dL=(nil);local DL=#BL;if DL>0X0 then do dL={};end;for bC=0X1,DL do local uC=(BL[bC]);do if uC[0X1]~=0 then do dL[bC-1]=RL[uC[0X0002]];end;else dL[bC-0X1]={YL,uC[2]};end;end;end;(x)(mL,dL);end;YL[PL[5]]=cn(dL,KL,AL);end;else if wL~=0XA then YL[PL[0X5]]=T(YL[PL[0X4]]);else YL[PL[0X00005]]=KL[PL[1]];end;end;end;end;end;end;end;end);if not(nL)then do if z(TL)=='\st\114in\103'then if not(V(TL,"a\116t\e\109\112\116 t\o \y\105\e\ld\032a\cr\oss\ m\et\097\me\116\h\o\d\/\C%\045\c\097\l\l\032\098\111u\110\100ary"))then else do return q();end;end;if not(V(TL,"^\046\-\:\%\d+\:\032"))then(G)(TL,0);else G("\Lu\114\097\p\104 \Sc\114\105pt\058"..(_L[CL-1]or'(\int\e\114\110\097\l\)').."\:\ "..l(TL),0X000);end;else(G)(TL,0);end;end;else if TL then do if rL~=1 then do return YL[ML](F(YL,ML+0X001,NL));end;else return YL[ML]();end;end;elseif not(ML)then else return F(YL,ML,rL);end;end;end;else aL=function(...)local NL,YL=0X0,{};local OL=Q();local KL=(OL==_ and sL or OL);local kL=({[2]=qL,[0X1]=YL});local LL,hL=on(...);LL=LL-1;local CL=1;for PL=0X0000,LL do do if XL>PL then(YL)[PL]=hL[PL+1];else break;end;end;end;if not SL then hL=nil;elseif not(iL)then else do YL[XL]={n=LL>=XL and LL-XL+1 or 0X00000,F(hL,XL+1,LL+0x00001)};end;end;if KL==OL then else X(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=(PL[2]);CL=CL+0X1;do if wL<21 then do if wL>=10 then do if not(wL<0XF)then if not(wL>=0X12)then if wL>=16 then if wL~=17 then do(YL)[PL[0X5]]=KL[PL[0X1]];end;else local AL=PL[0X004];local BL,dL=AL[2],(nil);local DL=(#BL);if DL>0 then dL={};for bC=0X001,DL do local uC=(BL[bC]);if uC[0X1]~=0X000 then do dL[bC-0X001]=RL[uC[0X2]];end;else(dL)[bC-1]={YL,uC[0X2]};end;end;x(mL,dL);end;do YL[PL[0X5]]=cn(dL,KL,AL);end;end;else do(YL)[12]=KL[PL[0X1]];end;CL=CL+0X1;CL=CL+1;local AL=(0X000c);do PL=FL[CL];end;CL=CL+1;(YL)[13]=PL[0X01];CL=CL+1;do YL[AL]=YL[AL](YL[AL+0X1]);end;NL=AL;PL=FL[CL];CL=CL+1;if not(not(YL[0X2]<=YL[0xC]))then else CL=PL[0X5];end;end;else if wL>=0X13 then if wL==20 then local AL=RL[0X0006];YL[15]=AL[1][AL[2]];do PL=FL[CL];end;CL=CL+0X01;(YL)[16]=YL[14][PL[0X003]];CL=CL+0x1;do CL=CL+0X1;end;CL=CL+0X1;YL[15]=YL[0X000F][YL[0X10]];CL=CL+0X1;(YL)[16]=YL[0X6][YL[13]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+1;if YL[0x0010]==PL[0x00003]then else CL=PL[5];end;else local dL=(0X00D);local AL=(RL[1]);(YL)[0xc]=AL[0x001][AL[2]];do CL=CL+0X01;end;AL=RL[2];YL[0X000d]=AL[1][AL[0x0002]];CL=CL+0x00001;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0x1;YL[13]=YL[13][PL[3]];do PL=FL[CL];end;CL=CL+1;local BL,DL=YL[13],(2);(YL)[dL+0X1]=BL;YL[dL]=BL[PL[0X3]];CL=CL+0X1;dL=13;local bC=0X0000;if DL~=0x0000 then NL=dL+DL-1;end;local uC,EC=nil,nil;if DL~=1 then uC,EC=on(YL[dL](F(YL,dL+1,NL)));else uC,EC=on(YL[dL]());end;if bC==1 then NL=dL-0x0001;else if bC~=0 then do uC=dL+bC-0X002;end;NL=uC+1;else uC=uC+dL-0x0001;NL=uC;end;local WC=(0);for eC=dL,uC do WC=WC+0X1;YL[eC]=EC[WC];end;end;CL=CL+0X00001;dL=12;YL[dL]=YL[dL](F(YL,dL+1,NL));NL=dL;CL=CL+1;do(YL)[3]=YL[0xC];end;CL=CL+1;YL[12]=YL[4]-YL[0X3];do PL=FL[CL];end;CL=CL+0X001;(YL)[13]=KL[PL[1]];do PL=FL[CL];end;do CL=CL+1;end;YL[14]=PL[0x1];CL=CL+0X1;dL=13;(YL)[dL]=YL[dL](YL[dL+0X00001]);NL=dL;do CL=CL+1;end;CL=CL+1;do CL=CL+0x1;end;(YL)[14]=YL[10];CL=CL+1;NL=14;YL[NL]();NL=NL-0X0001;CL=CL+1;CL=CL+0x00001;do CL=CL+1;end;(YL)[0XE]=YL[11];CL=CL+1;NL=0X00E;(YL[NL])();NL=NL-0X1;PL=FL[CL];CL=CL+0X001;(YL)[0Xe]=YL[2]*PL[3];CL=CL+0X1;(YL)[14]=YL[0xD]>=YL[14];do PL=FL[CL];end;CL=CL+0X1;if not(not YL[14])then else CL=PL[0x04];end;end;else if not(YL[PL[4]]<YL[PL[0x7]])then CL=PL[0x005];end;end;end;else if wL>=0x0000C then if wL<13 then do(YL)[PL[0X00005]]=YL[PL[4]][PL[0X3]];end;else if wL~=0XE then(YL)[0X0]=KL[PL[1]];CL=CL+1;CL=CL+0x001;PL=FL[CL];CL=CL+1;YL[1]=PL[1];CL=CL+1;local AL=0;local dL=0X02;local BL=(6);if dL~=0x0 then NL=AL+dL-1;end;local DL,bC=nil,nil;do if dL~=0x1 then do DL,bC=on(YL[AL](F(YL,AL+0X1,NL)));end;else do DL,bC=on(YL[AL]());end;end;end;do if BL==1 then NL=AL-0X0001;else if BL~=0X0 then do DL=AL+BL-2;end;NL=DL+0x00001;else do DL=DL+AL-0X1;end;do NL=DL;end;end;local uC=(0x0);for EC=AL,DL do uC=uC+0X01;YL[EC]=bC[uC];end;end;end;CL=CL+1;CL=CL+1;PL=FL[CL];do CL=CL+0x1;end;do if not(not YL[0X0])then else do CL=PL[0X04];end;end;end;else(YL)[17]=YL[15][PL[3]];CL=CL+0x1;CL=CL+0X01;PL=FL[CL];do CL=CL+0X01;end;if YL[0X11]~=PL[3]then else do CL=PL[5];end;end;end;end;else if wL~=0xb then(YL)[16]=PL[1];CL=CL+0X1;YL[9]=YL[0X10];PL=FL[CL];CL=CL+1;CL=PL[4];else repeat local AL,dL=mL,YL;local BL={};for DL,bC in U,AL do for uC,EC in U,bC do if not(EC[0x001]==dL and EC[0X2]>=0)then else local WC=EC[2];if not BL[WC]then do(BL)[WC]={dL[WC]};end;end;EC[0X1]=BL[WC];EC[0x2]=1;end;end;end;until true;return;end;end;end;end;else do if not(wL>=5)then if not(wL>=0x2)then do if wL~=0X1 then if YL[PL[0X0004]]~=PL[3]then CL=PL[0X5];end;else YL[PL[0X5]]=not YL[PL[0X4]];end;end;else if wL>=3 then if wL~=0X004 then do YL[0X0D]=YL[0xc]-YL[5];end;PL=FL[CL];CL=CL+0x1;do(YL)[0X0000E]=KL[PL[1]];end;do CL=CL+0X1;end;do CL=CL+0x01;end;PL=FL[CL];do CL=CL+0X1;end;YL[14]=YL[0X0E][PL[0X3]];CL=CL+0X001;CL=CL+0X1;PL=FL[CL];do CL=CL+1;end;if not YL[14]then CL=PL[4];end;else local AL=(PL[0x5]);for dL=AL,AL+(PL[4]-1)do YL[dL]=hL[XL+(dL-AL)+1];end;end;else local AL=(PL[5]);local dL,BL,DL=YL[AL]();if not(dL)then else(YL)[AL+0x1]=BL;(YL)[AL+2]=DL;do CL=PL[4];end;end;end;end;else if not(wL>=7)then if wL~=6 then local dL,BL=5,(0);local AL=0X0012;do if dL==0 then else NL=AL+dL-1;end;end;local DL,bC=nil,(nil);if dL==1 then DL,bC=on(YL[AL]());else DL,bC=on(YL[AL](F(YL,AL+0X00001,NL)));end;if BL~=1 then if BL==0 then DL=DL+AL-0x1;NL=DL;else do DL=AL+BL-0X2;end;NL=DL+1;end;local uC=(0X0);for EC=AL,DL do uC=uC+1;YL[EC]=bC[uC];end;else do NL=AL-0X1;end;end;do CL=CL+1;end;CL=CL+1;CL=CL+1;AL=0X10;YL[AL](F(YL,AL+0X01,NL));NL=AL-0X001;PL=FL[CL];CL=CL+0X00001;CL=PL[0X4];else local AL=RL[5];do(YL)[15]=AL[1][AL[2]];end;CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+0X1;do(YL)[0x10]=PL[0X1];end;do CL=CL+0X001;end;YL[0x011]=YL[0x1];CL=CL+1;do YL[0x00012]=YL[14];end;local dL=(15);CL=CL+1;NL=dL+4-1;YL[dL](F(YL,dL+1,NL));NL=dL-0X01;do CL=CL+0X1;end;CL=CL+0X00001;do PL=FL[CL];end;CL=CL+0X1;YL[15]=KL[PL[0x00001]];CL=CL+1;do CL=CL+0x1;end;PL=FL[CL];CL=CL+0X1;YL[16]=PL[0X1];do CL=CL+1;end;do dL=15;end;YL[dL](YL[dL+0X001]);NL=dL-1;CL=CL+1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;CL=PL[0x4];end;else if wL>=8 then if wL~=9 then local AL=RL[PL[0X00004]];(YL)[PL[0X5]]=AL[1][AL[0X2]];else local AL=PL[5];local dL=(g(function(...)q();for BL,DL,bC,uC,EC,WC,eC,oC,jC,zC in...do q(true,{BL,DL,bC,uC,EC,WC,eC,oC,jC,zC});end;end));dL(YL[AL],YL[AL+1],YL[AL+0X2]);NL=AL;YL[AL]=dL;do CL=PL[0X00004];end;end;else repeat local AL,dL,BL=mL,YL,(PL[0X005]);local DL=({});do for bC,uC in U,AL do for EC,WC in U,uC do do if not(WC[1]==dL and WC[0X002]>=BL)then else local eC=WC[2];do if not DL[eC]then DL[eC]={dL[eC]};end;end;WC[1]=DL[eC];(WC)[2]=0X01;end;end;end;end;end;until true;end;end;end;end;end;end;else do if wL<31 then if not(wL<0X1a)then if not(wL<0x1C)then if not(wL>=29)then do if not YL[PL[0X5]]then CL=PL[0X4];end;end;else if wL==30 then local AL=(RL[1]);(YL)[5]=AL[0x00001][AL[2]];CL=CL+0x1;CL=CL+1;do CL=CL+1;end;AL=RL[0X2];(YL)[6]=AL[0x1][AL[0x2]];do CL=CL+1;end;local dL=(5);CL=CL+1;PL=FL[CL];CL=CL+0x001;YL[0X6]=YL[0X00006][PL[0X3]];CL=CL+1;CL=CL+0x1;PL=FL[CL];CL=CL+1;(YL)[6]=YL[6][PL[3]];CL=CL+0X1;CL=CL+1;do CL=CL+1;end;(YL)[6]=YL[6][YL[1]];PL=FL[CL];CL=CL+0X1;YL[0X6]=YL[6][PL[3]];CL=CL+0x1;do YL[dL]=YL[dL](YL[dL+1]);end;NL=dL;CL=CL+0X001;CL=CL+1;PL=FL[CL];CL=CL+1;if YL[0X5]then do CL=PL[4];end;end;else YL[0x00000]=KL[PL[1]];PL=FL[CL];CL=CL+1;YL[0]=YL[0][PL[0x3]];PL=FL[CL];local AL=0X0;CL=CL+0X00001;YL[1]=PL[1];CL=CL+1;YL[AL]=YL[AL](YL[AL+1]);NL=AL;do PL=FL[CL];end;CL=CL+0X1;if not(not YL[0])then else CL=PL[4];end;end;end;else if wL==0X1B then do YL[16]=YL[0XF][PL[0X3]];end;PL=FL[CL];do CL=CL+0X1;end;YL[17]=KL[PL[1]];PL=FL[CL];CL=CL+1;YL[17]=YL[0X11][PL[0X3]];PL=FL[CL];do CL=CL+1;end;if YL[0X00010]==YL[17]then else do CL=PL[5];end;end;else(YL)[PL[0X5]]=YL[PL[0X4]];end;end;else if not(wL>=23)then do if wL==22 then(YL)[PL[5]]={F({},0X001,PL[4])};else local AL=(RL[0X1]);YL[12]=AL[1][AL[0x002]];CL=CL+0x00001;CL=CL+1;do CL=CL+1;end;AL=RL[0X2];YL[0X0d]=AL[0X00001][AL[2]];CL=CL+0X001;CL=CL+0X1;PL=FL[CL];CL=CL+0X0001;do YL[0x00d]=YL[0XD][PL[3]];end;do CL=CL+1;end;CL=CL+0x1;local dL=(12);PL=FL[CL];do CL=CL+0X00001;end;YL[13]=YL[13][PL[0X3]];CL=CL+0X1;CL=CL+0X01;CL=CL+0X1;YL[0X00D]=YL[13][YL[0X1]];CL=CL+0X1;CL=CL+0X1;PL=FL[CL];do CL=CL+0X00001;end;do(YL)[13]=YL[13][PL[3]];end;CL=CL+1;CL=CL+0X001;CL=CL+0x1;YL[dL]=YL[dL](YL[dL+1]);do NL=dL;end;PL=FL[CL];CL=CL+0X001;if YL[12]then CL=PL[4];end;end;end;else if wL>=24 then if wL~=0X19 then local AL=RL[0X3];YL[6]=AL[0x1][AL[2]];CL=CL+0X1;CL=CL+0X01;CL=CL+0X1;NL=6;YL[NL]=YL[NL]();PL=FL[CL];do CL=CL+1;end;do YL[0X007]=KL[PL[0X1]];end;local DL=nil;CL=CL+0X00001;CL=CL+0x1;do PL=FL[CL];end;do CL=CL+0X1;end;local dL=(7);(YL)[8]=PL[1];CL=CL+0X1;YL[dL]=YL[dL](YL[dL+0x01]);do NL=dL;end;do CL=CL+0X1;end;do CL=CL+0X001;end;CL=CL+1;(YL)[0X8]={};PL=FL[CL];CL=CL+0X1;YL[0X9]=PL[1];do PL=FL[CL];end;CL=CL+0X1;local BL=(PL[4]);local bC=BL[2];local uC=#bC;if not(uC>0)then else DL={};do for EC=1,uC do local WC=bC[EC];if WC[0x01]==0X0 then(DL)[EC-0x1]={YL,WC[0X0002]};else(DL)[EC-0X1]=RL[WC[0X00002]];end;end;end;(x)(mL,DL);end;YL[0XA]=cn(DL,KL,BL);PL=FL[CL];CL=CL+1;do BL=PL[0x4];end;do DL=nil;end;bC=BL[2];do uC=#bC;end;do if uC>0x0 then DL={};do for EC=1,uC do local WC=(bC[EC]);if WC[0x00001]~=0X000 then DL[EC-0x001]=RL[WC[2]];else(DL)[EC-1]={YL,WC[0X2]};end;end;end;x(mL,DL);end;end;YL[11]=cn(DL,KL,BL);do PL=FL[CL];end;CL=CL+1;CL=PL[0X0004];else end;else local AL=RL[0X7];(YL)[16]=AL[0X01][AL[2]];CL=CL+0x1;CL=CL+0X1;PL=FL[CL];do CL=CL+0x1;end;local dL=(21);(YL)[16]=YL[16][PL[3]];CL=CL+0X1;YL[17]=YL[0x8];CL=CL+0x1;AL=RL[0x008];do(YL)[0x12]=AL[0x1][AL[2]];end;CL=CL+0X1;CL=CL+0X00001;PL=FL[CL];CL=CL+0X00001;do(YL)[0x013]=PL[0X01];end;PL=FL[CL];CL=CL+1;YL[0X14]=YL[0x0000F][PL[0x003]];PL=FL[CL];CL=CL+0X00001;do YL[0X0015]=KL[PL[1]];end;CL=CL+1;CL=CL+1;do CL=CL+0X001;end;YL[0X16]=YL[0x0000E];CL=CL+1;YL[dL]=YL[dL](YL[dL+0x1]);NL=dL;CL=CL+0X0001;CL=CL+1;PL=FL[CL];do CL=CL+0X01;end;YL[22]=KL[PL[1]];CL=CL+0X1;do CL=CL+0X1;end;PL=FL[CL];do CL=CL+0X1;end;YL[22]=YL[0X16][PL[3]];PL=FL[CL];CL=CL+1;do if not(not YL[0x000016])then else do CL=PL[0X00004];end;end;end;end;end;end;else if not(wL<0x024)then if wL>=39 then if wL>=40 then do if wL~=0X000029 then if not(YL[PL[5]])then else CL=PL[0X4];end;else local AL=PL[4];local dL=YL[AL];for BL=AL+1,PL[7]do dL=dL..YL[BL];end;(YL)[PL[0x5]]=dL;end;end;else CL=PL[0x4];end;else if not(wL>=37)then do YL[13]=YL[0X0d]-YL[0XE];end;CL=CL+1;do YL[13]=YL[13]*YL[0x2];end;PL=FL[CL];CL=CL+1;do(YL)[14]=KL[PL[1]];end;do PL=FL[CL];end;do CL=CL+1;end;(YL)[0X000F]=PL[1];CL=CL+1;(YL)[0X10]=YL[0X8];CL=CL+1;YL[17]=YL[0X09];CL=CL+0X1;local AL=(0X00e);do YL[0X000012]=YL[0XD];end;CL=CL+0x1;do NL=AL+0X00005-0X1;end;YL[AL](F(YL,AL+1,NL));NL=AL-1;do CL=CL+0X1;end;do CL=CL+1;end;PL=FL[CL];CL=CL+1;(YL)[0Xe]=KL[PL[1]];do CL=CL+0X1;end;CL=CL+0x1;PL=FL[CL];CL=CL+0X1;YL[0Xf]=PL[1];CL=CL+1;AL=0XE;YL[AL](YL[AL+0X1]);NL=AL-1;CL=CL+1;do CL=CL+1;end;do CL=CL+0X01;end;repeat local dL,BL=mL,YL;local DL=({});for bC,uC in U,dL do do for EC,WC in U,uC do do if WC[0X00001]==BL and WC[2]>=0X5 then local eC=WC[2];do if not(not DL[eC])then else(DL)[eC]={BL[eC]};end;end;WC[0x1]=DL[eC];do WC[2]=0X0001;end;end;end;end;end;end;until true;PL=FL[CL];CL=CL+0X1;CL=PL[4];else if wL~=38 then do YL[PL[5]]=YL[PL[0X004]]>=PL[3];end;else(YL)[12]=KL[PL[1]];local AL=(RL[3]);CL=CL+0X0001;local DL=0;(YL)[13]=AL[0X1][AL[0X2]];local dL=13;CL=CL+1;local BL=(1);if BL~=0X0 then NL=dL+BL-1;end;local bC,uC=nil,nil;if BL~=1 then do bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));end;else bC,uC=on(YL[dL]());end;if DL==1 then NL=dL-0x001;else if DL==0 then do bC=bC+dL-0x1;end;NL=bC;else bC=dL+DL-2;do NL=bC+0x1;end;end;local WC=(0x0000);do for eC=dL,bC do WC=WC+0X1;do(YL)[eC]=uC[WC];end;end;end;end;CL=CL+0X1;dL=0xc;BL=0X00000;DL=0X4;do if BL==0X00 then else do NL=dL+BL-0x1;end;end;end;bC,uC=nil;if BL~=1 then do bC,uC=on(YL[dL](F(YL,dL+1,NL)));end;else do bC,uC=on(YL[dL]());end;end;if DL~=1 then if DL==0x0 then bC=bC+dL-0x00001;do NL=bC;end;else bC=dL+DL-2;NL=bC+0X0001;end;local WC=0X0;for eC=dL,bC do WC=WC+1;(YL)[eC]=uC[WC];end;else NL=dL-1;end;do PL=FL[CL];end;CL=CL+1;dL=12;local EC=(g(function(...)(q)();for WC,eC in...do q(true,WC,eC);end;end));EC(YL[dL],YL[dL+0X1],YL[dL+2]);NL=dL;(YL)[dL]=EC;CL=PL[4];end;end;end;else if not(wL>=33)then if wL~=32 then do YL[0X00000]=KL[PL[0X00001]];end;do PL=FL[CL];end;do CL=CL+1;end;do(YL)[0x0000]=YL[0][PL[3]];end;PL=FL[CL];CL=CL+1;if not(not YL[0X00000])then else CL=PL[4];end;else do for AL=PL[5],PL[0x004]do YL[AL]=nil;end;end;end;else do if wL<34 then do YL[12]=KL[PL[1]];end;PL=FL[CL];local AL=(12);do CL=CL+1;end;YL[0XD]=PL[1];CL=CL+1;(YL)[AL]=YL[AL](YL[AL+0x01]);NL=AL;do PL=FL[CL];end;CL=CL+0x01;do if not YL[0XC]then CL=PL[0x0004];end;end;else if wL~=35 then local AL,dL=PL[0X5],(PL[0X00007]-1)*50;local BL=(YL[AL]);for DL=1,PL[4]do(BL)[dL+DL]=YL[AL+DL];end;else YL[PL[0x05]]=PL[1];end;end;end;end;end;end;end;end;end;end;end);if not(nL)then if z(TL)=="\s\116\114\i\110g"then do if V(TL,"\097\116\116\101\109\112\116 t\o\ \y\i\e\108\d\032\097\c\114\o\s\s \me\116a\109et\ho\d\/\C\%\-c\097\108l b\111\117n\d\097\114\y")then return q();end;end;if V(TL,"^\.\-\:\%\d\043\058\ ")then(G)('\Lu\114\097\ph\032S\099ri\pt:'..(_L[CL-1]or'(\i\110\116erna\l\041')..'\:\ '..l(TL),0X0);else G(TL,0X0);end;else G(TL,0X0);end;else if TL then if rL==1 then return YL[ML]();else return YL[ML](F(YL,ML+0X1,NL));end;elseif not(ML)then else do return F(YL,ML,rL);end;end;end;end;end;else if HL~=22 then aL=function(...)local CL,YL=0x0001,({});local OL=(Q());local LL,hL=on(...);local kL={[0X1]=YL,[2]=qL};LL=LL-0X00001;for PL=0,LL do if not(XL>PL)then break;else YL[PL]=hL[PL+0X1];end;end;local KL,NL=(OL==_ and sL or OL),(0);if not SL then hL=nil;elseif iL then do(YL)[XL]={n=LL>=XL and LL-XL+0x00001 or 0x00000,F(hL,XL+1,LL+0X0001)};end;end;if KL==OL then else(X)(aL,KL);end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[2];CL=CL+0X1;if wL<18 then if not(wL<0X009)then do if wL<0XD then do if not(wL<0X000b)then if wL~=12 then local AL=RL[6];do YL[0X5]=AL[0x00001][AL[0X0002]];end;CL=CL+1;CL=CL+0X00001;CL=CL+0X1;YL[6]=YL[0x1];do CL=CL+1;end;AL=RL[7];do(YL)[7]=AL[1][AL[2]];end;CL=CL+0X1;CL=CL+0x1;do PL=FL[CL];end;CL=CL+0X00001;do YL[8]=PL[1];end;CL=CL+1;YL[0x9]=YL[0x4];local DL=(0);CL=CL+0X001;local dL=7;(YL)[10]=YL[3];do CL=CL+0x1;end;local BL=4;if BL==0 then else NL=dL+BL-0X1;end;local bC,uC=nil,(nil);if BL==1 then bC,uC=on(YL[dL]());else do bC,uC=on(YL[dL](F(YL,dL+0X0001,NL)));end;end;if DL==0x1 then NL=dL-0X001;else if DL==0X0 then bC=bC+dL-1;NL=bC;else bC=dL+DL-0X02;do NL=bC+1;end;end;local EC=(0X0);for WC=dL,bC do EC=EC+0X1;YL[WC]=uC[EC];end;end;CL=CL+0X1;do dL=5;end;YL[dL](F(YL,dL+0x1,NL));NL=dL-0X1;do PL=FL[CL];end;CL=CL+0x0001;CL=PL[4];else repeat local AL,dL=mL,(YL);local BL=({});for DL,bC in U,AL do for uC,EC in U,bC do do if EC[0X001]==dL and EC[0X2]>=0X0 then local WC=EC[0X2];if not BL[WC]then BL[WC]={dL[WC]};end;EC[1]=BL[WC];EC[0X0002]=1;end;end;end;end;until true;do return;end;end;else if wL~=10 then local AL=RL[0X1];(YL)[0]=AL[1][AL[0X00002]];CL=CL+0X00001;do CL=CL+0x001;end;PL=FL[CL];CL=CL+0X001;YL[0X0]=YL[0][PL[0X00003]];PL=FL[CL];CL=CL+0x01;if YL[0]~=PL[3]then else do CL=PL[0X5];end;end;else YL[2]=KL[PL[0X1]];PL=FL[CL];local AL=RL[0X8];CL=CL+1;(YL)[0x3]=PL[1];do CL=CL+1;end;do YL[4]=AL[1][AL[2]];end;CL=CL+1;CL=CL+0X1;CL=CL+1;YL[0X5]=YL[0x0001];PL=FL[CL];CL=CL+1;YL[6]=PL[0x00001];local dL=(0x4);do CL=CL+1;end;local BL=3;do if BL==0 then else NL=dL+BL-1;end;end;local DL,bC,uC=0X0,nil,nil;if BL~=0x001 then bC,uC=on(YL[dL](F(YL,dL+1,NL)));else bC,uC=on(YL[dL]());end;if DL~=1 then if DL~=0x00 then bC=dL+DL-0X02;NL=bC+0X1;else bC=bC+dL-0X001;do NL=bC;end;end;local EC=(0);for WC=dL,bC do EC=EC+0X1;YL[WC]=uC[EC];end;else NL=dL-0X0001;end;do CL=CL+1;end;CL=CL+0X1;CL=CL+0X1;dL=2;YL[dL](F(YL,dL+1,NL));NL=dL-0X00001;PL=FL[CL];do CL=CL+0X1;end;CL=PL[4];end;end;end;else if not(wL>=0Xf)then if wL==14 then for AL=PL[0X005],PL[0x00004]do YL[AL]=nil;end;else if not(PL[0X0001]<=YL[PL[0X00007]])then CL=PL[5];end;end;else if wL>=0X0010 then do if wL==0x000011 then YL[PL[0X0005]]=M(YL[PL[0X4]],YL[PL[0X7]]);else local AL=RL[2];local dL=(6);YL[5]=AL[0X001][AL[0x002]];CL=CL+0X1;CL=CL+1;PL=FL[CL];CL=CL+0x001;(YL)[6]=KL[PL[1]];local DL=0X0;do CL=CL+1;end;YL[7]=YL[0x3];CL=CL+1;local BL=0X2;if BL==0X0 then else NL=dL+BL-1;end;local bC,uC=nil,(nil);if BL~=1 then bC,uC=on(YL[dL](F(YL,dL+1,NL)));else bC,uC=on(YL[dL]());end;if DL~=1 then if DL~=0x00 then bC=dL+DL-0X002;NL=bC+1;else do bC=bC+dL-1;end;NL=bC;end;local EC=0;for WC=dL,bC do EC=EC+1;do YL[WC]=uC[EC];end;end;else NL=dL-1;end;CL=CL+1;do dL=5;end;YL[dL]=YL[dL](F(YL,dL+1,NL));NL=dL;PL=FL[CL];CL=CL+0x1;YL[0X6]=YL[4][PL[0X003]];CL=CL+1;do AL=RL[3];end;YL[0X7]=AL[0X1][AL[0x2]];CL=CL+0X1;CL=CL+1;CL=CL+0x1;do YL[7]=YL[7][YL[6]];end;CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0X1;if not(PL[1]<=YL[5])then CL=PL[5];end;end;end;else YL[8]=KL[PL[1]];CL=CL+1;CL=CL+0X1;local AL=(0x008);CL=CL+1;YL[9]=YL[6];CL=CL+1;YL[AL]=YL[AL](YL[AL+0x1]);do NL=AL;end;PL=FL[CL];CL=CL+1;if YL[0x8]then do CL=PL[4];end;end;end;end;end;end;else if not(wL>=0X4)then if not(wL>=2)then if wL==0X0001 then local AL,dL=PL[5],YL[PL[4]];(YL)[AL+0X1]=dL;YL[AL]=dL[PL[0X3]];else local AL=(RL[5]);YL[12]=AL[0X1][AL[0X0002]];CL=CL+1;CL=CL+1;PL=FL[CL];CL=CL+0x1;(YL)[0X00d]=PL[1];do CL=CL+0x1;end;do YL[0Xe]=YL[0x006];end;CL=CL+1;local dL=(12);(YL[dL])(YL[dL+1],YL[dL+2]);NL=dL-0X1;PL=FL[CL];CL=CL+1;YL[12]=YL[7][PL[3]];PL=FL[CL];CL=CL+0X1;YL[0Xd]=YL[7][PL[0X00003]];do CL=CL+0X1;end;do(YL)[0X000d]=YL[0][YL[13]];end;PL=FL[CL];CL=CL+0x1;if not(YL[0XD])then else CL=PL[4];end;end;else if wL==3 then local AL=PL[5];local dL,BL=YL[AL]();do if dL then do CL=PL[0X4];end;YL[AL+3]=BL;end;end;else(YL)[PL[5]]=PL[0X1];end;end;else if not(wL<6)then if wL>=7 then if wL==0x00008 then YL[8]=PL[1];CL=CL+0x1;(YL)[0X9]=YL[5];PL=FL[CL];CL=CL+1;(YL)[0X0a]=PL[0X004];PL=FL[CL];CL=CL+1;local AL=(0X8);local BL,DL=YL[AL+0X01],(YL[AL+0x0002]);local dL=YL[AL];(YL)[AL]=g(function()for bC=dL,BL,DL do(q)(true,bC);end;end);do CL=PL[4];end;else do(YL)[0]=KL[PL[0x1]];end;PL=FL[CL];CL=CL+1;do YL[0X0]=YL[0][PL[3]];end;PL=FL[CL];CL=CL+1;(YL)[1]=PL[0X1];CL=CL+1;local AL=0X0;YL[AL]=YL[AL](YL[AL+1]);NL=AL;PL=FL[CL];CL=CL+0x1;if not YL[0]then do CL=PL[0X04];end;end;end;else YL[PL[0X05]]=YL[PL[4]]==YL[PL[0X7]];end;else if wL~=5 then local AL=PL[0x5];local dL,BL,DL=YL[AL]();if not(dL)then else(YL)[AL+0X1]=BL;(YL)[AL+0x002]=DL;do CL=PL[0X4];end;end;else(YL)[8]=KL[PL[1]];local AL=(8);do CL=CL+0x1;end;(YL)[0X9]=YL[6];do CL=CL+1;end;YL[AL]=YL[AL](YL[AL+1]);NL=AL;CL=CL+0x1;CL=CL+1;PL=FL[CL];CL=CL+1;if not(not YL[0x8])then else CL=PL[0X04];end;end;end;end;end;else do if not(wL<27)then if wL<0x00001F then if wL<0X1D then if wL==0X1c then if YL[PL[0x4]]==YL[PL[0X7]]then CL=PL[5];end;else(YL)[8]=KL[PL[1]];CL=CL+1;CL=CL+1;PL=FL[CL];local AL=0x8;do CL=CL+0X1;end;YL[0X9]=PL[0x1];do CL=CL+0x1;end;do(YL)[AL]=YL[AL](YL[AL+1]);end;NL=AL;do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+1;YL[0X9]=YL[4][PL[3]];do CL=CL+0X1;end;CL=CL+0x1;PL=FL[CL];CL=CL+0x1;if not(YL[0X00009]<=YL[0X008])then CL=PL[0X5];end;end;else if wL==30 then(YL)[PL[5]]=PL[4];else YL[PL[0x5]]={F({},1,PL[0X4])};end;end;else if wL<0x21 then if wL~=32 then do if YL[PL[0x04]]<=YL[PL[7]]then CL=PL[0X05];end;end;else local AL=(RL[4]);YL[8]=AL[1][AL[0X2]];PL=FL[CL];do CL=CL+1;end;YL[9]=KL[PL[1]];local dL=8;CL=CL+1;do CL=CL+0x001;end;PL=FL[CL];CL=CL+0X1;(YL)[9]=YL[9][PL[0x0003]];do CL=CL+1;end;CL=CL+1;PL=FL[CL];CL=CL+0X1;YL[0X0000A]=YL[0X7][PL[3]];CL=CL+0X01;CL=CL+1;do CL=CL+0X1;end;(YL)[dL]=YL[dL](YL[dL+0X1],YL[dL+0X002]);NL=dL;CL=CL+0x1;CL=CL+0X1;do PL=FL[CL];end;CL=CL+1;if not(not YL[8])then else CL=PL[0x4];end;end;else if wL>=0X0022 then if wL==35 then do(YL)[0]=KL[PL[1]];end;CL=CL+0x1;CL=CL+1;PL=FL[CL];CL=CL+0x001;YL[0]=YL[0][PL[0x3]];do PL=FL[CL];end;CL=CL+0X1;do if not YL[0X0]then CL=PL[0X4];end;end;else local AL=PL[0X4];local BL=AL[0X2];local DL,dL=#BL,(nil);if not(DL>0X00000)then else dL={};do for bC=0X1,DL do local uC=(BL[bC]);if uC[0X1]~=0X00 then(dL)[bC-0X1]=RL[uC[2]];else do(dL)[bC-1]={YL,uC[2]};end;end;end;end;x(mL,dL);end;do(YL)[PL[0X5]]=cn(dL,KL,AL);end;end;else YL[2]=KL[PL[1]];CL=CL+0x1;YL[3]=YL[0];CL=CL+1;local dL=(2);local BL=4;local AL=(2);if dL~=0X0000 then NL=AL+dL-1;end;local DL,bC=nil,nil;if dL~=1 then DL,bC=on(YL[AL](F(YL,AL+0X0001,NL)));else DL,bC=on(YL[AL]());end;do if BL==0X1 then do NL=AL-1;end;else if BL==0 then DL=DL+AL-0X1;NL=DL;else DL=AL+BL-0x2;NL=DL+1;end;local EC=(0X0);for WC=AL,DL do do EC=EC+1;end;(YL)[WC]=bC[EC];end;end;end;do CL=CL+0X1;end;CL=CL+1;PL=FL[CL];CL=CL+1;AL=0X2;local uC=g(function(...)(q)();do for EC,WC in...do(q)(true,EC,WC);end;end;end);uC(YL[AL],YL[AL+0X1],YL[AL+0X00002]);NL=AL;YL[AL]=uC;CL=PL[0x0004];end;end;end;else do if wL<0X016 then do if not(wL>=20)then if wL~=19 then do YL[13]=YL[0XD]+PL[0X0003];end;do CL=CL+0x0001;end;YL[0X0][YL[0Xc]]=YL[13];do PL=FL[CL];end;CL=CL+0X1;CL=PL[4];else YL[PL[0X005]]=-YL[PL[4]];end;else if wL~=21 then(YL)[PL[5]]=#YL[PL[4]];else local AL=(RL[0X0]);do(YL)[0x0]=AL[1][AL[2]];end;CL=CL+0X001;do CL=CL+0X1;end;do PL=FL[CL];end;do CL=CL+1;end;do if not(not YL[0])then else do CL=PL[0X4];end;end;end;end;end;end;else if wL>=0X18 then do if not(wL<0X19)then if wL~=0X00001a then else YL[PL[0X0005]]=YL[PL[0X4]]-YL[PL[7]];end;else CL=PL[0X4];end;end;else if wL==0X00017 then do(YL)[0]={};end;do CL=CL+1;end;(YL)[0X001]={};local AL=(RL[0X1]);PL=FL[CL];do CL=CL+1;end;(YL)[2]=KL[PL[0X1]];CL=CL+1;(YL)[3]=AL[0x00001][AL[2]];CL=CL+0X0001;do CL=CL+0x1;end;local BL=(2);PL=FL[CL];CL=CL+1;(YL)[0X3]=YL[0X3][PL[3]];CL=CL+1;local dL=0x02;local DL=0X4;if BL~=0X0 then NL=dL+BL-0x01;end;local bC,uC=nil,(nil);if BL==1 then bC,uC=on(YL[dL]());else bC,uC=on(YL[dL](F(YL,dL+0X1,NL)));end;if DL==1 then NL=dL-0X0001;else if DL==0 then bC=bC+dL-1;do NL=bC;end;else bC=dL+DL-2;NL=bC+0x1;end;local WC=0X00000;do for eC=dL,bC do WC=WC+1;(YL)[eC]=uC[WC];end;end;end;PL=FL[CL];do CL=CL+1;end;dL=2;local EC=(g(function(...)q();do for WC,eC in...do(q)(true,WC,eC);end;end;end));EC(YL[dL],YL[dL+0X001],YL[dL+2]);NL=dL;YL[dL]=EC;do CL=PL[0X4];end;else do(YL)[PL[0x5]]=KL[PL[0X1]];end;end;end;end;end;end;end;end;end;end);if nL then if TL then if rL~=1 then return YL[ML](F(YL,ML+0x0001,NL));else return YL[ML]();end;elseif not(ML)then else return F(YL,ML,rL);end;else if z(TL)=="str\in\g"then if V(TL,"a\116t\e\109\p\116\ t\o\ y\i\e\108\d \097\c\114\o\ss\032\109et\097\109\101t\h\o\100\/\C\037-ca\l\l\ bo\117\110\dar\121")then return q();end;if V(TL,"\094.-:\037\d\+\:\ ")then G("L\117\114\097\p\104\032\083cr\i\p\116\:"..(_L[CL-1]or"(i\110t\101r\110\097\l\)")..'\:\ '..l(TL),0);else G(TL,0);end;else(G)(TL,0X0000);end;end;end;else aL=function(...)local CL=0x1;local YL=({});local OL=(Q());local kL,NL={[2]=qL,[0X1]=YL},0;local LL,hL=on(...);LL=LL-1;for PL=0,LL do if XL>PL then YL[PL]=hL[PL+1];else break;end;end;local KL=((OL==_ and sL or OL));do if not SL then hL=nil;elseif iL then YL[XL]={n=LL>=XL and LL-XL+1 or 0,F(hL,XL+1,LL+1)};end;end;do if KL~=OL then(X)(aL,KL);end;end;local nL,TL,ML,rL=j(function()while true do local PL=FL[CL];local wL=PL[0X002];CL=CL+0X1;do if wL<7 then if wL>=0X0003 then if not(wL<5)then if wL==0x00006 then YL[0x1]=KL[PL[0X1]];do CL=CL+0X001;end;(YL)[0X002]=YL[0X00];PL=FL[CL];do CL=CL+1;end;(YL[0X1])[PL[1]]=YL[0X2];local uC=(0X1);do PL=FL[CL];end;CL=CL+1;YL[1]=KL[PL[1]];CL=CL+1;NL=0X1;YL[NL]();NL=NL-1;local AL=RL[0];CL=CL+0X1;do(YL)[0X0001]=AL[0X1][AL[2]];end;local BL=(nil);PL=FL[CL];CL=CL+0X1;local dL=(PL[0X4]);local DL=(dL[0x2]);local bC=(#DL);if bC>0X0 then BL={};do for WC=0x1,bC do local eC=(DL[WC]);if eC[1]~=0X000 then BL[WC-0X1]=RL[eC[0X02]];else(BL)[WC-1]={YL,eC[0X00002]};end;end;end;(x)(mL,BL);end;(YL)[0X2]=cn(BL,KL,dL);CL=CL+0X1;(YL[uC])(YL[uC+0X00001]);NL=uC-0X001;CL=CL+0X1;CL=CL+0X01;do PL=FL[CL];end;CL=CL+1;(YL)[1]=KL[PL[1]];PL=FL[CL];CL=CL+0X01;(YL)[0X1]=YL[0X0001][PL[3]];CL=CL+1;local EC=YL[1];do CL=CL+1;end;PL=FL[CL];CL=CL+0X1;uC=0X0001;do YL[uC+0X00001]=EC;end;(YL)[uC]=EC[PL[3]];PL=FL[CL];CL=CL+0X1;dL=PL[4];BL=nil;do DL=dL[0X2];end;bC=#DL;if bC>0 then BL={};for WC=1,bC do local eC=DL[WC];do if eC[0X1]~=0X00000 then(BL)[WC-1]=RL[eC[0x2]];else BL[WC-0X00001]={YL,eC[2]};end;end;end;(x)(mL,BL);end;do(YL)[3]=cn(BL,KL,dL);end;CL=CL+0x001;do uC=1;end;(YL[uC])(YL[uC+0X001],YL[uC+2]);NL=uC-0x1;CL=CL+1;do repeat local WC,eC=mL,(YL);local oC=({});for jC,zC in U,WC do do for lC,GC in U,zC do if GC[1]==eC and GC[2]>=0 then local vC=(GC[0X2]);if not(not oC[vC])then else(oC)[vC]={eC[vC]};end;GC[0X1]=oC[vC];(GC)[0X2]=0X1;end;end;end;end;until true;end;return;else(YL)[PL[5]]=PL[1];end;else if wL==4 then else local AL=(PL[0x4]);local BL=(AL[2]);local DL,dL=#BL,(nil);if DL>0X0 then do dL={};end;for bC=0X1,DL do local uC=(BL[bC]);if uC[0X1]==0X0 then(dL)[bC-1]={YL,uC[2]};else do dL[bC-1]=RL[uC[2]];end;end;end;(x)(mL,dL);end;(YL)[PL[0X5]]=cn(dL,KL,AL);end;end;else if not(wL<1)then do if wL~=2 then do YL[PL[0X05]]=KL[PL[0X0001]];end;else local AL=(PL[4]);local BL=AL[2];local DL,dL=#BL,(nil);if DL>0 then dL={};do for bC=1,DL do local uC=(BL[bC]);if uC[0X001]==0 then dL[bC-1]={YL,uC[2]};else(dL)[bC-0X1]=RL[uC[0x2]];end;end;end;x(mL,dL);end;do YL[PL[0X0005]]=u[PL[7]](dL);end;end;end;else YL[PL[5]]=L(YL[PL[0X4]],YL[PL[0X07]]);end;end;else if wL<0Xa then if not(wL>=0X8)then do YL[PL[0X5]][YL[PL[0X4]]]=YL[PL[7]];end;else do if wL~=0x00009 then CL=PL[4];else repeat local AL,dL,BL=mL,YL,PL[5];local DL=({});do for bC,uC in U,AL do for EC,WC in U,uC do if WC[0X1]==dL and WC[0X2]>=BL then local eC=WC[2];if not DL[eC]then DL[eC]={dL[eC]};end;(WC)[0X1]=DL[eC];(WC)[0X0002]=1;end;end;end;end;until true;end;end;end;else if wL>=12 then do if wL==13 then do if YL[PL[0X4]]<=YL[PL[0X7]]then CL=PL[5];end;end;else for AL=PL[5],PL[0X4]do(YL)[AL]=nil;end;end;end;else if wL~=11 then(YL)[PL[0x05]]=true;else YL[PL[5]]={F({},1,PL[4])};end;end;end;end;end;end;end);do if nL then if TL then if rL~=0X1 then return YL[ML](F(YL,ML+1,NL));else return YL[ML]();end;elseif ML then return F(YL,ML,rL);end;else do if z(TL)=="str\i\110\103"then if not(V(TL,'att\e\m\112\116\ \116\111 \121i\e\l\d\ \097\c\114\os\115 \109\etamet\104\111d\047\C\%\-ca\ll\032bo\117n\100ar\121'))then else do return q();end;end;if not(V(TL,"\^\.\045\:\%\d+\:\ "))then G(TL,0);else G('\Lu\114a\112h\ Sc\114\i\pt:'..(_L[CL-1]or"\040\int\ernal\)")..":\ "..l(TL),0X0);end;else(G)(TL,0X0);end;end;end;end;end;end;end;end;end;end;end;end;(X)(aL,sL);return aL;end;end;break;end;end;until false;local In=Gn;local gL=1395442413;local yn=("\ \120\|\049\110");local S,xn,W=nil,nil,'\086)F\F\108';repeat do if gL>574396017 then do if not(gL<=0x34C203A7)then do if gL~=0x54844768 then if not(not oL[0X505B3B18])then do gL=oL[0X505b3b18];end;else gL=1417955176;do oL[0X0000505B3B18]=gL;end;end;yn=nil;else if not oL[1878295447]then gL=885130151;(oL)[1878295447]=gL;else gL=oL[0X00006FF48397];end;do yn=function()local RL,qL,YL=true,nil,(0X07165805e);local sL=(nil);repeat do if YL==0X7165805e then sL={};YL=0x078E9ec25;do continue;end;else RL={};qL={nil,nil,nil,Xn,nil,nil,{},{},{}};break;end;end;until false;do(qL)[4]=un();end;local kL=(750780315);local XL=nil;local fL,QL=0.9474278086474055,nil;repeat do if not(kL>750780315)then do if kL==0X2CbFff9b then XL=qL[7];fL=B()-97172;do for KL=_n,fL do local LL=true;local TL,ML,rL=nil,nil,(nil);local nL=nil;local PL,wL=nil,1482959355;local hL=(0.22852613825084578);while true do do if wL~=1002575646 then LL,hL,nL,TL=En(),En(),En(),En();wL=1002575646;ML,rL,PL=hL%8,nL%8,TL%8;else do XL[KL]={[1]=0.548831305488238,[0X003]=ML,[0X6]="",[0X4]=PL==wn and yn()or(TL-PL)/8,[1]=-1481417633,[dn]=Bn,[0X007]=(hL-ML)/8,[0X6]=Dn,[1]=PL,[6]=0.921272892830739,[2]=LL,[bL]=(nL-rL)/8,[6]=rL};end;break;end;end;end;end;end;do QL={};end;kL=0X0007829B03E;continue;else do for KL=0X001,un()do QL[KL]={d(),un()};end;end;(qL)[uL]=B();kL=901499424;continue;end;end;else if kL~=901499424 then do(qL)[0X2]=QL;end;do kL=684956293;end;continue;else(qL)[0XB]=B();do break;end;end;end;end;until false;(qL)[dn]=un();qL[0X12]=B();qL[0x5]=un();local _L=(d());(qL)[1]=A(_L,1,0X1)~=wn;(qL)[0x3]=A(_L,0x00002,1)~=wn;local iL=-1499002242;local SL=nil;local OL=(0X46a90fA5);local FL=nil;do repeat if OL==1185484709 then OL=912096448;qL[0X13]=d();continue;elseif OL==912096448 then OL=0X6DA2c91F;qL[14]=d();continue;else if OL==0X6da2c91f then iL=B();OL=0X0004ddc83F2;elseif OL==0x4ddc83F2 then do SL=qL[8];end;OL=1876300457;do continue;end;else if OL==0X6Fd612A9 then FL=0X01;break;end;end;end;until false;end;local HL,mL=nil,"\068\Z_\!\X";for KL=297,6025,2864 do if KL>297 then do if KL>=6025 then HL=B()-EL;do mL=d();end;else(qL)[17]=d();end;end;else for KL=0X00001,iL do local hL,nL=nil,nil;local LL=('\C\D\d\M\098\|J{\Q');for TL=0X016cF,41280,0X002332 do if TL==0x3A01 then hL=B();elseif TL==0X00005D33 then nL=B();do break;end;else if TL==0x000016cf then do LL=B();end;end;end;end;for TL=LL,hL do SL[TL]=nL;end;end;continue;end;end;local aL=d()~=0X000;local NL=nil;local CL=(nil);for KL=3577,46188,0X12Be do if not(KL>3577 and KL<0X0003375)then if KL>8375 and KL<17971 then CL=qL[9];do continue;end;elseif KL>17971 then for KL=0X001,fL do local LL=(nil);for hL=0X1cE7,35738,0X8FC do if hL<9699 then LL=qL[7][KL];else if not(hL>7399)then else do for hL,nL in U,P do local TL=(w[nL]);local ML=LL[TL];if ML==0x4 then local rL=nil;local PL=(nil);local wL=(0x293458e3);while 0.8443287806188903 do if wL==0X000293458e3 then rL=sL[LL[nL]];do wL=1571612902;end;continue;else if wL~=0X005daCe8e6 then else PL=RL[rL];break;end;end;end;do if PL then local AL=(true);local dL=(0x10a74EBc);while'\[\%\}\p\_\<'do if dL>0X10a74eBc then AL=PL[2];do AL[#AL+1]={LL,TL};end;do break;end;else if dL<1856559851 then dL=1856559851;(LL)[TL]=PL[0X0001];continue;end;end;end;end;end;elseif ML==3 then do(LL)[nL]=KL+LL[nL]+0X0001;end;else if ML==0X0005 then do LL[nL]=CL[LL[nL]];end;end;end;end;end;break;end;end;end;end;do break;end;else if KL>0X0003375 and KL<22769 then for KL=0,NL-1 do CL[KL]=yn();end;do continue;end;else if not(KL<8375)then else for KL=0X001,HL do local LL,hL,nL=Xn,nil,nil;do for TL=0x00C87,71500,752 do if TL<3959 then hL=d();if hL==109 then LL=v(en(mL),dn);elseif hL==39 then LL=D();elseif hL==WL then LL=bn()+B();elseif hL==44 then LL=D();elseif hL==0XC6 then do LL=d()==1;end;elseif hL==0X6B then LL=bn();elseif hL==156 then do LL=In(0,bn());end;elseif hL==0X00064 then LL=D();elseif hL==0X000f1 then LL=B()+tn(B())*N;elseif hL==90 then do LL=B()+vn(B())*N;end;else if hL==0X0044 then LL=v(en(mL),13);elseif hL==eL then LL=v(en(mL),B());elseif hL==232 then LL=bn();else if hL~=0X00006c then else do LL=B();end;end;end;end;(sL)[KL-0X01]=FL;else if TL>4711 then do FL=FL+_n;end;do break;end;else if not(TL<0X1267 and TL>0Xc87)then if TL>3959 and TL<0X1557 then(RL)[FL]=nL;do continue;end;end;else do nL={LL,{}};end;end;end;end;end;end;if aL then(jn)[zn]=nL;zn=zn+0X00001;end;end;qL[0XE]=d();end;end;end;else NL=B()-0X0000B9A;continue;end;end;(qL)[18]=B();do return qL;end;end;end;do continue;end;end;end;else if not(not oL[839306250])then gL=oL[0X03206Cc0A];else gL=319597786;do(oL)[0x00003206cC0a]=gL;end;end;S=function(...)return(...)[...];end;continue;end;end;else if gL>=574396017 then do W=assert;end;break;else do if not(not oL[0X00690D4bE1])then do gL=oL[1762479073];end;else do gL=0x00223C9671;end;oL[1762479073]=gL;end;end;xn=yn();end;end;end;until false;xn=cn(Xn,_,xn)(yn,b,S,Vn,bn,d,B,E);return cn(nil,_,xn);end)(unpack,bit32.bnot,select,28164,0X0,1,true,nil,0x0000100,0X40000000,'5\V\T\050\L\;\113',16,'\Y\111ur\032\e\110\118\iro\110ment\ \100o\101\s\ n\o\116\ \115u\p\112\111rt\ \Lu\097\074\IT\'\s\ F\F\073\ li\098\114ar\y\044\ \116h\e\114\ef\or\e\032\yo\117\032\099\097nn\ot\032\117\s\101\032\076\076\047\085LL\/i\ \suff\ix\101\115\.',0.8417249834160374,0x0002,bit32.lshifttype,coroutine.yield,4,237,0X05,bit32,string.rep,error,0x6,string,bit32.rshift,pcall,string.byte,bit32.bxor,string.sub,bit32.band,string.unpack,8,"7Cr\#",coroutine,182,string.gsub,function(...)((...))[...]=nil;end,{},{1757,3995131293,0X483B8384,3833575048,3459930666,3148646744,2308558505,2748491894,0X012232F3f})(...);
